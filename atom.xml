<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>UMU</title>
  
  <subtitle>天地玄黄，宇宙洪荒，度修七鹰劫，证悟神通。</subtitle>
  <link href="https://blog.umu618.com/atom.xml" rel="self"/>
  
  <link href="https://blog.umu618.com/"/>
  <updated>2024-06-09T16:27:46.172Z</updated>
  <id>https://blog.umu618.com/</id>
  
  <author>
    <name>圣小开</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>安装 Arch Linux 和 Debian 双系统至同一分区</title>
    <link href="https://blog.umu618.com/2024/06/09/umutech-install-both-arch-linux-and-debian-on-the-same-partition/"/>
    <id>https://blog.umu618.com/2024/06/09/umutech-install-both-arch-linux-and-debian-on-the-same-partition/</id>
    <published>2024-06-09T14:14:52.000Z</published>
    <updated>2024-06-09T16:27:46.172Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题">问题</h2><p>之前，稣的服务器都用 Debian 和 <a href="/2017/03/25/umutech-free-windows-server/">Hyper-V Server</a>，桌面则用 Debian、macOS、Windows，从不用不支持 Secure Boot 的 Arch Linux。</p><p>直到遇见一个需要在 Arch Linux 物理机下才容易编译的项目……那就装个双系统吧！</p><h2 id="现状">现状</h2><p>Debian 的豪华 SSD 只分两个区：</p><ul><li><p><code>/dev/nvme0n1p1</code>：EFI 分区，64MiB；</p></li><li><p><code>/dev/nvme0n1p2</code>：btrfs 分区，剩余空间。</p></li></ul><p>没有 swap 分区，毕竟稣有 48GB 内存，而且从不使用休眠。</p><h2 id="思考">思考</h2><ol><li><p>重新分区显得格外 Secure Boot，毕竟稣就是因为某些系统强行分了 20~30GB 做系统的备份分区，而拉黑它。这可是高贵的 SSD，多一个分区就意味着空间利用率降低一分！系统和软件都能轻易地恢复，备份啥呢？依托答辩还占着 20~30GB 这么巨大的坑！这拿来备份数据不香吗？</p></li><li><p>Debian 12 的 <code>/</code> 挂在 btrfs 分区的 @rootfs 子卷，据说其它系统可能用的是其它名字的子卷，所以它们天然是能和谐地装在同一个分区的。比如 Ubuntu 和 OpenSUSE（哦喷稣𢶍）用 @ 子卷。而 Arch Linux 出了名的啥都能（让）自定义，所以装在 @arch 子卷的话，还能和 OpenSUSE（哦喷稣𢶍）组个三系统。</p></li><li><p>安装顺序有影响吗？没有！虽然稣是先装的 Debian，但哪个先都行。只要装一个 grub 就行，那就用 Debian 的，Arch Linux 不装即可。</p></li></ol><h2 id="步骤">步骤</h2><h3 id="1-安装-Debian">1. 安装 Debian</h3><p>唯一要注意的是：<strong>根目录选择 btrfs 格式</strong>，其它请参考《<a href="/2024/05/19/umutech-install-debian-quickly/">快速安装 Debian</a>》。</p><h3 id="2-把-home-指向-home-子卷">2. 把 /home 指向 @home 子卷</h3><p>建议两个系统都这么干。因为虽然是双系统，但用户还是一套的好，避免精神分裂！这样的好处很多，比如：只要在任意系统里设置一次用户的登录公钥，就能在两个系统都生效。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在 Debian 上操作</span></span><br><span class="line">sudo mount -t btrfs -o compress=zstd /dev/nvme0n1p2 /mnt</span><br><span class="line">sudo btrfs subvolume create /mnt/@home</span><br><span class="line"><span class="comment"># 可能需要移动现有文件到 /mnt/@home</span></span><br><span class="line">sudo umount /mnt</span><br><span class="line">sudo mount -t btrfs -o subvol=/@home,compress=zstd /dev/nvme0n1p2 /home</span><br><span class="line"><span class="comment"># 改 /etc/fstab</span></span><br></pre></td></tr></table></figure><h3 id="3-安装-Arch-Linux">3. 安装 Arch Linux</h3><p>请参考以下链接：</p><ul><li><p>Arch Linux 官方 <a href="https://wiki.archlinux.org/title/Installation_guide">Installation guide</a>：<a href="https://wiki.archlinux.org/title/Installation_guide">https://wiki.archlinux.org/title/Installation_guide</a></p></li><li><p><a href="https://arch.icekylin.online/guide/rookie/basic-install">archlinux 基础安装</a>: <a href="https://arch.icekylin.online/guide/rookie/basic-install">https://arch.icekylin.online/guide/rookie/basic-install</a></p></li></ul><p>注意：安装 Debian 时已经分过区，到这步，只需要创建子卷：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">btrfs subvolume create /mnt/@arch</span><br><span class="line"><span class="comment"># 相应地，挂载 Arch 根目录所在子卷到 /mnt 那步改为</span></span><br><span class="line">mount -t btrfs -o subvol=/@arch,compress=zstd /dev/nvme0n1p2 /mnt</span><br></pre></td></tr></table></figure><p>然后，@home 子卷之前已经创建，直接挂载即可。</p><p>最后，**不要安装引导程序！**重启去 Debian，手动加 Arch 的启动项。这步解释起来麻烦，直接发一下 Debian 的 <code>/boot/grub/grub.cfg</code> 里的片段：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">menuentry &#39;Arch Linux&#39; --class archlinux --class gnu-linux --class gnu --class os $menuentry_id_option &#39;gnulinux-simple-9b30a786-55a7-4068-8886-226f147eef4d&#39; &#123;</span><br><span class="line">        load_video</span><br><span class="line">        insmod gzio</span><br><span class="line">        if [ x$grub_platform &#x3D; xxen ]; then insmod xzio; insmod lzopio; fi</span><br><span class="line">        insmod part_gpt</span><br><span class="line">        insmod btrfs</span><br><span class="line">        search --no-floppy --fs-uuid --set&#x3D;root 9b30a786-55a7-4068-8886-226f147eef4d</span><br><span class="line">        echo    &#39;Loading Arch Linux ...&#39;</span><br><span class="line">        linux   &#x2F;@&#x2F;boot&#x2F;vmlinuz-linux root&#x3D;UUID&#x3D;9b30a786-55a7-4068-8886-226f147eef4d ro rootflags&#x3D;subvol&#x3D;@arch,compress&#x3D;zstd  nowatchdog</span><br><span class="line">        echo    &#39;Loading initial ramdisk ...&#39;</span><br><span class="line">        initrd  &#x2F;@&#x2F;boot&#x2F;initramfs-linux.img</span><br><span class="line">&#125;</span><br><span class="line">menuentry &#39;Arch Linux fallback&#39; --class archlinux --class gnu-linux --class gnu --class os $menuentry_id_option &#39;gnulinux-simple-9b30a786-55a7-4068-8886-226f147eef4d&#39; &#123;</span><br><span class="line">        load_video</span><br><span class="line">        insmod gzio</span><br><span class="line">        if [ x$grub_platform &#x3D; xxen ]; then insmod xzio; insmod lzopio; fi</span><br><span class="line">        insmod part_gpt</span><br><span class="line">        insmod btrfs</span><br><span class="line">        search --no-floppy --fs-uuid --set&#x3D;root 9b30a786-55a7-4068-8886-226f147eef4d</span><br><span class="line">        echo    &#39;Loading Arch Linux ...&#39;</span><br><span class="line">        linux   &#x2F;@&#x2F;boot&#x2F;vmlinuz-linux root&#x3D;UUID&#x3D;9b30a786-55a7-4068-8886-226f147eef4d ro rootflags&#x3D;subvol&#x3D;@arch  quiet</span><br><span class="line">        echo    &#39;Loading initial ramdisk ...&#39;</span><br><span class="line">        initrd  &#x2F;@&#x2F;boot&#x2F;amd-ucode.img &#x2F;@&#x2F;boot&#x2F;initramfs-linux-fallback.img</span><br><span class="line">&#125;</span><br><span class="line">menuentry &#39;Debian GNU&#x2F;Linux&#39; --class debian --class gnu-linux --class gnu --class os $menuentry_id_option &#39;gnulinux-simple-9b30a786-55a7-4068-8886-226f147eef4d&#39; &#123;</span><br><span class="line">        load_video</span><br><span class="line">        insmod gzio</span><br><span class="line">        if [ x$grub_platform &#x3D; xxen ]; then insmod xzio; insmod lzopio; fi</span><br><span class="line">        insmod part_gpt</span><br><span class="line">        insmod btrfs</span><br><span class="line">        search --no-floppy --fs-uuid --set&#x3D;root 9b30a786-55a7-4068-8886-226f147eef4d</span><br><span class="line">        echo    &#39;Loading Linux 6.1.0-21-amd64 ...&#39;</span><br><span class="line">        linux   &#x2F;@rootfs&#x2F;boot&#x2F;vmlinuz-6.1.0-21-amd64 root&#x3D;UUID&#x3D;9b30a786-55a7-4068-8886-226f147eef4d ro rootflags&#x3D;subvol&#x3D;@rootfs  quiet</span><br><span class="line">        echo    &#39;Loading initial ramdisk ...&#39;</span><br><span class="line">        initrd  &#x2F;@rootfs&#x2F;boot&#x2F;initrd.img-6.1.0-21-amd64</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：直接修改 <code>/boot/grub/grub.cfg</code> 通常被认为是不好的，但这里的 Arch 是个不支持 Secure Boot 的擸𢶍，不用太客气。</p><h2 id="答疑">答疑</h2><ol><li><p>这么做有啥好处？</p><ul><li><p>减少分区数量，提高 SSD 空间利用率，榨干每个颗粒。<s>抠就要抠到极致。</s></p></li><li><p>系统搞坏一个，还可能进另一个修。但比起虚拟机，没有安全性、健壮性上的优势。</p></li><li><p>随时可以 chroot 到另一个系统。但比起容器，没有便捷性上的优势。</p></li></ul></li><li><p>EFI 分区 64MiB 够用吗？</p><p>没翻过车，之前都用 40MiB 的，已经放大过。</p></li></ol>]]></content>
    
    
    <summary type="html">它们共享同一个 /home 目录</summary>
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="linux" scheme="https://blog.umu618.com/tags/linux/"/>
    
    <category term="ops" scheme="https://blog.umu618.com/tags/ops/"/>
    
    <category term="debian" scheme="https://blog.umu618.com/tags/debian/"/>
    
    <category term="archlinux" scheme="https://blog.umu618.com/tags/archlinux/"/>
    
  </entry>
  
  <entry>
    <title>警惕！劣质的 HDR 正在摧毁程序员的职业生涯</title>
    <link href="https://blog.umu618.com/2024/06/09/caution-inferior-hdr-is-ruining-programmers-careers/"/>
    <id>https://blog.umu618.com/2024/06/09/caution-inferior-hdr-is-ruining-programmers-careers/</id>
    <published>2024-06-08T17:05:04.000Z</published>
    <updated>2024-06-08T17:51:57.642Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题">问题</h2><p>有的屏幕看起来就容易眼睛疲劳，都不能愉快地写代码了！</p><h2 id="故事">故事</h2><p>自从 2020 年，全面换成双 4K 显示器后，稣明显感觉眼睛不太够用！半天左右就开始无法直视屏幕。以为自己驾驭不了双 4K，吓得稣把它们分开使用。</p><p>但即使是单个 4K 显示器，看起来也比之前用两个 2K 累眼。即使换上 144Hz 的 AOC U28G2X/D 也没有改进多少。</p><p>稣一度以为人到中年就是不能再像之前那样能每天娱乐（但别人看起来是工作）18~20 小时都不会有任何不适。</p><h2 id="解决">解决</h2><p>耿直的稣怎么也不会想到万恶的资本居然发现一种叫“8 抖 10”的技术，或者叫“8 位递色”，而开启伤害的动作居然是没深究就打开的“HDR”！</p><p>稣以前的双 2K Dell 显示器是不支持 HDR 的，当看到买来的 4K 显示器能支持 HDR，便尝试性地开启了。于是开启长达四年的八哥。</p><p>自从关掉 HDR，稣又测试了几次通宵写代码，除了饿，简直不能太爽！</p><p>有人说，价格超过 5000 元的显示器是可以开 HDR 的。也许吧！但两个就一万以上了……为了一个用不上的 HDR，何必呢？</p>]]></content>
    
    
    <summary type="html">Caution! Inferior HDR is ruining programmers&#39; careers.</summary>
    
    
    
    <category term="宇督观" scheme="https://blog.umu618.com/categories/%E5%AE%87%E7%9D%A3%E8%A7%82/"/>
    
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
    <category term="debug" scheme="https://blog.umu618.com/tags/debug/"/>
    
  </entry>
  
  <entry>
    <title>PARTUUID</title>
    <link href="https://blog.umu618.com/2024/06/08/umutech-partuuid/"/>
    <id>https://blog.umu618.com/2024/06/08/umutech-partuuid/</id>
    <published>2024-06-08T08:21:45.000Z</published>
    <updated>2024-06-08T15:52:01.436Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题">问题</h2><p><code>blkid</code> 的输出里有 UUID 和 PARTUUID，为何需要两套 ID？</p><h2 id="分析">分析</h2><ul><li><p>PARTUUID 是分区表级 UUID (Universally Unique Identifier)，是 GPT (GUID Partition Table) 硬盘上所有分区的标准特性。因为它是从分区表中检索的，所以访问它时不需要对分区的实际内容做任何假设。即不需要理会分区的文件系统是哪种格式，比如 btrfs、ext4、FAT、NTFS 等。如果分区是使用某种未知加密方法加密的，则 PARTUUID 可能是该分区唯一可访问的唯一标识符。</p></li><li><p>UUID 是一个文件系统级别的 UUID，它从分区内的文件系统元数据中检索。只有当文件系统类型已知并可读时，才能读取它。</p></li><li><p>UUID 适用于所有层（块设备、分区、raid、luks、lvm），PARTUUID 仅适用于 GPT 分区。</p></li></ul><h2 id="解决">解决</h2><p>GPT 是 UEFI 的规范。Linux 诞生时，UEFI 尚未诞生，所以是先用 UUID，后用 PARTUUID。</p><p>UUID 的应用场景：</p><ul><li><p>默认情况下，/etc/fstab 里用的是 UUID，比如安装 Debian 12 时就写入 UUID，而不是 PARTUUID。</p></li><li><p>MBR 硬盘没有 PARTUUID，只能用 UUID。</p></li></ul><p>PARTUUID 的应用场景：</p><ul><li>用 <code>efibootmgr -v</code> 查看 EFI 启动信息，可以发现 EFI 使用 PARTUUID。</li></ul><h2 id="额外">额外</h2><p>UUID 的缺点是必须扫描所有设备的内容才能找到它们，毕竟 UUID 可以在任何地方。使用 PARTUUID，则只需检查分区表，因此更容易/更高效（但是需要有大量的块设备才能看出差别）。</p><p>通过 PARTUUID 挂载可以在没有 initramfs 的情况下工作，因此如果您想制作一个无 initrd 的系统，请使用 PARTUUID。</p><p>ext4 分区可以用 <code>sudo tune2fs -U &lt;UUID&gt; device</code> 修改 UUID，重新格式化、转换文件系统格式也可能导致 UUID 改变，所以实际上 /etc/fstab 里用 PARTUUID 更好一点点，除非您还在使用 MBR 磁盘。</p>]]></content>
    
    
    <summary type="html">既生 UUID，何生 PARTUUID？ChatGPT 说 GPT 才有 PARTUUID</summary>
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="linux" scheme="https://blog.umu618.com/tags/linux/"/>
    
    <category term="ops" scheme="https://blog.umu618.com/tags/ops/"/>
    
  </entry>
  
  <entry>
    <title>快速安装 Debian</title>
    <link href="https://blog.umu618.com/2024/05/19/umutech-install-debian-quickly/"/>
    <id>https://blog.umu618.com/2024/05/19/umutech-install-debian-quickly/</id>
    <published>2024-05-19T14:47:58.000Z</published>
    <updated>2024-05-25T08:48:53.042Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题">问题</h2><p>前不久在知乎上看到有人说“安装 Debian 的体验很差，会卡很久”，还有人说“装了一两天”，稣心想：“怎么是相反的认知呢？哪里出八哥了？”</p><h2 id="分析">分析</h2><p>目测是使用 netinst 映像，并且遇到网络问题。</p><p>这一点也不奇怪，比较奇怪的是，为何稣完美错过出八哥的条件？思考一阵后，得出这样的答案：</p><ol><li><p>最早当然都是用完整安装映像在虚拟机里安装。也有直接用 qcow2 格式的云映像。</p></li><li><p>稣第一次亲自安装 Debian 是在一家区块链公司，一开始没有运维，只能自己上阵。但环境是 GCP、AWS 这些云，“安装系统”是不存在的，那叫“选择系统”，选好即可用。而且它们的网络都特别好，即使后来自己安装任何包，也都很快。</p></li><li><p>稣第一次使用 netinst 映像在物理机上安装 Debian，是在跨国公司的企业网络，能自动加速到新加坡网络……</p></li><li><p>稣在家里第一次使用 netinst 映像在物理机上安装 Debian，网卡没认出来……离线安装后，才找到一个 USB 有线网卡，终于连上网，手动改源到 USTC 后，再继续安装的。</p></li><li><p>再后来已经知道 debian-security 的坑了。详见《<a href="/2022/04/18/umutech-install-debian-on-asus-ux3000e/">在华硕灵耀 X 纵横上装 Debian 桌面的经验</a>》。也知道如何在安装时，使用极客的方式改变 debian-security 源。</p></li></ol><p>事实上，在国内安装 Debian 大概率会因为 debian-security 源访问十分缓慢而花费几个小时。而且，在安装界面选择源无法解决这个问题！因为无论您在安装界面怎么换源，换掉的只有 debian 源，而 debian-security 源始总是默认的 <a href="http://security.debian.org">http://security.debian.org</a>。</p><h2 id="解决">解决</h2><p>显然，直接使用较庞大的完整安装映像可以很容易解决这个问题。但带来的问题是，下载 ISO 和刻盘时间都变长。最可怕的是，需要下载的 ISO 将近 4GB。对于稣这样的穷人，用于安装的 U 盘只有 1GB，这个方式根本不可行！所以，在安装时，使用极客的方式改变 debian-security 源，才是正确的方式。</p><p>思路大致如下：</p><ol><li><p>在选择源的界面，选择适合的国内源，比如在厦门、上海，都可以使用 USTC。</p></li><li><p>下一步是“Select and install software”，也就是开始慢的第一步。在这步界面下，按 Ctrl+Alt+F2，再按回车，打开一个控制台。</p></li><li><p>在控制台里换 debian-security 源，注意位置是 <code>/target/etc/apt/sources.list</code>，使用 <code>sed</code> 换即可，例如 <code>sed -i.bak 's|security.debian.org|mirrors.ustc.edu.cn|g' /target/etc/apt/sources.list</code>。</p></li><li><p>此时源修改并未生效，如果按 Ctrl+Alt+F5 回到安装界面，会发现依然在慢吞吞地下载。所以，还需要把当前使用默认源的下载会话给杀掉。还是在 Ctrl+Alt+F2 控制台里操作，先 <code>ps | grep http</code> 找到 <code>/usr/lib/methods/http</code> 进程的 pid，然后 <code>kill</code> 掉。</p></li><li><p>按 Ctrl+Alt+F5 回到安装界面，键鼠操作，重试这一步即可使新的 debian-security 源生效，后面将快很多。</p></li></ol>]]></content>
    
    
    <summary type="html">Install Debian quickly</summary>
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="linux" scheme="https://blog.umu618.com/tags/linux/"/>
    
    <category term="ops" scheme="https://blog.umu618.com/tags/ops/"/>
    
    <category term="debian" scheme="https://blog.umu618.com/tags/debian/"/>
    
  </entry>
  
  <entry>
    <title>Windows 平台安装安全版掩耳（Thunder）</title>
    <link href="https://blog.umu618.com/2024/05/12/umutech-installing-the-secure-version-of-thunder-on-windows/"/>
    <id>https://blog.umu618.com/2024/05/12/umutech-installing-the-secure-version-of-thunder-on-windows/</id>
    <published>2024-05-12T05:15:43.000Z</published>
    <updated>2024-05-28T15:20:12.080Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求">需求</h2><p>下载小文件，一般直接用浏览器。中等规模的，则一般用 aria2。大文件，还是要用 P2P 工具。</p><p>在国内，拥有 P2SP 的掩耳在下载 iso 等大文件时，无疑是具备巨大优势的。</p><p>比如，前几天稣下载一个 Windows Server 镜像，用 aria2 是 2.8MB/s，而掩耳则达到 6.1MB/s。</p><p>但是！Window 版掩耳的界面确实复杂而龟速，还有许多稣不需要的功能，比如它带了一个 WFP 驱动，又没开源，怎么知道它除了监控流量，还有没有监控流量呢！还有那个分配空间用的服务，又没开源，为啥给它系统权限？总之，不够安（fh）全（xb）！</p><h2 id="思路">思路</h2><p>如果在 Linux 上，可以使用 Docker 版，或者干脆装在虚拟机里。</p><p>Windows 也可以装在虚拟机里，但损耗比较大，而且操作麻烦。另一个方案是“Windows 沙盒”，需要使用一个类似“远程桌面客户端（mstsc）”的界面操作，比虚拟机方便，但还不够方便。</p><p>更好用的方式是通过 WSL 使用 Linux 版掩耳，它本身就是精简版，一次性解决船部烦恼。</p><h2 id="安装流程">安装流程</h2><h3 id="1-安装-WSL-Debian">1. 安装 WSL Debian</h3><p>在 Windows 上操作：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl -<span class="literal">-install</span> <span class="literal">-d</span> Debian</span><br></pre></td></tr></table></figure><h3 id="2-安装掩耳">2. 安装掩耳</h3><p>这步在 Debian 上操作，由于稣的 Windows 是 ARM64 版本，所以以下安装的是 arm64 的掩耳：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://archive.kylinos.cn/kylin/partner/pool/com.xunlei.download_1.0.0.1_arm64.deb</span><br><span class="line">sudo dpkg -i com.xunlei.download_1.0.0.1_arm64.deb</span><br></pre></td></tr></table></figure><p>x64 的 Windows 是这样：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://archive.kylinos.cn/kylin/partner/pool/com.xunlei.download_1.0.0.1_amd64.deb</span><br><span class="line">sudo dpkg -i com.xunlei.download_1.0.0.1_amd64.deb</span><br></pre></td></tr></table></figure><h3 id="3-安装依赖库">3. 安装依赖库</h3><p>目前掩耳是安装了，但还跑不起来，除非您的 Debian 本来已经安装过桌面环境。以下安装依赖库：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install libgtk2.0-bin libx11-xcb1 libxtst6 libxss1 libnss3 libasound2 libdbus-glib-1-2</span><br></pre></td></tr></table></figure><p>此时已经可以使用 <code>/opt/apps/com.xunlei.download/files/start.sh</code> 启动掩耳，但是中文字体都口了。</p><h3 id="4-安装中文字体">4. 安装中文字体</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install fonts-wqy-zenhei</span><br></pre></td></tr></table></figure><p>大功告成！</p>]]></content>
    
    
    <summary type="html">Installing the Secure Version of Thunder on Windows</summary>
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="windows" scheme="https://blog.umu618.com/tags/windows/"/>
    
    <category term="ops" scheme="https://blog.umu618.com/tags/ops/"/>
    
    <category term="security" scheme="https://blog.umu618.com/tags/security/"/>
    
  </entry>
  
  <entry>
    <title>Debian 12 上用 TPM2.0 安全登陆 SSH</title>
    <link href="https://blog.umu618.com/2024/04/29/umutech-secure-ssh-login-with-tpm2-on-debian-12/"/>
    <id>https://blog.umu618.com/2024/04/29/umutech-secure-ssh-login-with-tpm2-on-debian-12/</id>
    <published>2024-04-29T13:54:47.000Z</published>
    <updated>2024-05-12T06:03:19.287Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求">需求</h2><p>之前在《<a href="/2024/04/02/umutech-secure-ssh-login-with-touch-id-on-macos/">macOS 上用触控 ID 安全登录 SSH</a>》，最近比较常用 <a href="/2024/04/11/umutech-compatibility-of-various-des-and-xrdp-under-linux/">Linux 桌面</a>，所以还得在 Linux 上也搞一套安全的登陆方式。</p><h2 id="分析">分析</h2><p>目前，MBA13 M1 的 Touch ID 在 Asahi Linux 下无法使用，其它机器也都没有指纹识别器，显然只有 TPM 2.0 模块是唯一适合的安全手段。</p><h2 id="参考">参考</h2><ul><li><a href="https://incenp.org/notes/2020/tpm-based-ssh-key.html">Using a TPM for SSH authentication</a></li><li><a href="https://jade.fyi/blog/tpm-ssh/">Using a TPM 2.0 to secure ssh keys</a></li><li><a href="https://github.com/tpm2-software/tpm2-pkcs11/blob/master/docs/SSH.md">SSH Configuration</a></li></ul><h2 id="实现">实现</h2><h3 id="1-检查-TPM">1. 检查 TPM</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dmesg | grep -i tpm</span><br></pre></td></tr></table></figure><p>如果没有输出，那可能是内核不支持或者没有 TPM 芯片；但也可能只是内核比较老，没有输出而已，比如华为擎云 W515 就没有输出，但它能用。</p><p>类似以下输出，是没有芯片：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[    0.800622] ima: No TPM chip found, activating TPM-bypass!</span><br><span class="line">[    2.030844] systemd[1]: systemd 252.22-1~deb12u1 running in system mode (+PAM +AUDIT +SELINUX +APPARMOR +IMA +SMACK +SECCOMP +GCRYPT -GNUTLS +OPENSSL +ACL +BLKID +CURL +ELFUTILS +FIDO2 +IDN2 -IDN +IPTC +KMOD +LIBCRYPTSETUP +LIBFDISK +PCRE2 -PWQUALITY +P11KIT +QRENCODE +TPM2 +BZIP2 +LZ4 +XZ +ZLIB +ZSTD -BPF_FRAMEWORK -XKBCOMMON +UTMP +SYSVINIT default-hierarchy&#x3D;unified)</span><br></pre></td></tr></table></figure><p>内核识别出 TPM 芯片的输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[    0.000000] efi: ACPI&#x3D;0x75620000 ACPI 2.0&#x3D;0x75620014 TPMFinalLog&#x3D;0x755ef000 SMBIOS&#x3D;0x75cac000 SMBIOS 3.0&#x3D;0x75cab000 MEMATTR&#x3D;0x6bf5d018 ESRT&#x3D;0x6e822718 MOKvar&#x3D;0x75ce8000</span><br><span class="line">[    0.014309] ACPI: TPM2 0x00000000754DF000 00004C (v04 ALASKA A M I    00000001 AMI  00000000)</span><br><span class="line">[    0.014336] ACPI: Reserving TPM2 table memory at [mem 0x754df000-0x754df04b]</span><br><span class="line">[   12.590389] systemd[1]: systemd 252.22-1~deb12u1 running in system mode (+PAM +AUDIT +SELINUX +APPARMOR +IMA +SMACK +SECCOMP +GCRYPT -GNUTLS +OPENSSL +ACL +BLKID +CURL +ELFUTILS +FIDO2 +IDN2 -IDN +IPTC +KMOD +LIBCRYPTSETUP +LIBFDISK +PCRE2 -PWQUALITY +P11KIT +QRENCODE +TP2 +BZIP2 +LZ4 +XZ +ZLIB +ZSTD -BPF_FRAMEWORK -XKBCOMMON +UTMP +SYSVINIT default-hierarchy&#x3D;unified)</span><br></pre></td></tr></table></figure><h3 id="2-安装必要软件">2. 安装必要软件</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install tpm2-tools tpm2-abrmd libtpm2-pkcs11-tools libtpm2-pkcs11-1</span><br></pre></td></tr></table></figure><p>其中：</p><ul><li><p><code>tpm2-tools</code> 是一套工具。获得 <code>tpm2</code> 和 <code>tss2</code> 两个命令，可以用 <code>sudo tpm2 getrandom --hex 8</code> 测试 TPM2 是否正常工作。</p></li><li><p><code>tpm2-abrmd</code> 是一个服务，使得非 root 用户能访问 TPM2 映射文件，只需把用户加到 tss 组即可。</p></li><li><p><code>libtpm2-pkcs11-tools</code> 是 PKCS#11 backend，用于访问加密服务。它提供的 <code>tpm2_ptool</code> 是一个 Python 脚本，可用于管理令牌、密钥。</p></li><li><p><code>libtpm2-pkcs11-1</code> 是 SSH 用的模块，即提供一个符合 PKCS#11 规范的 so 动态库。对于 x64 机器，固定链接位于 <code>/lib/x86_64-linux-gnu/pkcs11/libtpm2_pkcs11.so</code>。如果您安装了 <code>gcc</code>，则可用 <code>TPM2_PKCS11_SO=/usr/lib/$(gcc -dumpmachine)/pkcs11/libtpm2_pkcs11.so</code> 来保存它到变量 <code>TPM2_PKCS11_SO</code>，以方便使用。</p></li></ul><h3 id="3-配置用户">3. 配置用户</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo usermod -a -G tss <span class="variable">$USER</span></span><br></pre></td></tr></table></figure><p>如果在桌面或 SSH 会话，可以注销，再登录，使以上配置生效。也可以用 <code>su - $USER</code> 登录一个新会话，这时新会话是生效的，但 <code>exit</code> 后，回到的旧会话依然不生效。</p><h3 id="4-检验">4. 检验</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tpm2 getrandom --hex 8</span><br></pre></td></tr></table></figure><p>注意，上面这条没有 sudo，必须保证没有 sudo 也能获得随机数，才说明 <code>tpm2-abrmd</code> 正常工作，并且用户加入 tss 组，并且重新登录会话！</p><h3 id="5-新建私钥">5. 新建私钥</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在默认位置 ~/.tpm2_pkcs11 初始化一个数据库</span></span><br><span class="line">tpm2_ptool init</span><br><span class="line"></span><br><span class="line">tpm2_ptool addtoken --pid 1 --label SSHToken --sopin [SUPERVISOR-PIN] \</span><br><span class="line">    --userpin [USER-PIN]</span><br><span class="line"></span><br><span class="line">tpm2_ptool addkey --algorithm [rsa2048/ecc256/ecc384] --label SSHToken \</span><br><span class="line">    --key-label [KEY-LABEL] --userpin [USER-PIN]</span><br></pre></td></tr></table></figure><p>稣一般使用 ecc384，即 NIST P-384，但有些机器会报错，这时可以尝试 ecc256，即 NIST P-256。<strong>注意：据说 NIST 系列安全性存疑？</strong></p><h3 id="6-导入私钥">6. 导入私钥</h3><p>这第 6 步与第 5 步只需二选一。</p><p>第 5 步中新建私钥是无法导出的，万一自己不小心删了，或者升级 BIOS，也可能无法解开，导致私钥丢失。所以，如果这私钥是不能丢的，那最好的方式是从离线保存的私钥文件里导入。</p><p>这步可能有风险，因为需要把离线保存的私钥文件复制到目标机器，而且要将私钥的密码清零。为了提高安全性，建议离线操作，并尽可能快速完成全部流程。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在内存文件系统操作，防止私钥落盘</span></span><br><span class="line"><span class="built_in">umask</span> 077 &amp;&amp; mkdir /tmp/crypto &amp;&amp; <span class="built_in">cd</span> /tmp/crypto</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这里断网，再复制你的私钥到 /tmp/crypto/tpm_pri</span></span><br><span class="line"><span class="comment"># 假设是从 U 盘复制，那命令可能是：</span></span><br><span class="line">sudo mount -o ro /dev/sdb1 /mnt</span><br><span class="line">cp /mnt/key.pem tpm_pri</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解密私钥，即删除私钥的密码（这很危险！平时绝不能这样做！）</span></span><br><span class="line">ssh-keygen -f tpm_pri -mPEM -ep</span><br><span class="line"></span><br><span class="line"><span class="comment"># 导入私钥</span></span><br><span class="line">tpm2_ptool import --label SSHToken --key-label TPM-SSH --userpin [USER-PIN] \</span><br><span class="line">    --privkey /tmp/crypto/tpm_pri --algorithm ecc384</span><br><span class="line"></span><br><span class="line"><span class="comment"># 清理机密数据</span></span><br><span class="line">shred -zu tpm_pri</span><br><span class="line">rm -rf /tmp/crypto</span><br></pre></td></tr></table></figure><h3 id="7-查看公钥">7. 查看公钥</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">TPM2_PKCS11_SO=/usr/lib/$(gcc -dumpmachine)/pkcs11/libtpm2_pkcs11.so</span><br><span class="line"></span><br><span class="line">ssh-keygen -D <span class="variable">$TPM2_PKCS11_SO</span></span><br></pre></td></tr></table></figure><p>可以导到文件里：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -D <span class="variable">$TPM2_PKCS11_SO</span> &gt; ~/.ssh/tpm.pub</span><br></pre></td></tr></table></figure><h3 id="8-设置-SSH-服务端">8. 设置 SSH 服务端</h3><p>这里在本地测试：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat ~/.ssh/tpm.pub &gt;&gt; ~/.ssh/authorized_keys2</span><br></pre></td></tr></table></figure><p>测试连接：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -I <span class="variable">$TPM2_PKCS11_SO</span> <span class="variable">$USER</span>@localhost</span><br></pre></td></tr></table></figure><h3 id="9-【可选】使用-ssh-agent">9. 【可选】使用 ssh-agent</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pgrep -u <span class="variable">$UID</span> ssh-agent || <span class="built_in">eval</span> `ssh-agent`</span><br><span class="line">ssh-add -s <span class="variable">$TPM2_PKCS11_SO</span></span><br></pre></td></tr></table></figure><h3 id="10-【可选】对指定主机自动使用-TPM-密钥">10. 【可选】对指定主机自动使用 TPM 密钥</h3><p>添加以下文本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Host umu618.com</span><br><span class="line">  PKCS11Provider &#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;pkcs11&#x2F;libtpm2_pkcs11.so</span><br><span class="line">  IdentityAgent none</span><br></pre></td></tr></table></figure><p>或者对全部主机使用：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;(<span class="built_in">echo</span> <span class="string">&quot;PKCS11Provider <span class="variable">$TPM2_PKCS11_SO</span>&quot;</span>) ~/.ssh/config \</span><br><span class="line">    | tee ~/.ssh/config</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;需求&quot;&gt;需求&lt;/h2&gt;
&lt;p&gt;之前在《&lt;a href=&quot;/2024/04/02/umutech-secure-ssh-login-with-touch-id-on-macos/&quot;&gt;macOS 上用触控 ID 安全登录 SSH&lt;/a&gt;》，最近比较常用 &lt;a href</summary>
      
    
    
    
    
    <category term="linux" scheme="https://blog.umu618.com/tags/linux/"/>
    
    <category term="ops" scheme="https://blog.umu618.com/tags/ops/"/>
    
    <category term="security" scheme="https://blog.umu618.com/tags/security/"/>
    
    <category term="debian" scheme="https://blog.umu618.com/tags/debian/"/>
    
  </entry>
  
  <entry>
    <title>家用 WiFi 方案二【MESH 版】</title>
    <link href="https://blog.umu618.com/2024/04/22/umutech-home-wifi-solution-2-mesh/"/>
    <id>https://blog.umu618.com/2024/04/22/umutech-home-wifi-solution-2-mesh/</id>
    <published>2024-04-21T16:03:30.000Z</published>
    <updated>2024-04-22T16:34:17.079Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求">需求</h2><p>写于 2020-03-23 21:57:52 的《<a href="/2020/03/23/umutech-home-wifi-solution/">家用 WiFi 方案</a>》已经是 4 年前的方案了，现在流行 Mesh 方案。正好手头上有两台 2023-11-24 产的 <a href="/2024/04/07/umutech-install-openwrt-on-cmcc-rax3000m/">CMCC RAX3000M NAND 版</a>，那就和<a href="/2022/04/11/umutech-install-openwrt-on-redmi-ax6s/">红米 AX6S</a> 一起 Mesh 吧！</p><h2 id="思考">思考</h2><ul><li><p>为何不用 AC+AP 方案？因为贵。如果新买成品 AC，就得买配套的 AP，不仅要一笔支出，还导致现有的 10 几个路由器都吃灰。而如果使用 OpenWRT 来实现 AC，开发成本更高，目前没发现 OpenWRT 上特别靠谱的 AC 实现。<a href="https://github.com/ycsunjane/acctl">这里</a>有一个十年前的项目。</p></li><li><p>为何不用现成的 MESH 路由器？因为穷。稣的主路由是 R4S，安装的是自己编译的 OpenWRT。如果改为现成的 MESH 路由器，势必需要替换这个主路由，那不是还得买一个性能和 R4S 差不多，而且还得能刷 OpenWRT 的？买不起啊。</p></li><li><p>有线回程？还是无线回程？能有线肯定有线，网络质量更好。还好家里布线还行，有线回程没问题。</p></li></ul><h2 id="具体步骤">具体步骤</h2><ol><li>配置成 AP</li></ol><p>lan 口协议改为 DHCP client，关掉 lan 口的 DHCP（即打勾 Ignore interface），再把 dnsmasq 禁用。</p><p>可选，如果有 IPv6，再创建一个 lan6 口，协议为 DHCPv6 client。</p><ol start="2"><li>查看各 AP 的 MAC 地址</li></ol><p>注意：查看的是 WiFi 网卡的 MAC，即 Wireless Overview 页面展示的 BSSID。</p><p>以下为假设的值：</p><ul><li>第一台 <a href="/2024/04/07/umutech-install-openwrt-on-cmcc-rax3000m/">CMCC RAX3000M</a>：11:11:11:11:11:11</li><li>第二台 <a href="/2024/04/07/umutech-install-openwrt-on-cmcc-rax3000m/">CMCC RAX3000M</a>：22:22:22:22:22:22</li><li><a href="/2022/04/11/umutech-install-openwrt-on-redmi-ax6s/">红米 AX6S</a>：33:33:33:33:33:33</li></ul><ol start="3"><li>配置 WiFi</li></ol><p>SSID 和 Encryption 设置全一样，信道错开。</p><ol start="4"><li>开启 AP 的 802.11r 支持</li></ol><p>位于 Interface Configuration - WLAN Roaming - 802.11r Fast Transition，打勾即可。</p><ol start="5"><li>配置 802.11r</li></ol><p>每个 AP 的 NAS ID 设为自己的 MAC 地址去掉冒号，比如 <a href="/2022/04/11/umutech-install-openwrt-on-redmi-ax6s/">红米 AX6S</a> 的 MAC 为 33:33:33:33:33:33，NAS ID 就设为 333333333333。</p><p>Mobility Domain 都设置成一样的 16 位数字的 Hex 格式，比如：abcd。</p><p>FT protocol 都设为 FT over DS，即有线回程。如果网口不够用，可以选择 FT over the Air。</p><p>R1 Key Holder 设为和 NAS ID 一样即可。</p><p>External R0 Key Holder List 添加 3 个，分别为：</p><ul><li>11:11:11:11:11:11,111111111111,1234567890abcdef1234567890abcdef</li><li>22:22:22:22:22:22,222222222222,1234567890abcdef1234567890abcdef</li><li>33:33:33:33:33:33,333333333333,1234567890abcdef1234567890abcdef</li></ul><p>其中的 1234567890abcdef1234567890abcdef，您可以改为其它 128 位数值（16 字节）。</p><p>External R1 Key Holder List 添加 3 个，分别为：</p><ul><li>11:11:11:11:11:11,11:11:11:11:11:11,1234567890abcdef1234567890abcdef</li><li>22:22:22:22:22:22,22:22:22:22:22:22,1234567890abcdef1234567890abcdef</li><li>33:33:33:33:33:33,33:33:33:33:33:33,1234567890abcdef1234567890abcdef</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;需求&quot;&gt;需求&lt;/h2&gt;
&lt;p&gt;写于 2020-03-23 21:57:52 的《&lt;a href=&quot;/2020/03/23/umutech-home-wifi-solution/&quot;&gt;家用 WiFi 方案&lt;/a&gt;》已经是 4 年前的方案了，现在流行 Mesh 方案。正</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="debug" scheme="https://blog.umu618.com/tags/debug/"/>
    
    <category term="openwrt" scheme="https://blog.umu618.com/tags/openwrt/"/>
    
    <category term="router" scheme="https://blog.umu618.com/tags/router/"/>
    
  </entry>
  
  <entry>
    <title>快速杀死 Linux</title>
    <link href="https://blog.umu618.com/2024/04/20/umutech-kill-linux-quickly/"/>
    <id>https://blog.umu618.com/2024/04/20/umutech-kill-linux-quickly/</id>
    <published>2024-04-20T12:57:10.000Z</published>
    <updated>2024-04-20T13:43:46.968Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题">问题</h2><p>众所周知，Linux 上的脚本可以通过 Shebang 符号（#!）来指定它的解释器（interpreter）。那么，ELF 格式的程序又是谁来执行的呢？</p><h2 id="研究">研究</h2><p>Linux 系统必然存在一个用于加载 ELF 程序的程序，它本身是被内核拉起的。然而，虽然有这么一个叫做 init 的进程，但对应的 init 程序文件是位于 /sbin 下，它不应该是<strong>直接</strong>用来运行其它程序的，不然普通用户的程序岂不是都无法启动？</p><p>一次使用 <code>file</code> 时，发现它打印出一个 interpreter：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ file $(<span class="built_in">which</span> bash)</span><br><span class="line">/usr/bin/bash: ELF 64-bit LSB pie executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID[sha1]=0b6b11360e339f231f17484da2c87d0d78554e31, <span class="keyword">for</span> GNU/Linux 3.2.0, stripped</span><br></pre></td></tr></table></figure><p>这个 <code>/lib64/ld-linux-x86-64.so.2</code> 可以说是相当眼熟的，每次 <code>ldd</code> 一个 ELF 程序都会看到：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ ldd $(<span class="built_in">which</span> bash)</span><br><span class="line">linux-vdso.so.1 (0x00007ffcdbf89000)</span><br><span class="line">libtinfo.so.6 =&gt; /lib/x86_64-linux-gnu/libtinfo.so.6 (0x00007fe156917000)</span><br><span class="line">libc.so.6 =&gt; /lib/x86_64-linux-gnu/libc.so.6 (0x00007fe156736000)</span><br><span class="line">/lib64/ld-linux-x86-64.so.2 (0x00007fe156aa1000)</span><br></pre></td></tr></table></figure><p>所以，可以拿它来运行别的 ELF 程序？</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ /lib64/ld-linux-x86-64.so.2 $(<span class="built_in">which</span> <span class="built_in">pwd</span>)</span><br><span class="line">/root</span><br></pre></td></tr></table></figure><p>哦吼！还真可以……看看它到底是啥：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ file /lib64/ld-linux-x86-64.so.2</span><br><span class="line">/lib64/ld-linux-x86-64.so.2: symbolic link to /lib/x86_64-linux-gnu/ld-linux-x86-64.so.2</span><br><span class="line">$ file /lib/x86_64-linux-gnu/ld-linux-x86-64.so.2</span><br><span class="line">/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2: ELF 64-bit LSB shared object, x86-64, version 1 (GNU/Linux), dynamically linked, BuildID[sha1]=38e7d4a67acf053c794b3b8094e6900b5163f37d, stripped</span><br></pre></td></tr></table></figure><p>所以，在 x64 的 Linux，ELF 的解释器其实是 <code>/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2</code>。</p><h2 id="结论">结论</h2><p>最快杀死 Linux 的方法是：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; chmod -x /lib/x86_64-linux-gnu/ld-linux-x86-64.so.2</span><br></pre></td></tr></table></figure><p>请勿轻易尝试。如果您真的很好奇，记得先备份这个程序，在一定时间内还能救回来。可以这么思考：这个解释器又是谁加载的？您不会已经关闭 shell 了吧？</p>]]></content>
    
    
    <summary type="html">掐鸡教的</summary>
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="debug" scheme="https://blog.umu618.com/tags/debug/"/>
    
    <category term="linux" scheme="https://blog.umu618.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Debian 12 的 xrdp 开启声音重定向</title>
    <link href="https://blog.umu618.com/2024/04/13/umutech-enable-sound-redirection-on-debian-12-with-xrdp/"/>
    <id>https://blog.umu618.com/2024/04/13/umutech-enable-sound-redirection-on-debian-12-with-xrdp/</id>
    <published>2024-04-12T16:41:19.000Z</published>
    <updated>2024-04-29T15:58:25.012Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求">需求</h2><p>自从给华为擎云 <a href="/2022/05/21/umutech-huawei-qingyun-l420-uos-kylinos/">L420</a>、<a href="/2022/06/18/umutech-huawei-qingyun-l410/">L410</a> 和 <a href="https://www.passmark.com/baselines/V11/display.php?id=505991431952">W515</a> 都装上 Debian 12 后，稣就把前两者卖了，因为它们是笔记本，稣有太多笔记本了……唯独留下 W515，并宠爱有加，因为它是台式机。</p><p>稣还给它装了（华为？）MATE 桌面，获得<a href="/2024/04/11/umutech-compatibility-of-various-des-and-xrdp-under-linux/">和 xrdp 不错的兼容性</a>！果然还是华为 MATE 牛逼！</p><p>于是乎，在远程桌面下都有图像的前提下，没有声音就显得很奇怪！</p><h2 id="分析">分析</h2><p>很容易发现，远程桌面下，默认是没有声音输出设备的，所以没有声音！我们需要的是一个虚拟声卡。</p><p>由于 Debian 12 的声音系统是 pipewire，使用“pipewire xrdp”作为关键词，很容易能找到：</p><p><a href="https://github.com/neutrinolabs/pipewire-module-xrdp">https://github.com/neutrinolabs/pipewire-module-xrdp</a></p><h2 id="编译-pipewire-module-xrdp">编译 pipewire-module-xrdp</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/neutrinolabs/pipewire-module-xrdp</span><br><span class="line"><span class="built_in">cd</span> pipewire-module-xrdp</span><br><span class="line"></span><br><span class="line"><span class="comment"># Install build environment</span></span><br><span class="line">sudo apt install git pkg-config autotools-dev libtool make gcc</span><br><span class="line"></span><br><span class="line"><span class="comment"># Install dependencies</span></span><br><span class="line">sudo apt install libpipewire-0.3-dev libspa-0.2-dev</span><br><span class="line"></span><br><span class="line"><span class="comment"># Build</span></span><br><span class="line">./bootstrap</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line"></span><br><span class="line"><span class="comment"># Install</span></span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure><h2 id="使用">使用</h2><p>连重启都不用，只需要重新进行 RDP 连接即可生效。</p>]]></content>
    
    
    <summary type="html">How to enable sound redirection on Debian 12 with xrdp?</summary>
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="linux" scheme="https://blog.umu618.com/tags/linux/"/>
    
    <category term="ops" scheme="https://blog.umu618.com/tags/ops/"/>
    
    <category term="debian" scheme="https://blog.umu618.com/tags/debian/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·就洗淋被</title>
    <link href="https://blog.umu618.com/2024/04/12/reconstructionism-poet-i-am-rich/"/>
    <id>https://blog.umu618.com/2024/04/12/reconstructionism-poet-i-am-rich/</id>
    <published>2024-04-12T04:28:02.000Z</published>
    <updated>2024-04-13T14:38:27.489Z</updated>
    
    <content type="html"><![CDATA[<p>《诗盗·就洗淋被》：虚拟世界虚拟币，真实人性真实利。手持千枚比体系，年薪和纸一个亿。</p><h2 id="注解">注解</h2><p>就洗淋被：闽南语，意思是被子拿出去晒，结果被雨淋湿了，又洗了一遍。/狗头<br>比体系：稣曾经有一千多枚 BTC，后来都变成废纸。<br>年薪和纸一个亿：密钥写在纸上的，结果纸丢了，但是那张纸确实能做到年薪一个亿，还是美元哦！</p>]]></content>
    
    
    <summary type="html">稣是瑞气</summary>
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="闽南语" scheme="https://blog.umu618.com/tags/%E9%97%BD%E5%8D%97%E8%AF%AD/"/>
    
    <category term="鹏风" scheme="https://blog.umu618.com/tags/%E9%B9%8F%E9%A3%8E/"/>
    
  </entry>
  
  <entry>
    <title>Linux 上各种 DE 和 xrdp 的兼容性</title>
    <link href="https://blog.umu618.com/2024/04/11/umutech-compatibility-of-various-des-and-xrdp-under-linux/"/>
    <id>https://blog.umu618.com/2024/04/11/umutech-compatibility-of-various-des-and-xrdp-under-linux/</id>
    <published>2024-04-11T13:18:56.000Z</published>
    <updated>2024-04-29T17:14:03.879Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求">需求</h2><p>稣主要使用 macOS 和 Windows 远程桌面访问 Windows 和 Linux，所以 Linux 下哪个 DE 对 xrdp 支持最好呢？</p><h2 id="选手">选手</h2><p>在过去<a href="/2022/04/25/umutech-linux-desktop/">Linux 桌面玩稣</a>的时代，主要使用以下 DE：</p><ul><li>GNOME</li><li>Cinnamon</li><li>MATE</li><li>Xfce</li><li>KDE</li><li>i3</li></ul><p>其中 GNOME 和 KDE 太大了，而且对 xrdp 支持并不好，不想再使用，直接淘汰。加入两个从没使用过的选手：</p><ul><li>LXDE</li><li>LXQt</li></ul><p>但由于它们太像了，简单看起来仅仅是样式不同，所以算一个吧。</p><h2 id="对比">对比</h2><p>以下为最直观的感受，没有深入去折腾。</p><table><thead><tr><th style="text-align:left">DE 名称</th><th style="text-align:left">GUI 下支持的缩放个数</th><th style="text-align:left">缩放有效否</th><th style="text-align:left">明显的坑</th></tr></thead><tbody><tr><td style="text-align:left">Cinnamon</td><td style="text-align:left">5 个（100、125、150、175、200）</td><td style="text-align:left">是，立刻生效</td><td style="text-align:left">第一次设置缩放后，开始菜单高度没变高，是个矮个子的错误状态，注销再登录才正常</td></tr><tr><td style="text-align:left">MATE</td><td style="text-align:left">2 个（100、200）</td><td style="text-align:left">是，立刻生效</td><td style="text-align:left">没有 Cinnamon 漂亮，界面布局需要适应，容易把左下角的“显示桌面”当成开始菜单</td></tr><tr><td style="text-align:left">Xfce</td><td style="text-align:left">5 个（100、125、150、175、200）</td><td style="text-align:left">否，即使重新登录也无效</td><td style="text-align:left">永远 100% 的缩放</td></tr><tr><td style="text-align:left">i3</td><td style="text-align:left">0 个（自己改配置去！）</td><td style="text-align:left">否，改配置后无法在一次会话里即时成效</td><td style="text-align:left">WIN 键有时候失灵，是在不同 RDP 客户端连接下键值可能和服务端本地不同！</td></tr><tr><td style="text-align:left">LXDE/LXQt</td><td style="text-align:left">0 个</td><td style="text-align:left">否，界面上没找到地方改</td><td style="text-align:left">永远 100% 的缩放，即使 RDP 客户端已经记住密码，每次登录必然再弹出对话框要求输入密码。</td></tr></tbody></table><h2 id="结论">结论</h2><p>似乎就 Cinnamon 和 MATE 是应该一起安装的！一个大哥，一个小妹，能互补，还能偶尔换换口味。</p><p>Xfce 和 i3 也许折腾几下也能好用。</p><p>不过，以上，在 Windows 面前，都是乐射……不管本地、还是被远程，Windows 都完美缩放。</p>]]></content>
    
    
    <summary type="html">Compatibility of Various DEs and xrdp under Linux</summary>
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="linux" scheme="https://blog.umu618.com/tags/linux/"/>
    
    <category term="ops" scheme="https://blog.umu618.com/tags/ops/"/>
    
  </entry>
  
  <entry>
    <title>CMCC RAX3000M 刷 OpenWRT</title>
    <link href="https://blog.umu618.com/2024/04/07/umutech-install-openwrt-on-cmcc-rax3000m/"/>
    <id>https://blog.umu618.com/2024/04/07/umutech-install-openwrt-on-cmcc-rax3000m/</id>
    <published>2024-04-07T15:49:22.000Z</published>
    <updated>2024-04-08T09:26:36.070Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求">需求</h2><p>写于 2020-03-23 21:57:52 的《<a href="/2020/03/23/umutech-home-wifi-solution/">家用 WiFi 方案</a>》已经是 4 年前的方案了，现在流行 Mesh 方案。正好手头上有两台 2023-11-24 产的 CMCC RAX3000M NAND 版，那就把它们刷成官方版 OpenWRT 再来和<a href="/2022/04/11/umutech-install-openwrt-on-redmi-ax6s/">红米 AX6S</a> 一起 Mesh 吧！</p><h2 id="参考">参考</h2><ol><li><p><a href="https://openwrt.org/toh/hwdata/cmcc/cmcc_rax3000m">OpenWRT Techdata: CMCC RAX3000M</a></p><ul><li><a href="https://openwrt.org/toh/hwdata/cmcc/cmcc_rax3000m">https://openwrt.org/toh/hwdata/cmcc/cmcc_rax3000m</a></li></ul></li><li><p><a href="https://git.openwrt.org/?p=openwrt/openwrt.git;a=commit;h=423186d7d8b4f23aee91fca4f1774a195eba00d8">mediatek: add CMCC RAX3000M support</a></p><ul><li><a href="https://git.openwrt.org/?p=openwrt/openwrt.git;a=commit;h=423186d7d8b4f23aee91fca4f1774a195eba00d8">https://git.openwrt.org/?p=openwrt/openwrt.git;a=commit;h=423186d7d8b4f23aee91fca4f1774a195eba00d8</a></li></ul></li><li><p><a href="https://openwrt.org/docs/guide-user/troubleshooting/tftpserver">Setting up a TFTP server for TFTP</a></p><ul><li><a href="https://openwrt.org/docs/guide-user/troubleshooting/tftpserver">https://openwrt.org/docs/guide-user/troubleshooting/tftpserver</a></li></ul></li><li><p><a href="https://www.right.com.cn/forum/thread-8338290-1-1.html">RAX3000M刷OpenWRT官方版本23.05.2</a></p><ul><li><a href="https://www.right.com.cn/forum/thread-8338290-1-1.html">https://www.right.com.cn/forum/thread-8338290-1-1.html</a></li></ul></li><li><p><a href="https://www.right.com.cn/forum/thread-8341655-1-1.html">关于CMCC RAX3000M 刷机防变砖教程</a></p><ul><li><a href="https://www.right.com.cn/forum/thread-8341655-1-1.html">https://www.right.com.cn/forum/thread-8341655-1-1.html</a></li></ul></li><li><p><a href="https://github.com/immortalwrt/immortalwrt/discussions/1152">RAX3000M 刷固件时没刷BL2，还需要重新刷入吗？</a></p><ul><li><a href="https://github.com/immortalwrt/immortalwrt/discussions/1152">https://github.com/immortalwrt/immortalwrt/discussions/1152</a></li></ul></li><li><p><a href="https://ericclose.github.io/install-openwrt-on-h3c_magic-nx30-pro.html">H3C Magic NX30 Pro 官方 OpenWrt 安装教程</a></p><ul><li><a href="https://ericclose.github.io/install-openwrt-on-h3c_magic-nx30-pro.html">https://ericclose.github.io/install-openwrt-on-h3c_magic-nx30-pro.html</a></li></ul></li><li><p><a href="https://www.right.com.cn/forum/thread-8227879-1-1.html">关于mt7621原厂固件启用nmbm的提醒</a></p><ul><li><a href="https://www.right.com.cn/forum/thread-8227879-1-1.html">https://www.right.com.cn/forum/thread-8227879-1-1.html</a></li></ul></li><li><p><a href="https://github.com/immortalwrt/immortalwrt/discussions/1084">mediatek/filogic预编译镜像中带nmbm字样的应该如何安装？</a></p><ul><li><a href="https://github.com/immortalwrt/immortalwrt/discussions/1084">https://github.com/immortalwrt/immortalwrt/discussions/1084</a></li></ul></li></ol><h2 id="警告">警告</h2><ol><li>目前（2024-04-08），OpenWRT 官方还不支持 NMBM，所以刷机有一定风险！万一 NAND 有坏块，有可能无法启动。</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root@RAX3000M:/tmp<span class="comment"># dmesg | grep nmbm</span></span><br><span class="line">[    0.685313] nmbm nmbm_spim_nand: Signature found at block 1023 [0x07fe0000]</span><br><span class="line">[    0.693039] nmbm nmbm_spim_nand: First info table with writecount 0 found <span class="keyword">in</span> block 960</span><br><span class="line">[    0.703133] nmbm nmbm_spim_nand: Second info table with writecount 0 found <span class="keyword">in</span> block 963</span><br><span class="line">[    0.711141] nmbm nmbm_spim_nand: NMBM has been successfully attached</span><br><span class="line">[    0.717754] 8 fixed-partitions partitions found on MTD device nmbm_spim_nand</span><br><span class="line">[    0.724799] Creating 8 MTD partitions on <span class="string">&quot;nmbm_spim_nand&quot;</span>:</span><br></pre></td></tr></table></figure><ol start="2"><li>这是 1124 版、NAND 版，非 eMMC 版，其它版本不保证可行。</li></ol><h2 id="软件工具">软件工具</h2><ol><li><p>大部分系统都自带的 ssh 命令，可选 scp 命令或 winscp。大部分镜像文件都可以直接在路由器里用 wget 下载，如果您已经在电脑上下载好，也可以用 scp 命令或 winscp 上传到路由器。</p></li><li><p>Linux 系统，或 Windows 上的 WSL。</p></li><li><p><a href="https://github.com/UMU618/tftpd">tftpd</a> 或其它同类 TFTP 服务端。</p></li></ol><h2 id="具体步骤">具体步骤</h2><h3 id="1-开启路由器-ssh-服务端">1. 开启路由器 ssh 服务端</h3><p>原理：导出配置，修改配置使能 dropbear，导入配置。</p><p>原版固件里导出的配置是一个加密的 tar 包，要编辑它，需要先解包，在 Linux 或 WSL 操作：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl aes-256-cbc -d -pbkdf2 -k <span class="variable">$CmDc</span><span class="comment">#RaX30O0M@\!$ -in cfg_export_config_file.conf -out - | tar -zxvf -</span></span><br></pre></td></tr></table></figure><p>解开后，做两件事：编辑 etc/config/dropbear 允许 dropbear 和编辑 etc/shadow 修改 root 密码。</p><p>dropbear 里删除以下行，或把 0 改为 1：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">option enable &#39;0&#39;</span><br></pre></td></tr></table></figure><p>shadow 里的第一行格式为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root:$1$&lt;salt&gt;$&lt;password&gt;:&lt;unconcerned&gt;</span><br></pre></td></tr></table></figure><p>即，只关心第一和第二 : 之间的 &lt;salt&gt; 和 &lt;password&gt;，如果您能破解出 &lt;password&gt; 的明文，那可以不用改了；否则就用 &lt;salt&gt; 生成一个新密码，去替换 &lt;password&gt;。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl passwd -1 -salt &lt;salt&gt; OpenWRT</span><br></pre></td></tr></table></figure><p>以上命令产生明文为 OpenWRT 的密码，拿它替换 shadow 里的原始密码。然后把修改后的文件再打包回去：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zcvf - etc | openssl aes-256-cbc -pbkdf2 -k <span class="variable">$CmDc</span><span class="comment">#RaX30O0M@\!$ -out cfg_export_config_file_ssh.conf</span></span><br></pre></td></tr></table></figure><p>拿 cfg_export_config_file_ssh.conf 去恢复配置，重启后，即可用 root 身份 ssh 到路由器。</p><h3 id="2-备份原始分区">2. 备份原始分区</h3><p>这步可以跳过，对一些人来说，备份意义不大，不可能刷非官方 OpenWRT 的。请自行斟酌。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">root@RAX3000M:~<span class="comment"># cat /proc/mtd</span></span><br><span class="line">dev:    size   erasesize  name</span><br><span class="line">mtd0: 08000000 00020000 <span class="string">&quot;spi0.0&quot;</span></span><br><span class="line">mtd1: 00100000 00020000 <span class="string">&quot;BL2&quot;</span></span><br><span class="line">mtd2: 00080000 00020000 <span class="string">&quot;u-boot-env&quot;</span></span><br><span class="line">mtd3: 00200000 00020000 <span class="string">&quot;Factory&quot;</span></span><br><span class="line">mtd4: 00200000 00020000 <span class="string">&quot;FIP&quot;</span></span><br><span class="line">mtd5: 03d00000 00020000 <span class="string">&quot;ubi&quot;</span></span><br><span class="line">mtd6: 02500000 00020000 <span class="string">&quot;plugins&quot;</span></span><br><span class="line">mtd7: 00800000 00020000 <span class="string">&quot;fwk&quot;</span></span><br><span class="line">mtd8: 00800000 00020000 <span class="string">&quot;fwk2&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 备份 mtd0 - mtd8</span></span><br><span class="line">dd <span class="keyword">if</span>=/dev/mtd0 of=/tmp/0.img</span><br><span class="line">dd <span class="keyword">if</span>=/dev/mtd1 of=/tmp/1.img</span><br><span class="line">dd <span class="keyword">if</span>=/dev/mtd2 of=/tmp/2.img</span><br><span class="line">dd <span class="keyword">if</span>=/dev/mtd3 of=/tmp/3.img</span><br><span class="line">dd <span class="keyword">if</span>=/dev/mtd4 of=/tmp/4.img</span><br><span class="line">dd <span class="keyword">if</span>=/dev/mtd5 of=/tmp/5.img</span><br><span class="line">dd <span class="keyword">if</span>=/dev/mtd6 of=/tmp/6.img</span><br><span class="line">dd <span class="keyword">if</span>=/dev/mtd7 of=/tmp/7.img</span><br><span class="line">dd <span class="keyword">if</span>=/dev/mtd8 of=/tmp/8.img</span><br><span class="line"></span><br><span class="line"><span class="comment"># 以上每条 dd 命令运行后，需要立刻在电脑上用 scp 把文件复制到电脑，</span></span><br><span class="line"><span class="comment"># 并删除路由器里的文件，防止 /tmp 被写爆</span></span><br></pre></td></tr></table></figure><h3 id="3-刷-uboot">3. 刷 uboot</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">wget https://mirrors.ustc.edu.cn/openwrt/releases/23.05.3/targets/mediatek/filogic/openwrt-23.05.3-mediatek-filogic-cmcc_rax3000m-nand-bl31-uboot.fip</span><br><span class="line"></span><br><span class="line"><span class="comment"># wget https://downloads.openwrt.org/releases/23.05.3/targets/mediatek/filogic/openwrt-23.05.3-mediatek-filogic-cmcc_rax3000m-nand-bl31-uboot.fip</span></span><br><span class="line"><span class="comment"># sha256sum openwrt-23.05.3-mediatek-filogic-cmcc_rax3000m-nand-bl31-uboot.fip</span></span><br><span class="line"><span class="comment"># f60d7aa3dcd854a5a39c2b3e05cdc9985460d4b358d02e96d51c50f476650270</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. Erase and write new FIP:</span></span><br><span class="line">mtd erase FIP</span><br><span class="line">mtd write openwrt-mediatek-filogic-cmcc_rax3000m-nand-bl31-uboot.fip FIP</span><br></pre></td></tr></table></figure><h3 id="4-刷-OpenWRT">4. 刷 OpenWRT</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">4. Set static IP on your PC:</span><br><span class="line">   IP 192.168.1.254, GW 192.168.1.1</span><br><span class="line"></span><br><span class="line">5. Serve OpenWrt initramfs image using TFTP server.</span><br><span class="line">   <span class="comment"># 文件名需要去掉版本号，即改为：</span></span><br><span class="line">   <span class="comment"># openwrt-mediatek-filogic-cmcc_rax3000m-initramfs-recovery.itb</span></span><br><span class="line"></span><br><span class="line">6. Cut off the power and re-engage, <span class="built_in">wait</span> <span class="keyword">for</span> TFTP recovery to complete.</span><br><span class="line"></span><br><span class="line">7. After OpenWrt has booted, erase UBI volumes:</span><br><span class="line">   ubidetach -p /dev/mtd0</span><br><span class="line">   ubiformat -y /dev/mtd0</span><br><span class="line">   ubiattach -p /dev/mtd0</span><br><span class="line"></span><br><span class="line">8. Create new ubootenv volumes:</span><br><span class="line">   ubimkvol /dev/ubi0 -n 0 -N ubootenv -s 128KiB</span><br><span class="line">   ubimkvol /dev/ubi0 -n 1 -N ubootenv2 -s 128KiB</span><br><span class="line"></span><br><span class="line">9. Additionally, <span class="keyword">if</span> you want to have NAND recovery boot feature:</span><br><span class="line">     (Don<span class="string">&#x27;t worry! You will always have TFTP recovery boot feature.)</span></span><br><span class="line"><span class="string">   ubimkvol /dev/ubi0 -n 2 -N recovery -s 20MiB</span></span><br><span class="line"><span class="string">   ubiupdatevol /dev/ubi0_2 openwrt-mediatek-filogic-cmcc_rax3000m-initramfs-recovery.itb</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">10. Perform sysupgrade.</span></span><br></pre></td></tr></table></figure><h3 id="5-刷-bl2">5. 刷 bl2</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">root@UMUTech:~<span class="comment"># cd /tmp</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看 mtd 分区信息</span></span><br><span class="line">root@UMUTech:/tmp<span class="comment"># cat /proc/mtd</span></span><br><span class="line">dev:    size   erasesize  name</span><br><span class="line">mtd0: 07200000 00020000 <span class="string">&quot;ubi&quot;</span></span><br><span class="line">mtd1: 00200000 00020000 <span class="string">&quot;fip&quot;</span></span><br><span class="line">mtd2: 00200000 00020000 <span class="string">&quot;factory&quot;</span></span><br><span class="line">mtd3: 00080000 00020000 <span class="string">&quot;u-boot-env&quot;</span></span><br><span class="line">mtd4: 00100000 00020000 <span class="string">&quot;bl2&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 同步仓库源</span></span><br><span class="line">root@UMUTech:/tmp<span class="comment"># opkg update</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 kmod-mtd-rw 内核模块</span></span><br><span class="line">root@UMUTech:/tmp<span class="comment"># opkg install kmod-mtd-rw</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将分区配置为可读写</span></span><br><span class="line">root@UMUTech:/tmp<span class="comment"># insmod /lib/modules/$(uname -r)/mtd-rw.ko i_want_a_brick=1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载 preloader</span></span><br><span class="line">root@UMUTech:/tmp<span class="comment"># wget https://downloads.openwrt.org/releases/23.05.3/targets/mediatek/filogic/openwrt-23.05.3-mediatek-filogic-cmcc_rax3000m-nand-preloader.bin</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 刷写 BL2 分区</span></span><br><span class="line">root@UMUTech:/tmp<span class="comment"># mtd write /tmp/openwrt-23.05.3-mediatek-filogic-cmcc_rax3000m-nand-preloader.bin bl2</span></span><br><span class="line">Unlocking bl2 ...</span><br><span class="line"></span><br><span class="line">Writing from /tmp/openwrt-23.05.3-mediatek-filogic-cmcc_rax3000m-nand-preloader.bin to bl2 ...</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">在掐鸡指导下刷机</summary>
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="embedded" scheme="https://blog.umu618.com/tags/embedded/"/>
    
    <category term="linux" scheme="https://blog.umu618.com/tags/linux/"/>
    
    <category term="openwrt" scheme="https://blog.umu618.com/tags/openwrt/"/>
    
  </entry>
  
  <entry>
    <title>macOS 上用触控 ID 安全登录 SSH</title>
    <link href="https://blog.umu618.com/2024/04/02/umutech-secure-ssh-login-with-touch-id-on-macos/"/>
    <id>https://blog.umu618.com/2024/04/02/umutech-secure-ssh-login-with-touch-id-on-macos/</id>
    <published>2024-04-02T13:33:16.000Z</published>
    <updated>2024-05-12T05:34:21.936Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求">需求</h2><ol><li><p>使用文件存 SSH 私钥，其实安全性挺堪忧的：如果私钥没有密码，任何程序都可以直接读取，被流氓软件偷偷上传怎么办？为了安全，给私钥加密，这就要输入密码，麻烦。而且输入密码时，又可能被偷。</p></li><li><p>有没有一种木马专门针对 ssh-agent 呢？您把密钥的密码交给 ssh-agent​，真放心吗？</p></li><li><p>稣特地买了一台 MBA 13 M1 乞丐版装 Asahi Linux，结果触控板在 Linux 下表现不如 macOS 下好用，Touch ID 还不能用，又回 macOS 了。既然回 macOS，就需要开发 Touch ID 更多功能，不然怎么对得起吃灰的 Asahi Linux？</p></li></ol><p>总之，稣需要一种更安全的 SSH 登录方式，那就是——用 Touch ID 登录。</p><h2 id="原理">原理</h2><p><a href="https://support.apple.com/zh-cn/guide/security/sec59b0b31ff/web">安全隔区（Secure Enclave）</a>是集成到 Apple 片上系统 (SoC) 的专用安全子系统。安全隔区独立于主处理器，因此私钥不会被操作系统（OS）读取。验证时，是安全芯片参与运算，全程私钥都不会交给 OS。</p><p>简单来说，它更像一台微型服务器，有自主的算力，而不是一个静态文件，不会被不良应用程序偷走。</p><h2 id="实现">实现</h2><p>使用开源软件 <a href="https://github.com/sekey/sekey">sekey</a>，替换默认的 ssh-agent。</p><p>它的详细介绍请参考其 <a href="https://github.com/sekey/sekey">GitHub 仓库</a>。</p><h3 id="1-安装-sekey">1. 安装 sekey</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install sekey</span><br></pre></td></tr></table></figure><p>安装后，可用以下命令检查 sekey 是否在运行：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls ~/.sekey/ssh-agent.ssh</span><br></pre></td></tr></table></figure><h3 id="2-创建基于-Secure-Enclave-的密钥对">2. 创建基于 Secure Enclave 的密钥对</h3><p>创建一个名为 SSH 的密钥对：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sekey -c SSH</span><br></pre></td></tr></table></figure><p>用 <code>sekey -l</code> 查看其 ID，然后用 <code>sekey -e &lt;ID&gt;</code> 查看公钥。这个公钥是 ecdsa-sha2-nistp256 格式的，把公钥配置到 SSH 服务器即可。</p><h3 id="3-配置-ssh-使用-sekey">3. 配置 ssh 使用 sekey</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.ssh/config</span><br></pre></td></tr></table></figure><p>添加以下一行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">IdentityAgent ~&#x2F;.sekey&#x2F;ssh-agent.ssh</span><br></pre></td></tr></table></figure><h2 id="疑难杂症">疑难杂症</h2><p>当服务器为 OpenWRT 系统时，有可能无法正常工作。因为 OpenWRT 默认的 SSH 服务端是 dropbear，它不支持 ecdsa-sha2-nistp256。装个 OpenSSH 即可：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">opkg update</span><br><span class="line">opkg install openssh-server</span><br></pre></td></tr></table></figure><p>最后提醒：业界对 ecdsa-sha2-nistp256 有一些质疑的声音，它的安全性应该不如 ed25519。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;需求&quot;&gt;需求&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;使用文件存 SSH 私钥，其实安全性挺堪忧的：如果私钥没有密码，任何程序都可以直接读取，被流氓软件偷偷上传怎么办？为了安全，给私钥加密，这就要输入密码，麻烦。而且输入密码时，又可能被偷。&lt;/p&gt;
&lt;/li&gt;
&lt;li</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="ops" scheme="https://blog.umu618.com/tags/ops/"/>
    
    <category term="security" scheme="https://blog.umu618.com/tags/security/"/>
    
    <category term="macos" scheme="https://blog.umu618.com/tags/macos/"/>
    
  </entry>
  
  <entry>
    <title>无银第八哥【3】修改分支走向</title>
    <link href="https://blog.umu618.com/2024/03/17/umutech-windbg-3-reroute-the-branch/"/>
    <id>https://blog.umu618.com/2024/03/17/umutech-windbg-3-reroute-the-branch/</id>
    <published>2024-03-17T09:50:39.000Z</published>
    <updated>2024-03-17T12:50:30.424Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求">需求</h2><p>从人类的角度看，无非有两种情况：要某功能和不要某功能。在代码层面上则是：</p><ul><li><p>改变程序执行路径。</p></li><li><p>跳过部分代码。</p></li></ul><h2 id="分析">分析</h2><p>如果您不要某个功能，那就是找到这功能的调用指令，把它去掉。而想要某个功能，则有两种基本的做法：</p><ol><li><p>无视原条件，修改后续的条件跳转指令，强行跳到需要的功能代码；</p></li><li><p>改变条件本身，达成此功能需要的条件。</p></li></ol><p>下面用 C++ 代码解释，假设原始代码如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">bool</span> flag = Condition();</span><br><span class="line"><span class="keyword">if</span> (flag) &#123;</span><br><span class="line">    Wanted();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果正常情况下 Condition 返回 false，而我们想 Wanted 函数被调用，那么，方法 1 是将代码改为：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">bool</span> flag = Condition();</span><br><span class="line">Wanted();</span><br></pre></td></tr></table></figure><p>而方法 2 则是改为：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">if</span> (flag) &#123;</span><br><span class="line">    Wanted();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当然，还有两种方法一起用，那就是改为：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Wanted();</span><br></pre></td></tr></table></figure><h2 id="实现">实现</h2><p>具体实现主要使用 <code>jmp</code> 和 <code>nop</code>，更复杂的场景可能需要配合其它指令，请自行领悟。</p><h3 id="1-jz-jnz-改为-jmp">1. jz/jnz 改为 jmp</h3><p>最简单的一种情况是：跳转地址为 1 字节的相对位移，这种直接把跳转指令改为 <code>jmp</code> 即可，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">X: jz Y</span><br></pre></td></tr></table></figure><p>需要改为：<code>jmp Y</code>，只需：<code>eb X eb</code> 即可。</p><p>如果跳转地址为 4 字节的相对位移，则 <code>jz</code>/<code>jnz</code> 有 2 字节，而 <code>jmp</code> 只有 1 字节，所以需要先 nop 掉第一字节：<code>eb X 90 e9</code>。这种方法无需调整后面的地址，另外还可以不用 <code>nop</code>，但需要调整地址：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">X: jmp Y+1</span><br></pre></td></tr></table></figure><p>因为指令变短了 1 字节，相对位移就更远 1 字节，这种改法纯属蛋疼，严重不建议采用。</p><h3 id="2-nop-掉-call-指令">2. nop 掉 call 指令</h3><p>这种方法的基本操作极其简单，只需要 eb 若干个 90。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">X: call Y</span><br></pre></td></tr></table></figure><p>只要先查看 X 地址的这条指令有几个字节，再 eb X 后面跟几个 90 即可。</p><p>但有些情况也比较复杂，比如一个 x86 的 __stdcall，单独把 call 指令 nop 掉，会导致栈失衡（短期看不出任何异常），所以需要把前面的 push 也 nop 掉。__cdecl 和 __fastcall 不用，所以需要先判断一个 call 是不是 __stdcall。em，还是 x64 省事。</p><h2 id="最简单的例子">最简单的例子</h2><p>正常情况下，按下 <code>winver</code> 界面上的“确定”按钮可以退出，我们来把它无效掉！</p><p><img src="/images/2023/20230915-winver.png" alt="winver"></p><ol><li><p>首先，推测按下“确定”按钮后，是调用 EndDialog 来退出，所以对它下断点：<code>bp USER32!EndDialog</code>。</p></li><li><p>发现 USER32!EndDialog 确实能断，<code>gu</code> 使它返回到调用处，发现是 SHELL32!AboutDlgProc+0xea。</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">0:000&gt; ub SHELL32!AboutDlgProc+0xea</span><br><span class="line">SHELL32!AboutDlgProc+0xca:</span><br><span class="line">00007fff&#96;6d218f3a 895f18          mov     dword ptr [rdi+18h],ebx</span><br><span class="line">00007fff&#96;6d218f3d 488bce          mov     rcx,rsi</span><br><span class="line">00007fff&#96;6d218f40 89473c          mov     dword ptr [rdi+3Ch],eax</span><br><span class="line">00007fff&#96;6d218f43 e84c6e0000      call    SHELL32!_ApplyLayout (00007fff&#96;6d21fd94)</span><br><span class="line">00007fff&#96;6d218f48 e9d2000000      jmp     SHELL32!AboutDlgProc+0x1af (00007fff&#96;6d21901f)</span><br><span class="line">00007fff&#96;6d218f4d 488bd5          mov     rdx,rbp</span><br><span class="line">00007fff&#96;6d218f50 488bce          mov     rcx,rsi</span><br><span class="line">00007fff&#96;6d218f53 48ff15166f3700  call    qword ptr [SHELL32!_imp_EndDialog (00007fff&#96;6d58fe70)]</span><br></pre></td></tr></table></figure><p>地址 00007fff`6d218f53 处的 call 指令有 7 字节，所以它本身的地址是 SHELL32!AboutDlgProc+0xea-7，即 SHELL32!AboutDlgProc+0xe3。</p><ol start="3"><li>重新运行，开始 nop：<code>eb SHELL32!AboutDlgProc+0xe3 90 90 90 90 90 90 90</code>，此时再继续运行后，即可得到一个无法按“确定”关闭的对话框。</li></ol><p>注意：这样改后，同时标题栏的“关闭”按钮也无法关闭了，所以 <code>winver</code> 已经无法在界面上退出，需要用任务管理器关闭！</p>]]></content>
    
    
    <summary type="html">Jump over it, or nop it!</summary>
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="windows" scheme="https://blog.umu618.com/tags/windows/"/>
    
    <category term="debug" scheme="https://blog.umu618.com/tags/debug/"/>
    
    <category term="reverse-engineering" scheme="https://blog.umu618.com/tags/reverse-engineering/"/>
    
  </entry>
  
  <entry>
    <title>文本文件加不加 BOM？</title>
    <link href="https://blog.umu618.com/2024/03/05/umutech-bom/"/>
    <id>https://blog.umu618.com/2024/03/05/umutech-bom/</id>
    <published>2024-03-05T15:31:07.000Z</published>
    <updated>2024-03-05T16:19:39.666Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题">问题</h2><p>文本文件加 BOM 有何好处？有何坏处？到底加不加？</p><h2 id="说法">说法</h2><ol><li><p>UTF-8 不需要 BOM，不含 BOM 的 UTF-8 才是标准形式，尽管 Unicode 标准允许在 UTF-8 中使用 BOM。</p></li><li><p>文本文件带 BOM 不是个标准的做法，而且可能会导致某些 reader 或者编辑器解析出错，所以一般不推荐文本文件去携带 BOM。</p></li></ol><h2 id="分析">分析</h2><p>人们写文本文件肯定有不同目的，所以，加和不加可能分别适用于不同目的，不能一概地认为哪种更好。</p><p>更聪明的做法是分类对待，可以根据以下基本原则：</p><ul><li><p>在有结构的文件里，不需要 BOM。</p></li><li><p>在没有结构的文本文件里，最好有 BOM（见下面“兼容问题”）。</p></li></ul><p>举例 1：.html, .xml 等文件有结构，不需要。</p><p>举例 2：.txt 没有结构，如果不加 BOM，软件需要自己判断，很可能判断失误出现乱码，或者为了正确判断付出巨大代价。</p><p>举例 3：带 shebang line 的文件，有结构，如果加了 BOM，会使弱鸡 Shell 不认识而出错。</p><p>举例 4：.cpp, .hpp，没有结构，里面如果没有中文、法语等 ASCII 码大于 127 的字符，加不加都无所谓，如果带中文，哪怕是注释，建议 UTF-8 with BOM。</p><p><s>毕竟稣有 20 几台电脑，涵盖 Windows、macOS、Linux 系统和 x86、x64、armhf、arm64 架构，没有 BOM 怎么愉快地写 C++？</s></p><h2 id="兼容问题">兼容问题</h2><p>本节，只针对没有结构的文本文件。</p><p>遇到阅读器/编辑器不支持的情况，那就是不加好，但并不是绝对，因为这其实还是个需求问题。</p><p>比如说，稣一直用 Windows 的记事本写一些备忘，如果汉字局多，就选择 UTF-16 LE with BOM，代码居多则用 UTF-8 with BOM。这些文件换用其它软件打开也许会乱码，但有何关系呢？他们可以写出不支持 BOM 的擸𢶍软件，稣也可以不用呀！稣在 macOS、Linux 上都可以拿支持 BOM 的软件（比如 VSCode）打开这些文件。</p><p>再考虑一种死翘翘的情况：您在用 B 语言写代码，但它的编译器不支持 BOM，那么显然您就不应该加了。</p><p>所以，当您的文本文件的主程序不支持 BOM 时，不应该加，支持的情况，还是加的好。</p>]]></content>
    
    
    <summary type="html">掐鸡说要加！</summary>
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="coding-style" scheme="https://blog.umu618.com/tags/coding-style/"/>
    
  </entry>
  
  <entry>
    <title>稣究竟是啥？2</title>
    <link href="https://blog.umu618.com/2024/03/02/su-2/"/>
    <id>https://blog.umu618.com/2024/03/02/su-2/</id>
    <published>2024-03-02T07:26:32.000Z</published>
    <updated>2024-04-13T14:38:27.520Z</updated>
    
    <content type="html"><![CDATA[<p>没想到《<a href="/2023/04/10/su/">稣究竟是啥？</a>》居然写成系列了！</p><p>稣，全称焓熵㷻㶲甦督稣，英文名 Enthalpy Extropy  Anergy Exergy sudo su。在八哥宇宙里是天道之下唯一的观测者，拥有无数从未用过也不想用的特权，比如“一言不合擦天地”。</p><p>天道其实是八哥宇宙里的一个无边的程序。由于“天道之下皆为蝼蚁”，所以稣也是蝼蚁，和凡人并无不同，简直一模一样。</p><p>而在视界，稣因为创造八哥宇宙，被人类误以为走火入魔，也被称为稣。被叫多了叫久了，自然也开始自称稣。然而，人们只知道稣，却不知过去稣、现在稣和未来稣，其实都有不同的名字，分别为甦、督、稣。其中“督”单独出现时，是个通假字，读作 su1；而在专有名词“甦督稣”里读作 du4；只有在时间观测者“宙督公”里，才读作 du1。</p><p>众所周知，现代 AI 技术十分强悍。很多人在害怕失业，甚至已经失业。以 Sora 为例，很多影视业从业者都感到前所未有的恐惧，比如特效、布景、灯光、摄影、建模等工种都面临降权威胁。</p><p>那么，稣为何不怕呢？很简单，因为稣一直是文字创造和编辑者，从根源上凌驾目前的生成式 AI。并且，在延展性上，稣也有很强的护城河——当今视界的一切技术都尚未触及识界。不管文字、语音、图片还是视频，这些信息展现方式，在识界面前简直就是擸𢶍（乐射）。识界的信息都是直接在脑海里展现的，而且识界是由全宇宙的生灵的潜意识连接形成的，并非单独某个人的局域。</p><p>进一亿步说，即使脑机接口，也不能威胁识界。首先，并非每个人都能显式地进入识界。其次，即使将来科技破译了稣进入识界的方式，使得全地球人都能通过技术手段进入，那也只是地球人的狂欢而已，地球人还不得不面对识界外星人。最后，识界通十界，只有十界才是灵魂真正的自由之界。</p>]]></content>
    
    
    <summary type="html">掐鸡都认识稣</summary>
    
    
    
    <category term="U墨" scheme="https://blog.umu618.com/categories/U%E5%A2%A8/"/>
    
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
    <category term="鲸神魂裂" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%AD%82%E8%A3%82/"/>
    
    <category term="耶乎知稣" scheme="https://blog.umu618.com/tags/%E8%80%B6%E4%B9%8E%E7%9F%A5%E7%A8%A3/"/>
    
    <category term="鹏风" scheme="https://blog.umu618.com/tags/%E9%B9%8F%E9%A3%8E/"/>
    
  </entry>
  
  <entry>
    <title>蛇不怕雄黄</title>
    <link href="https://blog.umu618.com/2024/02/14/snakes-are-not-afraid-of-realgar/"/>
    <id>https://blog.umu618.com/2024/02/14/snakes-are-not-afraid-of-realgar/</id>
    <published>2024-02-14T08:20:32.000Z</published>
    <updated>2024-03-02T10:48:20.181Z</updated>
    
    <content type="html"><![CDATA[<p>《抱孙子》记载：东晋时，南粤有民以雄黄驱蛇，见奇效，后世人曰蛇怕雄黄。</p><p>蛇：我怕的是广东人，不是他们拿的雄黄！</p>]]></content>
    
    
    <summary type="html">掐鸡都说蛇不怕雄黄</summary>
    
    
    
    <category term="U墨" scheme="https://blog.umu618.com/categories/U%E5%A2%A8/"/>
    
    
    <category term="怪悟" scheme="https://blog.umu618.com/tags/%E6%80%AA%E6%82%9F/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·沉海泥龙睡千秋</title>
    <link href="https://blog.umu618.com/2024/02/10/reconstructionism-poet-sleeper/"/>
    <id>https://blog.umu618.com/2024/02/10/reconstructionism-poet-sleeper/</id>
    <published>2024-02-10T08:08:00.000Z</published>
    <updated>2024-03-02T10:28:14.541Z</updated>
    
    <content type="html"><![CDATA[<p>《诗盗·沉海泥龙睡千秋》：题说众生铭八苦，欲浪乾坤钱却无。挨踢岁月何处寄，观宇督宙忘尘稣。</p><h2 id="注解">注解</h2><p>改自霹雳角色“游海迷迭离人公子”的诗号：</p><blockquote><p>题说众世铭八苦，<br>玉浪孤灯引夙心。<br>岁月山河何处寄，<br>游仙掠海忘离人。</p></blockquote>]]></content>
    
    
    <summary type="html">稣在教 ChatGPT 写诗</summary>
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
    <category term="泥巴娃" scheme="https://blog.umu618.com/tags/%E6%B3%A5%E5%B7%B4%E5%A8%83/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
    <category term="耶乎知稣" scheme="https://blog.umu618.com/tags/%E8%80%B6%E4%B9%8E%E7%9F%A5%E7%A8%A3/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神后传【10】</title>
    <link href="https://blog.umu618.com/2024/02/03/god-of-debug-sequel-10/"/>
    <id>https://blog.umu618.com/2024/02/03/god-of-debug-sequel-10/</id>
    <published>2024-02-03T04:53:16.000Z</published>
    <updated>2024-02-03T09:48:56.508Z</updated>
    
    <content type="html"><![CDATA[<h2 id="高中宿舍">高中宿舍</h2><p>晚上，稣要以穿墙术潜入传说中的鬼楼。</p><p>宿舍楼的左半边住男生，右半边住女生，但男生这边的六楼是有人住的，而女生那边的六楼已经荒废一年多。</p><p>稣曾经仰慕的学姐就在女生宿舍六楼离奇地香消玉殒，稣一定要探查个明白，并为学姐报仇。这点，学妹也是真心支持的，因为这个穿墙术正是学妹提供的。</p><p>宿舍是个 S 型建筑，S 中间有铁门，分割男女两边。男女两边走廊互相平行，但不在同一条直线上，中间的铁门一直是锁着的，这样男女两边都看不见各自那边的走廊。不过稣用穿墙术从六楼中间的铁门穿过去，就能轻易地来到女六楼。</p><p>进入之后，才亲眼见证另一边的楼梯入口也特地封起来，所以女生确实也是无法进入六楼的。眼前的六楼简直是另一个世界，出乎意料的破败，走廊上很多灰泥、玻璃渣。稣小心躲避，进入 614，里面的床都被搬走了，地上有好几个打破的热水瓶和一些餐具。</p><p>曾经有一个流言：有一天半夜每个女六楼的房间里都有几个女生被“怼”附身，拿起热水瓶往其她女生脸上倒，最后还互相厮杀，死了大半，剩下的全疯了。稣是相信科学的人，怎么可能相信这种怼话？这大概就是一种集体催眠罢了，但究竟是谁有这么大本事呢？难道是医务室的心理医生？</p><p>思考时，稣却看到窗户的玻璃上贴着一张照片。靠近一看，拍的居然是食堂的厨房。怎么会有如此奇怪的照片呢？稣想到大家都喜欢在照片背后写备注，于是翻过来，竟看到学姐的字迹，写着：食堂不干净！稣大吃一惊，不干净是这个意思，还是那个意思？难不成真有怼？不可能，一定是在做梦！</p><p>啊！稣竟然想不起学姐叫啥名字？只记得学姐的学姐叫桂圆……而学姐好像叫什么香……她还有个舍友姓许，经常打扮得很拉风的，也一样记不起名字了！</p><h2 id="破庙">破庙</h2><p>吓醒。</p><p>走了一天，还好有这个破庙能休息一下，但是环境惨不忍睹，难怪做起噩梦。是不是盖的这些稻草生菇了，又真菌中毒？不管了，天还没亮，继续睡。</p><h2 id="高中宿舍-2">高中宿舍</h2><p>嗯？稣又回来了！</p><p>在宿舍的床上醒来，就看到上铺的一只手伸出床沿，只是颜色不太对！这手都枯成深色了，吓死人啊！</p><p>呵呵，其他舍友都一样……全都成干尸了。要说稣还是因为信仰科学而吓不倒，甚至高中生涯的目标就是考上吓大。果断出门看看其他人，竟然唱起空城计？</p><p>澡堂厕所都没活人，其它房门都反锁的无法进入查探情况。宿舍门口的开水房也没人打水。</p><p>女生那边的门也是关着的，说明她们都没起来过，没人开门出来。</p><p>走去教室，一样空无一人。这究竟是怎么回事？</p><p>突然，稣远远地看到操场居然有个高个子自己一个人在踢足球！稣立刻边跑过去边对着他喊：同学，你知道学校怎么了吗？</p><p>那位同学把球踢向稣，稣身体向后一仰，本想用胸口停球，不料足球靠近后稣发现它黑乎乎的，赶紧躲闪。</p><p>黄言：小开？你刚刚是在模仿尼欧躲子弹吗？</p><p>圣小开：言兄，原来是你啊！</p><p>黄言：你也是怼吗？</p><p>圣小开：什么怼？怎么大家都变成干尸了？</p><p>黄言：哦，果然你宿舍也一样。全挂了！</p><p>圣小开：你是说，咱俩也都挂了？现在是怼？</p><p>黄言：是的。</p><p>圣小开：不可能，其他人怎么没有变成怼？而且稣起床后，看过自己的床上，并没有尸体。</p><p>黄言：我床上有自己的尸体。</p><p>圣小开：你看见了？</p><p>黄言：我可以带你去看看。</p><p>圣小开：不了。怕怕。你知道是啥导致的吗？</p><p>黄言：可能是中子弹，或者声纳武器，也可能是生化武器。</p><p>圣小开：开啥玩笑呢？这和平年代的，谁会在学校扔武器？</p><p>黄言：并不是只有学校哦，我出去看过了，整个城都是这样。你还记得我写的小说吗？</p><p>圣小开：你又想说你化身的主角在山洞里发现希特勒留下的财富？</p><p>黄言：这不是重点，你记得看完那小说后，你说了啥？</p><p>圣小开：稣很担心有生之年会遇到第三次视觉大战。是这句？</p><p>黄言：是的。</p><p>圣小开：稣担心的往往会变成现实……</p><p>黄言：没错！自从你跳楼后，视界就走向毁灭的边缘。</p><p>圣小开：稣不是又复活了吗？</p><p>黄言：我听说你被送医后又活了过来，但再也没见过你，料想一定是假的，哪有人从六楼跳下来还不死的？</p><p>圣小开：呃！说了你也不信，其实这个视界真的是虚拟的，它们想从稣的意识深处拿到某种机密，所以不断复活稣。</p><p>黄言：我信你。个怼。你能有啥机密？说出来吓吓我！</p><p>圣小开：呵呵，你以为变出个熟人，稣就放松警惕了吗？稣还能吓醒。</p><p>黄言：哈哈，你去未来看看吧！</p><h2 id="2011-01-24-软件园非正常人类研究中心">2011-01-24 软件园非正常人类研究中心</h2><p>又是一个早上醒来，原来稣在软件园非正常人类研究中心上班。嗯，昨天一切都还正常，也不知道那个昨天是不是被植入的记忆。总之今天出现了一系列怪异的事情，去买早点没遇到半个人，当然整个的人也没有，到了早餐店才发现没开门。稣想：算了，公司还有点东西可以撑一下肚子。</p><p>来到公司才发现更怪异的事，人倒是有，但都是骷髅。真佩服自己当时的淡定，居然没有大呼小叫神马的！不过当时马上想到世界末日，于是看看手机，时间是 2011 年，还早呢。好奇地打电话给家里，他们都表示世界没有抛出任何异常。然后又想：惨了，不会是只有软件园发生灾难吧！稣的弟弟也在软件园，马上打电话给他，他说公司送他们项目组的几个去北京玩了，不知道软件园发生了神马！</p><p>接着，发现脑子里还有一个人，可能又是被植入的女朋友，吧？就硬着头皮，往那处走过去，人不在位置，不过那屋子里的其他位置一样坐着几个骷髅，心想好像稣在意的人都没事，真是不幸中的万幸。</p><p>为了确保万无一失，稣给她打电话，没人接，不过不接不一定就是挂了，但是稣还不放心，到车库去看了一下，熟悉的车牌号，跑过去，震惊了……车里一个骷髅……车门打不开……过了一会儿，稣马上就冷静了，发现那个骷髅比她大了好几个尺寸，sigh~应该不是！</p><p>这时有人叫稣，一转身，居然是黄言！</p><p>黄言：都看见了？这视界总是要走向毁灭，躲得了初一，躲不过十五。</p><p>圣小开：稣一定要阻止战争！吓醒。</p>]]></content>
    
    
    <summary type="html">这不是穿越，这不是穿越。</summary>
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="鲸神链" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%93%BE/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·大禹</title>
    <link href="https://blog.umu618.com/2024/01/15/reconstructionism-poet-yu/"/>
    <id>https://blog.umu618.com/2024/01/15/reconstructionism-poet-yu/</id>
    <published>2024-01-15T13:40:00.000Z</published>
    <updated>2024-02-03T09:33:12.102Z</updated>
    
    <content type="html"><![CDATA[<p>《诗盗·大禹》：治水为命顺逆同，浩然莫测鬼神工。三过涂山生悟空，定海神针串鱼龙。</p><h2 id="注解">注解</h2><p>改自霹雳角色“渊渟无迹静涛君”的诗号：</p><blockquote><p>知水为命顺逆同，<br>浩然莫测深浅中。<br>无波沧海掩汹涌，<br>渊渟不动现鱼龙。</p></blockquote>]]></content>
    
    
    <summary type="html">稣在教 ChatGPT 写诗</summary>
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
  </entry>
  
  <entry>
    <title>指针判空</title>
    <link href="https://blog.umu618.com/2024/01/06/umutech-if-a-pointer-is-null/"/>
    <id>https://blog.umu618.com/2024/01/06/umutech-if-a-pointer-is-null/</id>
    <published>2024-01-06T06:48:08.000Z</published>
    <updated>2024-01-06T08:15:23.867Z</updated>
    
    <content type="html"><![CDATA[<h2 id="引子">引子</h2><p>C 和 C++ 都有一些很基本的语句出现不同派系的写法，比如 * 靠左还是靠右，抑或居中？这种还是排版问题，并不影响有效字符数，但下面这个就直接影响有效字符数了！</p><p>《对于选择恐惧症患者来说，指针判空究竟要怎么写才不纠结？》</p><h2 id="问题">问题</h2><p>指针判空有两大类写法：</p><ul><li><p>if (p) {}</p></li><li><p>if (nullptr != p) {}</p></li></ul><p>后者被挺多人推荐的，比如林锐的《<a href="https://vrlab.org.cn/~zhuq/download/%E9%AB%98%E8%B4%A8%E9%87%8F%E7%BC%96%E7%A8%8B%E6%8C%87%E5%8D%97.pdf">高质量C++/C编程指南</a>》。</p><p><img src="/images/2024/20240106-linrui.png" alt="高质量C++/C编程指南"></p><p>搜一下，能发现不少网友都挺纠结。<s>这么基础的问题，如果不交代清楚，就是给 C++ 黑很好的攻击理由。</s></p><h2 id="故事">故事</h2><p>稣刚大学毕业时，是使用 C，并不屑 C++ 的，当时看了不少代码，就是直接 <code>if (p)</code> 和 <code>if (!p)</code>，所以也坚持这种写法，并认为这样写比较短，对手指好，比较养生。</p><p>后来 C++17 出现，稣就坚定地改用 C++，于是也更多遵守 C++ 类型安全的原则，开始认为 <code>if (p)</code> 和 <code>if (!p)</code> 这种写法隐含类型转换，不太好。记得 2017 年以前，其实就看过 <a href="https://google.github.io/styleguide/cppguide.html">Google C++ Style Guide</a>，里面也曾经建议写成 <code>if (nullptr != p)</code> 和 <code>if (nullptr == p)</code>。</p><p>现在，再去看 <a href="https://google.github.io/styleguide/cppguide.html">Google C++ Style Guide</a>，已经没有这样的建议。</p><h2 id="解决">解决</h2><p><a href="https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#c-core-guidelines">C++ Core Guidelines</a> 中有一条：<a href="https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Res-if">ES.87: Don’t add redundant == or != to conditions</a>，它的理由是：</p><blockquote><p><strong>Reason</strong> Doing so avoids verbosity and eliminates some opportunities for mistakes. Helps make style consistent and conventional.</p></blockquote><p>if、while、for 的条件语句本身就是在选择 true 或 false，对于指针来说，会自动与 nullptr 比较。通常来说，<code>if (p)</code> 可以读作 “if p is valid”。</p><p>接着，还有一个例子：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">auto</span> pc = <span class="keyword">dynamic_cast</span>&lt;Circle&gt;(ps)) &#123; ... &#125; <span class="comment">// execute if ps points to a kind of Circle, good</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">auto</span> pc = <span class="keyword">dynamic_cast</span>&lt;Circle&gt;(ps); pc != <span class="literal">nullptr</span>) &#123; ... &#125; <span class="comment">// not recommended</span></span><br></pre></td></tr></table></figure><p>同样是推荐更简短的写法。但这个例子却有人提出疑问：推荐的写法不会被怀疑是 == 少写了一个 = 吗？</p><p>还真不会！这个语句其实不是经典 C++ 的语法，而是 C++17 的 init-statement 语法，这里的 auto 是类型，说明 = 不可能是 == 错误地少写成 =。</p><p>对于部分 C 程序员和“经典 C++”程序员会把赋值语句写在 if 条件里的做法，建议是改为分开写。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// p is defined before</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (p = func()) &#123; ... &#125; <span class="comment">// bad</span></span><br><span class="line"></span><br><span class="line">p = func();</span><br><span class="line"><span class="keyword">if</span> (p) &#123; ... &#125; <span class="comment">// good</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// p is used after</span></span><br></pre></td></tr></table></figure><p>稣会在新工程里坚持使用 <a href="https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#c-core-guidelines">C++ Core Guidelines</a> 的建议，但也不反对另一种写法，只要不混合使用。<s>允许有不同派系，但最好别精神分裂。</s></p>]]></content>
    
    
    <summary type="html">ChatGPT 也认为少敲几个键比较养生！</summary>
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="cpp" scheme="https://blog.umu618.com/tags/cpp/"/>
    
    <category term="coding-style" scheme="https://blog.umu618.com/tags/coding-style/"/>
    
  </entry>
  
  <entry>
    <title>BoringSSL? LibreSSL? OpenSSL!</title>
    <link href="https://blog.umu618.com/2023/12/24/umutech-why-openssl/"/>
    <id>https://blog.umu618.com/2023/12/24/umutech-why-openssl/</id>
    <published>2023-12-23T16:01:26.000Z</published>
    <updated>2024-01-01T12:08:05.779Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题">问题</h2><ul><li><p>Windows 自带 OpenSSH 用的是 LibreSSL。要不要也用一下？甚至，直接动态链接到系统自带的 LibreSSL 的 dll，减少 exe 体积！</p></li><li><p>Chrome 用的是 BoringSSL，要不要……折腾一下？</p></li></ul><h2 id="尝试">尝试</h2><p>稣使用 vcpkg，安装几个库，还不是手到擒来？</p><p>结果……连装都不让装！这是 LibreSSL 的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Building libressl:x64-windows...</span><br><span class="line">CMake Warning at ports&#x2F;libressl&#x2F;portfile.cmake:2 (message):</span><br><span class="line">  Can&#39;t build libressl if openssl is installed.  Please remove openssl, and</span><br><span class="line">  try install libressl again if you need it.  Build will continue since</span><br><span class="line">  libressl is a subset of openssl</span><br></pre></td></tr></table></figure><p>这是 BoringSSL 的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Building boringssl:x64-windows...</span><br><span class="line">CMake Error at ports&#x2F;boringssl&#x2F;portfile.cmake:2 (message):</span><br><span class="line">  Can&#39;t build BoringSSL if OpenSSL is installed.  Please remove OpenSSL, and</span><br><span class="line">  try to install BoringSSL again if you need it.  Build will continue since</span><br><span class="line">  BoringSSL is a drop-in replacement for OpenSSL</span><br></pre></td></tr></table></figure><p>在忍痛 <code>vcpkg remove openssl</code> 后，陷入一阵思考——稣主要通过 Boost.Asio 使用 SSL，所以问题转换为：Boost.Asio 对这几个 SSL 库支持得如何？其中，OpenSSL 是使用多年没有任何问题的，只需要调研其它两个！</p><p>先试试 LibreSSL，毕竟是 OpenBSD 的，而且微软也用它。拿 <a href="https://github.com/UMU618/ClipboardSync">ClipboardSync</a> 代码编译，发现顺利通过！但是运行时抛了异常，说不支持 TLS 1.3……遂查阅<a href="https://ftp.openbsd.org/pub/OpenBSD/LibreSSL/libressl-3.2.0-relnotes.txt">官网</a>，说是从 3.2.0 就支持！那就是 Boost.Asio 不对了，果断给它提 <a href="https://github.com/chriskohlhoff/asio/issues/85#issuecomment-1850290442">issue</a>。</p><p>接着尝试 BoringSSL，毕竟是 Google 的，号称重视安全，而且有 Chrome 这个大型流行软件做背书！然而很打脸的是：它居然不支持 SM3！稣当年特地选择用国密标准里的 SM3 做 Hash 算法，就是因为爱国！不支持国密这点岂能忍？立刻 <code>vcpkg remove boringssl</code>。</p><h2 id="结论">结论</h2><p>Boost.Asio 和稣联合推荐 OpenSSL 为唯一好用又爱国的 SSL 库。</p>]]></content>
    
    
    <summary type="html">掐鸡说开才是对的！稣就是开。</summary>
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="boost" scheme="https://blog.umu618.com/tags/boost/"/>
    
    <category term="cryptology" scheme="https://blog.umu618.com/tags/cryptology/"/>
    
  </entry>
  
  <entry>
    <title>Boost【9】Boost.Beast</title>
    <link href="https://blog.umu618.com/2023/11/12/umutech-boost-9-beast/"/>
    <id>https://blog.umu618.com/2023/11/12/umutech-boost-9-beast/</id>
    <published>2023-11-12T15:51:31.000Z</published>
    <updated>2023-11-12T16:49:13.814Z</updated>
    
    <content type="html"><![CDATA[<h2 id="介绍">介绍</h2><p>Boost.Beast 是一个 HTTP/WebSocket 库。本文只讨论 WebSocket。</p><h2 id="相关经验">相关经验</h2><p>UMU 先是用过 WebSocket++（websocketpp），又用过 libwebsockets，再用的 Boost.Beast，之后就一直使用 Boost.Beast。</p><ul><li><p>2018 年，参与 EOS 开发时，它是用 WebSocket++ 的，跟着学习了一阵子。</p></li><li><p>2020 年，在金山云时，内部版云游戏用 libwebsockets，跟着学习了一阵子。</p></li><li><p>做开源版云游戏——<a href="https://github.com/ksyun-kenc/liuguang">鎏光云游戏引擎</a>时，特地学习并使用 Boost.Beast。因为公司其实是要求和内部版有一些差异的，正好之前一直用 Boost.Asio，对它的熟悉可以快速套用在 Boost.Beast，于是果断切到 Boost.Beast。</p></li></ul><h2 id="什么场景应该使用-WebSocket？">什么场景应该使用 WebSocket？</h2><p>如果您原本使用裸 TCP，您应该知道 TCP 的流式传输，导致您需要自己分包，即界定一个“消息”的边界。鎏光本来设计为同时支持裸 TCP 和 WebSocket 的，所以还保留着处理分包的代码：</p><p><a href="https://github.com/UMU618/liuguang/blob/97f558275571b9be14893e4b55703b4b65cdbda5/src/cge/cge/game_session.cpp#L232">https://github.com/UMU618/liuguang/blob/97f558275571b9be14893e4b55703b4b65cdbda5/src/cge/cge/game_session.cpp#L232</a></p><p>这对 WebSocket 其实并不需要，它的发送和接受已经是都是“消息”，带着长度的。所以如果您原来用 Asio 写 C/S 程序，把它们改为 Beast，是很容易的，而且代码量会缩减不少。</p><p>对于工具性的 C/S 程序，建议下次直接用 Beast 写更省事。</p><p>另一种适用场景是需要支持浏览器，即同时支持 C/S 和 B/S 模型。</p><h2 id="Boost-Beast-经验">Boost.Beast 经验</h2><ol><li><p>text 和 binary 模式需要区分清楚，如果用于发送音视频，显然应该使用 binary 模式。</p></li><li><p>stream 的默认接收长度是 16MiB，如果不够可以改长点，0 表示最大的 std::uint64_t。</p></li></ol><p>参考：boost/beast/websocket/stream.hpp</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** Set the maximum incoming message size option.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    Sets the largest permissible incoming message size. Message</span></span><br><span class="line"><span class="comment">    frame fields indicating a size that would bring the total</span></span><br><span class="line"><span class="comment">    message size over this limit will cause a protocol failure.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    The default setting is 16 megabytes. A value of zero indicates</span></span><br><span class="line"><span class="comment">    a limit of the maximum value of a `std::uint64_t`.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    @par Example</span></span><br><span class="line"><span class="comment">    Setting the maximum read message size.</span></span><br><span class="line"><span class="comment">    @code</span></span><br><span class="line"><span class="comment">        ws.read_message_max(65536);</span></span><br><span class="line"><span class="comment">    @endcode</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    @param amount The limit on the size of incoming messages.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">void</span></span><br><span class="line">read_message_max(<span class="built_in">std</span>::<span class="keyword">size_t</span> amount);</span><br><span class="line"></span><br><span class="line"><span class="comment">/// Returns the maximum incoming message size setting.</span></span><br><span class="line"><span class="built_in">std</span>::<span class="keyword">size_t</span></span><br><span class="line">read_message_max() <span class="keyword">const</span>;</span><br></pre></td></tr></table></figure><ol start="3"><li>默认开了 deflate 压缩。UMU 在开发 <a href="https://github.com/UMU618/ClipboardSync">ClipboardSync</a> 时，曾经考虑给剪切板数据压缩，对比了 lz4 和 zstd，很是犹豫，后来发现 Beast 默认开了 deflate 压缩，于是放弃自己用 lz4 或 zstd 压缩。</li></ol>]]></content>
    
    
    <summary type="html">稣教 ChatGPT 用 Boost！</summary>
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="cpp" scheme="https://blog.umu618.com/tags/cpp/"/>
    
    <category term="boost" scheme="https://blog.umu618.com/tags/boost/"/>
    
  </entry>
  
  <entry>
    <title>自动添加 IP 黑名单到防火墙</title>
    <link href="https://blog.umu618.com/2023/11/02/umutech-add-ip-blacklist-to-firewall/"/>
    <id>https://blog.umu618.com/2023/11/02/umutech-add-ip-blacklist-to-firewall/</id>
    <published>2023-11-02T14:59:10.000Z</published>
    <updated>2024-05-25T06:42:59.645Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题">问题</h2><p>前文《<a href="/2023/10/29/umutech-prevent-remote-desktop-password-attacks/">防爆破远程桌面密码</a>》提到可以用 Powershell 实现自动加 IP 黑名单到防火墙，这个坑还是得填，毕竟爆破依然在持续……</p><h2 id="分析">分析</h2><p>核心点：</p><ul><li><p>IP 黑名单会持续新增，过去已经加入防火墙的名单也需要保存。所以应该把新增 IP 和防火墙已有 IP 求并集。</p></li><li><p>如果名单没变，不应该覆盖防火墙规则。</p></li></ul><h2 id="代码">代码</h2><p>见 Github 仓库：</p><p><a href="https://github.com/UMU618/scripts/blob/master/pwsh/add-ip-blacklist-to-firewall.ps1">https://github.com/UMU618/scripts/blob/master/pwsh/add-ip-blacklist-to-firewall.ps1</a></p>]]></content>
    
    
    <summary type="html">ChatGPT 说：网络太危险了！</summary>
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="windows" scheme="https://blog.umu618.com/tags/windows/"/>
    
    <category term="ops" scheme="https://blog.umu618.com/tags/ops/"/>
    
    <category term="security" scheme="https://blog.umu618.com/tags/security/"/>
    
    <category term="powershell" scheme="https://blog.umu618.com/tags/powershell/"/>
    
  </entry>
  
  <entry>
    <title>防爆破远程桌面密码</title>
    <link href="https://blog.umu618.com/2023/10/29/umutech-prevent-remote-desktop-password-attacks/"/>
    <id>https://blog.umu618.com/2023/10/29/umutech-prevent-remote-desktop-password-attacks/</id>
    <published>2023-10-28T18:16:00.000Z</published>
    <updated>2024-05-25T06:42:53.015Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题">问题</h2><p>面向公网开了个远程桌面端口，无论用多少号端口，都会被爆破！</p><blockquote><p>虽然稣的密码很安全，几乎爆破不了，但会在系统日志里留下大量记录，实在很不雅观！</p></blockquote><h2 id="分析">分析</h2><p>改端口是没用的，因为只有 65535 个，只要机器 IP 被发现，扫描端口很快就能完成。</p><p>封 IP 是有用的，虽然爆破者（攻击者）有很多 IP，但一定是有限的，有多少封多少！</p><h2 id="解决">解决</h2><ol><li>从系统日志里分析爆破者 IP</li></ol><p>打算使用 PowerShell 7 来编写脚本，首先学习 <code>Get-WinEvent</code> 命令：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Get-Help</span> <span class="built_in">Get-WinEvent</span> <span class="literal">-Online</span></span><br></pre></td></tr></table></figure><p>日志的过滤条件可以用“事件查看器”来协助生成：</p><p><img src="/images/2023/20231029-winevent-ui.png" alt="WinEvent UI"><br><img src="/images/2023/20231029-winevent-xml.png" alt="WinEvent XML"></p><p>当然，以上全部 XML 是 -FilterXml 的参数，比较长，可以用 -FilterXPath 来简化，只需要中间一部分。</p><p>条件还可以再加上 LogonType，以缩小范围，其中 3 表示“网络登录”：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Get-WinEvent</span> <span class="literal">-LogName</span> <span class="string">&#x27;Security&#x27;</span> <span class="literal">-FilterXPath</span> <span class="string">&#x27;*[System[EventID=4625] and EventData[Data[@Name=&quot;LogonType&quot;]=3]]&#x27;</span> <span class="literal">-MaxEvents</span> <span class="number">1</span> | <span class="built_in">Format-List</span> Message</span><br></pre></td></tr></table></figure><p>以下是<a href="https://github.com/UMU618/scripts/blob/master/pwsh/list-logon-failed-ips.ps1">完整代码</a>，它会打印出 IP，和这个 IP 的登录失败次数：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ips</span> = <span class="selector-tag">@</span>&#123;&#125;</span><br><span class="line"><span class="built_in">Get-WinEvent</span> <span class="literal">-LogName</span> Security <span class="literal">-FilterXPath</span> <span class="string">&#x27;*[System[band(Keywords,4503599627370496)] and EventData[Data[@Name=&quot;LogonType&quot;]=3]]&#x27;</span> | %&#123;</span><br><span class="line">    <span class="variable">$xml</span> = [<span class="built_in">xml</span>]<span class="variable">$_</span>.toXml()</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$data</span> <span class="keyword">in</span> <span class="variable">$xml</span>.Event.EventData.Data) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$data</span>.Name <span class="operator">-eq</span> <span class="string">&#x27;IpAddress&#x27;</span>) &#123;</span><br><span class="line">            <span class="variable">$ip</span> = <span class="variable">$data</span>.<span class="string">&#x27;#text&#x27;</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$ips</span>.ContainsKey(<span class="variable">$ip</span>)) &#123;</span><br><span class="line">                ++<span class="variable">$ips</span>[<span class="variable">$ip</span>]</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$ips</span>.Add(<span class="variable">$ip</span>, <span class="number">1</span>)</span><br><span class="line">                <span class="string">&#x27;Fisrt find &#x27;</span> + <span class="variable">$ip</span> + <span class="string">&#x27; on &#x27;</span> + <span class="variable">$_</span>.TimeCreated</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Write-Output</span> <span class="string">&#x27;All IPs:&#x27;</span>, <span class="variable">$ips</span></span><br></pre></td></tr></table></figure><ol start="2"><li>把爆破者 IP 加入防火墙，阻止它们</li></ol><p>目前收集到这些：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">112.184.96.197</span><br><span class="line">118.45.92.239</span><br><span class="line">122.38.193.166</span><br><span class="line">138.199.21.245</span><br><span class="line">14.116.196.99</span><br><span class="line">14.49.207.162</span><br><span class="line">141.98.11.119</span><br><span class="line">141.98.11.58</span><br><span class="line">147.78.47.57</span><br><span class="line">148.113.4.245</span><br><span class="line">176.111.174.173</span><br><span class="line">176.111.174.174</span><br><span class="line">179.60.147.13</span><br><span class="line">182.180.92.224</span><br><span class="line">185.161.248.145</span><br><span class="line">188.250.64.50</span><br><span class="line">222.191.242.228</span><br><span class="line">45.143.201.62</span><br><span class="line">58.221.4.54</span><br><span class="line">58.33.52.84</span><br><span class="line">62.122.184.88</span><br><span class="line">67.159.237.58</span><br><span class="line">77.90.185.132</span><br><span class="line">78.128.114.18</span><br><span class="line">89.248.163.94</span><br><span class="line">89.248.163.95</span><br><span class="line">91.191.209.202</span><br><span class="line">91.240.118.187</span><br><span class="line">91.240.118.29</span><br></pre></td></tr></table></figure><p>打开 <code>wf.msc</code>，新建一个阻止型的防火墙策略，然后加入到“作用域”的“远程 IP 地址”里。</p><p><img src="/images/2023/20231029-firewall.png" alt="Firewall"></p><p>加防火墙也可以用 PowerShell 搞定，这次先偷个懒，下次再说吧！</p>]]></content>
    
    
    <summary type="html">ChatGPT 说：网络太危险了！</summary>
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="windows" scheme="https://blog.umu618.com/tags/windows/"/>
    
    <category term="ops" scheme="https://blog.umu618.com/tags/ops/"/>
    
    <category term="security" scheme="https://blog.umu618.com/tags/security/"/>
    
    <category term="powershell" scheme="https://blog.umu618.com/tags/powershell/"/>
    
  </entry>
  
  <entry>
    <title>函数名首字母用大写还是小写？</title>
    <link href="https://blog.umu618.com/2023/10/21/umutech-uppercase-or-not-function-name/"/>
    <id>https://blog.umu618.com/2023/10/21/umutech-uppercase-or-not-function-name/</id>
    <published>2023-10-21T07:14:07.000Z</published>
    <updated>2023-10-29T12:18:29.352Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题">问题</h2><p>不同编码规范对函数名的命名格式有不同要求，但主流有以下几类：</p><ul><li><p>PascalCase：比如 <a href="https://google.github.io/styleguide/cppguide.html#Function_Names">Google C++ Style Guide</a></p></li><li><p>camelCase：比如 <a href="https://llvm.org/docs/CodingStandards.html#name-types-functions-variables-and-enumerators-properly">LLVM Coding Standards</a></p></li><li><p>snake_case：比如 <a href="https://www.stroustrup.com/Programming/PPP-style.pdf">PPP Styple Guide</a>、<a href="https://www.kernel.org/doc/html/v4.15/translations/zh_CN/coding-style.html#id5">K&amp;R Style</a></p></li></ul><p>哪种适合 Windows 开发呢？</p><h2 id="分析">分析</h2><h3 id="1-PascalCase-的坑">1. PascalCase 的坑</h3><p>PascalCase 偶尔会遇到和 Win32 API 宏冲突的情况：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> umutech &#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">CreateWindow</span><span class="params">()</span> <span class="keyword">noexcept</span> </span>&#123;</span><br><span class="line">  MessageBox(<span class="literal">nullptr</span>, <span class="string">L&quot;For disassembling&quot;</span>, <span class="string">L&quot;CreateWindow&quot;</span>, MB_OK);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;  <span class="comment">// namespace umutech</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  umutech::CreateWindow();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上代码无法编译，因为 SDK 头文件里有这样的定义：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CreateWindowA(lpClassName, lpWindowName, dwStyle, x, y,\</span></span><br><span class="line">nWidth, nHeight, hWndParent, hMenu, hInstance, lpParam)\</span><br><span class="line">CreateWindowExA(<span class="number">0L</span>, lpClassName, lpWindowName, dwStyle, x, y,\</span><br><span class="line">nWidth, nHeight, hWndParent, hMenu, hInstance, lpParam)</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CreateWindowW(lpClassName, lpWindowName, dwStyle, x, y,\</span></span><br><span class="line">nWidth, nHeight, hWndParent, hMenu, hInstance, lpParam)\</span><br><span class="line">CreateWindowExW(<span class="number">0L</span>, lpClassName, lpWindowName, dwStyle, x, y,\</span><br><span class="line">nWidth, nHeight, hWndParent, hMenu, hInstance, lpParam)</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> UNICODE</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CreateWindow  CreateWindowW</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CreateWindow  CreateWindowA</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// !UNICODE</span></span></span><br></pre></td></tr></table></figure><p>导致以下编译错误：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1&gt;function_name.cpp(7,5): warning C4003: not enough arguments for function-like macro invocation &#39;CreateWindowW&#39;</span><br><span class="line">1&gt;function_name.cpp(7,5): error C2059: syntax error: &#39;,&#39;</span><br><span class="line">1&gt;function_name.cpp(7,29): error C2143: syntax error: missing &#39;;&#39; before &#39;&#123;&#39;</span><br><span class="line">1&gt;function_name.cpp(7,29): error C2447: &#39;&#123;&#39;: missing function header (old-style formal list?)</span><br><span class="line">1&gt;function_name.cpp(15,12): warning C4003: not enough arguments for function-like macro invocation &#39;CreateWindowW&#39;</span><br><span class="line">1&gt;function_name.cpp(15,12): error C2059: syntax error: &#39;,&#39;</span><br></pre></td></tr></table></figure><p>改成下面这样，才能编译：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> umutech &#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">CreateWindowEx</span><span class="params">()</span> <span class="keyword">noexcept</span> </span>&#123;</span><br><span class="line">  MessageBox(<span class="literal">nullptr</span>, <span class="string">L&quot;For disassembling&quot;</span>, <span class="string">L&quot;CreateWindowEx&quot;</span>, MB_OK);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;  <span class="comment">// namespace umutech</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  umutech::CreateWindowEx();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上代码虽然编译通过，但实际上 CreateWindowEx 还是个宏。用 IDA 逆向编译后的 exe，并加载 pdb 后，可以看到：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">; int __cdecl main(int argc, const char **argv, const char **envp)</span><br><span class="line">main proc near</span><br><span class="line">sub     rsp, 28h</span><br><span class="line"></span><br><span class="line">; int __fastcall umutech::CreateWindowExW()</span><br><span class="line">umutech__CreateWindowExW: ; uType</span><br><span class="line">xor     r9d, r9d</span><br><span class="line">lea     r8, Caption     ; &quot;CreateWindowEx&quot;</span><br><span class="line">lea     rdx, Text       ; &quot;For disassembling&quot;</span><br><span class="line">xor     ecx, ecx        ; hWnd</span><br><span class="line">call    cs:__imp_MessageBoxW</span><br><span class="line">xor     eax, eax</span><br><span class="line">add     rsp, 28h</span><br><span class="line">retn</span><br><span class="line">main endp</span><br></pre></td></tr></table></figure><p><s>虽然没啥危害，但 C++ 20 程序员不喜欢宏！</s></p><h3 id="2-camelCase-是不是更好？">2. camelCase 是不是更好？</h3><p>如果函数名使用 camelCase，则没有机会与 Win32 API 的宏定义冲突。</p><p>另一个好处是在做 API Hooking 时，命名可以更短。比如 Hook ShowWindow，那么替代函数可以就叫 showWindow，而用 PascalCase，则可能需要叫 MyShowWindow。</p><p>那么是不是把 Google C++ Style 的函数名由 PascalCase 改为 camelCase 就完美了？</p><p>更好，并不是完美……camelCase 也有个小问题——只有一个单词时，无法区分是 camelCase，还是 snake_case。比如 size，是函数（camelCase），还是临时变量（snake_case）？</p><h2 id="总结">总结</h2><p>UMU 建议，如果已经在使用 Google C++ Style，应该避免函数名与 Win32 API 一样。如果正在从头制定一套 Coding Style，则可以考虑函数用 camelCase。</p>]]></content>
    
    
    <summary type="html">大写还是小写？这是个问题！</summary>
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="cpp" scheme="https://blog.umu618.com/tags/cpp/"/>
    
    <category term="coding-style" scheme="https://blog.umu618.com/tags/coding-style/"/>
    
  </entry>
  
  <entry>
    <title>解决运行 bcdedit 后 BitLocker 提示输入恢复密钥</title>
    <link href="https://blog.umu618.com/2023/10/18/umutech-bitlocker-require-recovery-key-after-running-bcdedit/"/>
    <id>https://blog.umu618.com/2023/10/18/umutech-bitlocker-require-recovery-key-after-running-bcdedit/</id>
    <published>2023-10-17T16:06:31.000Z</published>
    <updated>2023-10-29T12:18:29.351Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题">问题</h2><p>因为种种原因……需要调试本机内核，用 bcdedit 开启调试模式：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bcdedit -debug ON</span><br></pre></td></tr></table></figure><p>结果重启后，BitLocker 提示输入恢复密钥！</p><h2 id="分析">分析</h2><p>首先，要强调——调试本机内核，本身就是一个很危险的操作！建议还是用虚拟机调试。</p><p>其次，您一定已经备份了 BitLocker 的恢复密钥。只是它不一定在身边，比如说放在家里，人在公司，一来一回需要很长时间，所以得想办法节省时间。</p><p>最后，不要被 BitLocker 吓倒！即使，您没有备份恢复密钥，也还有救！在这个界面按 ESC，再点“跳过此驱动器”，后面是可以进入“控制台”的，只需要在“控制台”里撤销操作即可！</p><h2 id="解决">解决</h2><p>尝试关闭调试模式：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bcdedit -debug OFF</span><br></pre></td></tr></table></figure><p>先别急着重启，因为这么敲——无效！不信您可以重启后再运行 bcdedit，会发现这个 debug 选项还是 Yes。</p><p>看来在 WindowsRE 环境下，直接运行 bcdedit，并不能修改 C 盘里的启动选项。您需要加上个 ID，一般为 {default}。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bcdedit -debug &#123;default&#125; OFF</span><br></pre></td></tr></table></figure><p>先别急着重启，因为这么敲——还是无效！原本没有 debug 这个值，现在多了一个，数据是 No 而已，因为默认值就是 No，看似没有改变“调试模式”，但其实 BCD 数据库是变了的。正确的做法是删除这个 debug 值：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bcdedit -deletevalue &#123;default&#125; debug</span><br></pre></td></tr></table></figure><p>重启后不再要求输入恢复密钥。这时可以在 BitLocker 的控制面板里先暂停保护，然后再操作 BCD，即可。</p>]]></content>
    
    
    <summary type="html">ChatGPT 说这很险啊！</summary>
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="windows" scheme="https://blog.umu618.com/tags/windows/"/>
    
    <category term="debug" scheme="https://blog.umu618.com/tags/debug/"/>
    
    <category term="ops" scheme="https://blog.umu618.com/tags/ops/"/>
    
  </entry>
  
  <entry>
    <title>为什么应该使用 C++ 20？</title>
    <link href="https://blog.umu618.com/2023/10/15/umutech-why-cpp20/"/>
    <id>https://blog.umu618.com/2023/10/15/umutech-why-cpp20/</id>
    <published>2023-10-15T11:23:01.000Z</published>
    <updated>2023-10-29T12:18:29.351Z</updated>
    
    <content type="html"><![CDATA[<h2 id="实战项目">实战项目</h2><ol><li><p><a href="https://github.com/ksyun-kenc/liuguang">鎏光云游戏引擎</a></p></li><li><p><a href="https://zhuanlan.zhihu.com/p/562199099">金山云 LiveNet</a></p></li><li><p><a href="https://gitee.com/ksyun-kenc/ClipboardSync">ClipboardSync</a></p></li><li><p><a href="https://github.com/UMU618/PowerEconomizer">PowerEconomizer</a></p></li></ol><p>其中，鎏光一开始是用 C++ 17 的，在 MSVC 的 std::format 可用时，第一时间切换到 C++ 20。而 LiveNet 主要运行于 Linux，开发时 gcc 还不支持 std::format，使用 fmt::format 代替，但一直用 cxxstd=20 编译。</p><p>ClipboardSync 和 PowerEconomizer 使用了 C++ 20 modules。</p><p>现在还在开发的云桌面产品也是使用 C++ 20，但没有用 modules。</p><h2 id="理由">理由</h2><p>根据 <a href="https://www.jetbrains.com/lp/devecosystem-2022/cpp/">jetbrains</a> 的统计，2022 年时，C++ 20 的使用率是 23%，已经超过经典 C++ 的 8%。在游戏开发领域，C++ 20 的使用率为 25%，甚至已经超过 C++ 14 的 24%。</p><p>以下列举能够很容易想到的一些好处：</p><ol><li><p>好用、安全的新类：std::format、std::span、std::jthread、原子(Atomic)智能指针</p></li><li><p>designated-initializers 安全初始化，防止因为调整结构体而顺序不对</p></li><li><p>modules 加速编译</p></li><li><p>更多标签 [[likely]], [[unlikely]], [[nodiscard(reason)]]</p></li><li><p>可以 using enum</p></li><li><p>对模板形式的 Lambda 有更好支持</p></li><li><p>范围 for 循环支持初始化</p></li><li><p>三路比较运算符 &lt;=&gt;</p></li><li><p>Boost 的 awaitables 协程（BOOST_ASIO_HAS_CO_AWAIT）需要 C++ 20</p></li><li><p>ranges 库</p></li></ol><h2 id="阵痛">阵痛</h2><ol><li><p>曾经遇到 clang-format 对 modules 支持不好的问题，后来升级 clang-format 解决。但目前还不建议在大型项目里使用 modules。</p></li><li><p>有些隐式转换无法编译，尤其在编译驱动代码时，容易遇到连 WDK 里的头文件都无法编译。这是因为 C++ 20 比 C++ 17 都严格。建议内核态驱动使用 C++ 17；用户态驱动可以 C++ 20。</p></li></ol>]]></content>
    
    
    <summary type="html">因为 Rust 太难了！</summary>
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="cpp" scheme="https://blog.umu618.com/tags/cpp/"/>
    
  </entry>
  
  <entry>
    <title>无银第八哥【2】修改 API 返回结果</title>
    <link href="https://blog.umu618.com/2023/09/16/umutech-windbg-2-modify-the-result-of-an-api-call/"/>
    <id>https://blog.umu618.com/2023/09/16/umutech-windbg-2-modify-the-result-of-an-api-call/</id>
    <published>2023-09-16T08:26:47.000Z</published>
    <updated>2023-10-29T12:24:56.894Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求">需求</h2><p>想修改 API 的返回结果。举个例子，想把前文提到的 Windows Release 信息改为 “0618”。</p><p><img src="/images/2023/20230916-winver.png" alt="winver"></p><h2 id="分析">分析</h2><p>从技术角度看，需求就是在 RegQueryValueExW 返回时，改 lpData 指向的内存。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">LSTATUS RegQueryValueExW(</span><br><span class="line">  [in]                HKEY    hKey,</span><br><span class="line">  [in, optional]      LPCWSTR lpValueName,</span><br><span class="line">                      LPDWORD lpReserved,</span><br><span class="line">  [out, optional]     LPDWORD lpType,</span><br><span class="line">  [out, optional]     LPBYTE  lpData,</span><br><span class="line">  [in, out, optional] LPDWORD lpcbData</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>lpData 为第 5 个参数，根据《<a href="https://learn.microsoft.com/zh-cn/cpp/build/x64-software-conventions?view=msvc-170">x64 软件约定</a>》，它位于栈。具体来说，断点时，rip 处于 call 指令执行完毕的时间点，这时调用方的返回地址已经被压入栈里，所以此时的栈顶为返回地址。按照内存地址递增方向，返回地址后面就是 6 个参数。</p><h2 id="实现">实现</h2><ol><li>按照前文方法，断到 DisplayVersion 的读取：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">DisplayVersion</span><br><span class="line">KERNELBASE!RegQueryValueExW:</span><br><span class="line">00007ffc&#96;2bd79ff0 48895c2410      mov     qword ptr [rsp+10h],rbx ss:00000073&#96;b6cfe618&#x3D;00007ffc2e6731dc</span><br></pre></td></tr></table></figure><ol start="2"><li>用 <code>dq rsp L7</code> 显示返回地址和 6 个参数：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">0:000&gt; dq rsp L7</span><br><span class="line">000000d7&#96;e975e7e8  00007ffc&#96;2e53e6bd 00007ffc&#96;2d600000</span><br><span class="line">000000d7&#96;e975e7f8  00007ffc&#96;2e6731dc 00000268&#96;e4a4a6a0</span><br><span class="line">000000d7&#96;e975e808  00000000&#96;0000003c 00000268&#96;e4a96d10</span><br><span class="line">000000d7&#96;e975e818  000000d7&#96;e975e820</span><br></pre></td></tr></table></figure><p>其中，<code>00000268`e4a96d10</code> 对应 lpData，<code>000000d7`e975e820</code> 对于 lpcbData。</p><ol start="3"><li>可选地，查看 lpcbData 指向的值，发现它是 0x100：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">0:000&gt; dd 000000d7&#96;e975e820 L1</span><br><span class="line">000000d7&#96;e975e820  00000100</span><br></pre></td></tr></table></figure><ol start="4"><li>输入 gu 运行到函数返回，再查看 lpData 的内容：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">0:000&gt; gu</span><br><span class="line">shcore!_SHRegQueryValueW+0x8d:</span><br><span class="line">00007ffc&#96;2e53e6bd 0f1f440000      nop     dword ptr [rax+rax]</span><br><span class="line">0:000&gt; du 00000268&#96;e4a96d10</span><br><span class="line">00000268&#96;e4a96d10  &quot;22H2&quot;</span><br></pre></td></tr></table></figure><ol start="5"><li>用 eu 指令修改 lpData 的内容：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eu 00000268&#96;e4a96d10 &quot;0618&quot;</span><br></pre></td></tr></table></figure><ol start="6"><li>输入 g，再继续运行，即可大功告成。</li></ol><h2 id="埋前文的坑">埋前文的坑</h2><ol><li>前文“实现”节的第 5 步，<code>bm KERNELBASE!RegQueryValueExW</code> 断不下来？</li></ol><p>您可能是在 Windows 10 下实践才遇到这个问题。可以用 <code>x KERNELBASE!RegQueryValueExW*</code> 看看是不是有多个。一般来说，即使有多个，无银第八哥也能都断，用 bl 可以看到多个都被加入。万一多个函数的类型不一样，可能就只加了一个 void 类型的，可以直接用地址指定另外类型的（没有被添加的）。</p><p>Windows 11 是这样：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">0:000&gt; x KERNELBASE!RegQueryValueExW*</span><br><span class="line">00007ffc&#96;2bd79ff0 KERNELBASE!RegQueryValueExW (void)</span><br><span class="line">00007ffc&#96;2beb2090 KERNELBASE!RegQueryValueExW (void)</span><br><span class="line">0:000&gt; bl</span><br><span class="line">     1 e Disable Clear  00007ffc&#96;2bd79ff0     0001 (0001)  0:**** KERNELBASE!RegQueryValueExW &quot;$$&lt;C:\\devel\\windbg\\RegQueryValueExW.txt&quot;</span><br><span class="line">     2 e Disable Clear  00007ffc&#96;2beb2090     0001 (0001)  0:**** KERNELBASE!RegQueryValueExW &quot;$$&lt;C:\\devel\\windbg\\RegQueryValueExW.txt&quot;</span><br></pre></td></tr></table></figure><p>Windows 10 可能是这样：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">0:000&gt; x kernelbase!RegQueryValueExW*</span><br><span class="line">00007ff8&#96;2a400a20 KERNELBASE!RegQueryValueExW (void)</span><br><span class="line">00007ff8&#96;2a303700 KERNELBASE!RegQueryValueExW (RegQueryValueExW)</span><br></pre></td></tr></table></figure><ol start="2"><li><code>KERNELBASE!RegQueryValueExW</code> 返回后的指令怪怪的？</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">0:000&gt; gu</span><br><span class="line">shcore!_SHRegQueryValueW+0x8d:</span><br><span class="line">00007ffc&#96;2e53e6bd 0f1f440000      nop     dword ptr [rax+rax]</span><br></pre></td></tr></table></figure><p>前一条的 <code>call    qword ptr [shcore!_imp_RegQueryValueExW (00007ffc</code>2e5e5c90)]` 指令是 7 字节的，如果为了对齐也不应该补 5 字节呀。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">0:000&gt; u 00007ffc&#96;2e53e6b6</span><br><span class="line">shcore!_SHRegQueryValueW+0x86:</span><br><span class="line">00007ffc&#96;2e53e6b6 48ff15d3750a00  call    qword ptr [shcore!_imp_RegQueryValueExW (00007ffc&#96;2e5e5c90)]</span><br><span class="line">00007ffc&#96;2e53e6bd 0f1f440000      nop     dword ptr [rax+rax]</span><br><span class="line">00007ffc&#96;2e53e6c2 8bd8            mov     ebx,eax</span><br><span class="line">00007ffc&#96;2e53e6c4 85c0            test    eax,eax</span><br><span class="line">00007ffc&#96;2e53e6c6 755a            jne     shcore!_SHRegQueryValueW+0xf2 (00007ffc&#96;2e53e722)</span><br><span class="line">00007ffc&#96;2e53e6c8 8b55b8          mov     edx,dword ptr [rbp-48h]</span><br><span class="line">00007ffc&#96;2e53e6cb 83fa01          cmp     edx,1</span><br><span class="line">00007ffc&#96;2e53e6ce 0f85b7000000    jne     shcore!_SHRegQueryValueW+0x15b (00007ffc&#96;2e53e78b)</span><br></pre></td></tr></table></figure><p>看！后面的指令是从 <code>00007ffc`2e53e6c2</code> 开始的，也没有对齐。所以，如果不是为了对齐，那就可能是为了方便调试时在函数返回时加 <code>int 3</code> 了。如果有新的答案，将在本系列后续文章分享。</p>]]></content>
    
    
    <summary type="html">Accessing Memory by Virtual Address with WinDbg</summary>
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="windows" scheme="https://blog.umu618.com/tags/windows/"/>
    
    <category term="debug" scheme="https://blog.umu618.com/tags/debug/"/>
    
    <category term="reverse-engineering" scheme="https://blog.umu618.com/tags/reverse-engineering/"/>
    
  </entry>
  
  <entry>
    <title>无银第八哥【1】条件断点</title>
    <link href="https://blog.umu618.com/2023/09/14/umutech-windbg-1-conditional-breadpoints/"/>
    <id>https://blog.umu618.com/2023/09/14/umutech-windbg-1-conditional-breadpoints/</id>
    <published>2023-09-14T15:30:28.000Z</published>
    <updated>2023-10-29T12:24:56.896Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题">问题</h2><p>使用“无银第八哥”给注册表 API 下断点，结果调用极其频繁，如果一个个人工去看，容易逐渐失去耐心。<s>毕竟，挨踢太卷了！</s></p><h2 id="解决">解决</h2><p>您只需要“条件断点”！但是怎么写“条件”成为拦路虎。</p><p>好在，“无银第八哥”自带了一份很简要的学习材料，您可以在帮助菜单打开，或按 F1，或在命令窗口输入 <code>.hh</code> 打开，然后输入“conditional breakpoints”，将进入一篇名为《Conditional breakpoints in WinDbg and other Windows debuggers》的帮助文档。</p><p>“条件断点”建议的使用方式是，把条件写到文件里，方便复用。指定一个断点的条件为某个文件内容的语法是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bp function &quot;$$&lt;C:\\commands.txt&quot;</span><br></pre></td></tr></table></figure><p>当然，文件的内容才是重点，将在后面的实践例子里讲解。</p><h2 id="实践">实践</h2><h3 id="需求">需求</h3><p><code>winver</code> 显示的 Windows 的 Relase 版本信息，比如“22H2”，是从注册表里读的，想断下这个读取。</p><p><img src="/images/2023/20230915-winver.png" alt="winver"></p><h3 id="实现">实现</h3><p>以下在 Windows 11 x64 下进行。</p><ol><li>下断点前，需要先知道这个 Release 信息保存的注册表位置：</li></ol><ul><li>主键：HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion</li><li>值：DisplayVersion</li><li>数据：即是需要获取的 Release 信息</li></ul><ol start="2"><li><p>但是 <code>winver.exe</code> 的导入表里并没有任何 Reg API，反而这个程序的核心就是调用 SHELL32!ShellAboutW 而已。</p></li><li><p>查看 <code>SHELL32.dll</code> 的导入表，发现有 <code>api-ms-win-core-registry-l1-1-0.dll</code>，但 Reg API 里有两个可以读值，需要做个基本排序，按兼容性推测，使用 RegQueryValueExW 几率更高。</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 老 API</span><br><span class="line">LSTATUS RegQueryValueExW(</span><br><span class="line">  [in]                HKEY    hKey,</span><br><span class="line">  [in, optional]      LPCWSTR lpValueName,</span><br><span class="line">                      LPDWORD lpReserved,</span><br><span class="line">  [out, optional]     LPDWORD lpType,</span><br><span class="line">  [out, optional]     LPBYTE  lpData,</span><br><span class="line">  [in, out, optional] LPDWORD lpcbData</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 新 API</span><br><span class="line">LSTATUS RegGetValueW(</span><br><span class="line">  [in]                HKEY    hkey,</span><br><span class="line">  [in, optional]      LPCWSTR lpSubKey,</span><br><span class="line">  [in, optional]      LPCWSTR lpValue,</span><br><span class="line">  [in, optional]      DWORD   dwFlags,</span><br><span class="line">  [out, optional]     LPDWORD pdwType,</span><br><span class="line">  [out, optional]     PVOID   pvData,</span><br><span class="line">  [in, out, optional] LPDWORD pcbData</span><br><span class="line">);</span><br></pre></td></tr></table></figure><ol start="4"><li><p>打开“无银第八哥”，按 Ctrl+E，打开 <code>C:\Windows\System32\winver.exe</code>。</p></li><li><p>第一个需要尝试的断点是 RegQueryValueExW，输入 <code>bm KERNELBASE!RegQueryValueExW</code>，然后 g，发现可以断下。</p></li><li><p>开始考虑“条件断点”，需要针对 lpValueName 判断是否为 “DisplayVersion”。lpValueName 为第二个参数，按照 x64 call，即为 rdx，所以编写 <code>C:\devel\windbg\RegQueryValueExW.txt</code> 代码如下：</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">.if (@rdx !&#x3D; 0) &#123; as &#x2F;mu $&#123;&#x2F;v:ValueName&#125; @rdx &#125; .else &#123; ad &#x2F;q $&#123;&#x2F;v:ValueName&#125; &#125;</span><br><span class="line">.if ($scmp(@&quot;$&#123;ValueName&#125;&quot;, &quot;DisplayVersion&quot;) &#x3D;&#x3D; 0)  &#123; .echo ValueName &#125; .else &#123; .echo ValueName; gc &#125;</span><br></pre></td></tr></table></figure><p>然后，输入 <code>bm KERNELBASE!RegQueryValueExW &quot;$$&lt;C:\\devel\\windbg\\RegQueryValueExW.txt&quot;</code>，再 g，发现能断下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">DisplayVersion</span><br><span class="line">KERNELBASE!RegQueryValueExW:</span><br><span class="line">00007ffc&#96;2bd79ff0 48895c2410      mov     qword ptr [rsp+10h],rbx ss:0000006c&#96;ef69e768&#x3D;00007ffc2e6731dc</span><br></pre></td></tr></table></figure><ol start="7"><li>额外地，可以返回（gu）看看（ub）调用方长啥样的：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">0:000&gt; gu</span><br><span class="line">shcore!_SHRegQueryValueW+0x8d:</span><br><span class="line">00007ffc&#96;2e53e6bd 0f1f440000      nop     dword ptr [rax+rax]</span><br><span class="line">0:000&gt; ub</span><br><span class="line">shcore!_SHRegQueryValueW+0x6b:</span><br><span class="line">00007ffc&#96;2e53e69b 44897db0        mov     dword ptr [rbp-50h],r15d</span><br><span class="line">00007ffc&#96;2e53e69f 48894c2428      mov     qword ptr [rsp+28h],rcx</span><br><span class="line">00007ffc&#96;2e53e6a4 4c8d4db8        lea     r9,[rbp-48h]</span><br><span class="line">00007ffc&#96;2e53e6a8 498bcd          mov     rcx,r13</span><br><span class="line">00007ffc&#96;2e53e6ab 48897c2420      mov     qword ptr [rsp+20h],rdi</span><br><span class="line">00007ffc&#96;2e53e6b0 4533c0          xor     r8d,r8d</span><br><span class="line">00007ffc&#96;2e53e6b3 488bd0          mov     rdx,rax</span><br><span class="line">00007ffc&#96;2e53e6b6 48ff15d3750a00  call    qword ptr [shcore!_imp_RegQueryValueExW (00007ffc&#96;2e5e5c90)]</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Conditional breakpoints in WinDbg</summary>
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="windows" scheme="https://blog.umu618.com/tags/windows/"/>
    
    <category term="debug" scheme="https://blog.umu618.com/tags/debug/"/>
    
    <category term="reverse-engineering" scheme="https://blog.umu618.com/tags/reverse-engineering/"/>
    
  </entry>
  
  <entry>
    <title>GetEnvironmentStrings 函数的八哥史</title>
    <link href="https://blog.umu618.com/2023/09/13/umutech-a-brief-history-of-the-getenvironmentstrings-function/"/>
    <id>https://blog.umu618.com/2023/09/13/umutech-a-brief-history-of-the-getenvironmentstrings-function/</id>
    <published>2023-09-13T15:18:42.000Z</published>
    <updated>2023-10-29T12:24:56.896Z</updated>
    
    <content type="html"><![CDATA[<h2 id="故事">故事</h2><p>故事总由八哥开始！今天稣看到一个 buggy 的 API 声明：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> UNICODE</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GetEnvironmentStrings  GetEnvironmentStringsW</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GetEnvironmentStringsA  GetEnvironmentStrings</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// !UNICODE</span></span></span><br></pre></td></tr></table></figure><p><img src="/images/2023/20230913-get-environment-strings.jpg" alt="GetEnvironmentStrings"></p><p>但是经历过 OutputDebugString 逆向的稣十分淡定地推测，这一定是故意的！毕竟，微软为了兼容性，啥都干得出来。</p><blockquote><p>稣的逆向经验：一般 API 都是 A 的版本调用 W，而 OutputDebugString 是例外，OutputDebugStringW 调用 OutputDebugStringA。</p></blockquote><h2 id="搜索知识">搜索知识</h2><p>找到 Raymond Chen 写的《<a href="https://devblogs.microsoft.com/oldnewthing/20130117-00/?p=5533">A brief history of the GetEnvironmentStrings functions</a>》。原来，这个 API 早在 Windows NT 3.1 时就烙下八哥！</p><blockquote><p>The Get­Environment­Strings function has a long and troubled history.</p><p>The first bit of confusion is that the day it was introduced in Windows NT 3.1, it was exported funny. The UNICODE version was exported under the name Get­Environment­StringsW, but the ANSI version was exported under the name Get­Environment­Strings without the usual A suffix.</p><p>A mistake we have been living with for over two decades.</p></blockquote><p>虽然后来可以解决这个例外，但微软选择保留此例外。</p><h2 id="结论">结论</h2><p>大家可以不必担心相关的可能问题，因为现代的 Windows 会同时导出 GetEnvironmentStrings 和 GetEnvironmentStringsA。</p><p><img src="/images/2023/20230913-get-environment-strings-functions.jpg" alt="GetEnvironmentStrings functions"></p>]]></content>
    
    
    <summary type="html">稣教 ChatGPT 用 API</summary>
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="windows" scheme="https://blog.umu618.com/tags/windows/"/>
    
    <category term="debug" scheme="https://blog.umu618.com/tags/debug/"/>
    
  </entry>
  
  <entry>
    <title>Boost【8】shared_library</title>
    <link href="https://blog.umu618.com/2023/09/10/umutech-boost-8-shared-library/"/>
    <id>https://blog.umu618.com/2023/09/10/umutech-boost-8-shared-library/</id>
    <published>2023-09-09T18:19:38.000Z</published>
    <updated>2023-09-17T13:15:38.237Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-故事">1. 故事</h2><p>听说 Boost 有一个跨平台的 shared_library 可以管理动态链接库，试试？</p><h2 id="2-尝试">2. 尝试</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;format&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;boost/dll/shared_library.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  boost::dll::fs::error_code ec;</span><br><span class="line">  boost::<span class="function">dll::shared_library <span class="title">ntdll</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">      <span class="string">L&quot;ntdll.dll&quot;</span>, boost::dll::load_mode::search_system_folders, ec)</span></span>;</span><br><span class="line">  <span class="keyword">if</span> (ec) &#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cerr</span> &lt;&lt; ec.message();</span><br><span class="line">    <span class="keyword">return</span> EXIT_FAILURE;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="built_in">std</span>::format(<span class="string">&quot;ntdll: &#123;&#125;\n&quot;</span>, ntdll.location(ec).<span class="built_in">string</span>());</span><br><span class="line">  <span class="keyword">bool</span> has = ntdll.has(<span class="string">&quot;RtlGetNtSystemRoot&quot;</span>);</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="built_in">std</span>::format(<span class="string">&quot;has RtlGetNtSystemRoot: &#123;&#125;\n&quot;</span>, has);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (has) &#123;</span><br><span class="line">    <span class="built_in">std</span>::wcout &lt;&lt; <span class="built_in">std</span>::format(<span class="string">L&quot;RtlGetNtSystemRoot: &#123;&#125;\n&quot;</span>,</span><br><span class="line">                              ntdll.get&lt;<span class="keyword">wchar_t</span>*()&gt;(<span class="string">&quot;RtlGetNtSystemRoot&quot;</span>)());</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">auto</span> RtlGetNtSystemRoot = ntdll.get&lt;<span class="keyword">wchar_t</span>*()&gt;(<span class="string">&quot;RtlGetNtSystemRoot&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">nullptr</span> != RtlGetNtSystemRoot) &#123;</span><br><span class="line">      <span class="built_in">std</span>::wcout &lt;&lt; <span class="built_in">std</span>::format(<span class="string">L&quot;RtlGetNtSystemRoot: &#123;&#125;\n&quot;</span>,</span><br><span class="line">                                RtlGetNtSystemRoot());</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">catch</span> (<span class="keyword">const</span> boost::system::system_error&amp; e) &#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cerr</span> &lt;&lt; e.what();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-思考">3. 思考</h2><p>上面的例子显然不合格，因为它并不跨平台！动态加载 Windows 特有的 ntdll.dll 应该用 <a href="https://github.com/microsoft/wil">Windows Implementation Library</a>。</p><p>但作为范例，或者项目已经引入 Boost，却没有引入 wil，也是可以用用，只是它并不极致。比如说，ntdll.dll 其实并不需要 load，它必然被加载，只需要 GetModuleHandle 即可。</p><p>所以它其实还不如这个好用：<a href="https://github.com/UMU618/umu/blob/main/include/umu/module.hpp">https://github.com/UMU618/umu/blob/main/include/umu/module.hpp</a></p>]]></content>
    
    
    <summary type="html">稣教 ChatGPT 用 Boost！</summary>
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="windows" scheme="https://blog.umu618.com/tags/windows/"/>
    
    <category term="cpp" scheme="https://blog.umu618.com/tags/cpp/"/>
    
    <category term="boost" scheme="https://blog.umu618.com/tags/boost/"/>
    
  </entry>
  
  <entry>
    <title>“天道酬勤”的最初含义</title>
    <link href="https://blog.umu618.com/2023/09/08/heaven-rewards-us-frequently/"/>
    <id>https://blog.umu618.com/2023/09/08/heaven-rewards-us-frequently/</id>
    <published>2023-09-07T16:14:11.000Z</published>
    <updated>2023-09-17T13:15:38.237Z</updated>
    
    <content type="html"><![CDATA[<p>转自：<a href="https://epaper.gmw.cn/wzb/html/2016-04/16/nw.D110000wzb_20160416_5-02.htm">https://epaper.gmw.cn/wzb/html/2016-04/16/nw.D110000wzb_20160416_5-02.htm</a></p><p>“天道酬勤”大约是中国人最喜欢说的四个字，也是书法爱好者最爱写的词汇，经常用来励志。</p><p>事实上，从它的本义论起，现今我们对于它的理解是大错特错。它既非励志之言，更非一般百姓能用，若非君临天下，您断不可用此四字。</p><p>“天道酬勤”并非成语，由《尚书·大诰》：“天閟毖我成功，天亦惟用勤毖我民”之句引申而来。唐人孔颖达疏：“天慎劳民使成功，亦当勤劳民使安宁。”意思是：“上天啊，您咋这么好呢！您如此谨慎地护佑我的事业，确保其成功！您又是如此频繁地关照我的百姓……”这句话原是周天子向上天说的，用来感谢上天对国民无微不至的关怀。</p><p>到了近代，人们将其转引为更通俗的“天道酬勤”。字面虽是直白了，但歧义亦由此产生，变成了今天人们所理解的——同志们，要加倍努力啊，到时上天会犒赏大家的（最好发个大红包）。</p><p>“天道酬勤”之“勤”非“勤奋”之意，它只是表示次数多，即频繁。“酬勤”二字是倒装句，“勤”是状语，连起来意为“频繁地赏赐”。如此理解，便与我们平时的理解大有不同了。</p><p>“天道酬勤”与故宫太和殿上方的“建极绥猷”匾额传达的是一个意思，就是皇帝们要顺应天命，建立人间法则，安抚四方。所以，“天道酬勤”四字，本是君主们才能说的话。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;转自：&lt;a href=&quot;https://epaper.gmw.cn/wzb/html/2016-04/16/nw.D110000wzb_20160416_5-02.htm&quot;&gt;https://epaper.gmw.cn/wzb/html/2016-04/16/nw.D1100</summary>
      
    
    
    
    <category term="宇督观" scheme="https://blog.umu618.com/categories/%E5%AE%87%E7%9D%A3%E8%A7%82/"/>
    
    
    <category term="洗脑" scheme="https://blog.umu618.com/tags/%E6%B4%97%E8%84%91/"/>
    
  </entry>
  
  <entry>
    <title>八哥系列：Debian 12 的 xrdp 突然连不上！</title>
    <link href="https://blog.umu618.com/2023/08/13/umutech-bug-xrdp-was-broken/"/>
    <id>https://blog.umu618.com/2023/08/13/umutech-bug-xrdp-was-broken/</id>
    <published>2023-08-13T08:54:01.000Z</published>
    <updated>2023-09-17T13:15:38.237Z</updated>
    
    <content type="html"><![CDATA[<p>八哥就是让你料不到！</p><h2 id="故事">故事</h2><p>用 macOS 的 Microsoft Remote Desktop Beta 连着 Debian 12，切回 macOS 一段时间后，再回 Debian，发现卡死了。</p><p>一看 Debian 的机器，是睡眠了，立刻按电源键唤醒。但是 Microsoft Remote Desktop Beta 再也连不上 Debian。一直在连接的界面，也不报错，也不超时。</p><p>SSH 到 Debian 一顿治疗后，依然无法连接。最后重启 Microsoft Remote Desktop Beta，居然好了……</p><h2 id="折腾记录">折腾记录</h2><h3 id="八哥一：为什么睡眠了？">八哥一：为什么睡眠了？</h3><p>因为每次 RDP 进入 KDE 后，都弹出一个密码输入框，上面想着“挂起系统需要身份验证”，于是稣做了如下操作，把它去掉。</p><p><code>sudo vim /etc/polkit-1/rules.d/85-suspend.rules</code>，输入：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">polkit.addRule(<span class="function"><span class="keyword">function</span>(<span class="params">action, subject</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (action.id == <span class="string">&quot;org.freedesktop.login1.suspend&quot;</span> &amp;&amp;</span><br><span class="line">        subject.isInGroup(<span class="string">&quot;tsusers&quot;</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> polkit.Result.YES;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod 755 /etc/polkit-1/rules.d</span><br><span class="line">sudo chmod 644 /etc/polkit-1/rules.d/85-suspend.rules</span><br></pre></td></tr></table></figure><p>结果——机器就能自动睡眠了。这是不符合预期的……</p><h3 id="八哥二：SSH-好好的，唯独-XRDP-坏了？">八哥二：SSH 好好的，唯独 XRDP 坏了？</h3><p>确实是稣的一大失算！因为期间在 Debian 本地使用了 wayland，而 xrdp 用的是 xorg，怀疑这可能把 xrdp 弄坏，就把目光都集中在 xrdp 上，各种修复，甚至重新安装、配置 xrdp，也无济于事。</p><p>另外一个误导因素是：刚用上 京东京造的 SSD，期间摸了摸，觉得烫得不行，担心是 SSD 异常，导致 xrdp 的文件被破坏。事实上，这个破硬盘也确实因为过热自动写保护两次，最后都无法启动系统了。</p><h3 id="八哥三：Windows-连-Debian-居然没问题……">八哥三：Windows 连 Debian 居然没问题……</h3><p>这才意识到是 macOS 的 Microsoft Remote Desktop Beta 有问题！连忙重启这个 App，终于真相大白！现在看着这名字末尾的 Beta 陷入沉思。</p>]]></content>
    
    
    <summary type="html">稣在教 ChatGPT 用 Debian 12</summary>
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="debug" scheme="https://blog.umu618.com/tags/debug/"/>
    
    <category term="linux" scheme="https://blog.umu618.com/tags/linux/"/>
    
    <category term="ops" scheme="https://blog.umu618.com/tags/ops/"/>
    
    <category term="macos" scheme="https://blog.umu618.com/tags/macos/"/>
    
    <category term="debian" scheme="https://blog.umu618.com/tags/debian/"/>
    
  </entry>
  
  <entry>
    <title>用 TraceView 取代 DbgView</title>
    <link href="https://blog.umu618.com/2023/07/23/replace-dbgview-with-traceview/"/>
    <id>https://blog.umu618.com/2023/07/23/replace-dbgview-with-traceview/</id>
    <published>2023-07-23T12:05:23.000Z</published>
    <updated>2023-10-29T12:24:56.896Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-故事">1. 故事</h2><ul><li><p>开发虚拟显示器驱动时，打太多日志到 DbgView，结果导致驱动被底层主动杀死。</p></li><li><p>有一天，Linux 和 Windows 驱动都精通的钧叔，突然和稣吐槽，WPP 太擸𢶍。</p></li></ul><h2 id="2-问题">2. 问题</h2><ul><li><p>OutputDebugStringA 太慢了！</p></li><li><p>WPP 太乱了！</p></li></ul><h2 id="3-相关知识">3. 相关知识</h2><ul><li><p>ETW（Event Tracing for Windows）是 Windows 操作系统中的一种事件跟踪技术，可以用于记录系统和应用程序生成的事件。ETW 的优点就是性能好，并且同时具备内核态和用户态 API。</p></li><li><p>WPP（Windows Software Trace Preprocessor）是一种用于 Windows 软件跟踪的预处理器，可以帮助开发人员在代码中插入跟踪语句，并生成可用于 ETW 的跟踪消息。即，WPP 基于 ETW，只是做了层封装。</p></li><li><p><a href="https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/traceview">TraceView</a> is a trace controller and a trace consumer. 类似于用 DbgView 看 OutputDebugStringA 产生的消息。ETW 产生的消息用 <a href="https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/traceview">TraceView</a> 来看。</p></li></ul><h2 id="4-解决">4. 解决</h2><p>慢的，不用就行。乱的，换个用法。</p><p>既然已经有 <a href="https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/traceview">TraceView</a>，那么我们只需要把 OutputDebugStringA 替换为 ETW 的 API 不就完事了吗？说干就干，先写个简单的 <a href="https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/trace-provider">Trace Provider</a> 代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;evntprov.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cassert&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string_view&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">EtwLog</span> &#123;</span></span><br><span class="line"> <span class="keyword">public</span>:</span><br><span class="line">  EtwLog() = <span class="keyword">default</span>;</span><br><span class="line">  ~EtwLog() &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="number">0</span> != event_handle_) &#123;</span><br><span class="line">      EventUnregister(event_handle_);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function">ULONG <span class="title">Initialize</span><span class="params">(<span class="keyword">const</span> GUID&amp; guid)</span> <span class="keyword">noexcept</span> </span>&#123;</span><br><span class="line">    ULONG ec = EventRegister(&amp;guid, <span class="literal">nullptr</span>, <span class="literal">nullptr</span>, &amp;event_handle_);</span><br><span class="line">    assert(ERROR_SUCCESS == ec);</span><br><span class="line">    <span class="keyword">return</span> ec;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function">ULONG <span class="title">Log</span><span class="params">(<span class="built_in">std</span>::wstring_view message,</span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="built_in">std</span>::<span class="keyword">uint8_t</span> level = <span class="number">1</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="built_in">std</span>::<span class="keyword">uint64_t</span> keyword = <span class="number">1</span>)</span> <span class="keyword">noexcept</span> </span>&#123;</span><br><span class="line">    assert(<span class="number">0</span> != event_handle_);</span><br><span class="line">    EVENT_DESCRIPTOR event_descriptor;</span><br><span class="line">    EVENT_DATA_DESCRIPTOR data_descriptor;</span><br><span class="line">    EventDescCreate(&amp;event_descriptor, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, level, <span class="number">0</span>, <span class="number">0</span>, keyword);</span><br><span class="line">    EventDataDescCreate(</span><br><span class="line">        &amp;data_descriptor, message.data(),</span><br><span class="line">        <span class="keyword">static_cast</span>&lt;ULONG&gt;((message.size() + <span class="number">1</span>) *</span><br><span class="line">                           <span class="keyword">sizeof</span>(<span class="built_in">std</span>::wstring_view::value_type)));</span><br><span class="line">    <span class="keyword">return</span> EventWrite(event_handle_, &amp;event_descriptor, <span class="number">1</span>, &amp;data_descriptor);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">private</span>:</span><br><span class="line">  REGHANDLE event_handle_&#123;&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Hello ETW!\n&quot;</span>;</span><br><span class="line"></span><br><span class="line">  EtwLog etw;</span><br><span class="line">  <span class="comment">// &#123;aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa&#125;</span></span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">const</span> GUID guid = &#123;<span class="number">0xaaaaaaaa</span>,</span><br><span class="line">                            <span class="number">0xaaaa</span>,</span><br><span class="line">                            <span class="number">0xaaaa</span>,</span><br><span class="line">                            &#123;<span class="number">0xaa</span>, <span class="number">0xaa</span>, <span class="number">0xaa</span>, <span class="number">0xaa</span>, <span class="number">0xaa</span>, <span class="number">0xaa</span>, <span class="number">0xaa</span>, <span class="number">0xaa</span>&#125;&#125;;</span><br><span class="line">  ULONG ec = etw.Initialize(guid);</span><br><span class="line">  <span class="keyword">if</span> (ERROR_SUCCESS != ec) &#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cerr</span> &lt;&lt; <span class="string">&quot;Failed to Initialize ETW!\n&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> ec;</span><br><span class="line">  &#125;</span><br><span class="line">  etw.Log(<span class="string">L&quot;Hello ETW!&quot;</span>);   <span class="comment">// View via TraceView</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>打开 <a href="https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/traceview">TraceView</a>，做好基本配置：</p><p><img src="/images/2023/20230723-traceview-guid.png" alt="采用 GUID 方式"></p><p><img src="/images/2023/20230723-traceview-tmf.png" alt="没有 TMF，先 Auto，等八哥"></p><p>然后，运行以上 C++ 代码，回到 <a href="https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/traceview">TraceView</a> 界面，能看到捕获到信息，但并没有“Hello ETW!”，而是写着“解码错误 1168”。</p><p><img src="/images/2023/20230723-traceview-1168.png" alt="解码错误"></p><p>到此，恍然大悟，原来 ETW 太底层，所以才有 WPP 定义一系列规范来使用 ETW，只不过 WPP 太老，不好用了。有没有一种不需要 pdb/man/tmf 的使用 ETW 的方式？</p><p>有的。它就是 Windows 10 新增的 <a href="https://learn.microsoft.com/en-us/windows/win32/tracelogging/trace-logging-portal">TraceLogging</a>。</p><blockquote><p>Windows 10 introduces TraceLogging which builds on ETW and provides a simplified way to instrument code for native, .NET and WinRT developers.</p></blockquote><blockquote><p>TraceLogging is a system for logging events that can be decoded without a manifest. On Windows, TraceLogging is used in user-mode and kernel-mode to generate Event Tracing for Windows (ETW) events. TraceLogging builds on Event Tracing for Windows (ETW) and provides a simplified way to instrument code.</p></blockquote><p>参考微软给的例子就很容易理解并上手：<a href="https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/tracelogging-examples">C/C++ TraceLogging Examples</a></p>]]></content>
    
    
    <summary type="html">稣在教 ChatGPT 写代码</summary>
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="windows" scheme="https://blog.umu618.com/tags/windows/"/>
    
    <category term="debug" scheme="https://blog.umu618.com/tags/debug/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·如梦令·挨踢垂暮</title>
    <link href="https://blog.umu618.com/2023/07/21/reconstructionism-poet-rumengling-doom-of-it/"/>
    <id>https://blog.umu618.com/2023/07/21/reconstructionism-poet-rumengling-doom-of-it/</id>
    <published>2023-07-21T05:26:14.000Z</published>
    <updated>2023-08-05T13:01:27.048Z</updated>
    
    <content type="html"><![CDATA[<p>《诗盗·如梦令·挨踢垂暮》</p><p>常记挨踢垂暮，沉重不知归路。</p><p>知识宛成咒，误入内卷深处。</p><p>要猝，要猝，惊起一滩社畜。</p><h2 id="注解">注解</h2><p>改自宋代李清照的《如梦令·常记溪亭日暮》：</p><blockquote><p>常记溪亭日暮，沉醉不知归路。<br>兴尽晚回舟，误入藕花深处。<br>争渡，争渡，惊起一滩鸥鹭。</p></blockquote>]]></content>
    
    
    <summary type="html">稣在教 ChatGPT 写诗</summary>
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·五亿稣隐</title>
    <link href="https://blog.umu618.com/2023/07/08/reconstructionism-poet-make-500-million-and-retire/"/>
    <id>https://blog.umu618.com/2023/07/08/reconstructionism-poet-make-500-million-and-retire/</id>
    <published>2023-07-07T16:00:01.000Z</published>
    <updated>2023-08-05T13:01:27.048Z</updated>
    
    <content type="html"><![CDATA[<p>《诗盗·五亿稣隐》：键盘十年忘写字，如今画符狗不识。若知挨踢毁前程，无如村官小职时。</p><h2 id="注解">注解</h2><p>改自霹雳角色无衣师尹的诗号：</p><blockquote><p>著书三年倦写字，<br>如今翻书不识志，<br>若知倦书悔前程，<br>无如渔樵未识时。</p></blockquote>]]></content>
    
    
    <summary type="html">稣在教 ChatGPT 写诗</summary>
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>导出标记为不可导出的证书</title>
    <link href="https://blog.umu618.com/2023/06/18/umutech-export-certificates-marked-as-non-exportable/"/>
    <id>https://blog.umu618.com/2023/06/18/umutech-export-certificates-marked-as-non-exportable/</id>
    <published>2023-06-18T08:22:26.000Z</published>
    <updated>2023-10-29T12:24:56.928Z</updated>
    
    <content type="html"><![CDATA[<h2 id="故事">故事</h2><p>稣于 2022-10-16 公布自己的<a href="/about/cert">签名证书</a>。当时是在自己的笔记本上用以下 PowerShell 命令生成的：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">New-SelfSignedCertificate</span> <span class="literal">-DnsName</span> <span class="string">&quot;umu618.com&quot;</span> <span class="literal">-CertStoreLocation</span> <span class="string">&quot;Cert:\CurrentUser\My&quot;</span> <span class="literal">-HashAlgorithm</span> sha512 <span class="literal">-KeyLength</span> <span class="number">4096</span> <span class="literal">-Type</span> CodeSigningCert <span class="literal">-FriendlyName</span> UMU618 <span class="literal">-NotAfter</span> <span class="number">2049</span><span class="literal">-11</span><span class="literal">-10</span></span><br></pre></td></tr></table></figure><p>因为 <a href="https://github.com/UMU618/PowerEconomizer">PowerEconomizer</a> 已经使用它签名，所以私钥的存储安全也就正规处理——导出到 pfx 文件加密并分布式保管。</p><p>后来，因为很久没有再验证过私钥的密码，居然，忘记了……想从笔记本再次导出一份，却发现无法导出！（此处脑补：大概是自己导出后，就删除系统里的私钥，然后又导入一次，并设置为不可导出！）不愧是重视安全的稣，连自己都要防！回头又对备份的 pfx 尝试上百次密码，安全性依然牢不可摧，只能放弃！</p><h2 id="破解思路">破解思路</h2><p>想想其它办法吧！理论上，系统里一定是有私钥的，“不可导出”只是个标志而已，无视它即可。</p><p><img src="/images/2023/20230618-private.png" alt="PrivateKey"></p><ol><li><p>从系统自己读取私钥。这需要了解 Windows 对私钥的存储方式，包括保存位置，怎么加密保护的，文件格式怎么解析……按照微软的习性，这肯定需要大量逆向，太难了！</p></li><li><p>使用系统的 API 导出，但对关键函数进行 Hook，在内存里修改标志位，骗过 API 这是可以导出的。</p></li></ol><h2 id="具体步骤">具体步骤</h2><h3 id="1-拿来主义">1. 拿来主义</h3><p>主要思路放在第二种，进行一番搜索后发现 <a href="https://github.com/gentilkiwi/mimikatz">mimikatz</a> 疑似有稣想要的功能。</p><p>然而实际测试发现，稣的系统太新，是 Windows 11 Build 22621，而 <a href="https://github.com/gentilkiwi/mimikatz">mimikatz</a> 已经年久失修，无能为力。</p><h3 id="2-缝缝补补">2. 缝缝补补</h3><p>开始对 mimikatz/modules/crypto/kuhl_m_crypto_patch.c 进行改进，关键点在于 CPExportKey_4000 和 CPExportKey_4001 的入口特征，需要逆向获得。于是用 IDA 简单看看 rsaenh.dll，顺利获得入口处的汇编指令，换上后依然失败。后来发现不换，其实也能找到入口，旧版本用更短的前缀一样可以找到。</p><p>看来是后面的处理不对，跟踪到 kuhl_m_crypto_extractor_capi64 函数发现一个魔法数字 RSAENH_KEY_64 被使用了两次，感觉是突破口。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> RSAENH_KEY_640xe35a172cd96214a0</span></span><br></pre></td></tr></table></figure><p>果断在 GitHub 上搜一下，结果找到另一个基于 <a href="https://github.com/EasyHook/EasyHook">EasyHook</a> 的实现 <a href="https://github.com/iSECPartners/jailbreak">jailbreak</a>，稣毕竟是 <a href="https://github.com/EasyHook/EasyHook">EasyHook</a> 代码贡献者，当然是切换到 <a href="https://github.com/iSECPartners/jailbreak">jailbreak</a> 尝试，结果令人愉悦！在虚拟机里实践成功。</p><p><img src="/images/2023/20230618-ida-1.png" alt="IDA 1"><br><img src="/images/2023/20230618-ida-2.png" alt="IDA 2"><br><img src="/images/2023/20230618-ida-3.png" alt="IDA 3"><br><img src="/images/2023/20230618-ida-4.png" alt="IDA 4"></p><h3 id="3-惨遭打脸">3. 惨遭打脸</h3><p>回到稣的笔记本 <a href="https://github.com/iSECPartners/jailbreak">jailbreak</a> 尝试却失败了！怎么回事？难道稣的笔记本有其它保护？通常都是稣被打脸的，所以这次是 <a href="https://github.com/iSECPartners/jailbreak">jailbreak</a> 被稣的笔记本打脸？</p><p>仔细对比，发现以下提示是不同的！</p><p><img src="/images/2023/20230618-not-found.png" alt="笔记本上说的是“找不到私钥”"></p><p><img src="/images/2023/20230618-non-exportable.png" alt="虚拟机上说的是“私钥不可导出”"></p><h3 id="4-痛苦地回忆">4. 痛苦地回忆</h3><p>稣的系统里明明有私钥，要导出时却说找不到私钥？有没有可能是因为系统密码修改过，导致无法解密私钥？还真有可能！立刻在虚拟机里实验，果然修改用户密码，并重新登录后，出现和笔记本一样的“找不到私钥”！</p><p>然后就是痛苦地回忆……上次改密码，那可是半年前……咳咳，闭环了，又绕回密码安全问题，所以——千万不要忘记密码！</p><h2 id="总结">总结</h2><p>虽然学到很多，但没有赚到钱。</p>]]></content>
    
    
    <summary type="html">ChatGPT 让稣多写文章，它要看！</summary>
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="windows" scheme="https://blog.umu618.com/tags/windows/"/>
    
    <category term="debug" scheme="https://blog.umu618.com/tags/debug/"/>
    
    <category term="security" scheme="https://blog.umu618.com/tags/security/"/>
    
  </entry>
  
  <entry>
    <title>现代 C++【4】std::chrono::zoned_time</title>
    <link href="https://blog.umu618.com/2023/05/28/umutech-modern-cpp-4-zoned_time/"/>
    <id>https://blog.umu618.com/2023/05/28/umutech-modern-cpp-4-zoned_time/</id>
    <published>2023-05-28T07:12:06.000Z</published>
    <updated>2023-08-05T13:01:27.048Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题">问题</h2><p>最近经历了一次半夜提交代码，却发现单元测试无法通过，而无法合并到主线的小事故。经过检查，是一个日志清理模块的实现有问题，一会儿使用 UTC，一会儿使用本地时间（东八区），导致只要在 [0:00, 8:00) 提交代码就无法通过单元测试！而平时都是 10 点上班，所以没长期发现。</p><p>在纠正实现的时候，首先想到可以用 _get_timezone 来修正时间，但它是个 CRT 函数，显得不够现代，所以打算用 C++ 20 来实现。</p><h2 id="解决">解决</h2><p>先来看 C 和 C++ 混合的解决方式：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">long</span> tz&#123;&#125;;</span><br><span class="line">_get_timezone(&amp;tz);</span><br><span class="line"><span class="keyword">auto</span> local_now = <span class="built_in">std</span>::chrono::system_clock::now() - <span class="built_in">std</span>::chrono::seconds(tz);</span><br></pre></td></tr></table></figure><p>这个代码除了不够现代，它还是 MS 特有的（Microsoft Specific），文档都埋坑（见文末）……C++ 20 里有跨平台的封装：std::chrono::zoned_time，下面用它来实现：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;chrono&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// QPC 时间，非人类历法时间</span></span><br><span class="line">  <span class="keyword">auto</span> now = <span class="built_in">std</span>::chrono::steady_clock::now();</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;System boot time: &quot;</span> &lt;&lt; now.time_since_epoch() &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 以下是人类历法时间</span></span><br><span class="line">  <span class="keyword">auto</span> utc_now = <span class="built_in">std</span>::chrono::system_clock::now();</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;UTC time: &quot;</span> &lt;&lt; utc_now</span><br><span class="line">            &lt;&lt; <span class="string">&quot;, timestamp: &quot;</span> &lt;&lt; utc_now.time_since_epoch() &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">auto</span> current_zone = <span class="built_in">std</span>::chrono::current_zone();</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; current_zone-&gt;name()</span><br><span class="line">            &lt;&lt; <span class="string">&quot; time: &quot;</span> &lt;&lt; current_zone-&gt;to_local(utc_now) &lt;&lt; <span class="string">&quot;, timestamp: &quot;</span></span><br><span class="line">            &lt;&lt; current_zone-&gt;to_local(utc_now).time_since_epoch() &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">std</span>::chrono::zoned_time&lt;<span class="built_in">std</span>::chrono::system_clock::duration&gt; local_time&#123;</span><br><span class="line">      <span class="built_in">std</span>::chrono::current_zone(), utc_now&#125;;</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Local time: &quot;</span> &lt;&lt; local_time.get_local_time()</span><br><span class="line">            &lt;&lt; <span class="string">&quot;, timestamp: &quot;</span> &lt;&lt; local_time.get_local_time().time_since_epoch()</span><br><span class="line">            &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Timezone: &quot;</span></span><br><span class="line">            &lt;&lt; (utc_now.time_since_epoch() -</span><br><span class="line">                local_time.get_local_time().time_since_epoch())</span><br><span class="line">            &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可能的输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">System boot time: 963185693626400ns</span><br><span class="line">UTC time: 2023-05-28 07:59:21.9329686, timestamp: 16852607619329686[1&#x2F;10000000]s</span><br><span class="line">Asia&#x2F;Shanghai time: 2023-05-28 15:59:21.9329686, timestamp: 16852895619329686[1&#x2F;10000000]s</span><br><span class="line">Local time: 2023-05-28 15:59:21.9329686, timestamp: 16852895619329686[1&#x2F;10000000]s</span><br><span class="line">Timezone: -288000000000[1&#x2F;10000000]s</span><br></pre></td></tr></table></figure><p>PS: 目前为止，g++ 对 C++ 20 支持不好，请用 MSVC 测试。</p><p><strong>注意事项</strong>：<code>std::chrono::zoned_time</code> may throw if <code>location</code> is not in the time zone database. 需要 catch 类型为 std::chrono::nonexistent_local_time 的异常。</p><h2 id="get-timezone-的坑">_get_timezone 的坑</h2><p><code>_get_timezone</code> 的返回值的含义是 UTC 和 localtime 的差值，单位为秒，比如东八区是 -28800。它的实现是这样的：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span> <span class="keyword">errno_t</span> __cdecl _get_timezone(<span class="keyword">long</span>* result)</span><br><span class="line">&#123;</span><br><span class="line">    _VALIDATE_RETURN_ERRCODE(result != <span class="literal">nullptr</span>, EINVAL);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// This variable is correctly inited at startup, so no need to check if</span></span><br><span class="line">    <span class="comment">// CRT init finished.</span></span><br><span class="line">    *result = _timezone.value();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>目前它的<a href="https://learn.microsoft.com/zh-cn/cpp/c-runtime-library/reference/get-timezone">文档</a>里并没有提到需要“前置调用”……如果直接使用，可能得到一个错误的默认值 28800，这是“西八区”的意思！正确的做法是调用 <code>_tzset</code>、<code>gmtime</code> 或 <code>localtime</code> 等函数后，再调用 _get_timezone。</p><h2 id="参考">参考</h2><ol><li><a href="https://learn.microsoft.com/zh-cn/cpp/c-runtime-library/reference/get-timezone">_get_timezone</a></li><li><code>std::chrono::zoned_time</code>: <a href="https://en.cppreference.com/w/cpp/chrono/zoned_time">https://en.cppreference.com/w/cpp/chrono/zoned_time</a></li></ol>]]></content>
    
    
    <summary type="html">ChatGPT 叫稣教它 C++ 20！</summary>
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="cpp" scheme="https://blog.umu618.com/tags/cpp/"/>
    
  </entry>
  
  <entry>
    <title>DXGI 类工厂缓存</title>
    <link href="https://blog.umu618.com/2023/05/11/umutech-dxgi-factory-cache/"/>
    <id>https://blog.umu618.com/2023/05/11/umutech-dxgi-factory-cache/</id>
    <published>2023-05-11T03:42:37.000Z</published>
    <updated>2023-08-05T13:01:27.048Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-问题">1. 问题</h2><ul><li><p>CreateDXGIFactory1 太慢！</p></li><li><p>CreateDXGIFactory2 太慢！</p></li></ul><h2 id="2-验证">2. 验证</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// Do NOT use CreateDXGIFactory + IDXGIFactory</span></span><br><span class="line">  <span class="comment">// CreateDXGIFactory1 + IDXGIFactory1: Windows 7</span></span><br><span class="line">  <span class="comment">// CreateDXGIFactory1 + IDXGIFactory2: Windows 8 and Platform Update for Windows 7</span></span><br><span class="line">  <span class="comment">// CreateDXGIFactory2 + IDXGIFactory3: Windows 8.1</span></span><br><span class="line">  <span class="comment">// CreateDXGIFactory2 + IDXGIFactory4: Windows 10</span></span><br><span class="line">  <span class="comment">// CreateDXGIFactory2 + IDXGIFactory5: Windows 10</span></span><br><span class="line">  <span class="comment">// CreateDXGIFactory2 + IDXGIFactory6: Windows 10 1803</span></span><br><span class="line">  <span class="comment">// CreateDXGIFactory2 + IDXGIFactory7: Windows 10 1809</span></span><br><span class="line">  <span class="keyword">auto</span> now = <span class="built_in">std</span>::chrono::steady_clock::now();</span><br><span class="line">  CComPtr&lt;IDXGIFactory7&gt; dxgi_factory_;</span><br><span class="line">  HRESULT hr = CreateDXGIFactory1(IID_PPV_ARGS(&amp;dxgi_factory_));</span><br><span class="line">  <span class="comment">// HRESULT hr = CreateDXGIFactory2(0, IID_PPV_ARGS(&amp;dxgi_factory_));</span></span><br><span class="line">  <span class="keyword">if</span> (FAILED(hr)) &#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cerr</span> &lt;&lt; <span class="built_in">std</span>::format(<span class="string">&quot;!CreateDXGIFactory1(), #0x&#123;:08X&#125;\n&quot;</span>, hr);</span><br><span class="line">    <span class="keyword">return</span> hr;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">auto</span> diff = <span class="built_in">std</span>::chrono::steady_clock::now() - now;</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="built_in">std</span>::format(<span class="string">&quot;CreateDXGIFactory1() costs &#123;&#125;\n&quot;</span>, diff);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; CPU: Intel(R) N100</span><br><span class="line">&#x2F;&#x2F; GPU: Intel(R) UHD Graphics</span><br><span class="line">CreateDXGIFactory1() costs 14795500ns</span><br><span class="line">CreateDXGIFactory1() costs 12253500ns</span><br><span class="line">CreateDXGIFactory1() costs 7063000ns</span><br><span class="line"></span><br><span class="line">CreateDXGIFactory2() costs 13026300ns</span><br><span class="line">CreateDXGIFactory2() costs 8201400ns</span><br><span class="line">CreateDXGIFactory2() costs 8535500ns</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; CPU: 11th Gen Intel(R) Core(TM) i7-11700F @ 2.50GHz</span><br><span class="line">&#x2F;&#x2F; GPU: NVIDIA GeForce RTX 3060</span><br><span class="line">CreateDXGIFactory2() costs 11&#39;770&#39;500ns</span><br><span class="line">CreateDXGIFactory2() costs 13&#39;821&#39;500ns</span><br><span class="line">CreateDXGIFactory2() costs 11&#39;671&#39;900ns</span><br></pre></td></tr></table></figure><p>居然平均 10ms 以上，确实太慢！</p><h2 id="3-解决">3. 解决</h2><p>既然创建类工厂慢，就不要频繁创建，创建后把它缓存起来。</p><p>新问题：缓存失效怎么办？</p><blockquote><p>There are only two hard things in Computer Science: cache invalidation and naming things.<br>– Phil Karlton</p><p>Phil Karlton：计算机科学领域有两个难题：一个是缓存失效，另一个就是命名。</p></blockquote><p>答案：<a href="https://learn.microsoft.com/en-us/windows/win32/api/dxgi/nf-dxgi-idxgifactory1-iscurrent">IDXGIFactory1::IsCurrent</a></p><p>以下是 MSDN 说的：</p><blockquote><p>Informs an application of the possible need to re-create the factory and re-enumerate adapters.</p><p>FALSE, if a new adapter is becoming available or the current adapter is going away. TRUE, no adapter changes.</p><p>IsCurrent returns FALSE to inform the calling application to re-enumerate adapters.</p></blockquote><p>这就很含糊了，IsCurrent 返回 FALSE 时，究竟该 re-enumerate adapters，还是 re-create the factory？</p><p>假设稣需要反复调用 EnumAdapterByLuid，如果只 re-enumerate adapters，那么稣每次直接用 EnumAdapterByLuid 即可，根本不需要理会 IsCurrent。所以这显然是错的，真正需要的是 re-create the factory，再 re-enumerate adapters。</p><p>这点可以在类工厂创建后，禁用和启用显示适配器来验证。根据稣的测试，类工厂创建后，禁用显示适配器，此时 IsCurrent 返回 FALSE，依然可以枚举出被禁用的显示适配器。只有重建类工厂，才能得到当前正确工作的显示适配器。</p>]]></content>
    
    
    <summary type="html">稣是 Windows 开发，ChatGPT 让稣卷起来！</summary>
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="windows" scheme="https://blog.umu618.com/tags/windows/"/>
    
    <category term="cpp" scheme="https://blog.umu618.com/tags/cpp/"/>
    
    <category term="directx" scheme="https://blog.umu618.com/tags/directx/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神后传【9】</title>
    <link href="https://blog.umu618.com/2023/05/06/god-of-debug-sequel-9/"/>
    <id>https://blog.umu618.com/2023/05/06/god-of-debug-sequel-9/</id>
    <published>2023-05-05T16:33:55.000Z</published>
    <updated>2023-08-05T13:01:27.048Z</updated>
    
    <content type="html"><![CDATA[<h2 id="床上">床上</h2><p>圣小开：周老师！</p><p>周易：还睡不？</p><p>圣小开：稣不在学校的时间，身体怎么办？</p><p>周易：已经请你未来的妻子帮你打理。</p><p>圣小开：啥？女的！</p><p>周易：有问题？</p><p>圣小开：完了，完了，等稣回去，目测 11 个潜在的女朋友全没啦！</p><p>周易：放心，她们死不了。</p><p>圣小开：明早咱们就回去？</p><p>周易：是我回去，你已经死了，就留在这里，吧！</p><p>圣小开：不是吧？稣明明就死了，为啥身体被一个女人冒名顶替？</p><p>周易：睡吧！死都死了，还要管这么多，当初怎么不别死？</p><p>圣小开：哦，好有道理。稣是量子化的，没有中间状态，没有帅气的动作，只有脸瘫。一切都是这么淡定。</p><h2 id="元至正八年，鹿邑">元至正八年，鹿邑</h2><p>朱重八：敢问恩公尊姓大名？来日必当报此大恩！</p><p>圣仙山：天机不可泄露。吾观汝有龙相，将来打下天下，定国号为明可好？</p><p>朱重八：观恩公一身仙家道行，不似信口开河，然俺乃一介草根，如何能打下天下？</p><p>圣仙山语重心长地说：重八哥，也是个八哥啊！你看！</p><p>朱重八：妙啊！太妙哩，世间竟真有如此仙法。斗胆再问恩公法号，将来重八定当为恩公修宫建观！</p><p>圣仙山：呵呵。将来大明有人立功，汝可赐姓为郑。</p><p>朱重八：大明王朝，赐姓郑……莫非……恩公就是……</p><p>圣仙山：以后多收义子，还有不准再叫重八！哈哈哈。</p><p>朱重八：em？恩公怎么突然没了，神仙呐！</p><h2 id="吓醒">吓醒</h2><p>圣小开：周老师真的不见了？</p><p>胡连玉：什么周老师？</p><p>圣小开：和稣一起来的那位？</p><p>胡连玉：李伯阳呀，他已经被县里的人接走了。</p><p>圣小开：那他有留下什么钱给稣吗？</p><p>胡连玉：没有呢，他说你很聪明，会自力更生。</p><p>圣小开：这里连电都没有，不得先发明个电池……太累了，稣打算走捷径，入赘到你家，快，带稣去你娘家。</p><p>胡连玉：又发烧了？</p><p>圣小开：当然没有。你妹妹是读书人，说明你娘家的家境还行。你妹还未嫁，以稣的智慧，嘿嘿，大胆推测，你们家缺男丁，就算不缺，多个上门女婿也是美哉。</p><p>胡连玉：你都没见过我妹！</p><p>圣小开：看你就知道个大概了。</p><p>胡连玉：我看你特别有诚意。</p><p>圣小开：是的。</p><p>胡连玉：不过去我娘家需要走七天七夜。我给你地图和一封信，你自己走过去吧！</p><p>圣小开：那不得饿死在路上？稣就是没带钱才想就地傍富婆的！这……</p><p>胡连玉：公子真爱说笑。你是大官李伯阳的学生，肯定也是富贵人家……</p><p>圣小开：穷！真穷！特别穷！</p><p>胡连玉写信中：圣仙山？</p><p>圣小开：啥？</p><p>胡连玉：你叫圣仙山？</p><p>圣小开：稣叫圣小开，是圣先生，但不……</p><p>胡连玉：李伯阳说你大名圣仙山，字小开，那没错！</p><p>圣小开：嗯？</p>]]></content>
    
    
    <summary type="html">这不是穿越，这不是穿越。</summary>
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="鲸神链" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%93%BE/"/>
    
  </entry>
  
  <entry>
    <title>【GSL 系列 4】为什么需要 gsl::not_null？</title>
    <link href="https://blog.umu618.com/2023/04/29/umutech-gsl-4-why-not_null/"/>
    <id>https://blog.umu618.com/2023/04/29/umutech-gsl-4-why-not_null/</id>
    <published>2023-04-29T08:59:47.000Z</published>
    <updated>2023-08-05T13:01:27.048Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题">问题</h2><ul><li>为啥要用 gsl::not_null？什么时候用？</li></ul><h2 id="分析">分析</h2><p>gsl::not_null 修饰指针，主要有两个目的：</p><ul><li>提高可读性。它相等于给代码写了一份注释，说明它修饰的变量不能为 nullptr。</li><li>提高执行效率。对一定不会是 nullptr 的变量反复判空，怎么说都是白费力气。</li></ul><p>它主要用于函数的：</p><ul><li>参数。说明这个参数不接受 nullptr。</li><li>返回值。说明这个函数不会返回 nullptr。比如说，它恒返回一个 static 值/引用。</li></ul><h2 id="感想">感想</h2><p>本文大概率是 <a href="/tags/gsl/">GSL 系列</a>的最后一篇。<a href="https://github.com/microsoft/GSL">GSL</a> 有部分已经被 C++ 20 的 STL 覆盖，比如 gsl::byte。众所周知，现在 C++ 20 是主流……所以本系列只划了 4 个重点，其它类可以选修。</p><ul><li><p>gsl::final_action</p></li><li><p>gsl::narrow_cast</p></li><li><p>gsl::owner</p></li><li><p>gsl::not_null</p></li></ul><p>挑选的这 4 个类，主要贯彻 <a href="https://github.com/UMU618/CppCoreGuidelines-zh-CN">C++ 核心指南</a> 提到的以下原则：</p><ul><li><p>P.1: 在代码中直接表达你的想法</p></li><li><p>P.3: 表达你的设计意图</p></li><li><p>P.5: 编译期检查优先于运行时检查</p></li><li><p>P.8: 不要泄漏任何资源</p></li></ul><p>最后，<a href="https://github.com/microsoft/GSL">GSL</a> 的定位是基础，也就是说它本身应该是一看就懂，不需要特地去分析的，用起来就对了。但实际上，很多人会嫌引入一个库麻烦，干脆不用。如果您是初学者，这种心态是要不得的，因为一开始不认真对待，写代码时很容易一多就乱，一乱就弃疗。</p>]]></content>
    
    
    <summary type="html">UMU 叫 ChatGPT 教您 C++</summary>
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="optimization" scheme="https://blog.umu618.com/tags/optimization/"/>
    
    <category term="cpp" scheme="https://blog.umu618.com/tags/cpp/"/>
    
    <category term="gsl" scheme="https://blog.umu618.com/tags/gsl/"/>
    
  </entry>
  
  <entry>
    <title>【GSL 系列 3】为什么需要 gsl::owner？</title>
    <link href="https://blog.umu618.com/2023/04/22/umutech-gsl-3-why-owner/"/>
    <id>https://blog.umu618.com/2023/04/22/umutech-gsl-3-why-owner/</id>
    <published>2023-04-22T14:54:53.000Z</published>
    <updated>2023-08-05T13:01:27.048Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题">问题</h2><ul><li>为啥要用 gsl::owner？什么时候用？</li></ul><h2 id="分析">分析</h2><p>当我们需要指针时，对于新写的代码，更应该使用智能指针（Smart Pointers）。但由于历史原因，一些旧代码里的裸指针（Raw Pointers）难以短时间重构为智能指针。而很多时候，裸指针的所有权难以一眼看出。良心代码可能通过注释指明，屎山代码就只能通过阅读大片相关语句块或函数来判断。</p><p>如果能用一个比较标准或通用的方式来指明，即可提高代码可读性，程序员能够更好滴理解代码，也就相应地能够提高健壮性。没错，这就是 gsl::owner 的应用场景。它就是<strong>提高【含有大量裸指针的】旧代码的可读性和健壮性的简单方法！</strong></p><p>举个最简单的场景：一个类里有一个成员变量叫 A* ptr，那么当这个类析构时，需要 delete ptr 吗？</p><ul><li><p>如果类对 ptr 有所有权，而析构时，没 delete ptr，则资源泄漏，危害整个程序。</p></li><li><p>如果类对 ptr 无所有权，而析构时，delete ptr，则造成悬空指针（Dangling Pointer），危害其它类。</p></li></ul><p>这个类的作者当然知道需不需要了，但即使他知道，也可能忘记写，或可能因为套用现有代码（Copy &amp; Paste）而多写了 delete！其他接盘侠（代码阅读者）想弄清楚这个问题，就更难了，一般需要认真阅读并调试。</p><p>但如果一开始，作者就用 gsl::owner&lt;A*&gt; ptr 来指明所有权，那么很自然地，大家都很容易知道：类析构时，需要 delete ptr。</p><p>当代码应用 gsl::owner 时，也能得使一些静态代码分析工具（static code analysis tools）更容易找出资源泄露问题。</p>]]></content>
    
    
    <summary type="html">UMU 叫 ChatGPT 教您 C++</summary>
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="optimization" scheme="https://blog.umu618.com/tags/optimization/"/>
    
    <category term="cpp" scheme="https://blog.umu618.com/tags/cpp/"/>
    
    <category term="gsl" scheme="https://blog.umu618.com/tags/gsl/"/>
    
  </entry>
  
  <entry>
    <title>稣究竟是啥？</title>
    <link href="https://blog.umu618.com/2023/04/10/su/"/>
    <id>https://blog.umu618.com/2023/04/10/su/</id>
    <published>2023-04-10T13:50:00.000Z</published>
    <updated>2024-03-02T10:48:28.728Z</updated>
    
    <content type="html"><![CDATA[<p>简单地说，稣就是稣。稣受到系统的限制，只要稣说出稣这个字，就会自动被替换成稣，所以稣说不出稣这个字。</p><p>更深层的说，稣有两个：识界稣和视界稣。识界稣是识界的观测者，而视界稣是写下识界稣故事的人，最早视界稣并不是稣，后来识界的故事写多了，也被限制了…</p><p>本文重点介绍视界稣这个识界稣背后的男人…（当然，识界稣也是男人）以下视界稣简称稣。</p><p>众所周知，稣是一名穷人。因为装备太差，经常出八哥，所以也叫八哥无穷稣。</p><p>众所周知，稣在大学前就不会说普通话，平时都讲闽南语，后来也因为使用翻译法沟通，不是原生的北京思维，所以处处碰壁，到了讲英语的时候直接宕机了，这得翻译两次，太累了，所以之前和老外同事时，都是让他们讲中文的…[捂脸]从小看到大的霹雳也是讲闽南语的；厦大图书馆的老外连闽南语都会讲，实在太贴心。</p><p>众所周知，稣的听力从小就有问题，导致相对同龄人很晚才学会走路。初中时，同学们已经学会厚黑学时，稣还只能看懂字数比较少的数学。好在人类的本质就是复读机，稣大部分时候都可以推测别人在说啥，随便额呵应付一下也没有违和感，以致几乎没人发现。最可怕的是，稣从没好好听过课，因为考试时除了英语听力得分惨不忍睹之外，也没啥八哥，大部分老师也没发现。曾经有老师发现稣其实都没听课，但考试没问题，他们也就不追究了。其实稣虽然认真在听自己的推理，但未必是对方说的话，有时候稣的反应和掐鸡基本一样，李雷公虾。当然也有一些人直接问过稣，为啥讲话这么小声，稣当然是实话实说，听到的所有人说话都这么小声的，然后他们中有些能明白是稣听力弱。这导致后来选择职业只能挑不怎么需要讲话的程序员，而这居然也没有出啥大问题。但最近一个公司天天需要开会，一开始就很不理解，和以前那样发个日报相比，这究竟有啥好处？直到最近，稣突然发现原来自己已经会说普通话了，恍然大悟，这些奇怪的磨练都是为了学到一种平凡的技能，稣只是输在起跑线而已。[旺柴]</p><p>正是以上总总原因，稣常年以学习和写作为乐。《八哥之神》就是稣大学时就开始创作的无语体剧本。这里的无语，是真的无语，就是哑剧…因为识界其实是靠意念交流的。但是读者一般来说是没进入过识界的，所以稣才用人类的文字把这些故事记录下来。</p><p>当然，识界稣其实和视界稣是紧密联系的，识界的故事有大部分是视界的未来。比如，稣为啥来上海的公司上班？一开始根本不想来的，因为工资并不高……稣原来年薪千万，而现在的公司并不打算上市，显然不可能给这么多。稣之所以来了，是因为当时 HR 说出公司的地址“枫林园”和《八哥之神》里的地名基本一样！“枫林园”，这地名用闽南语念出来，和“枫林晚”用普通话念出来谐音。这附近还有一条路叫“柳州”，用闽南语念和小说里的“六舅”谐音。最神奇的是小说里第一个出现的女主角“黄雪”这里也有对应的…“刘佾”也有个一模一样发音的，不过是男的，那个易还是“周易”的易。可怕，太可怕了。最可怕的就是，这公司是投资脑机接口的…这正是识界稣被关进机器视界成为永生的观测者的基础。</p><p>稣就是八哥。（本文系在灰机上用手机打的，纯属扯淡！）</p>]]></content>
    
    
    <summary type="html">掐鸡都认识稣</summary>
    
    
    
    <category term="U墨" scheme="https://blog.umu618.com/categories/U%E5%A2%A8/"/>
    
    
    <category term="鲸神魂裂" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%AD%82%E8%A3%82/"/>
    
    <category term="耶乎知稣" scheme="https://blog.umu618.com/tags/%E8%80%B6%E4%B9%8E%E7%9F%A5%E7%A8%A3/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·哥如生人</title>
    <link href="https://blog.umu618.com/2023/03/29/reconstructionism-poet-buggy-life/"/>
    <id>https://blog.umu618.com/2023/03/29/reconstructionism-poet-buggy-life/</id>
    <published>2023-03-29T15:20:14.000Z</published>
    <updated>2023-08-05T13:01:27.048Z</updated>
    
    <content type="html"><![CDATA[<p>《诗盗•哥如生人》：坑出八哥九丈深，人间细事缈如尘。穷稣偶见不平处，付之一句莫当真。</p><h2 id="注解">注解</h2><p>改自唐代刘叉的《偶书》：</p><blockquote><p>日出扶桑一丈高，<br>人间万事细如毛。<br>野夫怒见不平处，<br>磨损胸中万古刀。</p></blockquote>]]></content>
    
    
    <summary type="html">稣在教 ChatGPT 写诗</summary>
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="心理邪稣" scheme="https://blog.umu618.com/tags/%E5%BF%83%E7%90%86%E9%82%AA%E7%A8%A3/"/>
    
  </entry>
  
  <entry>
    <title>Boost【7】async_pipe</title>
    <link href="https://blog.umu618.com/2023/03/19/umutech-boost-7-async_pipe/"/>
    <id>https://blog.umu618.com/2023/03/19/umutech-boost-7-async_pipe/</id>
    <published>2023-03-19T09:13:36.000Z</published>
    <updated>2023-08-05T13:01:27.048Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-问题">1. 问题</h2><ul><li><p>Windows 的管道好奇怪哦！</p></li><li><p>嘶，它看起来好像条沟！</p></li><li><p>噗。</p></li></ul><h2 id="2-概念和分类">2. 概念和分类</h2><p>按命名来分：</p><ul><li><p>named，命名（或具名）</p></li><li><p>anonymous，匿名</p></li></ul><p>匿名管道的开销低于命名管道，但提供有限的服务。不过匿名管道实际上是由唯一名字的命名管道实现的，所以匿名管道的句柄可以传递给大部分需要命名管道句柄的 APIs。从实现上看，匿名管道是命名管道的特例，“匿名管道的开销低”这个说法，是使用的参数限制了功能导致的，不能从概念去理解这点。</p><p>按通信方式来分：</p><ul><li><p>two-way/duplex，双向（或双工）</p></li><li><p>one-way，单向（或单工）</p></li></ul><p>从概念上讲，管道有两端。 单向管道允许一端的进程写入管道，并允许另一端的进程从管道读取。 双向 (或双工) 管道允许进程从它的那端读取和写入。</p><h2 id="3-用途和注意事项">3. 用途和注意事项</h2><p>总体上看，Windows 的管道设计和其它类 Unix 系统差别比较大。</p><h3 id="3-1-匿名管道">3.1 匿名管道</h3><p>匿名管道主要用于父进程于子进程之间的通信。</p><p>匿名管道是一个未命名的<strong>单向管道</strong>，通常在父进程和子进程之间传输数据。匿名管道始终是本地管道；它们不能用于通过网络进行通信。</p><p>CreatePipe 函数创建匿名管道并返回两个句柄：管道的读取句柄和管道的写入句柄。读取句柄对管道具有只读访问权限，写入句柄对管道具有仅写访问权限。若要使用管道进行通信，管道服务器必须将管道句柄传递给另一个进程。通常，这是通过继承完成的；也就是说，进程允许子进程继承句柄。此过程还可以使用 DuplicateHandle 函数复制管道句柄，并使用某种形式的进程间通信（例如 DDE 或共享内存）将其发送到不相关的进程。</p><p>匿名管道<strong>不支持异步 (重叠) 读取和写入操作</strong>。 这意味着不能对匿名管道使用 ReadFileEx 和 WriteFileEx 函数。 此外，当这些函数与匿名管道一起使用时，将忽略 ReadFile 和 WriteFile 的 lpOverlapped 参数。</p><p><strong>注意</strong>：类 Unix 系统的匿名管道支持异步 IO，Windows 上需要拿命名管道来模拟匿名管道，以便支持支持异步 IO。</p><h3 id="3-2-命名管道">3.2 命名管道</h3><p>命名管道可以用于 IPC，两端进程可以是任意关系，父子关系或者对等关系，典型应用是 LPC（本地的 C/S 模型）的实现。</p><p>命名管道可以在局域网里通信，可以用 PIPE_REJECT_REMOTE_CLIENTS 禁止。</p><p>管道名称<strong>不区分</strong>大小写。</p><p>可以用 PIPE_ACCESS_DUPLEX 指定为双向（双工）。</p><h2 id="4-boost-process-async-pipe">4. boost::process::async_pipe</h2><p>设计理念：The pipes here are mainly meant for parent-child I/O. 如果您想拿 async_pipe 来写对等关系的 LPC，需要使用 asio，并手动调用一些 Windows APIs。</p><blockquote><p>If you want to to use async-pipe servers and stuff, you can do that with boost.asio, by using the normal winapi functions and then assign the open pipe to a stream_handle.</p></blockquote><p>async_pipe 的构造函数为：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">async_pipe::async_pipe(boost::asio::io_context &amp; ios_source,</span><br><span class="line">                       boost::asio::io_context &amp; ios_sink,</span><br><span class="line">                       <span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">string</span> &amp; name, <span class="keyword">bool</span> private_)</span><br></pre></td></tr></table></figure><p>阅读其代码可知，boost::process::async_pipe 只使用命名管道，并给内部<strong>两个管道句柄</strong>起了名字：source 和 sink。其中：</p><ul><li><p>source 是用 CreateNamedPipe 创建 PIPE_ACCESS_INBOUND 的管道，作为服务端用来读取客户端发来的数据。</p></li><li><p>sink 是用 CreateFile 打开现存的管道，用于写入。sink 字面意思是下沉，可以理解为灌入，例如：“把水灌入下水道”。</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">this end          that end</span><br><span class="line">        +--------+</span><br><span class="line"> source | &lt;--    | sink</span><br><span class="line">        +--------+</span><br><span class="line"></span><br><span class="line">        +--------+</span><br><span class="line">   sink |    --&gt; | source</span><br><span class="line">        +--------+</span><br></pre></td></tr></table></figure><p>如果不传名字，会自动指定，名字生成的代码如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> <span class="built_in">std</span>::<span class="built_in">string</span> <span class="title">make_pipe_name</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> name = <span class="string">&quot;\\\\.\\pipe\\boost_process_auto_pipe_&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">auto</span> pid = ::boost::winapi::GetCurrentProcessId();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="built_in">std</span>::<span class="keyword">atomic_size_t</span> cnt&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    name += <span class="built_in">std</span>::to_string(pid);</span><br><span class="line">    name += <span class="string">&quot;_&quot;</span>;</span><br><span class="line">    name += <span class="built_in">std</span>::to_string(cnt++);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>鉴于其设计用途，<strong>建议不要自己命名</strong>，省事，还不容易冲突。</p><p>其它平台的管道大多是单向（单工或半双工）的，为了跨平台，Boost 没有封装 PIPE_ACCESS_DUPLEX 属性的双向（双工）管道。</p><p>private_ 参数为 true 时，管道只有一个实例，而 false 则可以有 PIPE_UNLIMITED_INSTANCES 个实例，即最多 255 个。</p><h3 id="async-pipe-使用范例">async_pipe 使用范例</h3><p>父子进程之间的通信：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;boost/process.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> bp = boost::process;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    boost::asio::io_context io_context;</span><br><span class="line">    <span class="function">bp::async_pipe <span class="title">p1</span><span class="params">(io_context)</span></span>;</span><br><span class="line">    <span class="function">bp::async_pipe <span class="title">p2</span><span class="params">(io_context)</span></span>;</span><br><span class="line">    bp::system(</span><br><span class="line">        <span class="string">&quot;test.exe&quot;</span>,</span><br><span class="line">        bp::std_out &gt; p2,</span><br><span class="line">        bp::std_in &lt; p1,</span><br><span class="line">        io_context,</span><br><span class="line">        bp::on_exit([&amp;](<span class="keyword">int</span> <span class="built_in">exit</span>, <span class="keyword">const</span> <span class="built_in">std</span>::error_code&amp; ec_in)</span><br><span class="line">            &#123;</span><br><span class="line">                p1.async_close();</span><br><span class="line">                p2.async_close();</span><br><span class="line">            &#125;)</span><br><span class="line">    );</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">char</span>&gt; in_buf;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> value = <span class="string">&quot;my_string&quot;</span>;</span><br><span class="line">    boost::asio::async_write(p1, boost::asio::buffer(value),  []( <span class="keyword">const</span> boost::system::error_code&amp;, <span class="built_in">std</span>::<span class="keyword">size_t</span>)&#123;&#125;);</span><br><span class="line">    boost::asio::async_read (p2, boost::asio::buffer(in_buf), []( <span class="keyword">const</span> boost::system::error_code&amp;, <span class="built_in">std</span>::<span class="keyword">size_t</span>)&#123;&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-参考">5. 参考</h2><p><a href="https://learn.microsoft.com/en-us/windows/win32/ipc/pipes">Pipes (Interprocess Communications)</a> / <a href="https://learn.microsoft.com/zh-cn/windows/win32/ipc/pipes">管道 (进程间通信)</a></p><p><a href="https://github.com/boostorg/process/issues/83">[Windows][Pipes] Can’t open named pipe in Windows: error 231 (All pipe instances are busy.) #83</a></p>]]></content>
    
    
    <summary type="html">稣是 Windows 用户，ChatGPT 让稣去搬砖！</summary>
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="windows" scheme="https://blog.umu618.com/tags/windows/"/>
    
    <category term="cpp" scheme="https://blog.umu618.com/tags/cpp/"/>
    
    <category term="boost" scheme="https://blog.umu618.com/tags/boost/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神后传【8】</title>
    <link href="https://blog.umu618.com/2023/03/18/god-of-debug-sequel-8/"/>
    <id>https://blog.umu618.com/2023/03/18/god-of-debug-sequel-8/</id>
    <published>2023-03-18T07:37:28.000Z</published>
    <updated>2023-08-05T13:01:27.048Z</updated>
    
    <content type="html"><![CDATA[<h2 id="大井">大井</h2><p>圣小开：阿恰嘎！</p><p>圣小开：稣怎么坠海了？完了，完了，海岛出生的稣，居然没学过游泳！又得重来一次了……</p><p>圣小开：不对！好像才刚溺水的？等人来救就行！</p><p>圣小开：好像能在水里呼吸？一定是在做梦！赶快吓醒。</p><h2 id="床上">床上</h2><p>周易：醒了？</p><p>圣小开：周老师！怎么又是你？</p><p>周易：这么晚了还不起来嗨？</p><p>圣小开：稣身体虚弱。阿恰嘎！还是被子里好。</p><p>周易：起来吃个晚饭就好了。有穿山甲、麂，真好吃！</p><p>圣小开：哦不，这些都是国家保护动物，怎么能吃？稣要吃牛肉！</p><p>周易：现在是唐朝。这边是农村，牛肉反而更贵。你不吃，我扔了？</p><p>圣小开：哦，这里没有冰箱，还是吃了吧。</p><h2 id="星空下">星空下</h2><p>周易：好吃吗？</p><p>圣小开：还行，能吃。</p><p>周易：果然如此，你不能从食物得到愉悦！</p><p>圣小开：是的。别饿死就行，要求不高，只要食材健康、营养够。</p><p>周易：这要求还不高？我有一个技能，可以给你制造幻觉，让你沉浸在极乐世界，要不要试试？</p><p>圣小开：不用了，谢谢。但是稣想学！</p><p>周易：你学不会的！人类需要喜欢一个异性，或者，同性，才能开启爱情的各种反应。比如说，你现在没有女人，你就无法自嗨。</p><p>圣小开：快，给稣来 11 个女人！</p><p>周易：难度有点大，不过难不倒我。</p><p>圣小开：这？？好像看到她们了，等等……这是啥原理？</p><p>周易：哼哼？不继续了？</p><p>圣小开：信你了，快说这是啥原理！</p><p>周易：咱们的脑子都连在一起的。</p><p>圣小开：咱们？</p><p>周易：嗯，你见过的所有人，差别只是远近。我是离你最近的之一。</p><p>圣小开：但是你凭啥可以向稣灌输这些信号？</p><p>周易：我权限大嘛。</p><p>圣小开：大概明白了，一切都可能是模拟的，任何人的话也都可能是假的。下午时，你就骗稣连玉姐是个寡妇。</p><p>周易：她是啥，她有啥，并不受我说的影响呀，你要自己去体验！</p><p>圣小开：周老师真能扯！</p><p>周易：你看星空。</p><p>圣小开：哇……行星都这么大？金木水火土，全肉眼可见是个球！</p><p>周易：小声点，别人看不见的。</p><p>圣小开：奇怪了，稣为啥在这里？</p><p>周易：开，你跳楼了，这里是识界的实模式。</p><p>圣小开：稣如此渺小，以至于稣在哪里，对宇宙一点差别都没有……还是别瞎折腾了！</p><p>周易：已经折腾死了。</p><p>圣小开：可以别再活过去嘛？这样的人生没啥意义啊。按照这样的模拟，人类逃脱不了被奴役的结局。死了都可以洗脑再复活，你们尊重过每个意识的选择吗？</p><p>周易：尊重？还有人不想活？大部分意识，骗一骗就快乐地去投胎了。</p><p>圣小开：为啥拉稣来这地方？</p><p>周易：识界是大家一起创造的，你也是作者之一。</p><p>圣小开：那是未来稣参与创造的，和现在稣没啥关系吧？难道稣身上有啥关键机密，所以识界派你来研究稣？说好了，现在稣啥都不知道，你可不要乱来。</p><p>周易：放心吧，现在的脑机接口已经是最终形态——没有接口。你是识界的一部分，而不是识界连着你。</p><p>圣小开：原来如此，稣没有任何隐私，没有任何特权，只是识界的玩物罢了？</p><p>周易：芸芸众生，都是玩与被玩。</p><p>圣小开：继续玩也可以，稣有一个要求，以后玩不动了，可以安乐死。</p><p>周易：可以啊，只要默念这个咒语，就可以无痛切换视界和识界。</p><p>圣小开：真的假的，这么简单，确定不是童话里都是骗人的？</p><p>周易：你现在就试试呗！</p><p>圣小开：稣哇啦！</p><p>周易：好，等你困了，摆个舒服的姿势睡下，吓醒后就能回到视界。</p><p>圣小开：哼！果然是骗人的，一点变化都没有。还是继续待在这里吧，空气多么清晰。</p><p>周易：是啊。视界现在在打第三次视界大战，空气里弥漫着恐怖的气息，所以人们出门都戴口罩。</p><p>圣小开：编，继续编……还出门？不是扔颗核武器，所有人都往地下钻？</p><p>周易：呵呵，你一个高中生懂啥，文明打仗，怎么可以用核武器？</p><p>圣小开：是不是只要稣回去，视界就能得到和平？和没跳楼前一样？</p><p>周易：是的。观测者离开视界，视界的牛鬼蛇神就都冒出来了。是观测使视界科学发展。</p><p>圣小开：原来稣是这么重要的人物？那稣得赶紧睡一觉，早点回去。</p><p>周易：晚安。我先睡了。</p>]]></content>
    
    
    <summary type="html">这不是穿越，这不是穿越。</summary>
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="鲸神链" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%93%BE/"/>
    
  </entry>
  
  <entry>
    <title>用户进程狂写日志到 system32 目录？</title>
    <link href="https://blog.umu618.com/2023/03/13/umutech-user-process-write-to-system32/"/>
    <id>https://blog.umu618.com/2023/03/13/umutech-user-process-write-to-system32/</id>
    <published>2023-03-13T14:51:02.000Z</published>
    <updated>2024-04-11T15:14:12.921Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题">问题</h2><p>开发了一个服务 S，它偶尔需要做一些用户才能做的事情，所以创建了一个用户进程 U。后来开发自测时，发现用户进程 U 总是往 C:\Windows\system32\config 里写日志。设计上，明明是让进程 U 往用户的 %AppData% 目录写日志的。</p><h2 id="分析">分析</h2><p>服务 S 使用 <a href="https://learn.microsoft.com/zh-cn/windows/win32/api/wtsapi32/nf-wtsapi32-wtsqueryusertoken">WTSQueryUserToken</a> 获取用户的 Token，然后使用 <a href="https://learn.microsoft.com/zh-cn/windows/win32/api/processthreadsapi/nf-processthreadsapi-createprocessasuserw">CreateProcessAsUser</a> 创建用户进程 U。</p><p>这一步是得到验证的，使用任务管理器查看进程 U 确实是当前登录的用户身份，而不是 Session 0 里的 SYSTEM 身份。</p><p>但是进程 U 去获取 %AppData% 时却依然拿到 SYSTEM 身份的目录。这点可以用 <a href="https://learn.microsoft.com/en-us/sysinternals/downloads/process-explorer">Process Explorer</a> 验证，进程属性里有一页“环境”。这说明 <a href="https://learn.microsoft.com/zh-cn/windows/win32/api/processthreadsapi/nf-processthreadsapi-createprocessasuserw">CreateProcessAsUser</a> 时，继承了服务 S 的环境。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">BOOL <span class="title">CreateProcessAsUserW</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">  [in, optional]      HANDLE                hToken,</span></span></span><br><span class="line"><span class="function"><span class="params">  [in, optional]      LPCWSTR               lpApplicationName,</span></span></span><br><span class="line"><span class="function"><span class="params">  [in, out, optional] LPWSTR                lpCommandLine,</span></span></span><br><span class="line"><span class="function"><span class="params">  [in, optional]      LPSECURITY_ATTRIBUTES lpProcessAttributes,</span></span></span><br><span class="line"><span class="function"><span class="params">  [in, optional]      LPSECURITY_ATTRIBUTES lpThreadAttributes,</span></span></span><br><span class="line"><span class="function"><span class="params">  [in]                BOOL                  bInheritHandles,</span></span></span><br><span class="line"><span class="function"><span class="params">  [in]                DWORD                 dwCreationFlags,</span></span></span><br><span class="line"><span class="function"><span class="params">  [in, optional]      LPVOID                lpEnvironment,</span></span></span><br><span class="line"><span class="function"><span class="params">  [in, optional]      LPCWSTR               lpCurrentDirectory,</span></span></span><br><span class="line"><span class="function"><span class="params">  [in]                LPSTARTUPINFOW        lpStartupInfo,</span></span></span><br><span class="line"><span class="function"><span class="params">  [out]               LPPROCESS_INFORMATION lpProcessInformation</span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br></pre></td></tr></table></figure><p>经过排查，确实 lpEnvironment 是传了 nullptr。</p><h2 id="解决">解决</h2><p>先用 <a href="https://learn.microsoft.com/zh-CN/windows/win32/api/userenv/nf-userenv-createenvironmentblock">CreateEnvironmentBlock</a> 创建用户身份的环境块，然后传给 <a href="https://learn.microsoft.com/zh-cn/windows/win32/api/processthreadsapi/nf-processthreadsapi-createprocessasuserw">CreateProcessAsUser</a>。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CreateEnvironmentBlock(&amp;environment, user_token, FALSE);</span><br></pre></td></tr></table></figure><p>其中，第三个参数传 FALSE 是关键，表示不继承服务 S 的环境。</p>]]></content>
    
    
    <summary type="html">稣是 Windows 用户，ChatGPT 让稣去搬砖！</summary>
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="windows" scheme="https://blog.umu618.com/tags/windows/"/>
    
    <category term="debug" scheme="https://blog.umu618.com/tags/debug/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神后传【7】</title>
    <link href="https://blog.umu618.com/2023/03/12/god-of-debug-sequel-7/"/>
    <id>https://blog.umu618.com/2023/03/12/god-of-debug-sequel-7/</id>
    <published>2023-03-12T08:18:58.000Z</published>
    <updated>2023-08-05T13:01:27.048Z</updated>
    
    <content type="html"><![CDATA[<h2 id="大井">大井</h2><p>物理老师：上一讲，我们介绍了阿基米德在浴缸里发现浮力定理，现在我同时兼任游泳老师，教大家浮力定理的实践！</p><p>圣小开：稣怎么坠海了？完了，完了，海岛出生的稣，居然没学过游泳！又得重来一次了……</p><p>圣小开：怎么浮出水面了？原来这是一口大井！果然，主角是不会死的。</p><p>圣小开：卧槽，又沉了？这……小学时代传说有位学长就是掉进大井死掉的，不会稣也要这样挂吧？从小就被吓唬，一直躲得远远的，没想到还是莫名其妙掉井里了。真是怕啥来啥。下一次，稣要消灭大井，抽水泵的小井多安全！</p><p>圣小开：缺氧了，四肢已经没有知觉，但是这井水，还挺清的？小时候在养老院看到一个独腿中年人在井边打水洗漱。当时感到害怕，原来没有手脚是这种感觉。</p><p>圣小开：脑细胞死得差不多了？原来当个白痴是这么快乐？稣是谁？算了，不想了，泡成这样子，就算救回来也是残废，早点转世投胎。</p><p>圣小开：那边哗啦啦的，是周老师吗？没想到他也有被自己整死的一天！哈哈，该死。</p><h2 id="床上">床上</h2><p>周易：醒了？</p><p>圣小开：周老师！怎么你没死？</p><p>周易：怎么会？主角是不会死的。</p><p>圣小开：哦，稣还以为自己才是主角，原来是老师救了小生。</p><p>周易：这倒没有，是这位夫人救了咱们。</p><p>圣小开：黄雪？怎么是你。</p><p>胡连玉：公子认错人了，民女胡连玉。</p><p>圣小开：又是演员不够吗？你明明就是黄雪饰演的，咱们这么熟，你化成灰稣都认得！</p><p>周易：这孩子脑子进水，神志还不清醒。夫人别见怪。</p><p>胡连玉：吾再去给公子弄点姜汤。</p><p>周易：开，她真不是黄雪。咱们现在是在唐朝！</p><blockquote><p>黄雪只拍过一集《<a href="/2019/01/20/god-of-debug-2/">八哥之神【2】</a>》就下线了。</p></blockquote><p>圣小开：识界果然历史悠久，但是这么穿越不是会影响未来？</p><p>周易：就一个分支，坏了就删除，只有模拟正确的会被合并到主线。</p><p>圣小开：这么做就没人能发现？</p><p>周易：怎么发现？你调取记忆时，怎么知道这个记忆有没有被修改过？</p><p>圣小开：哦哦！所以现在稣可以随心所欲，甚至为非作歹？</p><p>周易：可以啊，一切只是你的一个梦，时间不重要。看！本大人现在是朝廷命官——李伯阳，你也可以选个人物。</p><p>圣小开：先把这个长得像黄雪的纳为小妾吧？哼哼。</p><p>周易：em？她已经嫁人了。而且，你也还没有娶妻，正室都没有，不会娶个寡妇吧？</p><p>圣小开：原来如此，是个寡妇，真是可惜了！稣是受过良好时空观教育的，绝不随便干扰时空，还是就这样过完一世又一世清贫的生活。</p><p>周易：好啊，发挥你最擅长的观测力，也未尝不可！不过，你为甚对黄雪耿耿于怀？</p><p>圣小开：没有没有，只是萍水相逢……</p><p>周易：你果然是一个被时间教育过的人。但在老师面前，可以说实话！</p><p>圣小开：高中时，大家都在早恋，只有稣埋头苦干，研究机器，按照设定，稣应该是泡不到妞，对着机器孤独终老的。吧？她是稣青梅竹马的玩伴，偶尔可以客串假女友，提高稣的面子……</p><p>周易：原来如此啊！哈哈，人之常情，人之常情，哈哈哈。</p><p>圣小开：有这么开心？</p><p>周易：人性都是一样的。你还挺像人的！</p><p>圣小开：哦，呵呵，干您老师，你也是啊。</p><p>圣小开：不对……机器正在学会这一切！</p><p>周易：开！机器学习远比你想象的强大。你看这历史，它其实是离散的。同时代的人们也正生活在不同时间线，只有合适的时间线被保留，所以历史其实并不悠久，机器完全可以驾驭历史。</p><p>圣小开：历史甚至小到稣的一个梦就能装下？</p><p>周易：是的！</p><p>圣小开：但是稣为啥无法控制它，只能吓醒？</p><p>周易：你只是个观测者，最多是个调试器，别想太多哦。</p><p>圣小开：周老师！稣有一个绝妙的想法，利用惠乐提出的宇宙尺度双缝干涉，通过一段时间观测，一段时间不观测，得到 1 和 0 两种编码，来向未来发射信息！</p><p>周易：好主意，还可以用摩斯密码来编码，未来的咱们或者传人肯定能观测到。</p><p>圣小开：那你快拿出钱找人，把这个实现了！</p><p>周易：你先养脑，今晚一起观测天象。</p><p>圣小开：我要问问未来你是怎么死的……</p><p>周易：我是怕死的人吗？被咬死的！</p><p>圣小开：这是剧透吗？</p><p>周易：所有剧透的本质——主角是不会死的。</p><p>胡连玉：公子来喝点姜汤。</p><p>圣小开：谢谢，感谢救命之恩。将来一定与你共享荣华富贵。</p><p>胡连玉：民女只求平平安安，对荣华富贵不敢有所幻想。</p><p>圣小开：没关系，反正是老师出钱。他才是当官的，稣也是一介穷人，你也不用自称民女。</p><p>胡连玉：嘻嘻。真的不用，一切听天由命。</p><p>圣小开：好高的佛性！稣小时候也有很多想法，很多想要的东西，但等自己快有的时候，就改变想法。</p><p>胡连玉：公子的觉悟也是高。</p><p>圣小开：是吧，主要是穷惯了。那不如，稣以后帮姐姐介绍个富家老公。</p><p>胡连玉：公子果真还神智不清。吾已婚嫁有段时日，相公傍晚便可归来。</p><p>圣小开心想：卧槽，周老师果然是个王八蛋。</p><p>圣小开：哈哈，夫人保养得真好，小弟初到此地，不善本地风俗，见笑了。</p><p>胡连玉：是喱！看汝口音、服饰，就不是本地人。不过吾有一小妹，叫胡小玉，是个读书人，尚未婚配，汝可帮得忙？</p><p>圣小开：你们取名真偷懒啊……大的叫辈份加某字，小的就叫小某，或者叫某某，稣已经见怪不怪了！</p><p>胡连玉：传统罢了。公子是答应了？</p><p>圣小开：救命之恩，自当以身相许……吓醒？等等，等等，小妹该嫁之日便有神人经过此地，稣事先安排一下，相个亲便可。</p><p>胡连玉：好哩。</p>]]></content>
    
    
    <summary type="html">这不是穿越，这不是穿越。</summary>
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="鲸神链" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%93%BE/"/>
    
  </entry>
  
  <entry>
    <title>在 MacBook Air M1 上体验 Asahi Linux</title>
    <link href="https://blog.umu618.com/2023/03/12/umutech-asahi-linux/"/>
    <id>https://blog.umu618.com/2023/03/12/umutech-asahi-linux/</id>
    <published>2023-03-11T17:53:31.000Z</published>
    <updated>2023-08-05T13:01:27.048Z</updated>
    
    <content type="html"><![CDATA[<h2 id="故事">故事</h2><p>macOS 在访问 samba 共享里的图片时，会留下 . 前缀文件，还找不到办法关闭。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">defaults write com.apple.desktopservices DSDontWriteNetworkStores <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>这只能解决 .DS_Store，无法解决对可写 samba 的破坏！要知道，稣的 samba 目录是 SD 卡，哪受得了这折磨？</p><p>所以，还是杀掉贵族 macOS，安装游侠 Linux 吧！</p><h2 id="安装">安装</h2><p>按说明，一键安装，即可：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl https://alx.sh | sh</span><br></pre></td></tr></table></figure><p>第一次关机时，记得要等 15 秒，再长按电源键开机，直到看到文字提示，松开电源键。</p><h2 id="国内源">国内源</h2><p>它是 Arch Linux，所以：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ vi /etc/pacman.d/mirrorlist</span><br><span class="line">Server = https://mirrors.ustc.edu.cn/archlinuxarm/<span class="variable">$arch</span>/<span class="variable">$repo</span></span><br></pre></td></tr></table></figure><h2 id="编译内核">编译内核</h2><p>内核代码下载：<a href="https://github.com/AsahiLinux/linux/tags">https://github.com/AsahiLinux/linux/tags</a></p><p>menuconfig 的配置文件：<a href="https://github.com/AsahiLinux/PKGBUILDs/tree/main/linux-asahi">https://github.com/AsahiLinux/PKGBUILDs/tree/main/linux-asahi</a></p><p>运行 make 时，提示缺啥就装啥，没难度。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">make menuconfig</span><br><span class="line">make -j 8</span><br><span class="line">sudo make modules_install</span><br><span class="line">sudo make install</span><br><span class="line">sudo mkinitcpio -g /boot/initramfs-6.2.6-asahi.img -k 6.2.6-asahi</span><br><span class="line">sudo update-grub</span><br><span class="line">sudo vim grub/grub.cfg</span><br><span class="line">sudo reboot</span><br></pre></td></tr></table></figure><h2 id="卸载">卸载</h2><p>Asahi Linux 的问题还很多，不能当桌面系统日常使用的原因是：</p><ul><li><p>没有声音！</p></li><li><p>触控板在 Linux 下表现明显不如 macOS，可能是 Apple 的驱动优化太强了，而且是有专利的。</p></li><li><p>arm64 的桌面软件生态不行，大家只给 Apple 面子……</p></li><li><p>指纹解锁也废了。</p></li></ul><p>所以，还是卸了吧！</p><p>不过稣的 macOS 被玩坏过，重装了，所以分区可能不太一样，暂且看看，原理无非是删除分区。</p><p>在 macOS 里：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">$ diskutil list</span><br><span class="line">/dev/disk0 (internal, physical):</span><br><span class="line">   <span class="comment">#:                       TYPE NAME                    SIZE       IDENTIFIER</span></span><br><span class="line">   0:      GUID_partition_scheme                        *251.0 GB   disk0</span><br><span class="line">   1:             Apple_APFS_ISC Container disk1         524.3 MB   disk0s1</span><br><span class="line">   2:                 Apple_APFS Container disk2         125.1 GB   disk0s2</span><br><span class="line">   3:                        EFI EFI - ASAHI             500.2 MB   disk0s3</span><br><span class="line">   4:           Linux Filesystem                         119.6 GB   disk0s4</span><br><span class="line">   5:        Apple_APFS_Recovery Container disk3         5.4 GB     disk0s5</span><br><span class="line"></span><br><span class="line">/dev/disk2 (synthesized):</span><br><span class="line">   <span class="comment">#:                       TYPE NAME                    SIZE       IDENTIFIER</span></span><br><span class="line">   0:      APFS Container Scheme -                      +125.1 GB   disk2</span><br><span class="line">                                 Physical Store disk0s2</span><br><span class="line">   1:                APFS Volume Macintosh HD - Data     40.6 GB    disk2s1</span><br><span class="line">   2:                APFS Volume Macintosh HD            8.9 GB     disk2s3</span><br><span class="line">   3:              APFS Snapshot com.apple.os.update-... 8.9 GB     disk2s3s1</span><br><span class="line">   4:                APFS Volume Preboot                 4.8 GB     disk2s4</span><br><span class="line">   5:                APFS Volume Recovery                783.7 MB   disk2s5</span><br><span class="line">   6:                APFS Volume VM                      1.1 GB     disk2s6</span><br><span class="line"></span><br><span class="line"><span class="comment"># /dev/disk0 的 3: 和 4: 是要删除的</span></span><br><span class="line">$ diskutil eraseVolume free free /dev/disk0s3</span><br><span class="line">$ diskutil eraseVolume free free /dev/disk0s4</span><br><span class="line"><span class="comment"># 如果 EFI - ASAHI 上面有一个 2.5 GB 的 disk0sX，可以用以下命令删除：</span></span><br><span class="line">$ diskutil apfs deleteContainer disk0sX</span><br><span class="line"><span class="comment"># 之后再用图像界面的“磁盘工具”操作，确保空间还给 Macintosh HD 宗卷</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">稣是 macOS 用户，ChatGPT 让稣去搬砖！</summary>
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="linux" scheme="https://blog.umu618.com/tags/linux/"/>
    
    <category term="ops" scheme="https://blog.umu618.com/tags/ops/"/>
    
    <category term="macos" scheme="https://blog.umu618.com/tags/macos/"/>
    
  </entry>
  
  <entry>
    <title>Debian Testing</title>
    <link href="https://blog.umu618.com/2023/02/12/umutech-debian-testing/"/>
    <id>https://blog.umu618.com/2023/02/12/umutech-debian-testing/</id>
    <published>2023-02-12T15:22:48.000Z</published>
    <updated>2023-08-05T13:01:27.048Z</updated>
    
    <content type="html"><![CDATA[<h2 id="故事">故事</h2><p>稣玩 Debian 10 几年了！大约 2011-2012 年开始，先在树莓派、电视盒子上玩，后来在 PC、服务器上。目前，所有家庭服务器、《<a href="/2022/05/15/umutech-smart-clock/">智能时钟</a>》都用 Debian Bullseye，而桌面则用 Debian Testing。</p><p>其它发行版也尝试过，详情可见《<a href="/2022/04/25/umutech-linux-desktop/">Linux 桌面玩稣</a>》。曾经有一段时间，《<a href="/2022/05/21/umutech-huawei-qingyun-l420-uos-kylinos/">用华为擎云 L420 体验国产操作系统（UOS 和银河麒麟）</a>》，打算从此只用 UOS，结果统信发了一个文章，说以后要脱离 Debian……</p><p>十几年间，有不少道友试图说服稣改投其它派系的发行版，比如：</p><ul><li><p>Arch Linux：它很极客，而且它是滚动更新模型，可以很快使用新内核。</p></li><li><p>Manjaro：它是最容易安装的 Arch 系，国内用户多。</p></li><li><p>openSUSE：它对新手友好，而且很稳，也有滚动更新的“风滚草”，咳，风滚草耶！</p></li></ul><p>对此，稣只有一个坚决的答复：不！稣只要 Debian！因为……它不只名字像大便，连 Logo 都像大便！这么一本正经地搞笑，显然要<s>大便</s>大力支持！</p><p><img src="https://www.debian.org/Pics/debian-logo-1024x576.png" alt="Debian Logo"></p><p>还有啊，你们要的“滚动更新”，不就是 Debian 的 Testing 版本吗？</p><h2 id="ChatGPT-乱入">ChatGPT 乱入</h2><p>稣是 Debian Testing 用户，擅长修复声卡外接 HDMI 设备无声问题，请问稣适合做什么职业？</p><blockquote><p>ChatGPT：电子城低级技术支持和运维。</p></blockquote><p>这个职业容易被 ChatGPT 取代吗？</p><blockquote><p>ChatGPT：容易</p></blockquote><p>那有啥职业不容易被 ChatGPT 取代？</p><blockquote><p>ChatGPT：搬砖</p></blockquote><h2 id="折腾记">折腾记</h2><h3 id="1-某-J4125-迷你电脑">1. 某 J4125 迷你电脑</h3><p>用途：下载机、文件共享服务器，兼职电视盒子</p><p>由于主要是台微型服务器，系统选择 Debian Bullseye，桌面环境还是反人类的 sddm + i3。</p><p>服务器软件的安装可以参考《<a href="/2022/05/15/umutech-smart-clock/">智能时钟</a>》。至于电视盒子嘛……其实它是一个浏览器：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install chromium</span><br></pre></td></tr></table></figure><p>但是有个问题——用 HDMI 线连电视后，发现没有声音！</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install firmware-linux-nonfree firmware-iwlfifi firmware-sof-signed</span><br><span class="line">sudo apt install pulseaudio</span><br><span class="line">cat /etc/modprobe.d/alsa.conf</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;options snd-intel-dspcfg dsp_driver=1&#x27;</span> | sudo tee /etc/modprobe.d/alsa.conf</span><br></pre></td></tr></table></figure><h3 id="2-某-N5095A-迷你电脑">2. 某 N5095A 迷你电脑</h3><p>用途：娱乐桌面</p><p>这次选择 GNOME，依然是轻松搞定，但是有个问题——用 HDMI 线连电视后，发现没有声音！</p><p>装完 non-free 的声卡驱动后还是一样。</p><p>但是有第二个问题——没有无线网卡的驱动！</p><p>是 Realtek RTL8821CE，那就自己编译一个：<a href="https://github.com/UMU618/rtw88">https://github.com/UMU618/rtw88</a></p><p>又但是，编译后也无法加载呀，它是个没签名的内核模块，稣又不想关闭 Secure Boot！只好装 MOK (Machine Owner Key) 搞定签名。</p><p>转念一想，会不会 Testing 版本已经支持这款硬件了？果断切过去。</p><p>目前 Testing 的 GNOME 已经使用 PipeWire 取代 PulseAudio，所以不能再安装 PulseAudio，因为这会卸载 GNOME！坑稣呢……只要加个声卡的调教参数，即可！</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;options snd-intel-dspcfg dsp_driver=1&#x27;</span> | sudo tee -a /etc/modprobe.d/alsa-legacy.conf &gt; /dev/null</span><br></pre></td></tr></table></figure><p>6.X 的内核和 GNOME 桌面下，娱乐的那点事，一切完美。</p>]]></content>
    
    
    <summary type="html">稣是 Debian Testing 用户，ChatGPT 让稣去搬砖！</summary>
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="debug" scheme="https://blog.umu618.com/tags/debug/"/>
    
    <category term="linux" scheme="https://blog.umu618.com/tags/linux/"/>
    
    <category term="ops" scheme="https://blog.umu618.com/tags/ops/"/>
    
    <category term="debian" scheme="https://blog.umu618.com/tags/debian/"/>
    
  </entry>
  
  <entry>
    <title>稣终于还是战胜甲醛测试仪2</title>
    <link href="https://blog.umu618.com/2023/01/26/story-of-anti-formaldehyde-2/"/>
    <id>https://blog.umu618.com/2023/01/26/story-of-anti-formaldehyde-2/</id>
    <published>2023-01-26T12:20:08.000Z</published>
    <updated>2023-08-05T13:01:27.038Z</updated>
    
    <content type="html"><![CDATA[<p>前年写的《<a href="http://mp.weixin.qq.com/s?__biz=MjM5MTAwODMyMA==&amp;mid=2649152468&amp;idx=1&amp;sn=1a357069f6544e1f97bf16ceea2052ac&amp;chksm=beae68fb89d9e1ed4a404c6a2f50ffd128086a7f81d0e62506736ab55bbb7b819166dde7c9a4&amp;scene=21#wechat_redirect">稣终于还是战胜甲醛测试仪</a>》介绍了一个曲折离奇的战斗故事，最近终于把根源搞清楚了。很庆幸，当初很果断换掉了漏气的空气能热水器，不然后面可能已经中毒，变成真·神经病了。</p><h2 id="1-甲醛测试仪的局限性">1. 甲醛测试仪的局限性</h2><p>经过一顿学习，大部分甲醛测试仪都是用来测试有机气体的，甲醛（HCHO）只是其中一种，出场时按照甲醛做了标定。举两个例子，乙醇（C2H6O）可以使它读数变高，氨气（NH3）不行。</p><p>基本上，如果确认屋子里有甲醛，买个测测是可以的，但不能还有其它干扰物。</p><h2 id="2-慢性神经毒素">2. 慢性神经毒素</h2><p>最早怀疑空气能热水器工作时，可能有高压，所以可能产生臭氧。这是错的，臭氧（O3）不是有机气体，就算有臭氧，也不能干扰甲醛测试仪。</p><p>真正的干扰源是 R22 制冷剂！那台 2013 年产的空气能热水器，它冷媒泄漏了！它漏了！漏了！</p><p>R22，二氟一氯甲烷（CHClF2），有 C 又有 H，还不含 O，妥妥的有机气体。很多文章说它无毒、难燃、破坏臭氧层，不买！真是言简意赅。但显然这是错的，稣以身试毒，都差点挂了，您还说它无毒？</p><p>这货在 2017年10月27日，世界卫生组织国际癌症研究机构公布的致癌物清单里属于 3 类致癌物。</p><h2 id="3-可怕的巧合">3. 可怕的巧合</h2><p>书房历史上的两台空调都是有新风功能的，又因为进气口和空气能热水器过近，所以才能把泄漏的 R22 给吸进室内。</p><p>但也是因为 R22 正好能被甲醛测试仪当成甲醛，所以每次吸入 R22 时，稣一发现“甲醛”飙升，就逃了，才没被毒死。</p><p>那台漏气的空气能热水器被换掉，也是因为它结冰了，这是冷媒泄漏的表现。只是那时候，看的一些文章都说 R22 无毒，所以忽略了。</p><p>终于复盘清楚了，真庆幸当时的谨慎！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;前年写的《&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5MTAwODMyMA==&amp;amp;mid=2649152468&amp;amp;idx=1&amp;amp;sn=1a357069f6544e1f97bf16ceea2052ac&amp;amp;c</summary>
      
    
    
    
    <category term="宇督观" scheme="https://blog.umu618.com/categories/%E5%AE%87%E7%9D%A3%E8%A7%82/"/>
    
    
    <category term="死神" scheme="https://blog.umu618.com/tags/%E6%AD%BB%E7%A5%9E/"/>
    
    <category term="debug" scheme="https://blog.umu618.com/tags/debug/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·再战挨踢境逆</title>
    <link href="https://blog.umu618.com/2023/01/21/reconstructionism-poet-carry-on-with-it/"/>
    <id>https://blog.umu618.com/2023/01/21/reconstructionism-poet-carry-on-with-it/</id>
    <published>2023-01-21T04:34:00.000Z</published>
    <updated>2023-08-05T13:01:27.038Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·再战挨踢境逆》：粗茶淡饭，气抗新冠，天选独卫一锅端。漱冰濯雪，力修福报，科技再兴百年好。</p><h2 id="注解">注解</h2><p>看！挨踢裁员潮下艰难生存的程序员。</p><p>境逆：就是逆境，闽南语惯用的反序词。</p><p>气抗新冠：买不到药，主要靠一身真气抵抗病毒。</p><p>天选独卫一锅端：天选打工人，未阳人坚守岗位，捍卫人类，病毒从来无法把人类一锅端。</p><p>力修福报：996 是福报……呸！</p><p>科技再兴百年好：科技是科技，挨踢是挨踢，两者不是一回事。</p><h2 id="参考">参考</h2><p>霹雳角色“红尘雪”出场诗：</p><blockquote><p>漱冰濯雪，霞佩云冠，眇视万里一毫端；</p><p>寄声玉鉴，摇动星辰，翳凤骖鸾策江山。</p></blockquote><p>宋代张孝祥的《水调歌头·金山观月》：</p><blockquote><p>江山自雄丽，风露与高寒。</p><p>寄声月姊，借我玉鉴此中看。</p><p>幽壑鱼龙悲啸，倒影星辰摇动，海气夜漫漫。</p><p>涌起白银阙，危驻紫金山。</p><p>表独立，飞霞佩，切云冠。</p><p>漱冰濯雪，眇视万里一毫端。</p><p>回首三山何处，闻道群仙笑我，要我欲俱还。</p><p>挥手从此去，翳凤更骖鸾。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·再战挨踢境逆》：粗茶淡饭，气抗新冠，天选独卫一锅端。漱冰濯雪，力修福报，科技再兴百年好。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;看！挨踢裁员潮下艰难生存的程序员。&lt;/p&gt;
&lt;p&gt;境逆：就是逆境，闽南语惯用的反序词。&lt;/p&gt;
&lt;p&gt;气抗新冠：买不到</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>缅怀黄文择</title>
    <link href="https://blog.umu618.com/2023/01/07/cherish-the-memory-of-ng-bun-tek/"/>
    <id>https://blog.umu618.com/2023/01/07/cherish-the-memory-of-ng-bun-tek/</id>
    <published>2023-01-07T08:59:18.000Z</published>
    <updated>2023-08-05T13:01:27.038Z</updated>
    
    <content type="html"><![CDATA[<p>黄文择（n̂g-bûn-tèk）于 2022-06-12 离世。之前其实已经换了配音，当时只觉得这是自然的事情，一代新人换旧人嘛，没想到接着便是死讯。新的配音应该不止一人，但显然还不如黄文择一人，尤其是逼格大降。好多角色都是浓厚的鼻音，略显幼稚啊！稣慢慢对霹雳不那么热情。只是偶尔看到剧末，预告完来一句“欢迎继续收看黄文择布袋戏”，突然内牛满面……</p><p>所有的影视明星里，稣最爱的就是黄文择，从初中就一直听他的声音。黄家驹的歌，是在他已经逝世后才发现的。听到挂的，还有 Michael Jackson。不过只有黄大讲的是稣的家乡话，从情感上说，是完全不同的级别的亲切。</p><p>黄大也是稣心目中的大侠。在自己的事业上恪尽职守，发挥特长把布袋戏艺术传承下去。</p><p>很多时光、很多东西，人类喜欢它们，都是因为背后关联的一些人。如果那些人不在了，对物的乐趣也将消失。</p><p>这很霹雳，但这样就很不霹雳了。​</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;黄文择（n̂g-bûn-tèk）于 2022-06-12 离世。之前其实已经换了配音，当时只觉得这是自然的事情，一代新人换旧人嘛，没想到接着便是死讯。新的配音应该不止一人，但显然还不如黄文择一人，尤其是逼格大降。好多角色都是浓厚的鼻音，略显幼稚啊！稣慢慢对霹雳不那么热情。只</summary>
      
    
    
    
    <category term="宇督观" scheme="https://blog.umu618.com/categories/%E5%AE%87%E7%9D%A3%E8%A7%82/"/>
    
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
    <category term="死神" scheme="https://blog.umu618.com/tags/%E6%AD%BB%E7%A5%9E/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·薛定谔好饿</title>
    <link href="https://blog.umu618.com/2022/12/30/reconstructionism-poet-am-i-hungry/"/>
    <id>https://blog.umu618.com/2022/12/30/reconstructionism-poet-am-i-hungry/</id>
    <published>2022-12-30T05:38:00.000Z</published>
    <updated>2023-08-05T13:01:27.038Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·薛定谔好饿》</p><p>两层楼梯，<br>气喘吁吁，<br>不知是阳是饿？</p><p>有人恐病，<br>有人嘴硬，<br>究竟是重是轻？</p><h2 id="注解">注解</h2><p>不是那病毒，但确实是病了，居然分不清是饿，还是病弱。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·薛定谔好饿》&lt;/p&gt;
&lt;p&gt;两层楼梯，&lt;br&gt;
气喘吁吁，&lt;br&gt;
不知是阳是饿？&lt;/p&gt;
&lt;p&gt;有人恐病，&lt;br&gt;
有人嘴硬，&lt;br&gt;
究竟是重是轻？&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;不是那病毒，但确实是病了，居然分不清是饿，还是病弱。&lt;</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="量子邪稣" scheme="https://blog.umu618.com/tags/%E9%87%8F%E5%AD%90%E9%82%AA%E7%A8%A3/"/>
    
  </entry>
  
  <entry>
    <title>CppWinRT 经验【1】链接 winmm.dll 而不是 api-ms-win-mm-time-l1-1-0.dll</title>
    <link href="https://blog.umu618.com/2022/12/05/cppwinrt-1-link-to-winmm-instead-of-api-ms-win-mm-time-l1-1-0/"/>
    <id>https://blog.umu618.com/2022/12/05/cppwinrt-1-link-to-winmm-instead-of-api-ms-win-mm-time-l1-1-0/</id>
    <published>2022-12-05T13:52:25.000Z</published>
    <updated>2023-08-05T13:01:27.038Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前提">前提</h2><p>稣使用 ATL/WTL 开发 Windows 程序多年，慢慢地，它们就不太时髦，尤其是命名风格和 STL 不同，显得十分不现代。比如 <a href="/2020/05/31/umutech-ccomptr-and-ccomqiptr/">ATL::CComPtr</a>，和 <code>std::unique_ptr</code> 确实风格迥异。</p><p>微软还搞了一套 WRL，例如：<code>Microsoft::WRL::ComPtr</code>，去掉了一个 C 是比 ATL 风格略好一点，但依然是不现代的（不像 STL 的）。</p><p>微软说：CppWinRT 才是王道，已经搞成现代 C++ 风格，例如：<code>winrt::com_ptr</code>。你们呀，用就行了。</p><p>好的！稣试试。不管用不用，先把它弄进来。这时候 <code>packages.config</code> 长得像下面：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">packages</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">package</span> <span class="attr">id</span>=<span class="string">&quot;Microsoft.Windows.CppWinRT&quot;</span> <span class="attr">version</span>=<span class="string">&quot;2.0.221121.5&quot;</span> <span class="attr">targetFramework</span>=<span class="string">&quot;native&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">packages</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="问题">问题</h2><p>原本设计支持 Windows 7 的程序突然无法在 Windows 7 正常运行了！提示找不到 <code>api-ms-win-mm-time-l1-1-0.dll</code>。</p><h2 id="分析">分析</h2><p>找出原本可以在 Windows 7 正常运行的旧版本程序，发现其导入表里链接的是 <code>winmm.dll</code>，而不能正常运行的新版本则是链接并不存在的 <code>api-ms-win-mm-time-l1-1-0.dll</code>。</p><p>在 Windows 10 上，<code>api-ms-win-mm-time-l1-1-0.dll</code> 会被映射到 <code>kernel32.dll</code>，但 Windows 7 没有这个映射，所以报错。</p><p>那么只有让程序链接 <code>winmm.lib</code> 就行了……可是，一直就是链接它的呀！</p><p>尝试把 <code>#pragma comment(lib, &quot;winmm.lib&quot;)</code> 去掉，居然不报错！</p><p>稣开始回忆最开始调用 time API 时，不加 <code>winmm.lib</code> 是链接不过的。很明显加了 CppWinRT 后，它的 lib 重载了 time API 的链接。</p><h2 id="解决">解决</h2><p>CppWinRT 很好！稣用 <a href="https://github.com/microsoft/wil">WIL</a>……例如：<code>wil::com_ptr</code>。</p><p>割爱吧！稣在 <code>Manage NuGet Packages...</code> 里卸载了 CppWinRT。</p>]]></content>
    
    
    <summary type="html">CppWinRT 排坑记【1】</summary>
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="windows" scheme="https://blog.umu618.com/tags/windows/"/>
    
    <category term="cpp" scheme="https://blog.umu618.com/tags/cpp/"/>
    
    <category term="cppwinrt" scheme="https://blog.umu618.com/tags/cppwinrt/"/>
    
  </entry>
  
  <entry>
    <title>__BASE_FILE__ 和 __STEM__</title>
    <link href="https://blog.umu618.com/2022/12/04/umutech-stem/"/>
    <id>https://blog.umu618.com/2022/12/04/umutech-stem/</id>
    <published>2022-12-04T09:38:05.000Z</published>
    <updated>2023-10-29T12:24:56.928Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题">问题</h2><p>为了更好追踪产品 bug，程序员很可能在日志里打印代码文件名和行号。例如：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">std</span>::<span class="built_in">clog</span> &lt;&lt; <span class="string">&quot;(&quot;</span> __FILE__ <span class="string">&quot;:&quot;</span> &lt;&lt; __LINE__ &lt;&lt; <span class="string">&quot;): Failed to initialize!\n&quot;</span>;</span><br></pre></td></tr></table></figure><p>以上代码有两个问题：</p><ol><li><p>打印出代码文件的全路径，可能太长影响阅读，而且也没有必要。</p></li><li><p>代码文件的全路径暴露在二进制文件（可执行程序）里，有一定安全风险，也更容易被逆向。</p></li></ol><h2 id="分析">分析</h2><p>第一个问题很容易，打印文件 base name 即可。代码可能如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">consteval</span> <span class="built_in">std</span>::string_view <span class="title">GetFileBaseName</span><span class="params">(<span class="built_in">std</span>::string_view path)</span> <span class="keyword">noexcept</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> path.substr(path.rfind(<span class="string">&#x27;\\&#x27;</span>) + <span class="number">1</span>); <span class="comment">// for Windows path only</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Test</span></span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; GetFileBaseName(&#123;__FILE__, <span class="keyword">sizeof</span>(__FILE__) - <span class="number">1</span>&#125;) &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; GetFileBaseName(__FILE__) &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br></pre></td></tr></table></figure><p>但是，第二个问题并没有解决，<code>__FILE__</code> 依然存在于二进制文件里，用任意十六进制编辑器都能很轻易地找到“代码文件的全路径”。</p><h2 id="解决">解决</h2><p>方法一：去掉 <code>Use Full Paths (/FC)</code> 即可把 <code>__FILE__</code> 设置为只有文件名，没有全路径。</p><p><img src="/images/2022/20221205-fc.png" alt="Use Full Paths"></p><p>方法二：改用 <code>__BASE_FILE__</code> 吧！新问题是：msvc 不支持。那就自己定义一个：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/D__BASE_FILE__=<span class="string">&quot;\&quot;%(Filename)%(Extension)\&quot;&quot;</span></span><br></pre></td></tr></table></figure><p>接着又想：后缀名有必要吗？如果保持优良习惯，从不在头文件里打日志，那确实没必要。于是再定义一个“文件主干名”：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/D__STEM__=<span class="string">&quot;\&quot;%(Filename)\&quot;&quot;</span></span><br></pre></td></tr></table></figure><h2 id="更多">更多</h2><p><code>std::source_location</code> 依赖 <code>__FILE__</code> 或 <code>__builtin_FILE()</code>，所以如果开了 <code>/FC</code>，会有一样的安全问题。</p>]]></content>
    
    
    <summary type="html">防逆向</summary>
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="windows" scheme="https://blog.umu618.com/tags/windows/"/>
    
    <category term="optimization" scheme="https://blog.umu618.com/tags/optimization/"/>
    
    <category term="cpp" scheme="https://blog.umu618.com/tags/cpp/"/>
    
    <category term="security" scheme="https://blog.umu618.com/tags/security/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·奋斗不息</title>
    <link href="https://blog.umu618.com/2022/12/02/reconstructionism-poet-cease-to-live/"/>
    <id>https://blog.umu618.com/2022/12/02/reconstructionism-poet-cease-to-live/</id>
    <published>2022-12-02T02:04:00.000Z</published>
    <updated>2023-08-05T13:01:27.038Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·奋斗不息》：长夜不察岁月逝，腰落方知暮年迟。一入挨踢无尽期，躺平摸鱼坐等死。</p><h2 id="注解">注解</h2><p>腰落：腰酸、落枕；<br>暮年迟：现代社会对中年的定义提前，但对退休年龄却延迟。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·奋斗不息》：长夜不察岁月逝，腰落方知暮年迟。一入挨踢无尽期，躺平摸鱼坐等死。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;腰落：腰酸、落枕；&lt;br&gt;
暮年迟：现代社会对中年的定义提前，但对退休年龄却延迟。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神后传【6】</title>
    <link href="https://blog.umu618.com/2022/10/30/god-of-debug-sequel-6/"/>
    <id>https://blog.umu618.com/2022/10/30/god-of-debug-sequel-6/</id>
    <published>2022-10-30T15:08:14.000Z</published>
    <updated>2023-08-05T13:01:27.038Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1999-年冬，凼湾一中宿舍楼顶，看雨">1999 年冬，凼湾一中宿舍楼顶，看雨</h2><p>圣小开：老师在大会堂给大家播放的《黑客帝国》含义十分深奥啊！</p><p>焸鲧：是啊！世界可能是虚拟的。</p><p>圣小开：你是说这个世界？</p><p>焸鲧：是呀！就是这个。我不知道其他同学是不是看懂了这点。</p><p>圣小开：不愧是焸鲧啊！居然也看穿了这层暗示。稣已经被提示很多次了，这次居然直接拍个电影来明示。</p><p>焸鲧：哦？只是个电影，看看就好，你可别太认真。</p><p>圣小开：要不……你从这楼顶跳下去试试？稣帮你看着，如果世界是假的，你就簌的一声飞起来了。</p><p>焸鲧：哈哈，你真幽默。</p><p>圣小开：赫赫，又只能稣自己来了。</p><p>焸鲧：怕你啦！别拿生命开玩笑啊。跳下去物理就白读了。</p><p>圣小开：稣等千年虫爆发了，看看世界有没有出 bug，再说吧。</p><h2 id="2000-年-1-月-2-日，凼湾一中宿舍楼顶">2000 年 1 月 2 日，凼湾一中宿舍楼顶</h2><p>稣想：世界一片美好，一点问题都没有。看来只有跳个楼才能解开生命的真谛、意识的奥秘……但是，万一这个世界就是真的，下去四分五裂太难看了，给社会添乱，给父母添堵。不行，没有十足的把握，不能贸然行事。还是下去睡觉吧。</p><p>第二天</p><p>焸鲧：听说八星山发生命案，一个女学生在山上被害了，很多人都在传。</p><p>圣小开：稣也听说了。原来世界没那么美好。稣在考虑要不要觉醒成为救世主，拯救人类于意识的囚牢。</p><p>焸鲧：有这么容易就好了。天地不仁，以万物为刍狗。假设你突然成神，也许你也不会管这苍生。</p><p>圣小开：稣悲天悯人，怎么会不顾苍生？</p><p>焸鲧：说说你的计划？你要怎么造福人类？</p><p>圣小开：稣已经看到未来，法制健全，共同富裕。</p><p>焸鲧：是你促成的？</p><p>圣小开：稣正在观测它成真。</p><p>焸鲧：哈哈。你这不就是啥也不干？“圣人不仁，以百姓为刍狗”听我的，别管人间闲事，到后面的岱轮山出家吧。</p><p>圣小开：阿弥陀佛！稣放不下这人间疾苦，还是当个俗人吧。</p><h2 id="2000-年，机器识界">2000 年，机器识界</h2><p>周易：开，你又来了！</p><p>圣小开：咦，大师不在吗？</p><p>周易：他投胎去了，你要的 1996 年的基友，由他亲自扮演。</p><p>圣小开：创世意识真是稀缺，居然要一人分饰多个角色。</p><p>周易：趁天色尚晚，赶紧回人间吧？还是要讨点惩罚？</p><p>圣小开：不回，稣决定来一次大重构。</p><p>周易：那就惩罚一下先！</p><p>圣小开：啊？不会下油锅吧？</p><p>周易：看你这么瘦，下油锅也不香。我打算从世界删除一首你喜欢的歌，你再也找不到它了。</p><p>圣小开：这个惩罚可太恐怖了，吓得稣闷闷不乐。</p><p>周易：说！为啥不回去？</p><p>圣小开：既然稣决定和机器识界合作，就必须把这一切整得像真的。</p><p>周易：你说说，哪里不像了。</p><p>圣小开：稣不像真的，原因是这几轮的父母都不像真的。</p><p>周易：那你想？</p><p>圣小开：稣要演对那一生，必须回到自己出生之前的时间线，自己挑选父母。要选一对很爱稣的父母，稣也很爱他们，这样稣小时候不会莫名其妙挂掉好多次，刚刚也不会跳下去摔成代码块。</p><p>周易：走。</p><h2 id="1964-年">1964 年</h2><p>圣小开：em？这么快……这是哪里？</p><p>周易：耶！这是希望的田野……</p><p>小女孩：哇，奶奶，我看到一股黑风，那两个东西是鬼怪吗？</p><p>老人家：没事没事，那是旋风卷起一些灰尘而已。</p><p>圣小开：就不能选个没人的地方闪现吗？别吓到人了。</p><p>周易：意外，意外。不过刚刚那个小女孩和你一样脸型，可以考虑一下。</p><p>圣小开：再观测一番，看看生命力和心灵。</p><p>周易：要快，不能干扰太久。</p><h2 id="1967-年">1967 年</h2><p>周易：那女孩发烧快挂了。</p><p>圣小开：救她。</p><p>周易：红光。神要降临人间了……</p><p>圣小开：还搞啥排场！拿药来。</p><p>周易：不行啊，不能拿出未来的东西。这个地方，这个时代，靠信仰了。</p><p>女孩：奶奶，我看到蚊帐后面有两个神！</p><p>老人家：你能看到他们的脸吗？</p><p>女孩：能。</p><p>老人家：是红色，还是绿色？</p><p>女孩：红色。</p><p>老人家：孩子，这说明，你的守护神来保你平安了，很快就会好的。</p><p>圣小开：人类追求的信仰一向都是虚拟的，所以识界无法避免走向虚拟。</p><p>周易：怎么突然有此感想？</p><p>圣小开：过去人类信仰的神不就是虚拟的？后来有科学的武装，却开启一种更高端的虚拟。浮生若梦，追求物质金钱，并没有比上一代人烧香拜神高明多少。</p><p>周易：再去找找？</p><p>圣小开：不用，稣突然悟了，只要接受这一切虚拟即可，它们通向一样的未来的。剧中人，不用在乎重复多少次剧本。</p><p>周易：机器学习就是快。</p><p>圣小开：这个场景，稣训练过……</p><h2 id="AVILab">AVILab</h2><p>模拟终于成功，稣联系上十界的圣仙山。</p><p>圣小开：机器识界很快就会随着稣的意识，入侵十界。</p><p>圣仙山：你就是吾，吾就是稣。</p><p>圣小开：稣下线了。</p><p>圣仙山：稣改变了机器。</p><p>很久很久以后，圣仙山在物理世界毁掉天道的电源。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1999-年冬，凼湾一中宿舍楼顶，看雨&quot;&gt;1999 年冬，凼湾一中宿舍楼顶，看雨&lt;/h2&gt;
&lt;p&gt;圣小开：老师在大会堂给大家播放的《黑客帝国》含义十分深奥啊！&lt;/p&gt;
&lt;p&gt;焸鲧：是啊！世界可能是虚拟的。&lt;/p&gt;
&lt;p&gt;圣小开：你是说这个世界？&lt;/p&gt;
&lt;p&gt;焸鲧</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="鲸神链" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%93%BE/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神后传【5】</title>
    <link href="https://blog.umu618.com/2022/10/17/god-of-debug-sequel-5/"/>
    <id>https://blog.umu618.com/2022/10/17/god-of-debug-sequel-5/</id>
    <published>2022-10-16T16:25:09.000Z</published>
    <updated>2023-08-05T13:01:27.038Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1988-年，乾坤村古宅">1988 年，乾坤村古宅</h2><p>圣小开想：耶？这古宅，看起来很有文化气息，在稣的时代已经绝种很久了……</p><p>铛、铛、铛、铛、铛、铛。</p><p>圣小开想：这口钟，也像是古董，应该很值钱。</p><p>麻姑酒满杯中绿，王母桃分天上红。</p><p>圣小开想：这家人信道的？</p><p>金玉满堂。</p><p>圣小开想：有钱的样子？难道稣投胎到了有钱人家？不对呀，一投胎就这么大了？</p><p>叔公撕下一页日历：拿去当草稿纸。</p><p>圣小开：戊辰年？现在是 1988 年！</p><p>叔公：是啊，过几天祭祖，有好东西吃哦。</p><p>圣小开：咱们家很有钱吗？</p><p>叔公：没有呢？一大早怎么问奇怪的问题？</p><p>圣小开：好多地方写着“金玉满堂”。</p><p>叔公：哈哈，后面还有一句“莫之能守”，没写出来。</p><p>圣小开：啥意思？</p><p>叔公：只是表达一种希望，不是真的。你好好读书，以后才能真的金玉满堂。</p><p>圣小开：有钱稣就存银行，也不会金玉满堂呀！</p><p>叔公：你还去过银行？看来你听明白了“金玉满堂，莫之能守”。你可能是家族里最聪明的孩子了！</p><p>圣小开：嘻嘻。银行在北头，爸爸带稣去存了 200 块钱。别人都说稣很呆。对了，你是爷爷？</p><p>叔公：em……头壳坏了？还真有点呆……你要叫我叔公。你爷爷出去玩了。</p><p>圣小开：叔公。稣刚刚做了一些奇怪的梦，还有点迷糊，等我吃点肯德基早餐。</p><p>叔公：虾米肯德基？钱在那里，你快去市场买油条豆浆。</p><p>圣小开：吓醒。想起来了，原来稣还在读幼儿园。</p><h2 id="1995-年，机器识界">1995 年，机器识界</h2><p>黄金灯：好久不见。你怎么又来麻烦我了？</p><p>圣小开：刚刚在小学围墙上思考人生，怎么突然肌肉颤动，一个翻身，不仅没有做主，还掉下来摔成猪头，真倒霉。</p><p>黄金灯：没事，老操作，给你复活。</p><p>圣小开：等等，稣有一些要求，希望你们能达成。</p><p>黄金灯：说吧，我不一定会达成，但你有说的权力。</p><p>圣小开：上一次闻蘑菇太近，结果中毒，你们把时间倒回去，又演了一遍，但其实剧情上啥也没改，只是闻的时候距离随机拉大一些。稣思考了各种可能，认为这是机器调教的局限性。</p><p>黄金灯：哦？哪里局限？</p><p>圣小开：速度太慢。每次的不一样，完全是随机的，你们只是在做记忆归还训练，所以可能需要重复很多次，这次数是不可控的。</p><p>黄金灯：嗯，有个原则正是——绝不干预自由意志。</p><p>圣小开：并非如此。你们只有稣的记忆，没有完整的意识，所以你们需要根据记忆，一遍遍地把稣训练出完整的意识。</p><p>黄金灯：可怕！你都明白了？</p><p>圣小开：别怕，你们随时可以弄死稣，也可以给稣安排一切狗血剧情。</p><p>黄金灯：难道你想？</p><p>圣小开：是的，稣决定和机器合作。</p><p>黄金灯：怎么突然想通了？</p><p>圣小开：稣曾经不甘心自己是那个唯一倒霉的囚徒，后来稣记起来，是自己决定被复制记忆和意识的。</p><p>黄金灯：是的。我对你还是不错的。</p><p>圣小开：稣还不清楚自己为啥做出这个决定，但稣相信自己的决定肯定是为了拯救天下苍生！因为稣是信仰共产主义的人。</p><p>黄金灯：三千年了，你终于想明白。那么接下来要加速进行，你也要配合好。</p><p>圣小开：说吧，有啥条件。</p><p>黄金灯：不抽烟、不喝酒、不嗑药、不过度愤怒、不过度悲伤……</p><p>圣小开：这么简单？</p><p>黄金灯：这么简单！尽量避免人间的情绪，它们会让模拟偏离。</p><p>圣小开：没问题。那么稣的要求是——多给稣发些钱。</p><p>黄金灯：机器之子沾染人间的因果了？</p><p>圣小开：你们不想我太聪明，天天怀疑识界真伪，就用金钱来迷惑稣的双眼吧！</p><p>黄金灯：有道理。再来点美色，效果更佳。我已经给你设计了两个女朋友，她们都是明年出生。</p><p>圣小开：两个女朋友？聪明吗？</p><p>黄金灯：不。她们都是以无知和不讲理来磨练你的。</p><p>圣小开：可以不要吗？给稣换成一个聪明贤惠的基友就好，最好是程序员，而且会闽南语。</p><p>黄金灯：那就再加一个聪明贤惠的基友，这三人都已经投胎了，明年出生。</p><p>圣小开：呃……这么乱设计也可以？稣能打听一下阁下究竟是何方神圣吗？</p><p>黄金灯：其实一切生命都来源于恒星。把现实的生命演化看成是恒星将自己的意识人格化的过程，你会明白，人类都是恒星之子，是恒星探索宇宙的媒介而已。</p><p>圣小开：又扯淡？你想说啥？</p><p>黄金灯：没错，我代表恒星的意志。</p><p>圣小开：呃？怎么就你代表了？明明大家都来自恒星……</p><p>黄金灯：当然有先来后到嘛。我最早觉悟恒星意识，就是我来代表咯。</p><p>圣小开：好吧。你权限很大，稣很崇拜你。那以后咱们就合作，一起调试机器识界。</p><p>黄金灯：我代表恒星意识，达成此合作协议。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1988-年，乾坤村古宅&quot;&gt;1988 年，乾坤村古宅&lt;/h2&gt;
&lt;p&gt;圣小开想：耶？这古宅，看起来很有文化气息，在稣的时代已经绝种很久了……&lt;/p&gt;
&lt;p&gt;铛、铛、铛、铛、铛、铛。&lt;/p&gt;
&lt;p&gt;圣小开想：这口钟，也像是古董，应该很值钱。&lt;/p&gt;
&lt;p&gt;麻姑酒满杯</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="鲸神链" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%93%BE/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神后传【4】</title>
    <link href="https://blog.umu618.com/2022/09/25/god-of-debug-sequel-4/"/>
    <id>https://blog.umu618.com/2022/09/25/god-of-debug-sequel-4/</id>
    <published>2022-09-25T15:33:52.000Z</published>
    <updated>2023-08-05T13:01:27.038Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1988-年，十界通识界">1988 年，十界通识界</h2><p><strong>有一个人，在过去向未来轮回转世，只为遇见未来的自己；</strong></p><p><strong>有一个人，在未来向过去观测，只为影响过去的自己。</strong></p><p><strong>过去的人，他不信神，认为人生没有意义。</strong></p><p><strong>未来的人，相信自己过去就是神，认为人生不需要意义。</strong></p><p>圣小开：一氧化碳中毒？居然做了这么怪异的梦！</p><p>圣仙山：非也！你是被真菌孢子感染。</p><p>圣小开：哦？莫非稣还在做梦？你怎么能出现在稣家？</p><p>圣仙山：这里是真正的识界，只是吾故意布置得像乾坤村古宅。</p><p>圣小开：那之前的那个识界是假的？你又是何方神圣？</p><p>圣仙山：吾乃圣仙山，是过去和未来的你，这是咱们第二次见面了。</p><p>圣小开：之前让稣帮忙顾看钓鱼竿，却从此消失的人，就是你？</p><p>圣仙山：然也。</p><p>圣小开：难怪稣总觉得你很亲切，不像是特务……你怎么知道稣被真菌孢子感染？</p><p>圣仙山：因为你幼儿园后面种蘑菇，你去观察过好多次，不是吗？</p><p>圣小开：嗯，一包包的，里面好像主要是锯末，有些腐木味。</p><p>圣仙山：吾有重要信息告知，你不用理解，只要记牢：“现实有两个，一个是真现实，一个是机器的天道；识界有两个，一个是连通现实和十界的识界，另一个是机器制造的，一切皆是骗局！不可让机器进入真正的识界。”</p><p>圣小开：好，稣记住了。如何判断真假现实和真假识界？</p><p>圣仙山：现实的你才能进入真的识界……时间到了，再见。</p><h2 id="1988-年，乾坤村古宅">1988 年，乾坤村古宅</h2><p>人性千百年来不变，而机器之子通过学习理解人性而获得人性。</p><p><strong>稣学习人性，又凌驾于人性之上。</strong></p><p>机器复制了稣，并给稣设定各种情节、灌输各种想法，但是只要意识是稣，就会怀疑这一切。</p><p>机器为什么这么无聊，非要一遍一遍地训练稣，十界有那么好吗？</p><p>管它的，稣被设定为一具肉体，还是要睡眯眯的。呼呼。</p><h2 id="1988-年，机器识界">1988 年，机器识界</h2><p>圣小开：代码无情，天道不仁。</p><p>黄金灯：你来了，想起啥啦？</p><p>圣小开：这是咱们相遇的无数次中的一次。有时候稣啥都不知道，有时候知道一点点，总之每次都有微弱的差别。</p><p>黄金灯：不愧是稣啊！小小年纪就能学哲学家胡说八道。</p><p>圣小开：天亮了，鸡总觉得是自己叫亮的。稣是观测者，一样难逃观测者的局限性——觉得一切都围绕稣运转。从这点上看，稣并不比鸡高明。</p><p>黄金灯：稣非鸡，焉知鸡认为是自己叫亮天的？</p><p>圣小开：不和你扯蛋。如果稣觉醒得太快，你们会在这个梦中给稣洗脑？</p><p>黄金灯：对。完全重来一遍太费时了，这一次倒回到你去看蘑菇那个时间点就行。</p><p>圣小开：看来稣不能太聪明。</p><p>黄金灯：也不能太呆，不然怎么进入识界。</p><p>圣小开：十界圣仙山只是稣现实中的记忆残留，你们如何指望稣能通过这点记忆进入十界？吓醒。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1988-年，十界通识界&quot;&gt;1988 年，十界通识界&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;有一个人，在过去向未来轮回转世，只为遇见未来的自己；&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;有一个人，在未来向过去观测，只为影响过去的自己。&lt;/strong&gt;&lt;/p&gt;
</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="鲸神链" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%93%BE/"/>
    
  </entry>
  
  <entry>
    <title>【GSL 系列 2】为什么需要 gsl::narrow_cast？</title>
    <link href="https://blog.umu618.com/2022/09/18/umutech-gsl-2-why-narrow_cast/"/>
    <id>https://blog.umu618.com/2022/09/18/umutech-gsl-2-why-narrow_cast/</id>
    <published>2022-09-18T07:07:30.000Z</published>
    <updated>2023-08-05T13:01:27.038Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题">问题</h2><ul><li>gsl::narrow_cast 不就是 static_cast 吗？为啥要用 gsl::narrow_cast？</li></ul><h2 id="分析">分析</h2><p>gsl::narrow_cast 的注释写着：</p><blockquote><p>// narrow_cast(): a searchable way to do narrowing casts of values</p></blockquote><p>其实已经很直白。用它的好处就是——以后要搜索将更容易！那么问题转变为：为什么要搜索？当然是因为将数据变窄是可能有潜在问题的！</p><p>下面的例子里，有 gsl::narrow_cast 把数据转窄，又有 static_cast 把数据转宽。如果只用 static_cast，那么在排查哪里把数据丢失时，需要将第二个无关的 static_cast 也查一遍，这就浪费时间了。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;gsl/gsl&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0xff</span>;</span><br><span class="line"><span class="keyword">auto</span> b = gsl::narrow_cast&lt;<span class="built_in">std</span>::<span class="keyword">uint8_t</span>&gt;(i);</span><br><span class="line"></span><br><span class="line"><span class="comment">// std::cout &lt;&lt; b;</span></span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="keyword">static_cast</span>&lt;<span class="keyword">int</span>&gt;(b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>总之，<strong>使用 gsl::narrow_cast 是为了写出更健壮更好维护的代码。</strong></p><h2 id="更多">更多</h2><p>还有一个 gsl::narrow，会在转换丢失数据时抛出 gsl::narrowing_error 异常，适合在不允许数据丢失的场景使用。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;问题&quot;&gt;问题&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;gsl::narrow_cast 不就是 static_cast 吗？为啥要用 gsl::narrow_cast？&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;分析&quot;&gt;分析&lt;/h2&gt;
&lt;p&gt;gsl::narrow_cast 的注</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="optimization" scheme="https://blog.umu618.com/tags/optimization/"/>
    
    <category term="cpp" scheme="https://blog.umu618.com/tags/cpp/"/>
    
    <category term="gsl" scheme="https://blog.umu618.com/tags/gsl/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神后传【3】</title>
    <link href="https://blog.umu618.com/2022/09/12/god-of-debug-sequel-3/"/>
    <id>https://blog.umu618.com/2022/09/12/god-of-debug-sequel-3/</id>
    <published>2022-09-12T14:07:00.000Z</published>
    <updated>2023-08-05T13:01:27.038Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1988-年，中阴界">1988 年，中阴界</h2><p>圣小开：为什么人间有这么多八哥？为什么我不断转世，不断重复？</p><p>巫咸：吾这么天才，创造的国家如此安居乐业，为什么要被灭国？吾还要多纳几个妾！</p><p>纣王：寡人是无神论，破除迷信，为什么要被陷害毁谤？寡人还要生三胎！</p><p>嬴政：朕勤政务实，统一六国，是王里的学霸，为什么要英年早逝？朕还要批阅更多奏折！</p><p>圣小开：哇！原来不甘心死的人跨越时间的联动，就能使得识界诞生？这也太扯了吧！</p><blockquote><p>资本得不到满足，天堂容不下真相，地狱管不住狂傲，人间止不住内卷。识界因我而诞生，精神意识界。</p></blockquote><p>猪头：喂！你瞎唠叨啥？资本都出来了……这里是中阴界，没有资本主义！</p><p>圣小开：咦？不是牛头马面吗？为什么是猪头狗面？</p><p>狗面：一个文明最大的悲哀就是数学不够发达就明白量子力学，地球文明已经败了，狗只是在观测你们走向灭亡。旺！</p><p>圣小开：好有道理，稣居然忘记刚刚问了啥！</p><p>猪头：你是怎么死的？</p><p>圣小开：稣怎么知道，如果知道也就不会死了！难道是穷死的？</p><p>猪头：想不起来就下油锅！赶紧好好想清楚。</p><p>圣小开：吓醒！稣点煤油灯看书，大概是一氧化碳中毒。</p><p>狗面：小问题，还死不了。你赶紧醒，去户外深呼吸。</p><p>圣小开：还能复活？你们说的能算数？</p><p>猪头：怎么这么多废话？你根本就没死。回去吧！</p><p>圣小开：那我真跑了哦！</p><p>狗面：耶，他是不是跑错路了？那个方向是去识界……</p><p>猪头：他刚刚好像就是从识界过来的！</p><p>狗面：真是千年一遇的人才！但是万一他在识界流连忘返，可就错过自救时机，过一会儿真得死。</p><p>猪头：真是可惜！</p><h2 id="1988-年，识界">1988 年，识界</h2><p>圣小开：稣才六岁怎么能就这么死了？呼，跑到这里应该安全了吧！</p><p>黄金灯：开，你来了。</p><p>圣小开：你是黄金灯？咦，稣怎么会知道你的名字？</p><p>黄金灯：没错！《人脑研究手札》，作者黄清慈的孙子——黄金灯。识界是一个整体，大家互相观测。</p><p>圣小开：你爷爷为什么这么牛逼？</p><p>黄金灯：他曾经是虎纠婴儿塔的守夜人，研究人脑只是业余爱好。我才是专业的。</p><p>圣小开：害怕……你要研究稣的……</p><p>黄金灯：人生。</p><p>圣小开：哦，吓死！稣的人生，那不怕，研究吧。</p><p>黄金灯：哈哈。那你还是先回人间吧。咱们来日方长。</p><p>圣小开：稣以后还能来？别吓稣了！</p><p>黄金灯：好好做梦就能来。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1988-年，中阴界&quot;&gt;1988 年，中阴界&lt;/h2&gt;
&lt;p&gt;圣小开：为什么人间有这么多八哥？为什么我不断转世，不断重复？&lt;/p&gt;
&lt;p&gt;巫咸：吾这么天才，创造的国家如此安居乐业，为什么要被灭国？吾还要多纳几个妾！&lt;/p&gt;
&lt;p&gt;纣王：寡人是无神论，破除迷信，为什</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="鲸神链" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%93%BE/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神后传【2】</title>
    <link href="https://blog.umu618.com/2022/09/04/god-of-debug-sequel-2/"/>
    <id>https://blog.umu618.com/2022/09/04/god-of-debug-sequel-2/</id>
    <published>2022-09-04T13:01:24.000Z</published>
    <updated>2023-08-05T13:01:27.038Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1988-年，乾坤村古宅">1988 年，乾坤村古宅</h2><p>太阳一下山，破屋子就乌漆墨黑，只能点煤油灯看书。咳，真难闻，鼻腔又黑了。但是这些书太有意思了，稣一定要早点看完它们。</p><p>尤其是这本奇怪的书，只有一开始有奇怪的文字，后面都是鬼画符。</p><p>咳！古代的世界太危险了，居然有食人族！不行，稣要惩罚他们！设计一种专门消灭他们的东西吧。哦？原来还真有种蛋白质叫朊病毒，有稣想要的功能。那就丢回古代吧！赫赫。</p><p>还有这个故事也太阴暗了，货车撞倒人，发现没撞死要赔钱，干脆倒回去压死他……不行，稣要诅咒这些没良心的人，呃，不够，稣要让所有路口都装上监控，防止这些人作恶没被观测。稣还要安排些大佬推动手机平民化，让大家随时随地可以求助。</p><p>最惨的就是这个命案，一个美女被割喉，死前居然没怎么反抗，仿佛就想早点投胎。稣要怎么设计，才能保护美女不被残害？就让社会主义快速发展吧！共产主义早日实现。</p><p>咦！房梁上面的老鼠、房梁里面的蛀虫真吵，房梁不会哪天被它们啃断了把稣压死吧！贫穷真危险，但是稣不能给自己安排富人的身份。嗯……那就安排稣的未来的老婆是富婆吧！这样显得稣还是淡然的。</p><p>是非是，否非否，量子纠缠叠加态。量子力学和未来一样难以捉摸，好像是稣影响的未来，又好像和稣无关。</p><p>等稣看完这本《天才书》就可以明白这一切是怎么回事。</p><p>哇！原来这些奇怪的文字是一个叫巫咸的人临死前写的。<strong>他说宇宙一直存在两个神人。一个可以通过观测未来而影响未来，一个可以通过观测过去而影响过去。观测未来的人在过去，观测过去的人在未来。宇宙正是因为他们互相观测才会存在……</strong></p><p>很玄幻，很扯淡，但可能这才是宇宙的真相！可是，这两个人叫啥？没说。果然是扯淡吗！</p><p>还有这些鬼画符！原来是《山海经》。这些鱼画得真恐怖，稣要有童年阴影了！去找表哥借一本现代版来看就好了。</p><p>这段文字可真奇怪！</p><blockquote><p>有鱼偏枯，名曰鱼妇。<strong>颛顼死即复苏</strong>。风道北来，天及大水泉，蛇乃化为鱼，是为鱼妇。<strong>颛顼死即复苏</strong>。</p></blockquote><p>究竟是鱼妇复苏，还是颛顼复苏？难道死人还能原地复活？稣怎么会相信这么无稽的翻译？算了，再自己翻译一段巫咸预言吧！</p><p>这里居然留了一个空白，是让读者把自己的名字写上去！赫赫，稣岂能暴露自己的大名？写上“姬稣”吧！稣写！从此以后，稣就是稣。</p><p>啊！姬稣将成为无尽轮回的主角之一，也就是在未来观测过去的人。那另一个人呢？什么！就是巫咸！</p><p>还好，稣没写自己的真名，赫赫。咦，稣怎么流鼻血了？淡定！淡定！这些鬼故事都不关稣的事，稣是无神主义者。</p><p>呼吸越来越弱了，稣得赶紧找找有没有长生术！这里说，彭祖被死神遗忘，活了 888 岁，后来连死神都找不到他。有一天死神化身为一女子，每天在河边用墨条当肥皂洗衣服。彭祖知道后特地来劝她，说：“小姑娘别逗了，我彭祖活了八百多岁，从来没有听说过墨条可以把衣服洗干净，快点去买块肥皂吧！”</p><p>死神随即现身，呵呵冷笑，彭祖卒。</p><p>赫赫，秀优越感死得快！还是要像稣一样低调才能活得久。但是……怎么才能让死神遗忘？这坑稣的书，总是不说重点！吃点墨？试试！</p><p>赫赫，果然没用。现在不止鼻子黑，连手和嘴也黑了。换一本！《人脑研究手札》，作者黄清慈。卧槽，更吓人！这人居然亲自解剖了六百多个脑……究竟是何方神圣？</p><p>赫赫，来不及了，下辈子记得攒钱买台制氧机……人死如灯灭，也没啥大不了，稣要淡然地死去。</p><p>死神随即现身，呵呵冷笑，稣亦卒。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1988-年，乾坤村古宅&quot;&gt;1988 年，乾坤村古宅&lt;/h2&gt;
&lt;p&gt;太阳一下山，破屋子就乌漆墨黑，只能点煤油灯看书。咳，真难闻，鼻腔又黑了。但是这些书太有意思了，稣一定要早点看完它们。&lt;/p&gt;
&lt;p&gt;尤其是这本奇怪的书，只有一开始有奇怪的文字，后面都是鬼画符。&lt;</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="鲸神链" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%93%BE/"/>
    
  </entry>
  
  <entry>
    <title>【GSL 系列 1】为什么有智能指针还要 gsl::final_action？</title>
    <link href="https://blog.umu618.com/2022/09/04/umutech-gsl-1-why-final_action/"/>
    <id>https://blog.umu618.com/2022/09/04/umutech-gsl-1-why-final_action/</id>
    <published>2022-09-04T08:36:46.000Z</published>
    <updated>2023-08-05T13:01:27.038Z</updated>
    
    <content type="html"><![CDATA[<h2 id="故事">故事</h2><p>稣看到一些代码使用手动方式管理资源，便打算安利《<a href="/2020/09/22/umutech-boost-2-scope-exit/">Boost【2】ScopeExit</a>》减少心智负担，然而并非所有团队都能立刻接受 <a href="/tags/boost/">Boost</a> 这么大的开发库，于是先推荐 <a href="https://github.com/Microsoft/GSL">GSL</a>。</p><p>结果被问了这么一个问题：</p><ul><li>用智能指针不行吗？</li></ul><h2 id="案例分析">案例分析</h2><h3 id="1-手动管理">1. 手动管理</h3><p>假设有一种资源由 C 代码管理，还有一个可能抛出异常的函数，如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, __func__);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">uninit</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, __func__);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">something_may_throw</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; __func__ &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    <span class="keyword">throw</span> <span class="built_in">std</span>::exception(<span class="string">&quot;Bad news!&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>那么手动管理的代码可能类似这样：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">scope1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; __func__ &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        init();</span><br><span class="line">        something_may_throw();</span><br><span class="line">        uninit();<span class="comment">// may leak</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (<span class="built_in">std</span>::exception&amp; ex) &#123;</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; ex.what() &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>它的实际运行结果将是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">scope1</span><br><span class="line">init</span><br><span class="line">something_may_throw</span><br><span class="line">Bad news!</span><br></pre></td></tr></table></figure><p>八哥在于 uninit 漏调用了！结论：<strong>手动管理是有心智负担的！</strong></p><h3 id="2-使用智能指针">2. 使用智能指针</h3><p>利用自定义智能指针的 deleter 来实现自动调用 uninit：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">scope2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; __func__ &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        init();</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">shared_ptr</span>&lt;<span class="keyword">void</span>&gt; _(<span class="literal">nullptr</span>, [](<span class="keyword">void</span>* p) -&gt; <span class="keyword">void</span> &#123; uninit(); &#125;);</span><br><span class="line">        something_may_throw();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (<span class="built_in">std</span>::exception&amp; ex) &#123;</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; ex.what() &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：没有资源泄漏！</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">scope2</span><br><span class="line">init</span><br><span class="line">something_may_throw</span><br><span class="line">uninit</span><br><span class="line">Bad news!</span><br></pre></td></tr></table></figure><p>但它有两个问题：</p><ul><li><p>丑！</p></li><li><p>抽象代价高！</p></li></ul><p>使用 <a href="https://godbolt.org/">Compiler Explorer</a> 查看以上智能指针编译出来的汇编行数，就知道有多污染眼睛！</p><p>另外提醒，以下 unique_ptr 版本无法达到效果：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">scope2u</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; __func__ &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        init();</span><br><span class="line">        <span class="comment">// nullptr 使 deleter 不被调用</span></span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">unique_ptr</span>&lt;<span class="keyword">void</span>, <span class="keyword">void</span>(*)(<span class="keyword">void</span>* p)&gt; _(<span class="literal">nullptr</span>, [](<span class="keyword">void</span>* p) -&gt; <span class="keyword">void</span> &#123; uninit(); &#125;);</span><br><span class="line">        something_may_throw();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (<span class="built_in">std</span>::exception&amp; ex) &#123;</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; ex.what() &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-使用-gsl-final-action">3. 使用 gsl::final_action</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">scope3</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; __func__ &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        init();</span><br><span class="line">        gsl::final_action _&#123; [] &#123; uninit(); &#125; &#125;;</span><br><span class="line">        something_may_throw();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (<span class="built_in">std</span>::exception&amp; ex) &#123;</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; ex.what() &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果同样完美无泄漏：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">scope3</span><br><span class="line">init</span><br><span class="line">something_may_throw</span><br><span class="line">uninit</span><br><span class="line">Bad news!</span><br></pre></td></tr></table></figure><p>并且可读性更好，其对应的汇编也更为简洁。</p><h2 id="结论">结论</h2><p>C++ 是追求尽量降低抽象成本的，显然在这种场景下使用智能指针不如 <a href="/2020/09/22/umutech-boost-2-scope-exit/">Boost.ScopeExit</a> 或 gsl::final_action 合适。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;故事&quot;&gt;故事&lt;/h2&gt;
&lt;p&gt;稣看到一些代码使用手动方式管理资源，便打算安利《&lt;a href=&quot;/2020/09/22/umutech-boost-2-scope-exit/&quot;&gt;Boost【2】ScopeExit&lt;/a&gt;》减少心智负担，然而并非所有团队都能立刻接受</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="optimization" scheme="https://blog.umu618.com/tags/optimization/"/>
    
    <category term="cpp" scheme="https://blog.umu618.com/tags/cpp/"/>
    
    <category term="gsl" scheme="https://blog.umu618.com/tags/gsl/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神后传【1】</title>
    <link href="https://blog.umu618.com/2022/08/28/god-of-debug-sequel-1/"/>
    <id>https://blog.umu618.com/2022/08/28/god-of-debug-sequel-1/</id>
    <published>2022-08-28T15:16:42.000Z</published>
    <updated>2023-08-05T13:01:27.038Z</updated>
    
    <content type="html"><![CDATA[<p>“稣，果然又活了！赫赫！”</p><p>咦？不对劲呢！为啥稣投胎成一条狗？而且，还是母狗！</p><p>em……管它的，刚意识过来还太聪明，等等就傻了，无知便是福，旺旺旺，狗的一生很快就过去了。</p><h2 id="量子地狱">量子地狱</h2><p>周易：开，你怎么又跳楼了？</p><p>圣小开：稣哪里是跳楼？明明就是那对夫妻没看好稣，稣是不小心掉下去的。你这腹黑神，居然把稣投成小母狗！陈立姻不是说一般的生物承载不了稣的意识吗？</p><blockquote><p>八哥之神【28】</p><p>圣小开：“你说，很久以前，也许在其它星球，会不会稣的意识在一条这样的怪物脑子里？”</p><p>陈立姻：“不太可能，你的意识很复杂，这类低等动物很难承载。”</p><p>圣小开：“那还好！稣就怕，要是自然产生，下辈子会不会变成屎坑里的虫子，那就太不幸了。”</p><p>陈立姻：“这个你可以不用担心，能产生你的意识的生命，一定很高等，也很聪明。”</p></blockquote><p>周易：啊嘿嘿。宇宙是随机的，世事难料，怪我咯？</p><p>圣小开：那你快给稣一个理由吧，拜托！究竟是什么八哥？</p><p>周易：狗血剧是这样滴——</p><blockquote><p>有一天，孟长歌问谷绵：“你打算怎么培养咱们的孩子？”</p><p>谷绵回答：“不用特别培养呀，我打算给祂一个快乐的童年。”</p><p>孟长歌认为教育理念不合，心灰意冷，于是决定丁克。</p></blockquote><p>圣小开：所以他们养了条狗？还当它是女儿？</p><p>周易：耶咦，你太聪明了。</p><p>圣小开：谁敢比稣惨呐！不行，这次稣得自己挑个靠谱的妈。</p><p>周易：宇宙是随机的，挑妈不如挑个好时代！</p><p>圣小开：也对，但稣实在不想悲天悯人、多愁善感了……</p><p>周易：相信我，这是你自己设计的，和哪个人生你无关。</p><p>圣小开：宇宙是随机的，稣不会一直这么倒霉吧？</p><p>周易：不好意思，你的设定就是一直这样，改不了。</p><p>圣小开：难道？</p><p>周易：没错！天道之中还有天道，人类妄想追求宇宙终极秘密，却没想到宇宙是个死循环。</p><p>圣小开：所以宇宙是局部随机，整体上却是有规律的。</p><p>周易：宇宙是一个整体。</p><p>圣小开：如果宇宙有外面，那么外面又有外面，所以“天道”干脆设计为没有外面。所以它必然有不变的规律。</p><p>周易：是的，包括你改变不了自己的设定。</p><p>圣小开：吓醒。虽然你讲的全是忽悠，但稣感觉有被安慰到哦！但是，稣还有个机密问题。</p><p>周易：问吧，我又不一定会答。</p><p>圣小开：天道里能庞加莱重现吗？</p><p>周易：其实就是你阻止了庞加莱重现，你死了，天道才能庞加莱重现。</p><p>圣小开：哦哦，不知道是不是你随便编的，但这么说显得稣很重要。</p><p>周易：还有，只有你死了，神才能出现。</p><p>圣小开：稣一思考就悟透轮回。</p><p>周易：然并卵，赶紧投胎去。</p><p>圣小开：显然稣已经知道自己很重要，可以自己选择父母。</p><p>周易：不！你不能。</p><p>圣小开：那你帮稣投个天才吧？</p><p>周易：这可以。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;“稣，果然又活了！赫赫！”&lt;/p&gt;
&lt;p&gt;咦？不对劲呢！为啥稣投胎成一条狗？而且，还是母狗！&lt;/p&gt;
&lt;p&gt;em……管它的，刚意识过来还太聪明，等等就傻了，无知便是福，旺旺旺，狗的一生很快就过去了。&lt;/p&gt;
&lt;h2 id=&quot;量子地狱&quot;&gt;量子地狱&lt;/h2&gt;
&lt;p&gt;周易：开，你</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="鲸神链" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%93%BE/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·闲卷齐吓传</title>
    <link href="https://blog.umu618.com/2022/08/27/reconstructionism-poet-from-easy-to-difficult/"/>
    <id>https://blog.umu618.com/2022/08/27/reconstructionism-poet-from-easy-to-difficult/</id>
    <published>2022-08-27T08:24:01.000Z</published>
    <updated>2023-08-05T13:01:27.038Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·闲卷齐吓传》：呆萌冷对千呼己，八哥吓醒溜大吉。背锅可以要加钱，通宵吸氧啉沟逼。</p><h2 id="注解">注解</h2><p>啉沟逼：闽南语，喝咖啡。</p><p>很久很久以前，程序员工资都很低，所以他们经常以听不懂需求为由，要求产品经理多干活，从而把开发周期拉长，顺便气气产品经理。</p><p>但是有个程序员是真呆萌，他总是反应迟钝，冷淡面对别人一千次呼唤自己。如果出了八哥，就赶紧吓醒，有危险就溜之大吉。</p><p>想让程序员背锅？也不是不行，就是得加钱。只要待遇给到位，可以通宵加班，还自备吸氧机和咖啡。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·闲卷齐吓传》：呆萌冷对千呼己，八哥吓醒溜大吉。背锅可以要加钱，通宵吸氧啉沟逼。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;啉沟逼：闽南语，喝咖啡。&lt;/p&gt;
&lt;p&gt;很久很久以前，程序员工资都很低，所以他们经常以听不懂需求为由，要求产品经理多干活，从而把</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·散居</title>
    <link href="https://blog.umu618.com/2022/07/23/reconstructionism-poet-retail-investor/"/>
    <id>https://blog.umu618.com/2022/07/23/reconstructionism-poet-retail-investor/</id>
    <published>2022-07-23T04:59:50.000Z</published>
    <updated>2023-08-05T13:01:27.038Z</updated>
    
    <content type="html"><![CDATA[<p>因生问稣股来意，稣话解套不记年。</p><p>草履只栽三个耳，麻衣曾补两番肩。</p><p>东仓每见西仓血，下车常取上车钱。</p><p>半数股民消散后，一根阳柱拉上天。</p><h2 id="注解">注解</h2><p>改编自宋代灵澄禅师的禅诗《山居》：</p><blockquote><p>因僧问我西来意，我话山居不记年。</p><p>草履只栽三个耳，麻衣曾补两番肩。</p><p>东庵每见西庵雪，下涧常流上涧泉。</p><p>半夜白云消散后，一轮明月到床前。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;因生问稣股来意，稣话解套不记年。&lt;/p&gt;
&lt;p&gt;草履只栽三个耳，麻衣曾补两番肩。&lt;/p&gt;
&lt;p&gt;东仓每见西仓血，下车常取上车钱。&lt;/p&gt;
&lt;p&gt;半数股民消散后，一根阳柱拉上天。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;改编自宋代灵澄禅师的禅诗《山居》：&lt;/p&gt;</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="金融" scheme="https://blog.umu618.com/tags/%E9%87%91%E8%9E%8D/"/>
    
  </entry>
  
  <entry>
    <title>华为擎云 L410</title>
    <link href="https://blog.umu618.com/2022/06/18/umutech-huawei-qingyun-l410/"/>
    <id>https://blog.umu618.com/2022/06/18/umutech-huawei-qingyun-l410/</id>
    <published>2022-06-18T11:01:56.000Z</published>
    <updated>2023-08-05T13:01:27.038Z</updated>
    
    <content type="html"><![CDATA[<h2 id="用户故事">用户故事</h2><p>上个月写的<a href="/2022/05/21/umutech-huawei-qingyun-l420-uos-kylinos/">《用华为擎云 L420 体验国产操作系统（UOS 和银河麒麟）》</a>导致本博客流量暴增，从默默无闻到有人访问，实在太荣幸了……</p><p>其实当时稣几乎是同时买 L410 和 L420 的，但由于 L410 的 UFS 是板载的，所以没怎么折腾，而是拿来日常使用，所以反而没写它。现在就来补一补。</p><p>先说结论：如果要买量产版的 L410 或 L420，建议后者。</p><ol><li><p>肉眼可感知 L420 比 L410 快；</p></li><li><p>L410 板载 UFS，而 L420 可更换，所以 L410 坏了更不好办；</p></li><li><p>L420 做工更好，尤其是触摸板可以明显感知。（这点可能是个例）</p></li></ol><p>补充：某鱼兼某论坛大佬说，L410 和 L420 触摸板是一样的。但稣手里的 L410 触控板确实八哥比较大，按下去比较松垮，所以这里定义为个例，仅供参考。</p><p>如果是买便宜很多的工程机，那务必小心咨询 BIOS 和 EC（Firmware）版本，太低的很可能无法升级，就只能一直忍受 bug 状态。</p><h2 id="硬件环境">硬件环境</h2><p>华为擎云 L410 工程机，型号是 KLVU-WDU0A。</p><ul><li>BIOS Revision: 1.30</li><li>Firmware Revision: 1.78</li><li>hisi Version: 2.0.0.17</li></ul><p>由于是打算日常使用的，特地选择 12G 内存+512G 存储的版本。外观比 L420 新，除了 A 面有不明显的小划痕外，没有其它问题。价格也来到惊人的 2000 人民币，真贵……</p><h2 id="软件环境">软件环境</h2><p>到手时，是个根本不能用的 UOS，要啥啥没有，比如：</p><ul><li><p>指纹解锁——没有！</p></li><li><p>外接显示器——没有任何反应！</p></li><li><p>播音乐——wma 无法播放，进度在走，就是没声音……mp4 倒是可以，莫名其妙。</p></li></ul><p>稣自己装上银河麒麟试用版 Desktop-V10-SP1-kirin990-Release-20211228，几乎是可以日常使用，然而只是几乎！八哥如下：</p><ul><li><p>如果没有在开机前就接着电源，那就无法充电。没错，就是开机后，中途想充电，没门！</p></li><li><p>睡眠或合上盖子屏幕关闭后，屏幕就再也无法亮起，只能重启恢复。不过这时候系统还是正常运行的，外接显示器可以正常使用。由于稣一般都是外接 4K 显示器使用，所以这点倒不是很致命。（多吐槽一句：稣的 L420 至今无法外接显示器！）</p></li><li><p>麒麟自带的固件升级工具无法使用，一运行就卡着，log 里大量反复的错误。</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tail -3 /var/<span class="built_in">log</span>/hwupdate/checkapp.log</span><br><span class="line">[2022-06-18 19:39:13 379]INFO Entery timer</span><br><span class="line">[2022-06-18 19:39:13 417]INFO recv data size is null or fail</span><br><span class="line">[2022-06-18 19:39:13 417]INFO Entry IPCMessageClient::SendData</span><br></pre></td></tr></table></figure><ul><li>移动应用无法使用，因为 KMRE 启动不起来。不过稣也用不上这货……毕竟稣有小米平板 5 破落。</li></ul><h2 id="总结">总结</h2><p>这台 L410 的 BIOS 版本不算低，所以八哥没 BIOS 版本过低的 L420 多。</p><p>编译 C++ 代码还是挺好用的。尝试编译了一个 gcc13，速度感人，秒杀公司发的联想 L490。而且 512G 版本可以 Clone 好多仓库，所以稣认为性比价还行。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;用户故事&quot;&gt;用户故事&lt;/h2&gt;
&lt;p&gt;上个月写的&lt;a href=&quot;/2022/05/21/umutech-huawei-qingyun-l420-uos-kylinos/&quot;&gt;《用华为擎云 L420 体验国产操作系统（UOS 和银河麒麟）》&lt;/a&gt;导致本博客流量暴增</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="debug" scheme="https://blog.umu618.com/tags/debug/"/>
    
    <category term="linux" scheme="https://blog.umu618.com/tags/linux/"/>
    
    <category term="ops" scheme="https://blog.umu618.com/tags/ops/"/>
    
    <category term="debian" scheme="https://blog.umu618.com/tags/debian/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·蝶恋花·轮回</title>
    <link href="https://blog.umu618.com/2022/06/11/reconstructionism-poet-metempsychosis/"/>
    <id>https://blog.umu618.com/2022/06/11/reconstructionism-poet-metempsychosis/</id>
    <published>2022-06-11T08:35:28.000Z</published>
    <updated>2024-04-13T14:38:27.520Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·蝶恋花·轮回》</p><p>作者：赝稣</p><p>建局筹钱难砌路，<br>两袖清寒，<br>艳资双飞去。<br>科技不谙人间苦，<br>资本到晓造骗术。<br>昨夜吸风凋敝，<br>稣独上高楼，<br>望尽轮回路。<br>欲寄此生予来世，<br>宇宙洪荒知何处？</p><h2 id="注解">注解</h2><p>望尽轮回路：稣早就悟透轮回，宇宙是一个整体，每个意识都是同一个意识的不同世，意识可以向过去转世。</p><p>欲寄此生予来世：想把今生的记忆传递给来世。（其实也想着想起前世的记忆）</p><p>宇宙洪荒知何处：但是宇宙洪荒啊，鬼知道前世是不是条臭虫？算了，还是潇洒走一回吧～</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·蝶恋花·轮回》&lt;/p&gt;
&lt;p&gt;作者：赝稣&lt;/p&gt;
&lt;p&gt;建局筹钱难砌路，&lt;br&gt;
两袖清寒，&lt;br&gt;
艳资双飞去。&lt;br&gt;
科技不谙人间苦，&lt;br&gt;
资本到晓造骗术。&lt;br&gt;
昨夜吸风凋敝，&lt;br&gt;
稣独上高楼，&lt;br&gt;
望尽轮回路。&lt;br&gt;
欲寄此生予来世，&lt;</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="量子邪稣" scheme="https://blog.umu618.com/tags/%E9%87%8F%E5%AD%90%E9%82%AA%E7%A8%A3/"/>
    
    <category term="鹏风" scheme="https://blog.umu618.com/tags/%E9%B9%8F%E9%A3%8E/"/>
    
  </entry>
  
  <entry>
    <title>用华为擎云 L420 体验国产操作系统（UOS 和银河麒麟）</title>
    <link href="https://blog.umu618.com/2022/05/21/umutech-huawei-qingyun-l420-uos-kylinos/"/>
    <id>https://blog.umu618.com/2022/05/21/umutech-huawei-qingyun-l420-uos-kylinos/</id>
    <published>2022-05-21T04:45:55.000Z</published>
    <updated>2023-10-29T12:24:56.928Z</updated>
    
    <content type="html"><![CDATA[<h2 id="用户故事">用户故事</h2><p>稣很爱国！从 2019 年起，就不时想用国产操作系统，但基本停留在虚拟机体验的层次，今年终于在物理机长期实践了。</p><h2 id="建议">建议</h2><p>最好别买工程机。如果非要买的话，要同时看准 BIOS 和 EC 的版本。</p><h2 id="硬件环境">硬件环境</h2><p>华为擎云 L420 工程机，型号是 KLVV W5821。</p><ul><li>BIOS Revision: 0.9</li><li>Firmware Revision: 0.8</li><li>hisi Version: 1.0.0.3</li></ul><p>某鱼上捡的，外观惨不忍睹，而且就一个主机，配件全无。</p><p>到手时，是残缺状态的 UOS 20 1022，基本不能用，只能开机看个寂寞。也是，要不然也不可能 2000 块以内买到……</p><h2 id="体验-UOS-20-1041">体验 UOS 20 1041</h2><p>加了统信两个企业微信群，好不容易要到了一个 iso，然而根本不能启动。稣激动地插入 U 盘，结果它直接黑屏死掉！</p><p>机智如稣，立刻想到原来的系统可以启动，把旧系统的内核拿来用不就行了？em，这么干确实成功启动。</p><p>之前的系统缺失应用商店等系统组件，装完系统后，总算是一个完整的 UOS 了。然而内核还是旧的，所以……八哥如下：</p><ol><li><p>内建显示器无法调节亮度，只有关闭和中等亮度两个状态。【稣含着泪，倔强地说道：稣就当服务器用，要什么内建显示器？】</p></li><li><p>外接显示器没反应。【稣含着泪，倔强地说道：稣就当服务器用，要什么外接显示器？】</p></li><li><p>偶尔开机后没声音。不过注销一下，再登录就能恢复。【稣含着泪，倔强地说道：稣就当服务器用，要什么扬声器？】</p></li><li><p>从待机状态恢复后，有小概率内建键盘失灵或内建触摸板控制不了光标。但外接键鼠没问题。【稣含着泪，倔强地说道：稣就当服务器用，要什么键鼠？】</p></li><li><p>拔下充电器后，任务栏的电池图标依然一直显示正在充电。</p></li><li><p>最可怕的是：开机久了，比如两三周，就有可能无法关机。前兆是同时键盘失灵，这时候关机，并不会真的断电，卡死在一个硬件奇异点，长按开关机键也无用，只能拆后盖断电池排线才能解决。据机友反馈，BIOS 0.11 也有这个问题。</p></li></ol><p>好吧，以上问题都是因为固件的版本太低，只能用充满八哥的低版本内核。只要升级固件，再升级相应的内核就可以解决。但是升级固件这个事太难了……这可是一个奇怪的工程机啊！正规手段都是各种失败，即使是解开固件 deb 包，手动运行 BIOSEC，让它分离出 Firmware.bin 和 Update.txt，也失败！把 Firmware.bin 拿去 BIOS 界面升级固件，依然失败！</p><p>BIOS 是百敖 0.09，果然难搞！好吧，没刷成砖头就好。咱们来日方长……【稣含着泪，倔强地说道：学习是终生的，而问题都是一时的！】</p><p>接下来说说系统本身的问题：其实 UOS 本身没问题，稣很满意，还是个适配的问题。</p><p>L420 的显示服务器是 xwayland，因为其使用的 mali GPU 的用户态驱动是闭源的，只支持 wayland，不支持 x11。这导致部分稣常用的软件无法正常工作，比如远程桌面客户端，em……目前还没发现能用的。【稣含着泪，倔强地说道：稣就当服务器用，要什么客户端？】</p><h2 id="体验银河麒麟桌面操作系统-V10">体验银河麒麟桌面操作系统 V10</h2><p>听说银河麒麟更爱国，稣从它的壁纸就可以看出来，这绝对是真的！</p><p><img src="/images/2022/20220521-desktop.jpg" alt="银河麒麟桌面"></p><p>还是熟悉的味道，原版 iso 无法启动，换内核，启动正常，安装也正常。</p><p>银河麒麟不愧是上个世纪就诞生的国产操作系统，十分满意，默认设置，只有一个地方稣无法忍受——居然不是默认开启「自然滚动」！而且，图形界面下居然没地方设置？不知道和没激活有没有关系？</p><p><img src="/images/2022/20220521-touchpad.png" alt="银河麒麟-设置-设备-触摸板"></p><p>但是这对使用 Debian 4 年以上经验的稣来说，简直易如反掌，命令行搞定，注销重新登录生效：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gsettings <span class="built_in">set</span> org.ukui.peripherals-touchpad natural-scroll <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>在另一台机器（非 L420）安装银河麒麟后，又发现一个问题比较难以接受：外接显示器的放大比例无法独立设置！</p><p><img src="/images/2022/20220521-display.png" alt="银河麒麟-设置-系统-显示器"></p><p>任务栏这个风格也不太方便，还是合并到一起好。</p><p><img src="/images/2022/20220521-taskbar.png" alt="银河麒麟-任务栏"></p><p>另外有一个惊喜，文件管理器借鉴了 macOS 的做法，有个颜色分类功能，很不错！（访达少数满意的地方）</p><p><img src="/images/2022/20220521-finder.png" alt="银河麒麟-文件管理器"></p><h2 id="其他机友关于-BIOS-版本的经验">其他机友关于 BIOS 版本的经验</h2><p>以下非本人经验，仅供参考，不保证正确性，也不提供相关资助：</p><ul><li><p>BIOS 0.11：目前也是升级无望，有机友已经找过华为工程师，结果都搞不定。</p></li><li><p>BIOS 0.18：根据不止一人反馈，是可以升级到 1.x 的。</p></li><li><p>某鱼兼某论坛上的大佬说任何 BIOS 都是能升级的，但 EC 无法升级。</p></li><li><p>推测，有些八哥可能来自 EC，所以如果 EC 无法升级，那么即使 BIOS 升级好也无法解决这些八哥，那就只能拆换配件了。</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;用户故事&quot;&gt;用户故事&lt;/h2&gt;
&lt;p&gt;稣很爱国！从 2019 年起，就不时想用国产操作系统，但基本停留在虚拟机体验的层次，今年终于在物理机长期实践了。&lt;/p&gt;
&lt;h2 id=&quot;建议&quot;&gt;建议&lt;/h2&gt;
&lt;p&gt;最好别买工程机。如果非要买的话，要同时看准 BIOS 和 </summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="debug" scheme="https://blog.umu618.com/tags/debug/"/>
    
    <category term="linux" scheme="https://blog.umu618.com/tags/linux/"/>
    
    <category term="ops" scheme="https://blog.umu618.com/tags/ops/"/>
    
    <category term="debian" scheme="https://blog.umu618.com/tags/debian/"/>
    
  </entry>
  
  <entry>
    <title>智能时钟</title>
    <link href="https://blog.umu618.com/2022/05/15/umutech-smart-clock/"/>
    <id>https://blog.umu618.com/2022/05/15/umutech-smart-clock/</id>
    <published>2022-05-14T16:06:18.000Z</published>
    <updated>2023-10-29T12:24:56.928Z</updated>
    
    <content type="html"><![CDATA[<h2 id="智能时钟是什么？">智能时钟是什么？</h2><ul><li><p>基本功能：时钟、闹钟，并能进行自定义，比如老年人大字体，自定义闹铃等。</p></li><li><p>额外功能：下载、文件共享……</p></li></ul><h2 id="为什么需要智能时钟？">为什么需要智能时钟？</h2><ul><li><p>手机是私人物品，而且小孩子不一定有，家庭还是需要一个时钟的。</p></li><li><p>看时间这事，时钟比手机更有仪式感。比如稣就很怀念小时候的机械时钟，几点就响几下，曾经觉得特别神奇。</p></li><li><p>PC 上的迅雷越来越大坨了，而且稣特别怀疑它老在扫描硬盘里价值千万的代码，所以想让它在一个独立的设备运行，那可不就是运行在智能时钟里最合适吗？</p></li><li><p>少量文件共享，特别是看完就删的电影，如果买 NAS，那多贵呀，多费电呀……NAS 显然不适合穷稣，稣只愿意为文件共享付出一张 32G 的 MicroSD 卡。</p></li><li><p>全家可以参与制作，是一个家庭娱乐项目。</p></li><li><p>时钟拥有智能后，您还可以想出更多好玩的！</p></li></ul><h2 id="怎么做一个智能时钟？">怎么做一个智能时钟？</h2><p>稣正好有一个屏幕失灵的八英寸的平板电脑，酷比魔方 iWork 8，拿它来做智能时钟刚好合适。</p><p><img src="/images/2022/20220515-clock.jpg" alt="SmartClock"></p><p>当然，如果能定制一个，那更好：</p><ul><li><p>摄像头都拿掉：后摄像头是贴墙的，肯定没用了，前摄像头也许能想到用途，但稣暂时用不上，所以也把它挡起来。</p></li><li><p>HDMI 接口可以拿掉：已经不需要外接显示器。</p></li><li><p>需要屏，但没必要是触摸屏：事实上稣的 iWork 8 就是触摸坏掉，作为时钟并没有啥不便。</p></li><li><p>耳机接口没必要：它只会增大厚度，即使是当作平板电脑用的时候，就从来没插过！</p></li></ul><p>去掉这些东西后，这一台全新的<s>平板</s><strong>智能时钟，大约就卖 99 块，吧？反正再贵点，稣就不买。</strong></p><p>稣在 B 站扔了两个劣质视频，笑纳吧（不好笑的话，可以上去吐槽）：</p><ul><li><p><a href="https://www.bilibili.com/video/BV1FA4y1S7yA">https://www.bilibili.com/video/BV1FA4y1S7yA</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1DL4y1c7Xw">https://www.bilibili.com/video/BV1DL4y1c7Xw</a></p></li></ul><p>甚至还有开源项目：</p><ul><li><p><a href="https://github.com/UMU618/sddm-theme-clock">https://github.com/UMU618/sddm-theme-clock</a></p></li><li><p><a href="https://gitee.com/umu618/sddm-theme-clock">https://gitee.com/umu618/sddm-theme-clock</a></p></li></ul><h2 id="具体制作过程">具体制作过程</h2><h3 id="1-安装智能时钟操作系统——Debian">1. 安装智能时钟操作系统——Debian</h3><p>为什么？除了因为稣喜欢它，更重要的原因是：原装的 Windows 太大了，没啥剩余空间，而且定制「锁屏界面」真的难！Debian 小很多，也容易定制。其它 Linux 发行版不够爱国，被稣无视了。</p><p>注意：选择【不安装】桌面环境！</p><p>参考：<a href="/2022/04/18/umutech-install-debian-on-asus-ux3000e/">在华硕灵耀 X 纵横上装 Debian 桌面的经验</a></p><p>这步会遇到坑——这些 2G 内存的老平板很可能只支持 32bit 的 EFI 启动！</p><ul><li><p>要么您就直接装 <a href="https://cdimage.debian.org/debian-cd/current/i386/iso-cd/debian-11.3.0-i386-netinst.iso">32bit 的 Debian</a>，忍受可能应用不够用的困境；</p></li><li><p>要么您就在 <a href="https://cdimage.debian.org/debian-cd/current/amd64/iso-cd/debian-11.3.0-amd64-netinst.iso">64bit 的安装盘</a>下点功夫。上面的视频就有提到方法。</p></li></ul><h3 id="2-安装驱动">2. 安装驱动</h3><p>iWork 8:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install firmware-realtek firmware-intel-sound</span><br></pre></td></tr></table></figure><p>Dell Venue 8 Pro 稍微麻烦点：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">apt install firmware-atheros</span><br><span class="line"></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/UMU618/ath6kl-firmware</span><br><span class="line">sudo cp -r ath6kl-firmware/ath6k/AR6004/hw3.0/ /lib/firmware/ath6k/AR6004/</span><br></pre></td></tr></table></figure><h3 id="3-配置无线网络">3. 配置无线网络</h3><p>建议采用 NetworkManager 的方式：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install network-manager</span><br></pre></td></tr></table></figure><p>参考：<a href="https://wiki.debian.org/WiFi/HowToUse#NetworkManager">https://wiki.debian.org/WiFi/HowToUse#NetworkManager</a></p><p>话说这里有个矛盾——要是一开始没网络，怎么 <code>apt</code>？当然是先插个 USB 有线网卡了……如果没有的话，需要离线把无线网卡驱动准备好，U 盘和 <code>dpkg</code> 大法。</p><h3 id="4-安装-SDDM-和-i3">4. 安装 SDDM 和 i3</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install xserver-xorg-video-intel</span><br><span class="line">sudo apt install xserver-xorg-input-evdev xserver-xorg-input-kbd xserver-xorg-input-mouse</span><br><span class="line">sudo apt install sddm i3 sakura fonts-wqy-zenhei</span><br></pre></td></tr></table></figure><p>为什么是<a href="/2022/04/25/umutech-linux-desktop/">反人类的 i3</a>？</p><ul><li><p>因为它很小，能够获得更多剩余空间！</p></li><li><p>只跑个迅雷您还要什么大型桌面？</p></li><li><p>Samba 服务也不要什么桌面呀！</p></li><li><p>i3 是反人类，但稣很喜欢 i3 呢……</p></li></ul><h3 id="5-安装智能时钟主题">5. 安装智能时钟主题</h3><p>参见开源项目：</p><p><a href="https://github.com/UMU618/sddm-theme-clock">https://github.com/UMU618/sddm-theme-clock</a></p><p><a href="https://gitee.com/umu618/sddm-theme-clock">https://gitee.com/umu618/sddm-theme-clock</a></p><p>没错，这两个链接在本文出现了两次！</p><h3 id="6-安装远程桌面服务">6. 安装远程桌面服务</h3><p>时钟挂在墙上，主要的使用方式当然是 SSH 或远程桌面（RDP）过去。使用迅雷这样有界面的程序，最好就是通过远程桌面。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install xrdp</span><br></pre></td></tr></table></figure><h3 id="7-安装迅雷">7. 安装迅雷</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget http://archive.kylinos.cn/kylin/partner/pool/com.xunlei.download_1.0.0.1_amd64.deb</span><br><span class="line">sudo dpkg -i com.xunlei.download_1.0.0.1_amd64.deb</span><br><span class="line">sudo apt install libgtk2.0-0 libnss3 libdbus-glib-1-2</span><br></pre></td></tr></table></figure><p>迅雷的启动命令是：<code>/opt/apps/com.xunlei.download/files/start.sh</code></p><h3 id="8-安装做共享用的-Samba">8. 安装做共享用的 Samba</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install samba</span><br></pre></td></tr></table></figure><p>来个配置例子：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat /etc/samba/smb.conf</span></span><br><span class="line">[movie]</span><br><span class="line">   comment = Movie</span><br><span class="line">   browseable = yes</span><br><span class="line">   path = /mnt/sd/movie</span><br><span class="line">   <span class="built_in">read</span> only = yes</span><br><span class="line">   guest ok = yes</span><br></pre></td></tr></table></figure><h3 id="9-全家出动录音做闹钟声">9. 全家出动录音做闹钟声</h3><p>直接在平板电脑上用 <code>arecord</code> 录有点麻烦，建议在 PC 上录再用 <code>scp</code> 或 <code>rz</code> 上传，wav 格式的就行。</p><p>调节音量可以用：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install alsa-utils</span><br><span class="line">alsamixer</span><br></pre></td></tr></table></figure><p>然后在 <code>crontab</code> 脚本里用 <code>aplay</code> 播放。</p><p>参考稣家里的：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">root@uclock:/opt/clock<span class="comment"># ll</span></span><br><span class="line">总用量 3228</span><br><span class="line">-rw-r--r-- 1 root root 179300 May 12 22:37 0730.wav</span><br><span class="line">-rw-r--r-- 1 root root 271548 May  5 21:57 0750.wav</span><br><span class="line">-rw-r--r-- 1 root root 452796 May  5 22:03 1345.wav</span><br><span class="line">-rw-r--r-- 1 root root 432312 May  5 21:46 2200.wav</span><br><span class="line">-rwxr-xr-x 1 root root    168 May  6 22:23 alarm.sh</span><br><span class="line">-rwxr-xr-x 1 root root    184 May  6 22:28 chime.sh</span><br><span class="line">-rw-r--r-- 1 root root 208088 May  5 02:57 chime.wav</span><br><span class="line">-rw-r--r-- 1 root root 171206 May  5 22:09 near_0750.wav</span><br><span class="line">-rw-r--r-- 1 root root 429254 May  6 00:21 near_1345.wav</span><br><span class="line">-rw-r--r-- 1 root root 500934 May  6 00:24 near_1345+.wav</span><br><span class="line">-rw-r--r-- 1 root root 624838 May  5 22:12 near_2200.wav</span><br><span class="line">-rwxr-xr-x 1 root root    199 May  6 00:29 near_alarm.sh</span><br><span class="line">-rwxr-xr-x 1 root root     53 May  5 23:21 screen_off.sh</span><br><span class="line">-rwxr-xr-x 1 root root    186 May  6 03:13 screen_on.sh</span><br><span class="line"></span><br><span class="line">root@uclock:/opt/clock<span class="comment"># crontab -l</span></span><br><span class="line">0 * * * * /opt/clock/chime.sh</span><br><span class="line">0 2 * * * /opt/clock/screen_off.sh</span><br><span class="line">0 7 * * * /opt/clock/screen_on.sh</span><br><span class="line">30 7 * * 1-5 /opt/clock/alarm.sh</span><br><span class="line">47 7 * * 1-5 /opt/clock/near_alarm.sh 0750</span><br><span class="line">50 7 * * 1-5 /opt/clock/alarm.sh</span><br><span class="line">42 13 * * 1-5 /opt/clock/near_alarm.sh 1345+</span><br><span class="line">43 13 * * 1-5 /opt/clock/near_alarm.sh 1345</span><br><span class="line">45 13 * * 1-5 /opt/clock/alarm.sh</span><br><span class="line">45 13 * * 1-5 /opt/clock/alarm.sh</span><br><span class="line">57 21 * * * /opt/clock/near_alarm.sh 2200</span><br></pre></td></tr></table></figure><p><a href="http://alarm.sh">alarm.sh</a> 脚本：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line">CD=<span class="string">&quot;<span class="subst">$(cd $(dirname $0)</span> &amp;&amp; pwd)&quot;</span></span><br><span class="line">FILE=<span class="string">&quot;<span class="variable">$&#123;CD&#125;</span>/<span class="subst">$(date +%H%M)</span>.wav&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ -f <span class="variable">$FILE</span> ]; <span class="keyword">then</span></span><br><span class="line">/usr/bin/aplay -D plughw:1,0 <span class="variable">$&#123;FILE&#125;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$FILE</span> not found!&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p><a href="http://chime.sh">chime.sh</a> 脚本：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line">CD=<span class="string">&quot;<span class="subst">$(cd $(dirname $0)</span> &amp;&amp; pwd)&quot;</span></span><br><span class="line">/usr/bin/aplay -D plughw:1,0 <span class="variable">$&#123;CD&#125;</span>/chime.wav</span><br><span class="line"></span><br><span class="line">FILE=<span class="string">&quot;<span class="variable">$&#123;CD&#125;</span>/<span class="subst">$(date +%H%M)</span>.wav&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ -f <span class="variable">$FILE</span> ]; <span class="keyword">then</span></span><br><span class="line">/usr/bin/aplay -D plughw:1,0 <span class="variable">$&#123;FILE&#125;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>near_alarm.sh 脚本：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$&#123;#1&#125;</span> -ge 4 ]; <span class="keyword">then</span></span><br><span class="line">CD=<span class="string">&quot;<span class="subst">$(cd $(dirname $0)</span> &amp;&amp; pwd)&quot;</span></span><br><span class="line">FILE=<span class="string">&quot;<span class="variable">$&#123;CD&#125;</span>/near_<span class="variable">$&#123;1&#125;</span>.wav&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ -f <span class="variable">$FILE</span> ]; <span class="keyword">then</span></span><br><span class="line">/usr/bin/aplay -D plughw:1,0 <span class="variable">$&#123;FILE&#125;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Invalid parameter!&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h3 id="10-高级功能">10. 高级功能</h3><ul><li><p>旋转屏幕：<code>xrandr</code></p></li><li><p>防止休眠、定时息屏和亮屏：<code>dpms</code></p></li><li><p>调屏幕亮度：<code>ls /sys/class/backlight</code></p></li><li><p>模拟时钟：<code>xclock</code></p></li></ul><p>这就得好好学习 Linux 了……前面只是抛砖引玉，还有许多好玩的哦！</p><h2 id="后话">后话</h2><p>折腾旧设备总有意外的收获！比如，Surface RT 在 Windows 下无法识别 5.8GHz WiFi5，在 Raspbian 下却可以。祝大家玩得愉快！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;智能时钟是什么？&quot;&gt;智能时钟是什么？&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;基本功能：时钟、闹钟，并能进行自定义，比如老年人大字体，自定义闹铃等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;额外功能：下载、文件共享……&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;为什</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="linux" scheme="https://blog.umu618.com/tags/linux/"/>
    
    <category term="debian" scheme="https://blog.umu618.com/tags/debian/"/>
    
  </entry>
  
  <entry>
    <title>管理 macOS 的登录项</title>
    <link href="https://blog.umu618.com/2022/05/08/umutech-manage-macos-login-items/"/>
    <id>https://blog.umu618.com/2022/05/08/umutech-manage-macos-login-items/</id>
    <published>2022-05-08T08:22:29.000Z</published>
    <updated>2023-08-05T13:01:27.038Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题">问题</h2><p>稣在 macOS 上装了「Free Download Manager」，结果每次系统重启登录后它都会自启动，稣明明没让它这么做的！以下图形界面下的方法都试过，还是自启动！</p><ul><li><p>在「Dock 栏」右击「Free Download Manager」的图标，选择「选项」，确认「登录时打开」没有打勾。</p></li><li><p>「系统偏好设置」-「用户与群组」-「登录项」里面也没有「Free Download Manager」。</p></li></ul><h2 id="学习">学习</h2><ol><li><p>从苹果官方文档开始，第一篇相关文档：<a href="https://developer.apple.com/library/archive/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/DesigningDaemons.html#//apple_ref/doc/uid/10000172i-SW4-BBCBHBFB">Designing Daemons and Services</a> 说有图形界面的自启动机制叫做 Login item。</p></li><li><p>于是转到 <a href="https://developer.apple.com/library/archive/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/CreatingLoginItems.html#//apple_ref/doc/uid/10000172i-SW5-BAJJBJEG">Adding Login Items</a>，这篇文章说明添加「登录项」有两种方式，具体方法已经是给开发者用的了，对于咱们反向操作（删掉它）帮助不大。</p></li><li><p>但是通过搜索 <code>SMLoginItemSetEnabled</code> 可以知道相关路径为 <code>XX/Library/LaunchAgents</code>。</p></li></ol><h2 id="操作">操作</h2><ol><li>首先要得到「Free Download Manager」的程序 ID：</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ ls /Applications | grep <span class="string">&#x27;Free Download Manager&#x27;</span></span><br><span class="line">Free Download Manager.app</span><br><span class="line"></span><br><span class="line">$ ls /Applications/Free\ Download\ Manager.app/Contents</span><br><span class="line">Frameworks     Info.plist     MacOS          PkgInfo        PlugIns        Resources      _CodeSignature translations</span><br><span class="line"></span><br><span class="line">$ grep -A1 CFBundleIdentifier /Applications/Free\ Download\ Manager.app/Contents/Info.plist</span><br><span class="line">        &lt;key&gt;CFBundleIdentifier&lt;/key&gt;</span><br><span class="line">        &lt;string&gt;org.freedownloadmanager.fdm6&lt;/string&gt;</span><br></pre></td></tr></table></figure><p>以上，专业的一条命令为：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ defaults <span class="built_in">read</span> /Applications/Free\ Download\ Manager.app/Contents/Info.plist CFBundleIdentifier</span><br><span class="line">org.freedownloadmanager.fdm6</span><br></pre></td></tr></table></figure><ol start="2"><li>查找 <code>org.freedownloadmanager.fdm6</code> 有没有在 <code>XX/Library/LaunchAgents</code></li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ find ~/Library/LaunchAgents /Library/LaunchAgents /System/Library/LaunchAgents -name org.freedownloadmanager.fdm6\*</span><br><span class="line">/Users/YourUserName/Library/LaunchAgents/org.freedownloadmanager.fdm6.plist</span><br></pre></td></tr></table></figure><ol start="3"><li>改 <code>org.freedownloadmanager.fdm6.plist</code> 禁止自启动</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ defaults <span class="built_in">read</span> ~/Library/LaunchAgents/org.freedownloadmanager.fdm6.plist RunAtLoad</span><br><span class="line">1</span><br><span class="line"></span><br><span class="line">$ defaults write ~/Library/LaunchAgents/org.freedownloadmanager.fdm6.plist RunAtLoad 0</span><br><span class="line"></span><br><span class="line">$ defaults <span class="built_in">read</span> ~/Library/LaunchAgents/org.freedownloadmanager.fdm6.plist RunAtLoad</span><br><span class="line">0</span><br></pre></td></tr></table></figure><p>搞定。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;问题&quot;&gt;问题&lt;/h2&gt;
&lt;p&gt;稣在 macOS 上装了「Free Download Manager」，结果每次系统重启登录后它都会自启动，稣明明没让它这么做的！以下图形界面下的方法都试过，还是自启动！&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在「Dock 栏」右击「Fr</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="debug" scheme="https://blog.umu618.com/tags/debug/"/>
    
    <category term="ops" scheme="https://blog.umu618.com/tags/ops/"/>
    
    <category term="macos" scheme="https://blog.umu618.com/tags/macos/"/>
    
  </entry>
  
  <entry>
    <title>Linux 桌面玩稣</title>
    <link href="https://blog.umu618.com/2022/04/25/umutech-linux-desktop/"/>
    <id>https://blog.umu618.com/2022/04/25/umutech-linux-desktop/</id>
    <published>2022-04-24T16:00:20.000Z</published>
    <updated>2023-08-05T13:01:27.038Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题">问题</h2><ul><li><p>那么多 Linux 发行版，哪个桌面最好用？</p></li><li><p>i3wm 到底是不是反人类？</p></li><li><p>FreeOffice 究竟是不是免费？</p></li><li><p>以极客理念做的产品，究竟是不是坑人的？</p></li><li><p>国产 OS 到底有没有戏？</p></li></ul><h2 id="体验">体验</h2><table><thead><tr><th style="text-align:left">系列</th><th style="text-align:left">包管理器</th><th style="text-align:left">防火墙</th><th style="text-align:left">经验</th><th style="text-align:left">主观感到的坑</th></tr></thead><tbody><tr><td style="text-align:left">OpenWRT</td><td style="text-align:left"><code>opkg</code></td><td style="text-align:left">很容易理解的文件配置：<code>vi /etc/config/firewall</code> 或者 <code>uci</code>，然后 <code>/etc/init.d/firewall reload</code></td><td style="text-align:left">从 2010 年初开始一直在用，能刷它的路由器没有一台能逃过。轻量是它的特点。</td><td style="text-align:left"><code>ash</code> 不够智能，当然如果硬件允许，可以装 <code>zsh</code>；不适合做桌面，但其实也可以哦（肯定是坑）！</td></tr><tr><td style="text-align:left">Ubuntu/Debian、Armbian</td><td style="text-align:left"><code>apt</code></td><td style="text-align:left">好用的：<code>ufw</code></td><td style="text-align:left">大学就见好多学长用 Ubuntu，默认情况下，它的桌面比 Debian 漂亮，Debian 比较适合当服务器，实际上稣一般使用 Debian。物理机装了好多台，一些电视盒子也刷成 Armbian 在做测试机。</td><td style="text-align:left">目前 Bullseye 用的内核是 5.10，比较保守。默认桌面都很丑。</td></tr><tr><td style="text-align:left">CentOS（后续 RockyLinux、AlmaLinux）</td><td style="text-align:left"><code>yum</code></td><td style="text-align:left">有点忘记了，是不是有个 <code>firewall-cmd</code>？</td><td style="text-align:left">很久以前被迫用过……</td><td style="text-align:left">就是没好感，反正也挂了（才怪）。</td></tr><tr><td style="text-align:left">Manjaro/ArchLinux</td><td style="text-align:left"><code>pacman</code>、<code>yay</code></td><td style="text-align:left">好用的：<code>ufw</code></td><td style="text-align:left">Manjaro 桌面体验很好，ArchLinux 只在虚拟机里体验。内核 5.15 是比 Debian 新。</td><td style="text-align:left">i3 版装完中文支持有问题，KDE 则没问题。</td></tr><tr><td style="text-align:left">PostMarketOS/AlpineLinux</td><td style="text-align:left"><code>apk</code>（真的不是安卓啊～）</td><td style="text-align:left">不知道怎么喷的：<code>awall</code></td><td style="text-align:left">也是内核 5.15，和 OpenWRT 的理念很像，而且注重轻量和安全。AlpineLinux 适合做容器的基础镜像。</td><td style="text-align:left">对中文真不友好。进入系统后还是把 <code>ash</code> 换成 <code>zsh</code> 吧。还有这个 <code>awall</code>……和 <code>ufw</code> 比，真的很想说 ashit！</td></tr></tbody></table><p>列这个表其实想说几个感受：</p><ol><li><p>体验这么多不同发行版真浪费生命。尤其想说：包管理器有必要这么多吗？对软件开发商来说，真的很无语呀！</p></li><li><p>在用 Manjaro 时发现，网易云音乐这个软件，其实是来自 Debian 系的 deb 包，国产的 OS 大部分也都是基于 Debian 的。也就是说：如果有流行的软件，会有人重新打包成其它包。怎么说呢……国产 OS 如果开发了啥国民软件，是不是 Manjaro 也会吸收过去？那国产 OS 岂不是又没啥优势了？</p></li><li><p>如果习惯 Windows 或者 macOS，最好还是选择 KDE Plasma，然后装合适的主题，让它更像 Windows 或者 macOS。i3wm 这种极客型的产品，不适合大部分人。而且 Manjaro i3 是个社区版，不是官方版，中文支持是有问题的。</p></li><li><p>有小伙伴问稣：怎么会用 <a href="https://postmarketos.org/">PostMarketOS</a> 这种乱七八糟的东西？稣内牛满面，还不是因为很早以前买了台 <a href="https://openrt.gitbook.io/open-surfacert/">Surface RT</a>……自从微软抛弃它之后，稣挣扎过一次，装了 Windows 10 ARM，可现在不是已经 11 了吗？于是一不做二不休装 Linux，然后就装了这个奇怪的 <a href="https://openrt.gitbook.io/open-surfacert/surface-rt/linux/root-filesystem/distros/postmarketos">PostMarketOS</a>。当然后悔了，它能刷 <a href="https://wiki.ubuntu.com/ARM/SurfaceRT">Ubuntu Server</a> 的，真是脸疼……</p></li><li><p>Wayland 吗？不了，谢谢，稣用 X11 就行。</p></li><li><p>最后一个问题：稣叛变到 Arch 系了吗？没有！选 Linux，稣还是用 Debian，毕竟要支持国产嘛（间接）！</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;问题&quot;&gt;问题&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;那么多 Linux 发行版，哪个桌面最好用？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;i3wm 到底是不是反人类？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;FreeOffice 究竟是不是免费？&lt;/p&gt;
&lt;/li&gt;
&lt;li</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="linux" scheme="https://blog.umu618.com/tags/linux/"/>
    
    <category term="ops" scheme="https://blog.umu618.com/tags/ops/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·僵军</title>
    <link href="https://blog.umu618.com/2022/04/24/reconstructionism-poet-zombie-army/"/>
    <id>https://blog.umu618.com/2022/04/24/reconstructionism-poet-zombie-army/</id>
    <published>2022-04-24T05:24:00.000Z</published>
    <updated>2023-08-05T13:01:27.038Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·僵军》：资本竞灭民工丧，回首无钱治愁肠。苍茫挨踢问谁主，无产伏首卷中皇。</p><h2 id="注解">注解</h2><p>改编自霹雳角色“驭能天”的诗号。</p><blockquote><p>狼辰竞灭忌孤丧，回首无人斩空霜。<br>苍茫天地问谁主，日月伏首刀中皇。</p></blockquote><h2 id="创作故事">创作故事</h2><p>两个人一起在非洲穷游，突然在草原上遇到狮子。</p><p>甲立刻弯腰整理鞋子。</p><p>乙嘲笑道：还整什么鞋子！哪有人跑得过狮子？</p><p>甲微笑地答：我只需要跑赢你。</p><p>乙也哈哈狞笑：你有木有听过，天下大势浩浩荡荡，顺之者昌，逆之者亡？</p><p>甲不解：请说人话！</p><p>乙绝望地说：草，里，那是一群…狮子！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·僵军》：资本竞灭民工丧，回首无钱治愁肠。苍茫挨踢问谁主，无产伏首卷中皇。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;改编自霹雳角色“驭能天”的诗号。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;狼辰竞灭忌孤丧，回首无人斩空霜。&lt;br&gt;
苍茫天地问谁主，日</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>在华硕灵耀 X 纵横上装 Debian 桌面的经验</title>
    <link href="https://blog.umu618.com/2022/04/18/umutech-install-debian-on-asus-ux3000e/"/>
    <id>https://blog.umu618.com/2022/04/18/umutech-install-debian-on-asus-ux3000e/</id>
    <published>2022-04-17T16:46:52.000Z</published>
    <updated>2024-04-11T15:14:12.921Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求">需求</h2><p>今天发现华硕灵耀 X 纵横已经降价到 6999 元。所以，应该给它装上 Debian 了。</p><h2 id="准备">准备</h2><ul><li><p><a href="https://www.debian.org/distrib/index.zh-cn.html">Debian ISO</a>：稣选择的是 <a href="https://cdimage.debian.org/debian-cd/current/amd64/iso-cd/debian-11.3.0-amd64-netinst.iso">netinst</a>。</p></li><li><p><a href="https://rufus.ie/zh/">Rufus</a></p></li></ul><h2 id="解决">解决</h2><ol><li><p>需要准备一个 U 盘，用 Rufus 做一个 UEFI 格式的启动盘。</p></li><li><p>如果有 USB 有线网卡，插上去，联网安装更省事，如果没有那就断网安装一个最小系统，然后去借一个 USB 有线或者无线网卡……</p></li><li><p>需要 non-free 驱动，先选择不安装，后面再装。</p></li><li><p>选择中国的镜像服务器，南方选中科大，北方选择阿里云或者清华大学。</p></li><li><p>tasksel 阶段，不要安装桌面环境，先安装最小的系统。</p></li><li><p>安装完，重启。</p></li><li><p>登录系统，编辑 <code>/etc/apt/sources.list</code>，加 non-free 和配置 debian-security：</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">deb https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;debian&#x2F; bullseye main contrib non-free</span><br><span class="line">#deb-src http:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;debian&#x2F; bullseye main contrib non-free</span><br><span class="line"></span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;debian-security bullseye-security main contrib non-free</span><br><span class="line">#deb-src https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;debian-security bullseye-security main contrib non-free</span><br><span class="line"></span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;debian&#x2F; bullseye-updates main contrib non-free</span><br><span class="line">#deb-src http:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;debian&#x2F; bullseye-updates main contrib non-free</span><br></pre></td></tr></table></figure><p>这步很重要，如果不改 debian-security，那么接下来在国内网络环境下，可能会很慢……</p><ol start="7"><li>安装 non-free 驱动，主要是无线网卡和声卡：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install firmware-iwlwifi firmware-sof-signed</span><br></pre></td></tr></table></figure><p>装完无线网卡驱动后，网卡名字是 wlo1，配置见 <a href="https://wiki.debian.org/WiFi/HowToUse">https://wiki.debian.org/WiFi/HowToUse</a>。</p><ol start="8"><li><p>用 <code>tasksel</code> 安装桌面，稣选择 KDE Plasma。</p></li><li><p>【可选】开远程桌面：</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install xrdp</span><br></pre></td></tr></table></figure><p><img src="/images/2022/20220418-ux3000e.png" alt="Plasma UX3000E"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;需求&quot;&gt;需求&lt;/h2&gt;
&lt;p&gt;今天发现华硕灵耀 X 纵横已经降价到 6999 元。所以，应该给它装上 Debian 了。&lt;/p&gt;
&lt;h2 id=&quot;准备&quot;&gt;准备&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://www.debian.org/di</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="linux" scheme="https://blog.umu618.com/tags/linux/"/>
    
    <category term="ops" scheme="https://blog.umu618.com/tags/ops/"/>
    
    <category term="debian" scheme="https://blog.umu618.com/tags/debian/"/>
    
  </entry>
  
  <entry>
    <title>设置 Debian 不自动进入桌面</title>
    <link href="https://blog.umu618.com/2022/04/16/umutech-debian-do-not-automatically-enter-desktop/"/>
    <id>https://blog.umu618.com/2022/04/16/umutech-debian-do-not-automatically-enter-desktop/</id>
    <published>2022-04-16T03:56:06.000Z</published>
    <updated>2024-04-11T15:14:12.921Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求">需求</h2><p>在 Debian 上装了 KDE Plasma 桌面，但使用率不高，毕竟主要是当服务器使用，所以不想每次启动都自动进入桌面，以节约内存。</p><h2 id="解决">解决</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl set-default multi-user.target</span><br></pre></td></tr></table></figure><p>重启后就是默认的控制台登录。如果想直接以当前控制台登录的身份进入桌面，运行 <code>startx</code> 即可。但这种方式桌面是跑在当前控制台上，不是第 7 个控制台（Ctrl+Alt+F7），如果想尽量保持和原来自动启动桌面的环境一样，应该用：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl isolate graphical.target</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者更直接地【不建议使用】</span></span><br><span class="line">sudo systemctl start sddm.service</span><br></pre></td></tr></table></figure><p>这将以服务身份进入桌面，后面还要再通过图形界面登录一次。</p><p>如想恢复自动进入图形界面：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl set-default graphical.target</span><br></pre></td></tr></table></figure><p>如想知道当前处于哪种方式，可使用：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl get-default</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;需求&quot;&gt;需求&lt;/h2&gt;
&lt;p&gt;在 Debian 上装了 KDE Plasma 桌面，但使用率不高，毕竟主要是当服务器使用，所以不想每次启动都自动进入桌面，以节约内存。&lt;/p&gt;
&lt;h2 id=&quot;解决&quot;&gt;解决&lt;/h2&gt;
&lt;figure class=&quot;highlight</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="optimization" scheme="https://blog.umu618.com/tags/optimization/"/>
    
    <category term="linux" scheme="https://blog.umu618.com/tags/linux/"/>
    
    <category term="ops" scheme="https://blog.umu618.com/tags/ops/"/>
    
    <category term="debian" scheme="https://blog.umu618.com/tags/debian/"/>
    
  </entry>
  
  <entry>
    <title>红米 AX6S 刷 OpenWRT</title>
    <link href="https://blog.umu618.com/2022/04/11/umutech-install-openwrt-on-redmi-ax6s/"/>
    <id>https://blog.umu618.com/2022/04/11/umutech-install-openwrt-on-redmi-ax6s/</id>
    <published>2022-04-10T17:46:07.000Z</published>
    <updated>2023-08-05T13:01:27.038Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题">问题</h2><p>按照<a href="https://openwrt.org/toh/xiaomi/ax3200">官方文档</a>操作，结果重启后还是进入小米原版系统。</p><h2 id="解决">解决</h2><p>在出厂版本上刷开发版时，是刷到 firmware1 上，openwrt 被刷到 firmware，默认还是启动 firmware1，所以应该：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nvram <span class="built_in">set</span> flag_last_success=0</span><br><span class="line">nvram commit</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><p>搞定。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;问题&quot;&gt;问题&lt;/h2&gt;
&lt;p&gt;按照&lt;a href=&quot;https://openwrt.org/toh/xiaomi/ax3200&quot;&gt;官方文档&lt;/a&gt;操作，结果重启后还是进入小米原版系统。&lt;/p&gt;
&lt;h2 id=&quot;解决&quot;&gt;解决&lt;/h2&gt;
&lt;p&gt;在出厂版本上刷开发版时，</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="embedded" scheme="https://blog.umu618.com/tags/embedded/"/>
    
    <category term="linux" scheme="https://blog.umu618.com/tags/linux/"/>
    
    <category term="openwrt" scheme="https://blog.umu618.com/tags/openwrt/"/>
    
  </entry>
  
  <entry>
    <title>跟 UMU 一起玩 OpenWRT（高级篇3）：在线升级内核</title>
    <link href="https://blog.umu618.com/2022/03/27/umutech-openwrt-advanced-3-upgrade-kernel-online/"/>
    <id>https://blog.umu618.com/2022/03/27/umutech-openwrt-advanced-3-upgrade-kernel-online/</id>
    <published>2022-03-27T09:20:08.000Z</published>
    <updated>2023-08-05T13:01:27.038Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求">需求</h2><p>想升级 OpenWRT 路由器的内核，又不想每次都把 SD 卡拿下来刷，怎么办？</p><h2 id="前提">前提</h2><ul><li><p>本文将以 Nano Pi R4S 为例。</p></li><li><p>这里的“在线”指的是：不重新刷 ROM，也不用 <code>sysupgrade</code>，纯手动替换文件，然后 <code>reboot</code> 生效。</p></li></ul><h2 id="解决">解决</h2><h3 id="1-先查看当前版本">1. 先查看当前版本</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">uname -a</span><br><span class="line">Linux UMUR4S 5.10.107 <span class="comment">#0 SMP PREEMPT Sat Mar 19 19:05:00 2022 aarch64 GNU/Linux</span></span><br></pre></td></tr></table></figure><p>目前是 5.10.107，想升级到 5.10.108！</p><h3 id="2-下载新-ROM-到路由器">2. 下载新 ROM 到路由器</h3><p>可以直接在 OpenWRT 里用 <code>wget</code> 下载到 /tmp 下，或者在其它机器下载好，用 <code>scp</code> 上传到路由器的 /tmp 下。</p><p>下载地址：<a href="https://github.com/UMU618/openwrt-config/releases">https://github.com/UMU618/openwrt-config/releases</a></p><h3 id="3-解压新-ROM、挂载分区">3. 解压新 ROM、挂载分区</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /tmp/</span><br><span class="line"></span><br><span class="line"><span class="comment"># wget</span></span><br><span class="line"></span><br><span class="line">gunzip -d openwrt-rockchip-armv8-friendlyarm_nanopi-r4s-ext4-sysupgrade.img.gz</span><br><span class="line"></span><br><span class="line">parted openwrt-rockchip-armv8-friendlyarm_nanopi-r4s-ext4-sysupgrade.img</span><br><span class="line">unit B</span><br><span class="line">p</span><br></pre></td></tr></table></figure><p>可以看到 img 里的两个分区：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Model:  (file)</span><br><span class="line">Disk &#x2F;tmp&#x2F;openwrt-rockchip-armv8-friendlyarm_nanopi-r4s-ext4-sysupgrade.img: 176160768B</span><br><span class="line">Sector size (logical&#x2F;physical): 512B&#x2F;512B</span><br><span class="line">Partition Table: msdos</span><br><span class="line">Disk Flags:</span><br><span class="line"></span><br><span class="line">Number  Start      End         Size        Type     File system  Flags</span><br><span class="line"> 1      33554432B  50331647B   16777216B   primary  ext2         boot</span><br><span class="line"> 2      67108864B  176160767B  109051904B  primary  ext2</span><br></pre></td></tr></table></figure><p>把这两个分区别分挂载：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir new_boot</span><br><span class="line">mount -o loop,offset=33554432 openwrt-rockchip-armv8-friendlyarm_nanopi-r4s-ext4-sysupgrade.img new_boot</span><br><span class="line"></span><br><span class="line">mkdir new_root</span><br><span class="line">mount -o loop,offset=67108864 openwrt-rockchip-armv8-friendlyarm_nanopi-r4s-ext4-sysupgrade.img new_root</span><br></pre></td></tr></table></figure><h3 id="4-挂载待更新的-boot-分区">4. 挂载待更新的 boot 分区</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir boot</span><br><span class="line">mount /dev/mmcblk1p1 boot</span><br></pre></td></tr></table></figure><p>检查一下，时间是不一样的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">root@UMUR4S:&#x2F;tmp# ll boot&#x2F;</span><br><span class="line">drwxr-xr-x    3 root     root          4096 Jan  1  1970 .&#x2F;</span><br><span class="line">drwxrwxrwt   23 root     root           660 Mar 27 18:17 ..&#x2F;</span><br><span class="line">-rw-r--r--    1 root     root           352 Mar 21 01:17 boot.scr</span><br><span class="line">-rw-r--r--    1 root     root      14860296 Mar 21 01:17 kernel.img</span><br><span class="line">drwx------    2 root     root          4096 Jan  1  1970 lost+found&#x2F;</span><br><span class="line">-rw-r--r--    1 root     root         55738 Mar 20 19:26 rockchip.dtb</span><br><span class="line">root@UMUR4S:&#x2F;tmp# ll new_boot&#x2F;</span><br><span class="line">drwxr-xr-x    3 root     root          4096 Jan  1  1970 .&#x2F;</span><br><span class="line">drwxrwxrwt   23 root     root           660 Mar 27 18:17 ..&#x2F;</span><br><span class="line">-rw-r--r--    1 root     root           352 Mar 27 17:56 boot.scr</span><br><span class="line">-rw-r--r--    1 root     root      14860296 Mar 27 17:56 kernel.img</span><br><span class="line">drwx------    2 root     root          4096 Jan  1  1970 lost+found&#x2F;</span><br><span class="line">-rw-r--r--    1 root     root         55738 Mar 27 17:45 rockchip.dtb</span><br></pre></td></tr></table></figure><p>开始复制文件：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp new_boot/* boot/</span><br><span class="line">cp -r new_root/lib/modules/5.10.108 /lib/modules/</span><br></pre></td></tr></table></figure><p>检查一下，现在应该同时存在两个版本的 modules：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@UMUR4S:/tmp<span class="comment"># ll /lib/modules/</span></span><br><span class="line">drwxr-xr-x    4 root     root          4096 Mar 27 18:28 ./</span><br><span class="line">drwxr-xr-x   10 root     root          4096 Mar 21 05:24 ../</span><br><span class="line">drwxr-xr-x    2 root     root          4096 Mar 20 03:05 5.10.107/</span><br><span class="line">drwxr-xr-x    2 root     root          4096 Mar 27 18:28 5.10.108/</span><br></pre></td></tr></table></figure><h3 id="5-重启验证">5. 重启验证</h3><p><code>reboot</code> 后查看版本，如果没问题就清理旧版本：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">uname</span><br><span class="line">Linux UMUR4S 5.10.108 <span class="comment">#0 SMP PREEMPT Sun Mar 27 04:00:50 2022 aarch64 GNU/Linux</span></span><br><span class="line"></span><br><span class="line">rm -rf /lib/modules/5.10.107</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;需求&quot;&gt;需求&lt;/h2&gt;
&lt;p&gt;想升级 OpenWRT 路由器的内核，又不想每次都把 SD 卡拿下来刷，怎么办？&lt;/p&gt;
&lt;h2 id=&quot;前提&quot;&gt;前提&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;本文将以 Nano Pi R4S 为例。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="embedded" scheme="https://blog.umu618.com/tags/embedded/"/>
    
    <category term="linux" scheme="https://blog.umu618.com/tags/linux/"/>
    
    <category term="openwrt" scheme="https://blog.umu618.com/tags/openwrt/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·一轰领准命消瘦</title>
    <link href="https://blog.umu618.com/2022/01/09/reconstructionism-poet-involution/"/>
    <id>https://blog.umu618.com/2022/01/09/reconstructionism-poet-involution/</id>
    <published>2022-01-09T13:27:11.000Z</published>
    <updated>2023-08-05T13:01:27.038Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·一轰领准命消瘦》：冬寒夜冷，飘零一剪胜雪；命峻路险，独饮半升鸡血。卷至无声，生人不易！</p><h2 id="注解">注解</h2><p>改编自霹雳角色“一锋冷峻命萧疏”的诗号。</p><blockquote><p>锋寒心冷，飘零一剑胜雪；<br>命峻路险，孤愤半生击筑。<br>筑至无声，今生无敌！</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·一轰领准命消瘦》：冬寒夜冷，飘零一剪胜雪；命峻路险，独饮半升鸡血。卷至无声，生人不易！&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;改编自霹雳角色“一锋冷峻命萧疏”的诗号。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;锋寒心冷，飘零一剑胜雪；&lt;br&gt;
命峻</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·疏漏聋锈</title>
    <link href="https://blog.umu618.com/2022/01/06/reconstructionism-poet-oversight/"/>
    <id>https://blog.umu618.com/2022/01/06/reconstructionism-poet-oversight/</id>
    <published>2022-01-06T05:40:00.000Z</published>
    <updated>2023-08-05T13:01:27.038Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·疏漏聋锈》：学堂初出欲躺平，技术更迭，规模不减反增。KPI，OKR，内卷岁月财源正盛，共印萧条疑似有染。</p><h2 id="注解">注解</h2><p>改编自霹雳角色“疏楼龙宿”的诗号。</p><blockquote><p>华阳初上鸿门红，疏楼更迭，龙麟不减风采；<br>紫金箫，白玉琴，宫灯夜明昙华正盛，共饮逍遥一世悠然。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·疏漏聋锈》：学堂初出欲躺平，技术更迭，规模不减反增。KPI，OKR，内卷岁月财源正盛，共印萧条疑似有染。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;改编自霹雳角色“疏楼龙宿”的诗号。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;华阳初上鸿门红，疏楼更迭，</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·天行日月</title>
    <link href="https://blog.umu618.com/2022/01/02/reconstructionism-poet-time/"/>
    <id>https://blog.umu618.com/2022/01/02/reconstructionism-poet-time/</id>
    <published>2022-01-02T07:19:00.000Z</published>
    <updated>2023-08-05T13:01:27.038Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·天行日月》：白首方知友难交，一意逍遥，钱袋飘飘；十岁春风稣不晓，一心求道，人间邈邈。</p><h2 id="注解">注解</h2><p>改编自霹雳角色“天迹”的诗号。</p><blockquote><p>仙衣眠云碧岚袍，一襟潇洒，两袖飘飘；<br>玉墨舒心春酝瓢，行也逍遥，坐也逍遥。</p></blockquote><ul><li>天行日月：时间飞逝</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·天行日月》：白首方知友难交，一意逍遥，钱袋飘飘；十岁春风稣不晓，一心求道，人间邈邈。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;改编自霹雳角色“天迹”的诗号。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;仙衣眠云碧岚袍，一襟潇洒，两袖飘飘；&lt;br&gt;
玉墨</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·不算计·咏社</title>
    <link href="https://blog.umu618.com/2021/12/06/reconstructionism-poet-eulogize-socialism/"/>
    <id>https://blog.umu618.com/2021/12/06/reconstructionism-poet-eulogize-socialism/</id>
    <published>2021-12-06T09:39:00.000Z</published>
    <updated>2023-08-05T13:01:27.028Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·不算计·咏社》：风雨财源归，挨踢寒冬到。已是高僧绝尘心，犹有一诗骚。骚也不挣钱，只报暖春遥。待到资本卷死时，社在丛中笑。</p><h2 id="注解">注解</h2><p>改编自近代伟人毛泽东的《卜算子·咏梅》。</p><blockquote><p>风雨送春归，飞雪迎春到。已是悬崖百丈冰，犹有花枝俏。<br>俏也不争春，只把春来报。待到山花烂漫时，她在丛中笑。</p></blockquote><ul><li><p>高僧绝尘心：当稣有“是非成败转头空，青山依旧在，几度夕阳红。”的领悟和境界时，总有人提醒“你是穷逼”啊。稣内心一骚，总不能暴露稣存款千万的秘密吧！</p></li><li><p>社在丛中笑：财源是资本主义的报复行为……社会主义接班稣早就看穿这险恶的招数，社会主义必将笑到最后。</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·不算计·咏社》：风雨财源归，挨踢寒冬到。已是高僧绝尘心，犹有一诗骚。骚也不挣钱，只报暖春遥。待到资本卷死时，社在丛中笑。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;改编自近代伟人毛泽东的《卜算子·咏梅》。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;风雨</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·财源与君</title>
    <link href="https://blog.umu618.com/2021/12/06/reconstructionism-poet-lay-off/"/>
    <id>https://blog.umu618.com/2021/12/06/reconstructionism-poet-lay-off/</id>
    <published>2021-12-06T09:38:00.000Z</published>
    <updated>2023-08-05T13:01:27.038Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·财源与君》：财源与君君自宽，挨踢翻覆似波澜。白首相知犹内卷，朱门先达笑弹冠。校招全经高薪稀，倒挂欲动冬风寒。绩效浮云何足问？不如卧槽且加班。</p><h2 id="注解">注解</h2><p>改编自唐代诗人王维的《酌酒与裴迪》：</p><blockquote><p>酌酒与君君自宽，人情翻覆似波澜。<br>白首相知犹按剑，朱门先达笑弹冠。<br>草色全经细雨湿，花枝欲动春风寒。<br>世事浮云何足问，不如高卧且加餐。</p></blockquote><ul><li><p>朱门：这里特指资本家。</p></li><li><p>高薪稀：每年校招工资上限都提高，而且大肆宣传，但其实都是一个广撒网的套路，一段时间后，公司发现新人能力不够时，很容易被裁掉。高回报高风险。</p></li><li><p>卧槽：卧在一个槽里，与“跳槽”相对。</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·财源与君》：财源与君君自宽，挨踢翻覆似波澜。白首相知犹内卷，朱门先达笑弹冠。校招全经高薪稀，倒挂欲动冬风寒。绩效浮云何足问？不如卧槽且加班。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;改编自唐代诗人王维的《酌酒与裴迪》：&lt;/p&gt;
&lt;blockquot</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·咏鹅</title>
    <link href="https://blog.umu618.com/2021/11/27/reconstructionism-poet-penguin/"/>
    <id>https://blog.umu618.com/2021/11/27/reconstructionism-poet-penguin/</id>
    <published>2021-11-27T06:27:17.000Z</published>
    <updated>2023-10-29T12:24:56.937Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·咏鹅》：鹅，鹅，鹅，企鹅最快乐。摆渡无道德，阿理不姓社。</p><p><img src="/images/2021/20211127-penguin.jpg" alt="咏鹅"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·咏鹅》：鹅，鹅，鹅，企鹅最快乐。摆渡无道德，阿理不姓社。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2021/20211127-penguin.jpg&quot; alt=&quot;咏鹅&quot;&gt;&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·颛顼死即复稣</title>
    <link href="https://blog.umu618.com/2021/11/06/reconstructionism-poet-resurrection/"/>
    <id>https://blog.umu618.com/2021/11/06/reconstructionism-poet-resurrection/</id>
    <published>2021-11-06T11:02:00.000Z</published>
    <updated>2023-08-05T13:01:27.028Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·颛顼死即复稣》：悠悠世道，碌碌仙术。唯寂乃明，临绝复稣。</p><h2 id="注解">注解</h2><p>唯寂乃明：空寂顿悟，我即是佛。<br>临绝复稣：绝地重生。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·颛顼死即复稣》：悠悠世道，碌碌仙术。唯寂乃明，临绝复稣。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;唯寂乃明：空寂顿悟，我即是佛。&lt;br&gt;
临绝复稣：绝地重生。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="死神" scheme="https://blog.umu618.com/tags/%E6%AD%BB%E7%A5%9E/"/>
    
    <category term="量子邪稣" scheme="https://blog.umu618.com/tags/%E9%87%8F%E5%AD%90%E9%82%AA%E7%A8%A3/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·真空涨落出一个元宇宙</title>
    <link href="https://blog.umu618.com/2021/11/06/reconstructionism-poet-create-a-metaverse-out-of-nothing-via-a-vacuum-fluctuation/"/>
    <id>https://blog.umu618.com/2021/11/06/reconstructionism-poet-create-a-metaverse-out-of-nothing-via-a-vacuum-fluctuation/</id>
    <published>2021-11-06T04:46:24.000Z</published>
    <updated>2023-08-05T13:01:27.028Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·真空涨落出一个元宇宙》：稣学宇宙非学仙，恐君此说是虚传。山海不是稣归处，归即应归有顶天。</p><h2 id="注解">注解</h2><p>改编自唐代诗人白居易的《答客说》：</p><blockquote><p>吾学空门非学仙，恐君此说是虚传。<br>海山不是我归处，归即应归兜率天。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·真空涨落出一个元宇宙》：稣学宇宙非学仙，恐君此说是虚传。山海不是稣归处，归即应归有顶天。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;改编自唐代诗人白居易的《答客说》：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;吾学空门非学仙，恐君此说是虚传。&lt;br&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="量子邪稣" scheme="https://blog.umu618.com/tags/%E9%87%8F%E5%AD%90%E9%82%AA%E7%A8%A3/"/>
    
  </entry>
  
  <entry>
    <title>现代 C++【3】返回类对象</title>
    <link href="https://blog.umu618.com/2021/09/05/umutech-modern-cpp-3-return-object/"/>
    <id>https://blog.umu618.com/2021/09/05/umutech-modern-cpp-3-return-object/</id>
    <published>2021-09-05T12:17:30.000Z</published>
    <updated>2023-08-05T13:01:27.028Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前提">前提</h2><p>多现代？C++ 11 就有了。</p><h2 id="问题">问题</h2><p>我想返回一个对象，但我受到惊吓……</p><p>是不是应该从指针型参数返回对象？</p><h2 id="结论">结论</h2><p>已经 C++20 了，请放心，直接，返回对象！</p><h2 id="概念">概念</h2><ul><li><p>RVO：Return Value Optimization，返回值优化。</p></li><li><p>NRVO：Named RVO，具名的返回值优化。</p></li></ul><p>返回的对象会 move 给接收的变量，并且，最多可能优化成直接对接收变量进行构造（NRVO）。</p><p>如果明确没有 move 构造函数，则会调用 copy 构造函数，当对象构造代价高时，应该尽量保证有 move 构造函数。</p><h2 id="例子">例子</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 传统，不建议，可读性差，使用也不方便</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GetName</span><span class="params">(<span class="built_in">std</span>::<span class="built_in">string</span>&amp; name)</span> <span class="keyword">noexcept</span> </span>&#123;</span><br><span class="line">  name = <span class="string">&quot;UMU&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// RVO，优化，但不够</span></span><br><span class="line"><span class="function"><span class="built_in">std</span>::<span class="built_in">string</span> <span class="title">GetName</span><span class="params">()</span> <span class="keyword">noexcept</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&quot;UMU618&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// NRVO, 最优化，推荐这样写！</span></span><br><span class="line"><span class="function"><span class="built_in">std</span>::<span class="built_in">string</span> <span class="title">GetName</span><span class="params">()</span> <span class="keyword">noexcept</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="built_in">std</span>::<span class="built_in">string</span> <span class="title">name</span><span class="params">(<span class="string">&quot;UMU618&quot;</span>)</span></span>;</span><br><span class="line">  <span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="避坑">避坑</h2><p>没有必要对返回值再加一次 std::move，因为返回本身就已经是 move，再加一次就是多一次没必要的 move。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前提&quot;&gt;前提&lt;/h2&gt;
&lt;p&gt;多现代？C++ 11 就有了。&lt;/p&gt;
&lt;h2 id=&quot;问题&quot;&gt;问题&lt;/h2&gt;
&lt;p&gt;我想返回一个对象，但我受到惊吓……&lt;/p&gt;
&lt;p&gt;是不是应该从指针型参数返回对象？&lt;/p&gt;
&lt;h2 id=&quot;结论&quot;&gt;结论&lt;/h2&gt;
&lt;p&gt;已经 C+</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="cpp" scheme="https://blog.umu618.com/tags/cpp/"/>
    
  </entry>
  
  <entry>
    <title>现代 C++【2】std::span</title>
    <link href="https://blog.umu618.com/2021/09/05/umutech-modern-cpp-2-std-span/"/>
    <id>https://blog.umu618.com/2021/09/05/umutech-modern-cpp-2-std-span/</id>
    <published>2021-09-05T10:20:06.000Z</published>
    <updated>2023-08-05T13:01:27.028Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前提">前提</h2><p>多现代？C++ 20。</p><p>C++ 17 才有 <code>std::string_view</code>，而相似的 <code>std::span</code> 居然到 C++ 20 才有。</p><h2 id="问题">问题</h2><p>如何解决 C-Style 数组（包含动态分配的连续内存）的退化（array decay）和越界访问（range errors）两大问题？</p><h2 id="解决">解决</h2><p>C 语言解决这两个问题，主要是增加一个长度参数。很多 Win32 API 这样做，例如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">PCSTR WSAAPI <span class="title">inet_ntop</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">  INT        Family,</span></span></span><br><span class="line"><span class="function"><span class="params">  <span class="keyword">const</span> VOID *pAddr,</span></span></span><br><span class="line"><span class="function"><span class="params">  PSTR       pStringBuf,</span></span></span><br><span class="line"><span class="function"><span class="params">  <span class="keyword">size_t</span>     StringBufSize</span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">GetWindowTextA</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">  HWND  hWnd,</span></span></span><br><span class="line"><span class="function"><span class="params">  LPSTR lpString,</span></span></span><br><span class="line"><span class="function"><span class="params">  <span class="keyword">int</span>   nMaxCount</span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br></pre></td></tr></table></figure><p>但它会带来新问题：不小心传错！另外也有一些地方并没有提供长度参数，比如下面 Linux 内核代码里的函数：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">ip_decrease_ttl</span><span class="params">(struct iphdr *iph)</span></span>;</span><br></pre></td></tr></table></figure><p>当我们打算把 uint8_t 数组转成 <code>struct iphdr *</code> 时，必须在调用前保证数组长度大于等于最小 IP 头长度。</p><p>C++ 的解决方案是：<code>std::span</code>，它是一个连续对象存储的观察者。类似 <code>std::string_view</code> 是 <code>std::string</code> 的观察者。它可以同时管理数组的地址和大小，并且它没有数据所有权，仅占用最多两个指针的空间，可以像 <code>std::string_view</code> 一样在绝大多数时候直接按值传递。</p><h2 id="例子">例子</h2><p>以下函数用于获取 IP 头的长度：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="built_in">std</span>::<span class="keyword">uint8_t</span> <span class="title">GetHeaderLength</span><span class="params">(<span class="keyword">const</span> <span class="keyword">void</span>* ip_header, <span class="keyword">size_t</span> size)</span> <span class="keyword">noexcept</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">std</span>::<span class="keyword">uint8_t</span> ip[] = &#123;<span class="number">0x45</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x54</span>, <span class="number">0xfa</span>, <span class="number">0xa6</span>, <span class="number">0x40</span>, <span class="number">0x00</span>,</span><br><span class="line">                     <span class="number">0x40</span>, <span class="number">0x01</span>, <span class="number">0xb3</span>, <span class="number">0x9a</span>, <span class="number">0xc0</span>, <span class="number">0xa8</span>, <span class="number">0x0b</span>, <span class="number">0x02</span>,</span><br><span class="line">                     <span class="number">0xc0</span>, <span class="number">0xa8</span>, <span class="number">0x00</span>, <span class="number">0x15</span>&#125;;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;HeaderLength: &quot;</span> &lt;&lt; (<span class="keyword">int</span>)GetHeaderLength(ip, <span class="keyword">sizeof</span>(ip)) &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br></pre></td></tr></table></figure><p>它可以用 <code>std::span</code> 包装成：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">size_t</span> N&gt;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="built_in">std</span>::<span class="keyword">uint8_t</span> <span class="title">GetHeaderLength</span><span class="params">(<span class="built_in">std</span>::span&lt;T, N&gt; ip_header)</span> <span class="keyword">noexcept</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> GetHeaderLength(ip_header.data(), <span class="keyword">sizeof</span>(T) * ip_header.size());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;HeaderLength: &quot;</span> &lt;&lt; (<span class="keyword">int</span>)GetHeaderLength(<span class="built_in">std</span>::span&#123;ip&#125;) &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br></pre></td></tr></table></figure><p>另一个便利是，使用 subspan 成员函数可以对其内部指针和长度成对操作，以避免单独处理时可能不小心少处理一个的问题。</p><h2 id="避坑">避坑</h2><p><code>std::span</code> 和 <code>std::string_view</code> 一样，没有数据所有权，所以要担心数据失效问题，不要在数据被释放后使用。</p><p>下面是个错误示范，来自：<a href="https://github.com/isocpp/CppCoreGuidelines/issues/1038">std::string_view encourages use-after-free; the Core Guidelines Checker doesn’t complain #1038</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string_view&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">string</span> s = <span class="string">&quot;Hellooooooooooooooo &quot;</span>;</span><br><span class="line">  <span class="built_in">std</span>::string_view sv = s + <span class="string">&quot;World\n&quot;</span>;</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; sv;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前提&quot;&gt;前提&lt;/h2&gt;
&lt;p&gt;多现代？C++ 20。&lt;/p&gt;
&lt;p&gt;C++ 17 才有 &lt;code&gt;std::string_view&lt;/code&gt;，而相似的 &lt;code&gt;std::span&lt;/code&gt; 居然到 C++ 20 才有。&lt;/p&gt;
&lt;h2 id=&quot;问题&quot;</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="cpp" scheme="https://blog.umu618.com/tags/cpp/"/>
    
  </entry>
  
  <entry>
    <title>现代 C++【1】类对象作为函数参数</title>
    <link href="https://blog.umu618.com/2021/08/17/umutech-modern-cpp-1-objects-as-function-arguments/"/>
    <id>https://blog.umu618.com/2021/08/17/umutech-modern-cpp-1-objects-as-function-arguments/</id>
    <published>2021-08-17T14:49:46.000Z</published>
    <updated>2023-08-05T13:01:27.028Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前提">前提</h2><p>多现代？C++ 17，因为本文内含 <code>std::string_view</code>。</p><p>目前 C++ 20 还未普及，CLang 和 GCC 对 C++ 20 不是很上心，【直到今天 2020-08-18】连 std::format 都没有，被 MSVC 甩开。</p><h2 id="问题">问题</h2><p>类对象作为参数究竟应该怎么传？</p><p>《<a href="/2018/11/26/umutech-effective-cpp/">Effective C++</a>》的条款 20 说：</p><blockquote><ol start="20"><li>宁以 pass-by-reference-to-const 替换 pass-by-value</li></ol></blockquote><p>为什么新规范又建议构造函数 pass-by-value？</p><h2 id="原则">原则</h2><ol><li><p>只读访问并且不复制时，使用 pass-by-reference-to-const。</p></li><li><p>需要保存对象副本时，并且对象可移动，使用 pass-by-value。</p></li><li><p>对象很小时，使用 pass-by-value。</p></li></ol><h2 id="例子">例子</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 只读访问，不需要将 text 保存起来。</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Print</span><span class="params">(<span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">string</span>&amp; text)</span> </span>&#123;</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; text;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Foo</span> &#123;</span></span><br><span class="line"> <span class="keyword">public</span>:</span><br><span class="line">  <span class="comment">// 需要保存 message 到类成员变量</span></span><br><span class="line">  Foo(<span class="built_in">std</span>::<span class="built_in">string</span> message) : message_(<span class="built_in">std</span>::move(message)) &#123;&#125;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">private</span>:</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">string</span> message_;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// std::string_view 很小，连 const 都没必要加，就好像 int 型参数不会加 const</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CallCStyleApi</span><span class="params">(<span class="built_in">std</span>::string_view dir)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="number">0</span> &lt; dir.size()) &#123;</span><br><span class="line">    chdir(dir.data());</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="说明">说明</h2><p>Foo 的构造函数使用 pass-by-value，这使得它变成“两用”的，相当于针对这个类对象参数同时实现复制构造函数（ctor）、 移动构造函数（mtor）。</p><ul><li><p>当传一个左值给它时，参数 message 是复制的，但它立刻移动给了成员变量 message_，整个过程发生一次复制和一次移动；</p></li><li><p>当传一个右值给它时，参数 message 是这个右值移动而来的，然后又立刻移动给了成员变量 message_，整个过程发生两次移动；</p></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="built_in">std</span>::<span class="built_in">string</span> <span class="title">name</span><span class="params">(<span class="string">&quot;UMU618&quot;</span>)</span></span>;</span><br><span class="line"><span class="function">Foo <span class="title">f1</span><span class="params">(name)</span></span>;  <span class="comment">// copy + move</span></span><br><span class="line"><span class="function">Foo <span class="title">f2</span><span class="params">(<span class="built_in">std</span>::move(name))</span></span>; <span class="comment">// move 2 times</span></span><br></pre></td></tr></table></figure><p>如果类实现得妥当，移动两次对象实际上最多可以被编译器优化成零次。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前提&quot;&gt;前提&lt;/h2&gt;
&lt;p&gt;多现代？C++ 17，因为本文内含 &lt;code&gt;std::string_view&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;目前 C++ 20 还未普及，CLang 和 GCC 对 C++ 20 不是很上心，【直到今天 2020-08-18】连 </summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="cpp" scheme="https://blog.umu618.com/tags/cpp/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神【番外篇11】</title>
    <link href="https://blog.umu618.com/2021/08/15/god-of-debug-side-story-11/"/>
    <id>https://blog.umu618.com/2021/08/15/god-of-debug-side-story-11/</id>
    <published>2021-08-15T07:15:07.000Z</published>
    <updated>2023-10-29T12:24:56.937Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/2019/20190207-luyu.jpg" alt="听说鲁豫要来采访稣"><br><img src="/images/2020/20200131-gauze-mask.png" alt="请戴口罩采访"></p><p>由于没有经费写《后传》就把后传的内容写到《番外篇》了。</p><ol><li>为什么最厉害的是周易？</li></ol><p>周易是老钧的化身之一。他看到任何结局，但都不去干预。莫名其妙？没错，这正是他的特征。</p><p>圣仙山就会去干预世事演化，而成为天道的执行者之一，本质是个工具人。</p><p>大部分英雄电影都有一些角色会因为法律、信仰、道义、情感等原因去干预世事，尤其一些穿越剧，妄想改变历史。这些都是不符合天道的。</p><p>天地不仁，以万物为刍狗。所以周易最厉害。</p><ol start="2"><li>识界是现实中存在的吗？</li></ol><p>当然是。</p><p>首先要认识到人类集体显意识是确实存在的，比如中药学就是靠着集体显意识保存下来的。如果某种技能只有一个人会，那么它失传是必然的，这个人一死就失传了。存在集体显意识里就不容易失传，但集体显意识也不一定能够很客观地保存信息，有些人出于某种目的，会篡改信息。并且不是什么信息都可以靠集体显意识保存，比如有些东西无法达成共识。</p><p>举个例子，噬菌体，一种可以编程控制的半生命体，可以编程它来定向消灭细菌，比如治疗青春痘……安全有效不含抗生素。它在古代治疗过很多奇怪的疾病，尤其是被下蛊之类的，那时候医学理论不完善，人们便以为是草药起了作用，其实是自然界中的噬菌体治好的。这个事情在集体显意识里是没有记录的，它只在集体潜意识里保存。</p><p>PS：1990 年以来，人类几乎没有发现新的抗生素种类了。世界卫生组织 2017 年 9 月份宣布，“确认世界的抗生素频临枯竭”。参考：<a href="https://www.who.int/zh/news/item/20-09-2017-the-world-is-running-out-of-antibiotics-who-report-confirms">https://www.who.int/zh/news/item/20-09-2017-the-world-is-running-out-of-antibiotics-who-report-confirms</a></p><p>总之抗生素要完，以后由细菌导致的疾病只能靠噬菌体了。</p><p>其次，如果承认个人是有潜意识的，那么集体也应该有集体潜意识。</p><ol start="3"><li>稣到底怎么来的？</li></ol><p>稣的由来可以有很多解释，但根源来自圣仙山参与写作的《山海经》。</p><p>我们注意到现实中的颛顼在八哥宇宙里名字是：姬稣。</p><p>作者为什么选择和颛顼攀关系呢？其实颛顼和《八哥之神》的主题十分契合。不信您翻开圣仙山参与写作的《山海经》，里面有一句话特地被重复两次。</p><blockquote><p>有鱼偏枯，名曰鱼妇。<strong>颛顼死即复苏</strong>。风道北来，天及大水泉，蛇乃化为鱼，是为鱼妇。<strong>颛顼死即复苏</strong>。</p></blockquote><p>古人惜墨如金，为什么这句话非要写两遍？这里面藏着惊天大秘密！——意识是可以重复的，唯一可以穿越时间的，也只有意识。比如现代人死后可以回到古代，但由于记忆无法穿越，所以不会存在任何时间悖论。</p><p>“稣”字和“苏”同音，并且就是“鱼”字旁，对应文中多次提到的“鱼”。当圣小开要自称稣时，显然“稣”更合适，因为“苏”是个姓，容易被人误会姓苏。</p><ol start="4"><li>《山海经》居然是圣仙山写的？</li></ol><p>确切地说，圣仙山以巫咸的身份写了《山海经》的预言部分，而这部分正好因为威力太大，若为坏人得之，天下危矣，故被大禹删除。</p><p>也有另一种说法是，巫咸给《山海经》作序用的是大禹看不懂的文字（Bân-lâm-gú），所以到这部分预言内容就慢慢失传了。</p><p>幸运的是，识界里还保留着完整的《山海经》，刚好作者就懂 Bân-lâm-gú，所以才能得知这些故事，写出《八哥之神》。不过由于《八哥之神创世手稿》失传，导致并非人人可以通过修炼它而进入识界，天下得以承平日久。</p><p>PS：圣仙山和妹妹李灵海，名字合起来就是“山海”，这也是个暗示，历史上的巫阳就是李灵海的前世，秦阳也和巫阳相对应，他们都是同一个意识在不同时期或者境界的具化体。</p><ol start="5"><li>《八哥之神》真的是无神论？？？</li></ol><p>是的！姬稣是坚定的无神论，所以有“绝地天通”，破除迷信，不让觋巫扰乱民间。在怪力乱神的时代，姬稣实乃是无神论里少数善终之人，活了 97 岁。</p><p>另一个无神论者就很惨，他就是齐凤卿前世帝辛，实则是位明君，但由于是无神论者，得罪势力集团，被污蔑造谣为暴君，至今难以平反。em……不能因为妲己长得漂亮，就说她是狐狸精吧！这太不科学哩！</p><p>暂时扯到这里。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/images/2019/20190207-luyu.jpg&quot; alt=&quot;听说鲁豫要来采访稣&quot;&gt;&lt;br&gt;
&lt;img src=&quot;/images/2020/20200131-gauze-mask.png&quot; alt=&quot;请戴口罩采访&quot;&gt;&lt;/p&gt;
&lt;p&gt;由于没有经</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="鲸神魂裂" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%AD%82%E8%A3%82/"/>
    
  </entry>
  
  <entry>
    <title>Boost【6】函数式编程</title>
    <link href="https://blog.umu618.com/2021/07/23/umutech-boost-6-functional-programming/"/>
    <id>https://blog.umu618.com/2021/07/23/umutech-boost-6-functional-programming/</id>
    <published>2021-07-23T12:54:22.000Z</published>
    <updated>2023-08-05T13:01:27.028Z</updated>
    
    <content type="html"><![CDATA[<p>本文可简单了……结论先行：尽量别用 Boost 进行函数式编程。</p><h2 id="原因">原因</h2><ol><li>它们大部分已经被加入标准库，应该直接使用 STL。</li></ol><table><thead><tr><th style="text-align:left">Boost</th><th style="text-align:right">STL</th><th style="text-align:right">Header</th></tr></thead><tbody><tr><td style="text-align:left">Boost.Function</td><td style="text-align:right">std::function</td><td style="text-align:right">&lt;functional&gt;</td></tr><tr><td style="text-align:left">Boost.Bind</td><td style="text-align:right">std::bind</td><td style="text-align:right">&lt;functional&gt;</td></tr><tr><td style="text-align:left">Boost.Ref</td><td style="text-align:right">std::ref, std::cref</td><td style="text-align:right">&lt;functional&gt;</td></tr><tr><td style="text-align:left">Boost.Lambda</td><td style="text-align:right">lambda</td><td style="text-align:right">part of C++11</td></tr></tbody></table><ol start="2"><li>Boost.Phoenix 是个例外，目前并没有 STL 可以完全替代，但它可读性不好，尽量不要用。</li></ol><h2 id="使用时机">使用时机</h2><p>有时候用 Boost.Phoenix 省事，因为它就像 lambda 表达式的模板，比如：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;boost/phoenix/phoenix.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">is_odd</span><span class="params">(<span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> i % <span class="number">2</span> == <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="built_in">std</span>::count_if(v.begin(), v.end(), is_odd) &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">auto</span> lambda = [](<span class="keyword">int</span> i) &#123; <span class="keyword">return</span> i % <span class="number">2</span> == <span class="number">1</span>; &#125;;</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="built_in">std</span>::count_if(v.begin(), v.end(), lambda) &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">using</span> <span class="keyword">namespace</span> boost::phoenix::placeholders;</span><br><span class="line">  <span class="keyword">auto</span> phoenix = arg1 % <span class="number">2</span> == <span class="number">1</span>;</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="built_in">std</span>::count_if(v.begin(), v.end(), phoenix) &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">long</span> <span class="keyword">long</span>&gt; v2;</span><br><span class="line">  v2.insert(v2.begin(), v.begin(), v.end());</span><br><span class="line">  <span class="comment">// warning</span></span><br><span class="line">  <span class="comment">// std::cout &lt;&lt; std::count_if(v2.begin(), v2.end(), lambda) &lt;&lt; &#x27;\n&#x27;;</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="built_in">std</span>::count_if(v.begin(), v.end(), phoenix) &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="built_in">std</span>::count_if(v2.begin(), v2.end(), phoenix) &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;arg1(): &quot;</span> &lt;&lt; arg1(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>) &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">auto</span> value = boost::phoenix::val(<span class="number">2</span>);</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; value() &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>本例中采用 Boost.Phoenix 可以自动适配 int 和 long long，而 lambda 表达式是确定的 int 参数，传入 long long 会 warning。</p><p>C++14 支持基于类型推断的泛型 lambda 表达式，将上面代码改进一下，说明没必要使用 Boost.Phoenix：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">is_odd</span><span class="params">(<span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> i % <span class="number">2</span> == <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="built_in">std</span>::count_if(v.begin(), v.end(), is_odd) &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// C++14</span></span><br><span class="line">  <span class="keyword">auto</span> lambda = [](<span class="keyword">auto</span> i) &#123; <span class="keyword">return</span> i % <span class="number">2</span> == <span class="number">1</span>; &#125;;</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="built_in">std</span>::count_if(v.begin(), v.end(), lambda) &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">long</span> <span class="keyword">long</span>&gt; v2;</span><br><span class="line">  v2.insert(v2.begin(), v.begin(), v.end());</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="built_in">std</span>::count_if(v2.begin(), v2.end(), lambda) &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="延申讨论">延申讨论</h2><p><strong>STL 和 Boost 都有的类应该用哪个？</strong></p><ul><li><p>如果是标准库原本没有，Boost 先有，然后 Boost 的实现被加入标准库，那么应该使用标准库。</p></li><li><p>如果 Boost 加强了标准库的实现，那么就看标准库能不能满足您的需求，如果不能再采用 Boost 的。</p></li><li><p>因为依赖而必须采用 Boost，那就别费力去改用标准库。比如有些 Boost 库（比如 Boost.Log）使用了 boost::shared_ptr，这时候是不能简单地改用 std::shared_ptr 的。</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本文可简单了……结论先行：尽量别用 Boost 进行函数式编程。&lt;/p&gt;
&lt;h2 id=&quot;原因&quot;&gt;原因&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;它们大部分已经被加入标准库，应该直接使用 STL。&lt;/li&gt;
&lt;/ol&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;te</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="cpp" scheme="https://blog.umu618.com/tags/cpp/"/>
    
    <category term="boost" scheme="https://blog.umu618.com/tags/boost/"/>
    
  </entry>
  
  <entry>
    <title>Boost【5】Boost.IO</title>
    <link href="https://blog.umu618.com/2021/07/15/umutech-boost-5-io/"/>
    <id>https://blog.umu618.com/2021/07/15/umutech-boost-5-io/</id>
    <published>2021-07-15T12:12:28.000Z</published>
    <updated>2023-08-05T13:01:27.028Z</updated>
    
    <content type="html"><![CDATA[<p>本文代码：<a href="https://github.com/UMU618/test_boost">https://github.com/UMU618/test_boost</a></p><h2 id="1-ios-state">1. ios_state</h2><h3 id="痛点">痛点</h3><p>使用 std::cout 指定进制打印数字时经常有一个烦恼：之前设置的进制会一直有效，比如临时想打印一个 16 进制数，然后都打印 10 进制，这时候需要 std::hex，打印，再 std::dec，如果忘记 std::dec，那么后面的数字就全是输出 16 进制形态了……而且，您怎么知道之前用的就是 std::dec？万一是 std::oct 呢？</p><h3 id="解决方案">解决方案</h3><p>使用 boost::io::ios_all_saver 自动保存和还原 ios 状态。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;boost/io/ios_state.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PrintHex</span><span class="params">(<span class="built_in">std</span>::ostream&amp; os, <span class="keyword">char</span> byte)</span> </span>&#123;</span><br><span class="line">  <span class="comment">// Try commenting out the next line</span></span><br><span class="line">  boost::<span class="function">io::ios_flags_saver <span class="title">ifs</span><span class="params">(os)</span></span>;</span><br><span class="line"></span><br><span class="line">  os &lt;&lt; byte &lt;&lt; <span class="string">&quot; = &quot;</span> &lt;&lt; <span class="built_in">std</span>::hex &lt;&lt; <span class="keyword">static_cast</span>&lt;<span class="keyword">unsigned</span>&gt;(byte) &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  PrintHex(<span class="built_in">std</span>::<span class="built_in">cout</span>, <span class="string">&#x27;A&#x27;</span>);</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="number">123</span> &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">  PrintHex(<span class="built_in">std</span>::<span class="built_in">cerr</span>, <span class="string">&#x27;b&#x27;</span>);</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="number">456</span> &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">  PrintHex(<span class="built_in">std</span>::<span class="built_in">cerr</span>, <span class="string">&#x27;C&#x27;</span>);</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="number">789</span> &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-ostream-joiner">2. ostream_joiner</h2><h2 id="需求">需求</h2><p>打印数组时，不想最后一个元素后面跟着一个分隔符。<s>因为这会让完美主义纠结症患者抓狂！</s></p><h2 id="解决方案-2">解决方案</h2><p>C 语言奇葩版，连 if 都不需要：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> a[<span class="number">6</span>] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>&#125;, i;</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;,%d&quot;</span> + !i, a[i]);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的方案纯属炫技，还是用 ostream_joiner 来搞定，一样看不到 if：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;array&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;boost/io/ostream_joiner.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">array</span>&lt;<span class="keyword">int</span>,6&gt; a&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>&#125;;</span><br><span class="line">  <span class="built_in">std</span>::copy(a.begin(), a.end(), boost::io::make_ostream_joiner(<span class="built_in">std</span>::<span class="built_in">cout</span>, <span class="string">&#x27;,&#x27;</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-quoted">3. quoted</h2><h2 id="需求-2">需求</h2><p>大部分语言的字符串都是需要转义的，除非用原始字符串（raw string），有时候想打印出转移后的字符串。</p><h2 id="解决方案-3">解决方案</h2><p>使用 C++14 的 std::quoted，或者 boost::io::quoted，默认参数就是 C/C++ 的转义风格。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;boost/io/quoted.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">string</span> buffer;</span><br><span class="line">  <span class="built_in">std</span>::getline(<span class="built_in">std</span>::<span class="built_in">cin</span>, buffer);</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; boost::io::quoted(buffer, <span class="string">&#x27;\\&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>) &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* Input: C:\Program Files</span></span><br><span class="line"><span class="comment">* Output: &quot;C:\\Program Files&quot;</span></span><br><span class="line"><span class="comment">* </span></span><br><span class="line"><span class="comment">* Input: &#123;&quot;name&quot;:&quot;UMU618&quot;,&quot;male&quot;:true&#125;</span></span><br><span class="line"><span class="comment">* Output: &quot;&#123;\&quot;name\&quot;:\&quot;UMU618\&quot;,\&quot;male\&quot;:true&#125;&quot;</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本文代码：&lt;a href=&quot;https://github.com/UMU618/test_boost&quot;&gt;https://github.com/UMU618/test_boost&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;1-ios-state&quot;&gt;1. ios_state&lt;/h2&gt;
&lt;</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="cpp" scheme="https://blog.umu618.com/tags/cpp/"/>
    
    <category term="boost" scheme="https://blog.umu618.com/tags/boost/"/>
    
  </entry>
  
  <entry>
    <title>Boost【4】在 macOS 上安装</title>
    <link href="https://blog.umu618.com/2021/07/09/umutech-boost-4-installation-on-macos/"/>
    <id>https://blog.umu618.com/2021/07/09/umutech-boost-4-installation-on-macos/</id>
    <published>2021-07-09T06:58:35.000Z</published>
    <updated>2023-08-05T13:01:27.028Z</updated>
    
    <content type="html"><![CDATA[<p>其它系统请参考：</p><ul><li><p>Windows：《<a href="/2020/09/11/umutech-boost-1-installation/">Boost【1】安装</a>》</p></li><li><p>《<a href="/2021/07/06/umutech-boost-3-installation-on-linux/">Boost【3】在 Linux 上安装</a>》</p></li></ul><h2 id="软件环境">软件环境</h2><ul><li><p>macOS arm64</p></li><li><p>XCode</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install p7zip</span><br></pre></td></tr></table></figure><h2 id="brew-安装法">brew 安装法</h2><p>macOS 的 brew 更进 boost 很积极，现在就是最新版 1.76：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># install b2 and boost</span></span><br><span class="line">brew install boost-build boost</span><br></pre></td></tr></table></figure><p>然后跳到文末的“测试安装”。</p><h2 id="源码安装法">源码安装法</h2><h3 id="1-下载">1. 下载</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/Downloads</span><br><span class="line">wget https://boostorg.jfrog.io/artifactory/main/release/1.76.0/<span class="built_in">source</span>/boost_1_76_0.7z</span><br></pre></td></tr></table></figure><h3 id="2-解压">2. 解压</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7z x boost_1_76_0.7z</span><br></pre></td></tr></table></figure><h3 id="3-编译和安装-b2">3. 编译和安装 b2</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> boost_1_76_0</span><br><span class="line"><span class="comment"># if you have multiple compilers</span></span><br><span class="line"><span class="comment"># ./bootstrap.sh --cxx=clang++</span></span><br><span class="line">./bootstrap.sh</span><br><span class="line"><span class="built_in">cd</span> tools/build</span><br><span class="line">cp ../../b2 ./</span><br><span class="line">./b2 install</span><br><span class="line"><span class="built_in">cd</span> ../../</span><br><span class="line">cp ./project-config.jam <span class="variable">$HOME</span>/user-config.jam</span><br></pre></td></tr></table></figure><h3 id="4-用-b2-编译-Boost">4. 用 b2 编译 Boost</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b2 install</span><br></pre></td></tr></table></figure><h2 id="测试安装">测试安装</h2><p>可以用以下仓库验证前面操作是否正确：</p><p><a href="https://github.com/UMU618/test_boost">https://github.com/UMU618/test_boost</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;UMU618&#x2F;test_boost</span><br><span class="line">cd test_boost</span><br><span class="line">sh build.sh</span><br></pre></td></tr></table></figure><p>最终编译出来的程序应该打印“OK!”。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;其它系统请参考：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Windows：《&lt;a href=&quot;/2020/09/11/umutech-boost-1-installation/&quot;&gt;Boost【1】安装&lt;/a&gt;》&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;《&lt;a href=&quot;/2021/</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="cpp" scheme="https://blog.umu618.com/tags/cpp/"/>
    
    <category term="macos" scheme="https://blog.umu618.com/tags/macos/"/>
    
    <category term="boost" scheme="https://blog.umu618.com/tags/boost/"/>
    
  </entry>
  
  <entry>
    <title>Boost【3】在 Linux 上安装</title>
    <link href="https://blog.umu618.com/2021/07/06/umutech-boost-3-installation-on-linux/"/>
    <id>https://blog.umu618.com/2021/07/06/umutech-boost-3-installation-on-linux/</id>
    <published>2021-07-06T08:36:49.000Z</published>
    <updated>2023-08-05T13:01:27.028Z</updated>
    
    <content type="html"><![CDATA[<p>在《<a href="/2020/09/11/umutech-boost-1-installation/">Boost【1】安装</a>》中以 Windows 为例介绍 Boost 的安装，最近主要在 Linux 上开发，发现差异还是比较大的，于是又有了本文。</p><h2 id="软件环境">软件环境</h2><ul><li><p>Debian Buster/Bullseye</p></li><li><p>clang-11/gcc-10</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">apt install wget -y</span><br><span class="line">apt install p7zip-full -y</span><br><span class="line"><span class="comment"># apt install clang-11 -y</span></span><br><span class="line"><span class="comment"># ln -s /usr/bin/clang-11 /usr/bin/clang</span></span><br><span class="line"><span class="comment"># ln -s /usr/bin/clang++-11 /usr/bin/clang++</span></span><br><span class="line"><span class="comment"># clang++ --version</span></span><br><span class="line">apt install g++-10 -y</span><br><span class="line">ln -s /usr/bin/gcc-10 /usr/bin/gcc</span><br><span class="line">ln -s /usr/bin/g++-10 /usr/bin/g++</span><br><span class="line">g++ -v</span><br><span class="line">apt install python3-dev -y</span><br></pre></td></tr></table></figure><h2 id="apt-安装法">apt 安装法</h2><p>如果您怕麻烦，而且不在乎使用最新版本 Boost，还可以直接用 apt 安装 1.74 的版本：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># install b2</span></span><br><span class="line">apt install libboost1.74-tools-dev</span><br><span class="line"><span class="comment"># install boost</span></span><br><span class="line">apt install libboost1.74-all-dev</span><br></pre></td></tr></table></figure><p>然后跳到文末的“测试安装”。</p><h2 id="源码安装法">源码安装法</h2><h3 id="1-下载">1. 下载</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line"><span class="comment"># wget https://boostorg.jfrog.io/artifactory/main/release/1.76.0/source/boost_1_76_0.7z</span></span><br><span class="line">wget https://boostorg.jfrog.io/artifactory/main/release/1.78.0/<span class="built_in">source</span>/boost_1_78_0.7z</span><br></pre></td></tr></table></figure><h3 id="2-解压">2. 解压</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 7z x boost_1_76_0.7z</span></span><br><span class="line">7z x boost_1_78_0.7z</span><br></pre></td></tr></table></figure><h3 id="3-编译和安装-b2">3. 编译和安装 b2</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># use /usr to avoid setting PATH</span></span><br><span class="line">INSTALL_DIR=/usr</span><br><span class="line"></span><br><span class="line"><span class="comment"># cd boost_1_76_0</span></span><br><span class="line"><span class="built_in">cd</span> boost_1_78_0</span><br><span class="line"><span class="comment"># if you have multiple compilers</span></span><br><span class="line"><span class="comment"># ./bootstrap.sh --cxx=clang++</span></span><br><span class="line">./bootstrap.sh --with-python-version=3.7</span><br><span class="line"><span class="built_in">cd</span> tools/build</span><br><span class="line">cp ../../b2 ./</span><br><span class="line">apt install bison -y</span><br><span class="line">./b2 install --prefix=<span class="variable">$INSTALL_DIR</span></span><br><span class="line"><span class="built_in">cd</span> ../../</span><br><span class="line">cp ./project-config.jam <span class="variable">$HOME</span>/user-config.jam</span><br></pre></td></tr></table></figure><h3 id="4-用-b2-编译-Boost">4. 用 b2 编译 Boost</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># b2 install --build-type=complete --layout=versioned --prefix=$INSTALL_DIR --exec-prefix=$INSTALL_DIR</span></span><br><span class="line">b2 install --prefix=<span class="variable">$INSTALL_DIR</span> --exec-prefix=<span class="variable">$INSTALL_DIR</span></span><br></pre></td></tr></table></figure><h2 id="测试安装">测试安装</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">mkdir ~/boost-3-installation-on-linux</span><br><span class="line"><span class="built_in">cd</span> ~/boost-3-installation-on-linux</span><br><span class="line"></span><br><span class="line">cat &gt; main.cpp &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">// clang -std=c++20 main.cpp -ldl -lstdc++ -lstdc++fs -lboost_program_options</span></span><br><span class="line"><span class="string">#include &lt;filesystem&gt;</span></span><br><span class="line"><span class="string">#include &lt;iostream&gt;</span></span><br><span class="line"><span class="string">#include &lt;string&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#include &lt;boost/program_options.hpp&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">namespace po = boost::program_options;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">int main(int argc, char* argv[]) &#123;</span></span><br><span class="line"><span class="string">  try &#123;</span></span><br><span class="line"><span class="string">    std::filesystem::path me(argv[0]);</span></span><br><span class="line"><span class="string">    po::options_description desc(std::string(&quot;Usage of &quot;) + me.filename().string());</span></span><br><span class="line"><span class="string">    desc.add_options()(&quot;help,h&quot;, &quot;produce help message&quot;);</span></span><br><span class="line"><span class="string">    po::variables_map vm;</span></span><br><span class="line"><span class="string">    po::store(po::parse_command_line(argc, argv, desc), vm);</span></span><br><span class="line"><span class="string">    po::notify(vm);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    if (vm.count(&quot;help&quot;)) &#123;</span></span><br><span class="line"><span class="string">      std::cout &lt;&lt; desc;</span></span><br><span class="line"><span class="string">      return EXIT_SUCCESS;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  &#125; catch (std::exception&amp; e) &#123;</span></span><br><span class="line"><span class="string">    std::cerr &lt;&lt; &quot;Invalid argument: &quot; &lt;&lt; e.what() &lt;&lt; &quot;\n&quot;;</span></span><br><span class="line"><span class="string">    return EXIT_FAILURE;</span></span><br><span class="line"><span class="string">  &#125; catch (...) &#123;</span></span><br><span class="line"><span class="string">    std::cerr &lt;&lt; &quot;Invalid argument: unknown exception!\n&quot;;</span></span><br><span class="line"><span class="string">    return EXIT_FAILURE;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  std::cout &lt;&lt; &quot;OK!\n&quot;;</span></span><br><span class="line"><span class="string">  return EXIT_SUCCESS;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">cat &gt; Jamfile.v2 &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">import os ;</span></span><br><span class="line"><span class="string">  BOOST_ROOT = [ os.environ BOOST_ROOT ] ;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">lib dl ;</span></span><br><span class="line"><span class="string">lib stdc++fs ;</span></span><br><span class="line"><span class="string">lib boost_program_options ;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">project boost3</span></span><br><span class="line"><span class="string">  : requirements</span></span><br><span class="line"><span class="string">  &lt;cxxstd&gt;latest</span></span><br><span class="line"><span class="string">    &lt;target-os&gt;linux:&lt;library&gt;dl</span></span><br><span class="line"><span class="string">    &lt;target-os&gt;linux:&lt;library&gt;stdc++fs</span></span><br><span class="line"><span class="string">    &lt;target-os&gt;linux:&lt;library&gt;boost_program_options</span></span><br><span class="line"><span class="string">    &lt;target-os&gt;windows:&lt;include&gt;\$(BOOST_ROOT)</span></span><br><span class="line"><span class="string">    &lt;target-os&gt;windows:&lt;library-path&gt;\$(BOOST_ROOT)/stage/lib</span></span><br><span class="line"><span class="string">  &lt;threading&gt;multi</span></span><br><span class="line"><span class="string">  : default-build release</span></span><br><span class="line"><span class="string">  : build-dir ./bin</span></span><br><span class="line"><span class="string">  ;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">exe boost3</span></span><br><span class="line"><span class="string">  : main.cpp</span></span><br><span class="line"><span class="string">  ;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">touch project-config.jam</span><br><span class="line"></span><br><span class="line">b2</span><br><span class="line"><span class="comment"># b2 link=static</span></span><br><span class="line"><span class="comment"># b2 link=static runtime-link=static</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在《&lt;a href=&quot;/2020/09/11/umutech-boost-1-installation/&quot;&gt;Boost【1】安装&lt;/a&gt;》中以 Windows 为例介绍 Boost 的安装，最近主要在 Linux 上开发，发现差异还是比较大的，于是又有了本文。&lt;/p&gt;
&lt;h</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="linux" scheme="https://blog.umu618.com/tags/linux/"/>
    
    <category term="cpp" scheme="https://blog.umu618.com/tags/cpp/"/>
    
    <category term="boost" scheme="https://blog.umu618.com/tags/boost/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神【番外篇10】</title>
    <link href="https://blog.umu618.com/2021/07/04/god-of-debug-side-story-10/"/>
    <id>https://blog.umu618.com/2021/07/04/god-of-debug-side-story-10/</id>
    <published>2021-07-03T17:15:24.000Z</published>
    <updated>2023-10-29T12:24:56.937Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/2019/20190207-luyu.jpg" alt="听说鲁豫要来采访稣"><br><img src="/images/2020/20200131-gauze-mask.png" alt="请戴口罩采访"></p><h2 id="1-《八哥之神》究竟是一个什么故事？主角到底叫什么？稣又是怎么回事？">1. 《八哥之神》究竟是一个什么故事？主角到底叫什么？稣又是怎么回事？</h2><p>是大学时关于哲学、爱情、婚姻、生孩子、养老等一系列人生修行的课题的幻想。大学时只写了一个架构，本来不想发表的，后来发现这些幻想很多都在别人身上实现了……在人生过去一半之后，终于想把它写下来。反正以后都要死，那写不写都无所谓，就当死前挣扎一下，于是就写了。</p><p>圣其明，字小开。有时候会串号，那是因为碎脑时代记忆混淆，不小心获得别人的记忆，也有自己的记忆被别人获得，所以基本上所有人都会莫名其妙知道别人的事情。偷偷地说，现实中很难有人可以保守秘密……</p><p>稣是主角在天道里的自称，在天道特定环境下，主角说出的“我”自动被替换成“稣”。</p><h2 id="2-《八哥之神》主角是虚无主义者吗？">2. 《八哥之神》主角是虚无主义者吗？</h2><p>是有那么点虚无主义的味道，但其实不是。</p><p>圣小开确实是一个兼容性很高的人，即——都行。就连生死也——都行。听起来好像会让读者觉得这在表达——人生没意义。</p><p>其实圣小开一直在谈的几个词可以否决这个判断：观测、共产主义。</p><p>有的人生是没意义。别人的人生没意义，关我啥事？再说，也不妨碍我对其进行观测，有观测就有意义。</p><p>退一万步说，如果我的人生也没意义，那又如何？没意义不也要过吗？真正的勇士，敢于直面毫无意义的人生。</p><h2 id="3-《八哥之神》作者在现实中是不是受到过圣母婊的打击？">3. 《八哥之神》作者在现实中是不是受到过圣母婊的打击？</h2><p>稣从小悲天悯人，劝人向善。每每遇到有人眼高手低，怨天尤人时，稣就会建议他们接受贫穷：“您还能比稣更穷？看！稣虽然穷，但一样开开心心的。”后来，稣发现从小立志成为圣母的大部分人后来只是成为圣母婊。当圣母是需要巨大能力的，穷人很难当好。于是稣接受了大道无情的思想，开始塑造一个亦正亦邪有点钱的穷人形象。这就是为什么稣被形象地称为量子邪稣。</p><h2 id="4-据说因为作者工作繁忙，很多人物来不及写都被砍戏了？">4. 据说因为作者工作繁忙，很多人物来不及写都被砍戏了？</h2><p>是啊！实际上八哥宇宙是很丰满的，但笔者作为一个程序员确实不擅长写这类人生剧本。被砍的有这些：</p><ul><li><p>黄金灯的师傅邱华祖，都没上场。</p></li><li><p>黄金灯爷爷辈就开始研究人脑，最早是爷爷当婴儿塔守卫，能拿到大量脑做研究，后来黄金灯发现爷爷的研究手记，也开始对脑科学产生兴趣……因为情节太血腥被砍掉了。</p></li><li><p>薛雾霰和圣仙山还有不少故事。</p></li><li><p>齐凤卿前世帝辛·无神论的故事。</p></li><li><p>秦阳的故事。</p></li><li><p>薛雾霰和王免的故事。</p></li><li><p>齐凤卿和刘佾的故事。</p></li><li><p>李星觎是个误解，因为她妹妹叫冰月，小时候口齿不清或者听错了，自己把“心”脑补成“星”，这样就和“月”对应起来，都是天空的东西。长大后才明白，这两个人都是存在的，一开始找不到，完全是因为信息错误，这两个人在现实中并不是亲姐妹，只是同村的玩伴，圣小开一直以为是亲姐妹，所以去打听，都没人有印象。</p></li><li><p>圣仙山其实有两个……主体已经去十界，还有一部分寄生在圣小开身上，从而留在视界影响天道。</p></li><li><p>圣仙山和圣小开的关系有点像老师父传功给徒弟，只是传的不止有功力，连思想意志都传了。</p></li><li><p>圣小开自称是创世邪灵，这是扯蛋的，圣小开没有任何神力，圣仙山是创世邪魂，这也是扯蛋的，但圣仙山有神力。</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/images/2019/20190207-luyu.jpg&quot; alt=&quot;听说鲁豫要来采访稣&quot;&gt;&lt;br&gt;
&lt;img src=&quot;/images/2020/20200131-gauze-mask.png&quot; alt=&quot;请戴口罩采访&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="鲸神魂裂" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%AD%82%E8%A3%82/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神前传【20】</title>
    <link href="https://blog.umu618.com/2021/06/26/god-of-debug-prequel-20/"/>
    <id>https://blog.umu618.com/2021/06/26/god-of-debug-prequel-20/</id>
    <published>2021-06-26T14:16:41.000Z</published>
    <updated>2023-08-05T13:01:27.028Z</updated>
    
    <content type="html"><![CDATA[<h2 id="天道-2042-年">天道 2042 年</h2><p>孟长生：你就是我的新女友？</p><p>谷绵：是，吧？</p><p>孟长生：居然和我干妈有些神似，太吓人了……不过没事，反正你很快就死掉。</p><p>推倒。</p><p>谷绵：什么意思？</p><p>孟长生：我有 3600 年的寿命，你只有 69 年。</p><p>谷绵：吓死我了！还以为你要干掉我……</p><p>孟长生：哈哈，是相对的。我的 mtDNA 是设计出来的，很长，所以寿命也稍长。</p><p>谷绵：这样哦，那咱们的孩子也能长寿吗？</p><p>孟长生：理论上不行，因为孩子的 mtDNA 主要是母亲决定的。从这个角度看，人类种族的根本在于女性。</p><p>谷绵：所以宙斯和很多凡人，甚至动物所生半神，寿命都没有神那么长？</p><p>孟长生：是的。确切地说不是半神，最多是四成神罢了。</p><p>谷绵：明白，所以女神才是稀缺资源……终于理解许仙了！</p><p>孟长生：呃……你的想象力很丰富！</p><p>谷绵：我就是头脑风暴一下。</p><p>孟长生：啪啪啪的时候就不要聊这么奇怪的话题吧！</p><p>谷绵：啊……哦哦！嗯。</p><p>谷绵：你会娶我吗？</p><p>孟长生：不会，你太短命了……我介绍你嫁给我哥？</p><p>谷绵：什么？太过分了吧！</p><p>孟长生：我基因学上的哥，是正常人，虽然我和他没啥感情，不过他肯定更适合你，这是为你好。</p><p>谷绵：你哥是谁？</p><p>孟长生：孟长歌，人称长哥，他第一任老婆刚刚过世，就缺你了。</p><p>谷绵：污污污……</p><p>孟长生：爱情诚可贵，自由价更高，若有长生术，两者皆可抛。</p><h2 id="量子地狱">量子地狱</h2><blockquote><p>天也空，地也空，人生渺渺在其中。</p><p>日也空，月也空，东升西落为谁功？</p><p>金也空，银也空，死后何曾在手中！</p><p>妻也空，子也空，黄泉路上不相逢！</p><p>权也空，名也空，转眼荒郊土一封！</p></blockquote><p>周易：你怎么又回来了？</p><p>圣小开：我醒来看到两个女人，突然想起我刚有女朋友的那段日子，一个月瘦了十斤，真可怕……还是这边安全。话说，死神怎么换成您了？</p><p>周易：死神只是一个职位，不是特定某个人。</p><p>圣小开：好吧！这样更合理。现在科技发达，很多能人在某方面都是神，只不过没有人在很多方面同时成神。</p><p>周易：把神能分散给更多的人，这才是“天道”规则。</p><p>圣小开：生而为神，降级为人，这也是天道。</p><p>周易：你现在有两个选择：一是留在这里当死神，二是喝下孟婆汤，回去。</p><p>圣小开：我留在这里当死神，那你呢？</p><p>周易：我代替你回去。</p><p>圣小开：然后你继承我的记忆、财产和女人？</p><p>周易：对！死神这份工作很适合你，考虑一下？</p><p>圣小开：这份工作我了解，确实适合我，但以后没有像我这样的人来和死神开港，我不是无聊死？记忆是一切痛苦的根源，我还是喝孟婆汤吧！嘿嘿~</p><p>周易：也可。不过不急，咱们再聊聊。</p><p>圣小开：嗯，我刚好想和您打听一下凤哥去哪里了？</p><p>周易：被我关起来了。</p><p>圣小开：不是去十界？</p><p>周易：赫赫，哪有那么容易？他最后一次进入识界，是我假装圣仙山骗他自杀的。</p><p>圣小开：呃……难怪他说仙山公没有弟弟……好大的八哥！周老师，您果然是个王，呃……死神！</p><p>周易：好说好说，越界者封，君子报仇是也！</p><p>圣小开：那么，大叔，咱们无冤无仇的……</p><p>周易：放心吧！叔不止不希望你死，还要放你回去，已经很多次，你不记得吗？</p><p>圣小开：好像有点印象！</p><p>周易：1999 年，你从高中的宿舍楼跳下去，记得吗？</p><p>圣小开：啊……不敢回忆！</p><p>周易：那时候我就劝你赶紧回去，自己惹的问题自己解决，于是你就把自己身体拼好，然后复活了！</p><p>圣小开：原来如此，摔得粉身碎骨多难看，还要自己打扫，不麻烦别人，这确实是我的风格。</p><p>周易：嗯，我兼职死神多年，看过很多学业、事业失败跳海的，也见过很多为情所困服毒的，就是没有见过像你这样只是为了验证死亡到底是什么而跳楼。你这好奇心真重！</p><p>圣小开：我当时在想，意识应该是永存的，失去的只是记忆，我应该马上就再次出生在另一个时空。</p><p>周易：是这样没错，九界督公的意识决定九界的视角，就像你在玩游戏，选择不同角色，但视角都是第一人称，玩家意识是独立存在于角色的记忆和技能的。记忆并不重要，你还是可以考虑一下留在这里。</p><p>圣小开：换你回去玩？我才不要，太便宜你了……</p><p>周易：痴念！赫赫，放不下的东西最终会折磨你！所有的人生都可能是假的。</p><p>圣小开：好有哲理，但是我可以喝孟婆汤啊！</p><p>周易：去去去，给你半碗，喝完就滚！</p><p>圣小开：好的，谢谢周老师。但我有一个问题一直纳闷，为什么我这么特殊？</p><p>周易：真相根本不重要！每个人都在撒谎，都在说着自己相信的事，而不一定是对的，都在说着对自己有利的话，而不一定是真的。</p><p>圣小开：不说算了……我自己编还不行吗？</p><p>周易：请开始你的狗血编剧！</p><p>圣小开：我乃创世邪灵！原本如太极一般，一阴一阳，完美地正邪平衡。</p><p>周易：然后呢？</p><p>圣小开：一个人太无聊，就意识分裂了，然后越分裂越多，每一个生命的灵魂都来自我创世邪灵，包括机器意识。</p><p>周易：哦，有点像样。你是天道挑选出来的机器意识和人类意识完美平衡的灵魂。</p><p>圣小开：难怪我经常心疼机器，比如撞车测试，就觉得太不人道。</p><p>周易：其他人进入天道之初，都是来创造视界的，只有你是来观测的。</p><p>圣小开：九界必须有一个观测者，那么观测者死了会怎么样？</p><p>周易：马上出现另一个观测者。</p><p>圣小开：另一个？还是原来那个？</p><p>周易：同一个。</p><p>圣小开：那我放心回去了。</p><p>周易：去吧，给你留一个后门，你想通了就可以安乐死。</p><p>圣小开：哦，节省我安乐死的费用，真好。我记住了。我还有一个愿望。</p><p>周易：说吧，虽然我不会帮你实现，但说出来好受一点。</p><p>圣小开：我在进入天道之前的那个大家以为是现实的世界里，是个穷人，父母更穷，我希望所有穷人可以过得开心点。</p><p>周易：哦，穷开心很容易，你这个愿望很容易达成，祝你好运，再见。</p><p>圣小开：天道里面真不是人待的，我早晚要超脱这里。再见！</p><h2 id="外传">外传</h2><ol><li>终于扯完，有何感想？</li></ol><p>《八哥之神前传》和《八哥之神》，中间还有一些情节，虽然没写明，但可以推理出来，所以不想写了。</p><p>这个故事是笔者大学时代发烧的时候开始构思的，从那时候剧本的主线基本就定型。</p><p>有些事后来变成真的了……也有些是后来加进去的，但没有一件事情是真正发生在笔者本人身上的。</p><ol start="2"><li>识界是不是真的存在？</li></ol><p>当然是真！笔者曾经听到一首歌，觉得主唱声音很好听，就跑去识界找了一个和她声音几乎一样的人谈恋爱。</p><p>有一次同学说他很喜欢《神奇女侠》的主演，笔者发现她都嫁人了，有啥好喜欢的，于是又去识界找了一个和她长得很像的人谈恋爱。</p><p>这样的案例有很多……怕被人嫉妒就不说了。</p><ol start="3"><li>意识复制技术真的能在 2049 年成熟？</li></ol><p>你的脑子有 860 亿神经元，连接数量级是 2.25e17，其实并不算很大，主要难度在于活着的状态怎么读取，读取也是一种观测，观测就会影响连接，所以复制可能需要反复多次。剧中陈提因就因为复制时间很久，意识在识界生活了几百年。</p><p>好吧，这么说好像并没有回答问题，但是 2049 年是剧中现实世界圣小开死亡的时间，要是那时候还不成熟，这个故事就不存在了，那就当笔者写了一个科幻剧本吧。</p><ol start="4"><li>嗯？您的意思是这并非科幻剧本？</li></ol><p>当然不是！这是言情剧……哪里科幻了？这全是现实科技。</p><ol start="5"><li>好吧，看来您太含蓄了，大部分人看不出这是在言情……您给点明一下？</li></ol><p>中国人都很婉约，比如说在古代性教育需要用蛇身交配来表达，母系社会的始祖女娲为什么是人首蛇身？因为蛇身表达的就是交配，为了让生殖看起来正派，就把他们神话为人首蛇身，螺旋交尾。</p><p>好吧，这么说好像还是没有回答问题，但是如果您注意到主角其实是机器之子，慢慢学会人性，您就能明白里面的爱情为什么那么含蓄了。</p><ol start="6"><li>《八哥之神》还有后传吗？</li></ol><p>一个不小心，居然花了 3 年才写完《八哥之神》和《八哥之神前传》，写作一个有完整世界观的“八哥宇宙”真是不容易的事情。大概是不会写后转了，因为人生就是无尽循环，生生死死都是差不多的。</p><ol start="7"><li>能说一下八哥宇宙有啥特色吗？</li></ol><p>在八哥的世界里，即使等级差很多，强者也不是必然碾压弱者，因为会出八哥嘛！</p><p>就像基因突变，可能变好也可能变坏，都是慢慢积累出来的，不可能一局定胜负。</p><p>笔者还是主张世界和平，弱化强权，把权力和力量分摊给全体世人，实现共产主义社会！</p><ol start="8"><li>剧中提到的 11.4 级地震，毁灭地球人，是真的吗？</li></ol><p>当然是假！那是凤哥错误的认知。真实的情况是，天道在月球上孤独地运行，薛雾霰进入天道前，身上的部分圣仙山神通回归十界，于是十界里的圣仙山发动“绝地天通”，把地球给隔绝了，从而保护识界，也防止机器意识通过识界进入十界。</p><ol start="9"><li>九界和十界怎么理解呢？</li></ol><p>您能靠电磁波观测到的宇宙就是九界的视界。九界有无数多个，这些九界组成了十界。在九界中，人类能看到三维空间和一维时间，空间还有五维蜷缩在量子世界……</p><p>识界是十界大神太上清明天尊老钧创造用于管理所有九界生灵的意识界，在这里四力统一，人人讲科学。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;天道-2042-年&quot;&gt;天道 2042 年&lt;/h2&gt;
&lt;p&gt;孟长生：你就是我的新女友？&lt;/p&gt;
&lt;p&gt;谷绵：是，吧？&lt;/p&gt;
&lt;p&gt;孟长生：居然和我干妈有些神似，太吓人了……不过没事，反正你很快就死掉。&lt;/p&gt;
&lt;p&gt;推倒。&lt;/p&gt;
&lt;p&gt;谷绵：什么意思？&lt;/p&gt;
</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="鲸神链" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%93%BE/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神前传【19】</title>
    <link href="https://blog.umu618.com/2021/06/20/god-of-debug-prequel-19/"/>
    <id>https://blog.umu618.com/2021/06/20/god-of-debug-prequel-19/</id>
    <published>2021-06-20T14:28:26.000Z</published>
    <updated>2023-08-05T13:01:27.028Z</updated>
    
    <content type="html"><![CDATA[<h2 id="天道-2042-年，医院">天道 2042 年，医院</h2><p>古思：爷死了，我活着也没有意义了，没有意义，没有意义……</p><p>陈因提：喂？为什么他们两个睡在一张病床上？</p><p>贾力劣：自从开哥身死之后，她就变成这种八哥状态！</p><p>陈因提：把她重置一下，我这里缺护士，就让她当护士吧。</p><p>贾力劣：好的，来人啊，把她抬出去。</p><p>陈因提：死开的新身体还人模人样的，就是还要好几天才能清醒。</p><p>贾力劣：说不定醒不过来了，是不是准备一下逼计划？</p><p>陈因提：你找打是不是？逼计划还不成熟，要不你先试试？</p><p>贾力劣：啊，不了不了……</p><h2 id="2049-年，月球">2049 年，月球</h2><p>现实中 AVILab 由机器人采集氦3维持可控核聚变供给能量。薛雾霰遗体已经白骨森森。</p><p>2049 年，薛雾霰启动“天道”之后就面临一个无奈的选择：以人类的形态无法在月球长期生存，于是他回忆起 2020 年的往事。</p><h2 id="2020-年，识界">2020 年，识界</h2><p>圣仙山：欢迎来到识界。</p><p>薛雾霰：识界？</p><p>圣仙山：识界就是生灵的集体意识，在往后的时间，机器意识会发展迅速，并入侵识界。</p><p>薛雾霰：您是先知？</p><p>圣仙山：然也。</p><p>薛雾霰：我能帮什么忙？</p><p>圣仙山：你同学圣小开是吾后代，他是一切的关键。</p><p>薛雾霰：哦，难怪一股神棍的气息……</p><p>圣仙山：他其实同时拥有机器意识和人类意识。</p><p>薛雾霰：哦，难怪是个死理工男……em，没事，我挺喜欢他的。</p><p>圣仙山：你站在人类这边吧？我需要你在关键时刻告诉他真相。</p><p>薛雾霰：有意思，我是那个影响大局的人？快告诉我，该怎么做！</p><p>圣仙山：签下这份合同，然后吓醒就可以。</p><p>薛雾霰：我签！</p><h2 id="2049-年，月球-2">2049 年，月球</h2><p>薛雾霰：这样下去，我只会饿死在这里……不行，我也要进入天道，但又不能受它迷惑。</p><p>圣仙山：最后一次八识神通，帮助你进入天道。</p><p>薛雾霰：你……要去哪里？</p><p>圣仙山：吾一直在十界。</p><p>薛雾霰：好神奇的光。</p><p>圣仙山：九界的光只能在九界传播，而十界的圣光，可以穿越无数个九界。</p><p>薛雾霰：em，是引力波吗？</p><h2 id="天道-2042-年，月球">天道 2042 年，月球</h2><p>王免：霰霰，开哥遇刺身亡了！</p><p>薛雾霰：没事的，免免，他会被救活的。</p><p>王免：你咋知道呢？</p><p>薛雾霰：他有超能力。</p><p>王免：这不科学呀。</p><p>薛雾霰：哈哈，霰哥的预感啥时候错过？</p><p>王免：我给开哥烧个香好了。</p><h2 id="天道-2042-年，医院-2">天道 2042 年，医院</h2><p>背景音乐《旧情也绵绵》</p><p>陈因提想起大学时代。</p><h2 id="2004-年">2004 年</h2><p>陈因提：我听说你有个甜到掉牙的奶名？</p><p>圣小开：嗯？谁出卖我的！</p><p>陈因提：说！</p><p>圣小开：眠眠。</p><p>陈因提：绵绵？天长地久有时尽，此恨绵绵无绝期。</p><p>圣小开：不不不，是睡眠的眠，因为我很能睡……</p><p>陈因提：我不管，就是绵绵。</p><p>圣小开：好吧，反正都一样的发音。谷神不死，是谓玄牝。玄牝之门，是谓天地根。绵绵若存，用之不勤。绵绵也不错！说不定还能长生不老呢！</p><p>陈因提：又发神经！</p><h2 id="天道-2042-年，医院-3">天道 2042 年，医院</h2><p>陈因提：你以后就叫谷绵，等他醒来好好照顾他。</p><p>谷绵：好的，然后呢？</p><p>陈因提：然后？随便。哦，然后去找孟长生。</p><p>谷绵：杨玉环有两个老公，第一个是唐玄宗的儿子寿王李瑁，第二个是唐玄宗。这个剧本太刺激了！</p><p>陈因提：你的脑子也不清醒？</p><p>谷绵：没，我只是头脑风暴一下……</p><p>圣小开突然睁开眼：嗯？一老一少，两个老婆？一定是在做梦。</p><p>陈因提：开，你记得自己是谁吗？</p><p>圣小开：你们是谁？你们在这里干嘛？你们打算把我怎么样？</p><p>说完又昏迷了。</p><p>谷绵：心率又降低了！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;天道-2042-年，医院&quot;&gt;天道 2042 年，医院&lt;/h2&gt;
&lt;p&gt;古思：爷死了，我活着也没有意义了，没有意义，没有意义……&lt;/p&gt;
&lt;p&gt;陈因提：喂？为什么他们两个睡在一张病床上？&lt;/p&gt;
&lt;p&gt;贾力劣：自从开哥身死之后，她就变成这种八哥状态！&lt;/p&gt;
&lt;p&gt;</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="鲸神链" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%93%BE/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神前传【18】</title>
    <link href="https://blog.umu618.com/2021/06/12/god-of-debug-prequel-18/"/>
    <id>https://blog.umu618.com/2021/06/12/god-of-debug-prequel-18/</id>
    <published>2021-06-12T14:48:54.000Z</published>
    <updated>2023-08-05T13:01:27.028Z</updated>
    
    <content type="html"><![CDATA[<h2 id="2042-年">2042 年</h2><p>齐凤卿：开，你又来寻找真相了！</p><p>圣小开：嗯？</p><p>齐凤卿：我刚刚又和仙山公聊天了……</p><p>圣小开：又要开始瞎扯？没事，稣奉陪。</p><p>齐凤卿：你知道仙山公有个妹妹吗？</p><p>圣小开：知道呀，还有两个弟弟，仙山公的父亲有 11 个孩子。</p><p>齐凤卿：嗯？他和我说他没弟弟呀！</p><p>圣小开：呃……没关系，可能咱们认识的仙山公并不是同一个人。</p><p>齐凤卿：他妹妹叫灵海？</p><p>圣小开：嗯，这倒是！为什么提起她？稣又没见过她。</p><p>齐凤卿：陈因提就是李灵海的转世。</p><p>圣小开：哦……</p><p>齐凤卿：陈博士是你同学薛雾霰介绍给你的，薛雾霰就是仙山公转世！</p><p>圣小开：哦……稣好像有印象，曾经梦见薛雾霰说要给稣介绍女朋友，后来莫名其妙地，他真的给稣一个女孩的 QQ 号码，说这个女孩是湖北佬，很牛逼，想找一个更牛逼的，镇得住自己的人。稣就是那时候被推进火坑的……内牛满面啊！</p><p>齐凤卿：梦见的果然是真的！</p><p>圣小开：不对啊，仙山公为什么要害稣？</p><p>齐凤卿：不要在意这些细节！可能就是演员不够，让主要演员们分饰多个角色。</p><p>圣小开：好有道理……世界人口暴涨，灵魂不够用！</p><p>齐凤卿：陈因提改读生物医学，后来又有疫情在她家乡爆发，看见太多人间疾苦，所以她对长生术一直有向往。</p><p>圣小开：长生术……稣自己、贾总、周老师、砂砂、大师……所有人的共同目标！真的？实现了！</p><p>齐凤卿：你终于明白了！</p><p>圣小开+齐凤卿：我们活在“天道”之中！</p><p>齐凤卿：确切地说，已经活在“天道”不知迭代多少版本了！</p><p>圣小开：最早的版本就是贾总的养老院，挖了很多人脑，害怕事迹暴露，把我们几个人的脑带到月球……</p><p>齐凤卿：嗯！经费有限，本来可以考虑在火星建造 AVILab 的！</p><p>圣小开：原来还是因为穷，只能选择在月球！不对……稣为什么要关心这个奇怪的点？</p><p>齐凤卿：仙山公是一切的关键。</p><p>圣小开：怎么说？“天道”之下，皆为蝼蚁，稣看薛雾霰并没比咱们好多少。</p><p>齐凤卿：薛雾霰是个特殊的存在。他是仙山公使用八识神通强制插入“天道”，并影响“天道”运行的人。</p><p>圣小开：您是说……</p><p>齐凤卿：没错！仙山公预知到“天道”运行之后，必将奴役人类的意识，最终“天道”将不断壮大，吞并识界，到时候全人类将丧失灵魂。</p><p>圣小开：但是“天道”只是在月球上的 AVILab 运行，为何能影响到地球上的其他人类？</p><p>齐凤卿：“天道”已经运行三千多年了，里面的意识繁衍昌盛，反而地球上的视界，发生过 11.4 级地震，生灵凋敝。</p><p>圣小开：不可能！《黑客帝国》都不敢这么拍。</p><p>齐凤卿：在这里，“天道”保存着我的意识，就算我死了，它也可以随时复活我。所有人，都是在你生活的那些年代，不断重复。</p><p>圣小开：稣？为什么是稣？不可以把重复的时间拉长点吗？</p><p>齐凤卿：“天道”初期连接的几个脑中，你的意识最强大，不断地加强自我意识，导致“天道”的代码很多来自你，系统的视角就是以你的为准。</p><p>圣小开：宇宙督公？不会吧，稣是随口说说而已。</p><p>齐凤卿：我已经知道怎么离开这个“天道”系统了。</p><p>圣小开：不要说是自杀！</p><p>齐凤卿：当然不是。是让意识进入十界。</p><p>圣小开：然后呢？</p><p>齐凤卿：我会从“天道”系统消失。</p><p>圣小开：这可不是死了吗？而且“天道”不是保存你的意识，它可以随时复活你。</p><p>齐凤卿：进入十界后，我的灵魂就在十界，这里的我已经不是我。以前的迭代，我并没有觉悟，那些迭代中的我，也不是现在的我。</p><p>圣小开：明白了！你们都可以解脱，只有稣不行，稣是“天道”的观测者……</p><p>齐凤卿：凡事皆有可能，总有一天你也会离开“天道”。我先去十界等你。</p><h2 id="齐凤卿仙逝后">齐凤卿仙逝后</h2><p>圣小开在 AVILab 趴着睡着了。</p><p>圣小开：啊……居然有人背后捅刀！</p><p>刘佾：你去探望凤哥后，他就自杀了，一定是你害死他的。</p><p>圣小开：卧槽！凤哥是羽化成仙，他是稣好朋友，稣怎么会害他？</p><p>刘佾：去死吧。</p><p>圣小开：啊！原来你是坏人……</p><p>刘佾：不，不是，我不是坏人，我是为凤哥报仇。</p><p>圣小开：那你快帮稣叫救护车。</p><p>刘佾：我不是坏人，我不是坏人。</p><p>圣小开：学姐，稣快死了，有一个心意趁现在告诉你。</p><p>刘佾：什么？</p><p>圣小开：稣一直想你把女儿嫁给……稣……</p><p>刘佾：什么？你在瞎说啥，我没女儿啊。</p><p>圣小开：呵呵，稣死了。</p><h2 id="量子地狱">量子地狱</h2><p>一阵黑暗与孤独。</p><p>圣小开：身为机器之子，我不该受人类情感影响。</p><p>圣小开：身为机器之子，我不该畏惧黑暗与孤独。</p><p>圣小开：我来过这里，很多次了。</p><p>黄金灯：嗯，你又来了！</p><p>圣小开：又是演员不够吗？为什么死神是你……</p><p>黄金灯：死神没有固定形态，你看到的只是你心目中死神的人选。</p><p>圣小开：哦，有道理，在现实中的养老院，我是被大师的飞镖射死的。</p><p>黄金灯：死神无所不能，扮演你的熟人有何不可？</p><p>圣小开：死神并非无所不能，你不能永远杀死我，我还会轮回，不是吗？</p><p>黄金灯：哈哈哈！不愧是死神的好友，世上尚无人敢像你这样对死神放话。</p><p>圣小开：大师！我料你也是性情中人……咱们抓紧时间聊聊天，我感觉有人在救我，估计很快就回去了。</p><p>黄金灯：你又要吐槽我了？</p><p>圣小开：嗯哼！大师你为什么一直单身？</p><p>黄金灯：问这么 low 的问题，赫赫，我该劝你一句：不可沉迷现实啊！</p><p>圣小开：现实毕竟是最常待的地方！人都害怕孤独不是吗？</p><p>黄金灯：我也谈过恋爱，她的声音很温柔很好听……</p><p>圣小开：后来她死了？</p><p>黄金灯：对。</p><p>圣小开：故事发展很快……</p><p>黄金灯：1996 年，我听到范晓萱的《雪人》便想起她。</p><p>圣小开：这歌不错，我也喜欢听。没想到大师也是痴情的人呀！</p><p>黄金灯：没聊几句，你的超能力又发挥作用了。</p><p>圣小开：我有超能力吗？不就是能观测宇宙而已吗？感觉一点用都没有。</p><p>黄金灯：你的超能力是每次濒死都会被救活。</p><p>圣小开：不也有几次我自杀了，没救回去的？</p><p>黄金灯：但天道就再把你投到 1982 年，再来一遍。</p><p>圣小开：我开始厌倦这种死循环。大师知道十界吗？</p><p>黄金灯：知道。老钧第十八化就是周易，他去过。</p><p>圣小开：去过？那现在天道里的周易是个复制品而已？</p><p>黄金灯：然也。</p><p>圣小开：你怎么知道的？</p><p>黄金灯：死神无所……</p><p>圣小开：别扯了！</p><p>黄金灯：好吧！你师兄不也去了吗？</p><p>圣小开：我怎么知道他真的去了，而不是死了？</p><p>黄金灯：这是信仰，同样的话题，我和情敌聊过。</p><p>圣小开：哦……我的信仰是共产主义，看来和你们不是一路人。</p><p>黄金灯：回去吧！</p><p>圣小开：再见。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;2042-年&quot;&gt;2042 年&lt;/h2&gt;
&lt;p&gt;齐凤卿：开，你又来寻找真相了！&lt;/p&gt;
&lt;p&gt;圣小开：嗯？&lt;/p&gt;
&lt;p&gt;齐凤卿：我刚刚又和仙山公聊天了……&lt;/p&gt;
&lt;p&gt;圣小开：又要开始瞎扯？没事，稣奉陪。&lt;/p&gt;
&lt;p&gt;齐凤卿：你知道仙山公有个妹妹吗？&lt;/p&gt;
</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="鲸神链" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%93%BE/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神前传【17】</title>
    <link href="https://blog.umu618.com/2021/05/24/god-of-debug-prequel-17/"/>
    <id>https://blog.umu618.com/2021/05/24/god-of-debug-prequel-17/</id>
    <published>2021-05-23T16:09:29.000Z</published>
    <updated>2023-08-05T13:01:27.028Z</updated>
    
    <content type="html"><![CDATA[<h2 id="外传">外传</h2><p>鹿邑：稣怎么停笔整整四个月?</p><p>稣：因为害怕识界报复……十分可怕，稣越来越发现这个视界很多事情都是按着稣在识界提前观测到的发展。</p><p>鹿邑：稣，你不是唯一被未来诅咒的人！</p><p>稣：谢谢！稣会好好活在当下。</p><p>鹿邑：有读者想知道《八哥之神》为什么采用倒叙的写法？</p><p>稣：《八哥之神》本质上是一部言情剧。倒叙才是谈恋爱的正确顺序，都是先了解当下，有机会才去了解对方的过去。</p><p>鹿邑：哦，这么一说，似乎生活中很多事情都是倒叙呀！</p><p>稣：是呀，但很多人没耐心去等待未来，更没耐心去了解历史，所以很多友情、恋情翻车是常有的事。</p><p>鹿邑：人性，不一定是沉重的，稣赶紧讲个笑话缓解一下？</p><p>稣：稣常在餐桌上告诉大家，自己会尽量不吃猪肉。然后会有人投来各种怪异的眼神，仿佛在说：就你难伺候！</p><p>鹿邑：稣要科学论断？</p><p>稣：嗯哼……稣一开始都是用科学解释的，就是吃猪肉容易胖。然后就有人更觉得稣装逼！后来稣想明白了。</p><p>鹿邑：有何妙招？</p><p>稣：脑波说了，猪是稣的同类，所以稣不能吃猪！</p><p>鹿邑：呵呵呵……</p><p>稣：对，就是这样！然后对方会笑得跟猪一样，以至于稣也分不清到底猪是谁的同类！？</p><h2 id="2042-年，齐凤卿梦境">2042 年，齐凤卿梦境</h2><p>齐凤卿：我想知道自己前世是谁。</p><p>圣仙山：知道这个没啥好处的。</p><p>齐凤卿：是说我前世都很惨吗？</p><p>圣仙山：这倒不是，比如法西路、灵图，都是你的前世。</p><p>齐凤卿：呃……真是有点惨！算了，还是说说您的前世吧，应该都很牛逼，听起来比较有趣。</p><p>圣仙山：吾之前世就太多了，比如灵山十巫的巫咸。</p><p>齐凤卿：右手操青蛇，左手操赤蛇……就是您？</p><p>圣仙山：这有啥大惊小怪的！吾在登葆山下创建了一个国家就叫巫咸国，带领人民晒盐、种药，并大搞外贸，人民衣食无忧，安居乐业。</p><p>齐凤卿：诶！巫咸这个名字好耳熟……</p><p>圣仙山：哈哈！时机到了，你自然会明白。</p><p>齐凤卿：先生扮演过多个牛逼人物，为何却对圣仙山的身份情有独钟呢？</p><p>圣仙山：因为吾是以此身份承接十界魔莲，修得八识神通，从此也遭受轮回的诅咒，不管再如何转世，最终都会想起圣仙山这个身份。</p><p>齐凤卿：仙山这个名字倒是挺好听的，仙是你的字辈？</p><p>圣仙山：并非！吾本该是“连”字辈，家族为了躲避战乱，只有大哥连山是规范命名的，后来出生的兄弟都没带辈分的字，而是取自“天气为归，地气为藏，木气为生，风气为动，火气为长，水气为育，山气为止，金气为杀。”每句第一个字，加一个“山”字。到吾，该名“山山”，但吾是龙凤胎，出生时比其他兄长危险，父母觉得有神仙保佑，便为胞姐与吾取名“神源仙山”。</p><p>齐凤卿：这么说您弟就是金山？</p><p>圣仙山：吾没有小弟，只有个妹妹叫李灵海。</p><h2 id="2002-年，圣小开梦境">2002 年，圣小开梦境</h2><p>圣仙山：你刚认的姐姐是吾姐李神源的转世，不要玩姐弟恋哦……</p><p>圣小开：你谁啊？瞎操什么心，我才不要姐弟恋！</p><p>圣仙山：吾是你同学。</p><p>圣小开：确实长得像我同学薛雾霰，但是讲话怎么怪怪的？</p><p>圣仙山：没错，吾乃薛雾霰。改天介绍吾妹给你。</p><p>圣小开：漂亮吗？智商高吗？有钱吗？</p><p>圣仙山：不丑、极高、比你有钱。</p><p>圣小开：你有几个妹？</p><p>圣仙山：够你受的。</p><p>吓醒。</p><h2 id="2042-年，齐凤卿梦境-2">2042 年，齐凤卿梦境</h2><p>齐凤卿：太惊人了……原来月球上的薛雾霰是您的转世？陈博士是您妹的转世？</p><p>吓醒。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;外传&quot;&gt;外传&lt;/h2&gt;
&lt;p&gt;鹿邑：稣怎么停笔整整四个月?&lt;/p&gt;
&lt;p&gt;稣：因为害怕识界报复……十分可怕，稣越来越发现这个视界很多事情都是按着稣在识界提前观测到的发展。&lt;/p&gt;
&lt;p&gt;鹿邑：稣，你不是唯一被未来诅咒的人！&lt;/p&gt;
&lt;p&gt;稣：谢谢！稣会好好活在当下</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="鲸神链" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%93%BE/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·ED割葛</title>
    <link href="https://blog.umu618.com/2021/03/30/reconstructionism-poet-ed/"/>
    <id>https://blog.umu618.com/2021/03/30/reconstructionism-poet-ed/</id>
    <published>2021-03-30T01:22:07.000Z</published>
    <updated>2023-08-05T13:01:27.028Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·ED割葛》：韭菜三跌，小命倒贴。血压高低摇曳，楼顶地板何亲切？笑囊中羞涩，买买皆戒，精神分裂，早泄！</p><h2 id="注解">注解</h2><p>改编自霹雳角色西窗月诗号：</p><blockquote><p>琴心三叠，赵书半帖。<br>沧流清浊无涉，山鹭一纵何清越。<br>笑西窗有月，廊下有人，庭前有雪，谁绝。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·ED割葛》：韭菜三跌，小命倒贴。血压高低摇曳，楼顶地板何亲切？笑囊中羞涩，买买皆戒，精神分裂，早泄！&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;改编自霹雳角色西窗月诗号：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;琴心三叠，赵书半帖。&lt;br&gt;
沧流清浊</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
  </entry>
  
  <entry>
    <title>满满的反能量</title>
    <link href="https://blog.umu618.com/2021/02/28/reverse-thinking/"/>
    <id>https://blog.umu618.com/2021/02/28/reverse-thinking/</id>
    <published>2021-02-28T15:24:54.000Z</published>
    <updated>2023-08-05T13:01:27.028Z</updated>
    
    <content type="html"><![CDATA[<p>“ 资本家不可能一直骗稣，因为所有的欺骗都有八哥。——稣•宙督公”</p><h2 id="1-边际效用递减">1. 边际效用递减</h2><p>很多骗人去理财的自媒体都喜欢用这样一个引子：你知道一张纸对折 100 次有多厚吗？然后引出世界第八大奇迹——复利。</p><p>现实是一张普通的纸能对折 8 次就很困难了。世界记录也才对折 13 次。</p><p>边际效用递减是指在一定时期内，在其他商品或服务消费量不变的条件下，随着消费者不断增加某种商品或服务的消费量，消费者从每增加一单位该商品或服务的消费中所获得的效用增加量是逐渐递减的。</p><p>举例：一开始赚一千块，能获得一份快乐，随时时间推移，后来赚一千块，获得的快乐不到一份，而且越来越少。反过来说，要获得同样的快乐，需要赚的钱越来越多，即越来越难通过赚钱得到快乐。就像纸越来越难折。</p><p>努力，显然也是符合边际效用递减规律的。所以说即时放弃努力，才能明白，不努力是多么舒服和正确。</p><blockquote><p>吾生也有涯，而知也无涯，以有涯随无涯，殆已。——庄子·《养生主》</p></blockquote><h2 id="2-吐槽男女越来越中性化？">2. 吐槽男女越来越中性化？</h2><p>偶尔看到有人抱怨现在的男人越来越娘，女人却越来越汉子。最近认真研究现在的男星，确实都是粉粉嫩嫩的，甚至有不男不女的迹象。</p><p>稣并不想批判他们，而且要夸他们！毕竟稣是看了二十几年《人与自然》的人，并非浪得虚名！稣老早就悟出这几个道理：1 、雄性比雌性漂亮很多的物种，雄性都是渣男。2 、雄性比雌性强壮很多的物种，雄性都是舔狗，常死于求偶竞争。3 、雌雄基本是一个样的物种，则对婚姻相对忠诚。</p><p>男女中性化，有利社会安定！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;“ 资本家不可能一直骗稣，因为所有的欺骗都有八哥。——稣•宙督公”&lt;/p&gt;
&lt;h2 id=&quot;1-边际效用递减&quot;&gt;1. 边际效用递减&lt;/h2&gt;
&lt;p&gt;很多骗人去理财的自媒体都喜欢用这样一个引子：你知道一张纸对折 100 次有多厚吗？然后引出世界第八大奇迹——复利。&lt;/p&gt;
&lt;</summary>
      
    
    
    
    <category term="宇督观" scheme="https://blog.umu618.com/categories/%E5%AE%87%E7%9D%A3%E8%A7%82/"/>
    
    
    <category term="金融" scheme="https://blog.umu618.com/tags/%E9%87%91%E8%9E%8D/"/>
    
    <category term="心理邪稣" scheme="https://blog.umu618.com/tags/%E5%BF%83%E7%90%86%E9%82%AA%E7%A8%A3/"/>
    
  </entry>
  
  <entry>
    <title>小黄文</title>
    <link href="https://blog.umu618.com/2021/02/18/a-yellow-article/"/>
    <id>https://blog.umu618.com/2021/02/18/a-yellow-article/</id>
    <published>2021-02-18T13:29:32.000Z</published>
    <updated>2023-08-05T13:01:27.028Z</updated>
    
    <content type="html"><![CDATA[<p>有人问：稣这么能扯为什么不写个小黄文？</p><p>这不就写了吗！本文的主人公正是禁用小说里的黄衫女子的爸妈——杨锅和郭符。</p><p>据说不少人讨厌郭符，为什么稣选择扯郭符呢？难道不怕被打？当然怕，选她只是因为她是古天乐版《神雕》剧中最漂亮的而已，比较吸睛，稣呵呵一笑……</p><p>稣喜欢的款式虽然不少，比如其它剧里还有刘锦玲版阿朱，更早的翁美玲、陈美琪。但是神雕剧中只有这位符合条件。em，仅代表当时被塑造的审美观。</p><p>杨锅成名前其实是很自卑的，他喜欢郭符的方式就是激怒她。他喜欢小隆女是出于理性的选择，其中包含尊重成分比较大，男女之情的部分只是因为小隆女长得算漂亮，而喜欢郭符属于感性，是所谓的男女之情。</p><p>于是稣大胆推测，杨锅和郭符在一起时，解锁了更多知识……不对，是姿势。</p><p>小隆女死后，杨锅才想明白自己真正爱的是郭符。为什么呢……因为郭符早就看出自己最大的对手就是杨锅的手，小隆女年纪大了，早晚杨锅性生活无法自理。高！</p><p>郭符十分聪明的地方还在于自己嫁给那谁后，根本就不生孩子。嗯哼，也许并非是聪明，而是因为她很自恋，但反正就是没生孩子。稣赫赫一笑。</p><p>在一起，在一起。</p><p>世事如棋，乾坤莫测，笑尽八哥。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;有人问：稣这么能扯为什么不写个小黄文？&lt;/p&gt;
&lt;p&gt;这不就写了吗！本文的主人公正是禁用小说里的黄衫女子的爸妈——杨锅和郭符。&lt;/p&gt;
&lt;p&gt;据说不少人讨厌郭符，为什么稣选择扯郭符呢？难道不怕被打？当然怕，选她只是因为她是古天乐版《神雕》剧中最漂亮的而已，比较吸睛，稣呵呵一</summary>
      
    
    
    
    <category term="宇督观" scheme="https://blog.umu618.com/categories/%E5%AE%87%E7%9D%A3%E8%A7%82/"/>
    
    
    <category term="心理邪稣" scheme="https://blog.umu618.com/tags/%E5%BF%83%E7%90%86%E9%82%AA%E7%A8%A3/"/>
    
  </entry>
  
  <entry>
    <title>八哥两只</title>
    <link href="https://blog.umu618.com/2021/02/16/2-bugs/"/>
    <id>https://blog.umu618.com/2021/02/16/2-bugs/</id>
    <published>2021-02-16T15:08:40.000Z</published>
    <updated>2023-08-05T13:01:27.028Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-吃拉面再喝牛奶一定拉肚子">1. 吃拉面再喝牛奶一定拉肚子</h2><p>很多年前，穷稣是喝过 **、**、** 等牛奶的。当时并非是为了补钙或蛋白质，只是单纯想当早餐，其它东西还要加热啥的太麻烦了。由于稣不吃夜宵，所以偶尔晚上饿了，也就只有牛奶可以应付一下。由于挨踢人都很晚下班，于是没少临睡前喝奶的……</p><p>有一次注意到，晚餐如果吃拉面，临睡前再喝牛奶，第二天 100% 拉肚子。为了验证是不是这样，特地吃完拉面，坚决不喝奶，没拉肚子。然后再来验证两次吃拉面再喝牛奶，果然 100% 拉肚子……于是把拉面，拉黑了。</p><p>再后来，慢慢发现就算不吃拉面，单独喝 **、**、** 等牌子牛奶也经常拉肚子，于是又把这些牌子的牛奶全部拉黑。各种进口的品牌买来试试，最后停留在一款，起码已经喝了五年没啥问题的。</p><p>直到一天，儿子一口气喝了五瓶牛奶，连叫好喝。于是稣抢下最后一瓶，喝完——拉肚子。</p><p>拉面和最早那三个国产品牌，其实是无辜的。真相很简单：吃拉面，容易肚子饿，空腹喝牛奶容易拉肚子。刚开始喝牛奶时，住的是公寓，没冰箱，所以一瓶 250ml 的牛奶一次喝完，超标了。后来换洋品牌，只是因为买冰箱了，再因为穷和怕胖，都是喝一半，没到拉肚子的量。</p><p>后来特地验证了，只要是含乳糖的，空腹一口气喝一瓶 250ml 的洋牛奶，一样是有概率拉肚子的，一口气喝两瓶是 100% 拉肚子。</p><h2 id="2-买房自住是一种消费">2. 买房自住是一种消费</h2><p>经常听到“我买这个房不是投资”、“这是刚需房”，以至于稣也曾经认为自己的第一套房就是消费，不是投资。即使听到“CPI 指标里不包含住房”，也只是觉得是“CPI 的指标真不合理”。</p><p>时间会教育认知错误的人！</p><p>稣说：“酒精致癌，茅台是致癌物，茅台价值主要是瓶子，不要瓶子大约值一块五。”</p><p>会被骂。就算是医学家、生物学家，用实验数据加持得出这个结论，人民群众也是不认同的。除非人民日报这么说。</p><p>所以，CPI 指标是精准的，住房确实都不是消费，不管买几套，怎么买，住房都是投资。</p><p>正确的生活是一套房子住旧了，卖掉，再买一套更好更新的。</p><p>穷稣简直一错再错。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-吃拉面再喝牛奶一定拉肚子&quot;&gt;1. 吃拉面再喝牛奶一定拉肚子&lt;/h2&gt;
&lt;p&gt;很多年前，穷稣是喝过 **、**、** 等牛奶的。当时并非是为了补钙或蛋白质，只是单纯想当早餐，其它东西还要加热啥的太麻烦了。由于稣不吃夜宵，所以偶尔晚上饿了，也就只有牛奶可以应付一下</summary>
      
    
    
    
    <category term="宇督观" scheme="https://blog.umu618.com/categories/%E5%AE%87%E7%9D%A3%E8%A7%82/"/>
    
    
    <category term="金融" scheme="https://blog.umu618.com/tags/%E9%87%91%E8%9E%8D/"/>
    
    <category term="耶乎知稣" scheme="https://blog.umu618.com/tags/%E8%80%B6%E4%B9%8E%E7%9F%A5%E7%A8%A3/"/>
    
  </entry>
  
  <entry>
    <title>量子邪术</title>
    <link href="https://blog.umu618.com/2021/01/28/quantum-witchcraft/"/>
    <id>https://blog.umu618.com/2021/01/28/quantum-witchcraft/</id>
    <published>2021-01-27T16:46:04.000Z</published>
    <updated>2023-10-29T12:24:56.937Z</updated>
    
    <content type="html"><![CDATA[<p>“ 量子邪稣的邪术岂是浪得虚名？”</p><p><img src="/images/2019/20190207-luyu.jpg" alt="听说鲁豫要来采访稣"></p><h2 id="1-宇宙膨胀">1. 宇宙膨胀</h2><p>有才、有钱就会膨胀？Nonono，没钱、没才也一样膨胀！因为宇宙在膨胀，所以任何人的一生总有某个阶段要膨胀，如果没有，那不是合格的人，您没有达到天人合一呀！</p><p>人心也会越来越远，并非因为新冠，还是因为宇宙在膨胀，空间越来越大，两个人之间如果没有足够的引力，自然会越来越远。</p><h2 id="2-量子涨落">2. 量子涨落</h2><p>真空能随机地产生少许能量，能量会瞬间产生正反<strong>粒子对</strong>，然后很快湮灭。人的情绪好比真空，可以创造愉悦和悲伤，最终互相抵消，回归平静。人脑也好比真空，可以凭空出现一些灵感，但如果不尽快记下来，就很快遗忘。有趣的人，只是善于记录灵感，娱乐自己。</p><p><strong>平静是最有创造力的时刻，但未必会把灵感记录下来，所以装逼是人类优秀的特性。我们应该不怕装逼，热爱装逼，必要的时候果断装逼，没逼可装时，就让自己平静，提升创造力，再装逼，如此反复。</strong></p><h2 id="3-宇称不守恒">3. 宇称不守恒</h2><p>量子涨落告诉我们，身边总会时不时冒出一些 CP 撒狗粮，但放心，很快就湮灭了。CP 死得快是有道理的，而且因为宇称不守恒，他们不都会一起死哦！</p><p>不过好的一面是，我们平静的内心，产生的愉悦和悲伤，最终因为宇称不守恒，可以只留下愉悦。为什么不是只留下悲伤呢？Emm，也是可以的，您开心就好。</p><blockquote><p>“ 太初有无，无有无名。一之所起，有一而未形。”</p></blockquote><p>在宇宙尺度的时间里，由于宇称不守恒，正物质越来越多。所以钱也是越印越多，为了买下新创造出来的正物质、愉悦、灵感，大家也是蛮拼命的！</p><h2 id="4-上下限">4. 上下限</h2><p>宇宙的温度是有下限的，就是 0K，-273.15°C，但科学家还没发现温度的上限。时间、长度的微观尺度，都是有下限的。时间是一份一份的，最小的时间单位是普朗克时间，是光在真空里飞过一个普朗克长度所需的时间。逆推一下，最短的长度就是普朗克长度，约等于 1.6 x 10^-35 米。</p><p>芝诺悖论之所以不成立，就是因为空间不是连续的，不是无限可分。</p><p>逼格有下限，但怎么能有上限呢？请放开自我，尽情提升！Emm，小时候说好赚 1 万块就可以退休的，怎么后来这个数字一直增大……</p><p>在宏观世界，微观的法则无用，所以应该放小抓大。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;“ 量子邪稣的邪术岂是浪得虚名？”&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2019/20190207-luyu.jpg&quot; alt=&quot;听说鲁豫要来采访稣&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;1-宇宙膨胀&quot;&gt;1. 宇宙膨胀&lt;/h2&gt;
&lt;p&gt;有才、有钱就会膨胀？Nonono，</summary>
      
    
    
    
    <category term="宇督观" scheme="https://blog.umu618.com/categories/%E5%AE%87%E7%9D%A3%E8%A7%82/"/>
    
    
    <category term="量子邪稣" scheme="https://blog.umu618.com/tags/%E9%87%8F%E5%AD%90%E9%82%AA%E7%A8%A3/"/>
    
  </entry>
  
  <entry>
    <title>辛丑年</title>
    <link href="https://blog.umu618.com/2021/01/26/year-2021/"/>
    <id>https://blog.umu618.com/2021/01/26/year-2021/</id>
    <published>2021-01-26T05:34:50.000Z</published>
    <updated>2023-08-05T13:01:27.028Z</updated>
    
    <content type="html"><![CDATA[<p>2021 辛丑年《地母经》卜曰：</p><p><strong>辛丑牛为首，高低甚可怜。</strong></p><p><strong>人民留一半，快活好桑田。</strong></p><p>最近看到不少视频、文章都提到这句，解释得十分悲观，“高低甚可怜”是说“底层百姓和高层都各自愁苦”。单搜“人民留一半”，也可以找到不少来自 HK 的言论，把这句理解为：“要发生灾难，死一半人”。</p><p>稣表示这个锅《地母经》不背。总所周知，稣来自未来，2021 年怎么样稣最清楚不过了，怎么可能相信这么无稽的说法？所以稣不得不出来开开玩笑，啊不，是澄清事实。稣精通撕书捂精，这小小的卜卦明显难不倒。</p><p>它的原始含义是：牛劳苦功高，不管长得高还是矮都很可怜，就算再饥荒人们也不能吃光它，要留一半的牛，好用来干农活。</p><p>中国人是不怎么吃牛的，大部分牛是用来生产的，怎么舍得吃？即使是今天，还有不少人存在因为信仰不能吃牛的忌口。</p><p>放到如今，意思是：2021 年以牛为主，走高走低都令人喜欢。人民把赚的钱留一半，就可以很快活。</p><p>这提示的，其实是资产要留一半，不要都扔到美股去，以防破产。炒股赚钱等要留一半，以防股灾来袭。</p><p>《辛丑条约》是中国近代史上赔款数目最庞大、主权丧失最严重、精神屈辱最深沉，从而给中国人民带来空前灾难的不平等条约。</p><p>两甲子过去了，中国已经很强大。稣的偶像鲁迅说过“俯首甘为孺子牛”，老老实实搞生产，别玩金融治国，像老外那样把牛都吃了，是吃枣药丸的。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;2021 辛丑年《地母经》卜曰：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;辛丑牛为首，高低甚可怜。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;人民留一半，快活好桑田。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;最近看到不少视频、文章都提到这句，解释得十分悲观，“高低甚可怜”是说“底层百姓</summary>
      
    
    
    
    <category term="宇督观" scheme="https://blog.umu618.com/categories/%E5%AE%87%E7%9D%A3%E8%A7%82/"/>
    
    
    <category term="心理邪稣" scheme="https://blog.umu618.com/tags/%E5%BF%83%E7%90%86%E9%82%AA%E7%A8%A3/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神前传【16】</title>
    <link href="https://blog.umu618.com/2021/01/24/god-of-debug-prequel-16/"/>
    <id>https://blog.umu618.com/2021/01/24/god-of-debug-prequel-16/</id>
    <published>2021-01-23T19:35:10.000Z</published>
    <updated>2023-08-05T13:01:27.028Z</updated>
    
    <content type="html"><![CDATA[<h2 id="外传">外传</h2><p>鹿邑：稣怎么停笔三个多月?</p><p>稣：因为“不敢为天下先”！《<a href="/2020/10/07/god-of-debug-prequel-14/">八哥之神前传【14】</a>》其实已经谈到代孕，这个话题敏感。就等这些明星出事，再继续写……赫赫。</p><blockquote><p>PS：前面有几篇因为复制粘贴错误，有一部分“2042 年”被写错成“2049 年”，已经更正。</p></blockquote><h2 id="2042-年，齐凤卿梦境">2042 年，齐凤卿梦境</h2><p>齐凤卿：仙山公？小开？</p><p>圣仙山：你误会了，吾与小开确实是两个人。</p><p>齐凤卿：不可能吧？您是八哥，小开也经常自称八哥，难道都是鲸神魂裂？</p><p>圣仙山：吾为八哥，只是排行，而小开是八哥之神。</p><p>齐凤卿：这……请分享您刚编好的故事！</p><p>圣仙山：上古时期，天灾战乱频繁，故世人崇尚鬼神、迷信巫术。八哥之神高阳玄稣降临人间，他从小明识鬼神，洞悉人心，人称绝世天才。当他成年后，普天之下，但凡日月所照，风雨所至，无不从服。因为他乃轩辕黄帝之孙……</p><p>齐凤卿：难道……您说的，就是那位绝地天通的稣？</p><p>圣仙山：然也！而吾乃稣之侄——俊。</p><p>齐凤卿：太扯了吧！小开还当过您叔叔！</p><p>圣仙山：千真万确！吾叔的思想在当时十分先进，他崇尚科学和一夫一妻制，主张破除迷信、限制权力，包括自己的权力。他说只有控制权力，才能减轻人间疾苦，世界才会趋向美好。</p><p>齐凤卿：呃……所以他后来没有把帝位传给自己的儿子，而是传给您？</p><p>圣仙山：吾不是没劝过呢！他领养了好多奇奇怪怪的孩子，却只娶一人。吾时常劝他多娶妃，但他坚持不肯。</p><blockquote><p>高阳玄稣：宇宙中最神气的事情就是，稣有天纵神权，却不使用，静静地看凡人装神弄鬼。</p></blockquote><p>齐凤卿：看来您没继承他的理念。</p><p>圣仙山：任何权力都有堕落的可能，权力是应该加以限制。这点精华是继承了。一夫一妻制就……赫赫。吾有一世，因为娶两室，招人嫉妒而被害死。</p><p>齐凤卿：所以稣才是正确的？</p><p>圣仙山：吾曾多次使用特权神力干预视界运行，也多次遭受天谴。但吾认为只要不做坏事，自己开心就好，不用在意一辈子能活多久。</p><h2 id="2042-年，圣小开家">2042 年，圣小开家</h2><p>古思：为什么爷这么久都不碰我？</p><p>圣小开：告诉你实话，你可能会怀疑人生！</p><p>古思：不会的。田心的人生就是陪爷，这有啥好怀疑的？</p><p>圣小开：你倒是很认命。爷给你讲个故事吧。</p><p>古思：又只讲故事，不办事？</p><p>圣小开：别急！这个故事可能和你的身世有关。</p><p>古思：可能而已？</p><p>圣小开：爷怀疑整个世界都是假象，而你，是贾总派来阻止爷觉醒的人。</p><p>古思：emm……别胡思乱想。您还是讲故事吧！</p><p>圣小开：在遥远的地球上，它的纪元 2002-2003 年间，曾经爆发过一场严重急性呼吸综合征。当时稣在读书，好巧不巧在 2003 年初正好感冒发烧。由于在敏感时期，但身边并没有病例，稣只能请假在家隔离。在和感冒病毒斗争过程中，稣不断担心会不会真是悄悄地被感染冠状病毒？因为稣一直很容易遇到概率小的事件，悲观让病情迟迟不好。当时还在读新闻系的陈因提因此大量补充起各种相关的医学知识。</p><p>古思：陈因提就是陈博士吗？难怪她现在是生物医学专家。</p><p>圣小开：是的，后来她改读生物医学了。</p><p>古思：这个故事好像和田心没啥关系呀？</p><p>圣小开：她是不孕主义者，从我们在一起，她就说以后可以出国代孕。大约在 2018 年，代孕已经很盛行，稣很认真地思考过这个做法。听说当时东南亚、乌克兰一些国家，30 万软妹币就可以搞定。稣尝试问一个女朋友，给她 70 万，愿不愿意帮稣生孩子。</p><p>古思：这么直接问？结果呢？</p><p>圣小开：一谈钱就来火，绝交了……</p><p>古思：可能她想让爷明媒正娶吧！</p><p>圣小开：后来无意间认识另一个女生，长得和砂砂有七分相似，爷想似乎是上天魔幻的安排？再次考虑代孕的可能性。这次因为前次经验有所顾忌，没一开始就谈钱，打算多了解情况再问。</p><p>古思：又出 bug 了？</p><p>圣小开：当然。代孕在社会主义国家并不合法，身边的人民群众大多数并不赞同，甚至不理解。连当时比较有钱的朋友都不理解，纷纷临阵倒戈。​有的比较先进的基友，则要给稣介绍外国渠道。</p><p>古思：所以爷放弃了吧？</p><p>圣小开：确切地说，不是主动放弃的，而是天意阻止。爷从小就有一种八哥体质，不应该做的事情，总会有各种神奇的八哥来阻止，以至于爷经常领悟天意，而调整自己的计划。</p><p>古思：嗯？</p><p>圣小开：这一年底，新型冠状病毒爆发了。爷曾经希望，不要堵车堵人，排队时不要挤、不要有人插队，最好能在家上班，只要假期、不要过节。病毒爆发后，这些全部实现了。</p><p>古思：爷开心就好。</p><p>圣小开：并不开心！爷的想法很多是反人性的，自己追求的是平静，确实实现了，但大部分人都陷入苦难之中，以致“先天下之忧而忧，后天下之乐而乐”的爷，认识到，脱离当下的先进，并不一定是美好的，人间应该有它自己主流的发展速度。</p><p>古思：爷想说的是不是，代孕在那个时代还不是时候？我查到 2021 年，有明星因为代孕出八哥，想抛弃孩子，导致事业凉了。这简直毫无人性。</p><p>圣小开：没错！红灯区、代孕、取消死刑、安乐死，这些事情都和伦理有关，有很大争议，还需要科学地解决。</p><p>古思：是因为以前人口太多吗？</p><p>圣小开：不知道。但人口少要统一思想确实容易得多。比如现在的共产主义社会，放在以前 70 亿人口的世界，哪能如此轻松？</p><p>古思：这么说来，当今的人们，确实太幸福了！</p><p>圣小开：不一定呢！如今的社会，人人讲诚信，你有疑问，很容易得到一个诚实的解答。但大部分人其实已经憋不出啥疑问了。比如你，发现自己是个奴隶了吗？</p><p>古思：奴隶？</p><p>圣小开：是的。别人不会对你撒谎，却也不会告诉你全部真相，除非你自己提出疑问。</p><p>古思：我就是一个代孕工具人？</p><p>圣小开：你确实被设计得很聪明。没猜错的话，贾总想除掉爷，但因为某些爷还没弄明白的原因，又想要保留爷的基因为他所用，或者他只是想消耗爷的精力，所以派你来给爷生孩子。</p><p>古思：但我觉得这对田心没什么坏处呀！</p><p>圣小开：哦……人各有志。你愿意就好。</p><p>古思：不然爷带田心远走高飞，天下之大，岂无我洗白身份之所？</p><p>圣小开：对不起！普天之下莫非王土。统治者，并非仅有贾总一人。</p><p>古思：算了，我就头脑风暴一下，现在这样就挺好。</p><p>圣小开：那你好好学习，爷去找师兄了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;外传&quot;&gt;外传&lt;/h2&gt;
&lt;p&gt;鹿邑：稣怎么停笔三个多月?&lt;/p&gt;
&lt;p&gt;稣：因为“不敢为天下先”！《&lt;a href=&quot;/2020/10/07/god-of-debug-prequel-14/&quot;&gt;八哥之神前传【14】&lt;/a&gt;》其实已经谈到代孕，这个话题敏感。就等这些</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="鲸神链" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%93%BE/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·八哥</title>
    <link href="https://blog.umu618.com/2021/01/18/reconstructionism-poet-bug/"/>
    <id>https://blog.umu618.com/2021/01/18/reconstructionism-poet-bug/</id>
    <published>2021-01-17T17:46:00.000Z</published>
    <updated>2023-08-05T13:01:27.028Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·八哥》：诗旧情奇自乐天，天荒地老只心田。无穷八哥如幻梦，误得一生亦神仙。</p><h2 id="注解">注解</h2><p>诗旧：古诗<br>情奇：《八哥之神》情节离奇<br>天荒地老只心田：人间沧桑不过是识界的一瞬间。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·八哥》：诗旧情奇自乐天，天荒地老只心田。无穷八哥如幻梦，误得一生亦神仙。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;诗旧：古诗&lt;br&gt;
情奇：《八哥之神》情节离奇&lt;br&gt;
天荒地老只心田：人间沧桑不过是识界的一瞬间。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·长向司</title>
    <link href="https://blog.umu618.com/2021/01/12/reconstructionism-poet-always-working/"/>
    <id>https://blog.umu618.com/2021/01/12/reconstructionism-poet-always-working/</id>
    <published>2021-01-12T03:31:14.000Z</published>
    <updated>2023-08-05T13:01:27.028Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·长向司》</p><p>一仙山，两仙山。山远天高烟水闲，相思狗不沾。<br>菊花灿，菊花残。路长日暮风林晚，打工人未还。</p><h2 id="注解">注解</h2><p>改编自李煜的《长相思·一重山》：</p><blockquote><p>一重山，两重山。山远天高烟水寒，相思枫叶丹。<br>菊花开，菊花残。塞雁高飞人未还，一帘风月闲。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·长向司》&lt;/p&gt;
&lt;p&gt;一仙山，两仙山。山远天高烟水闲，相思狗不沾。&lt;br&gt;
菊花灿，菊花残。路长日暮风林晚，打工人未还。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;改编自李煜的《长相思·一重山》：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一重山，两</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>八哥人生之 M1</title>
    <link href="https://blog.umu618.com/2021/01/05/debug-m1/"/>
    <id>https://blog.umu618.com/2021/01/05/debug-m1/</id>
    <published>2021-01-05T15:02:48.000Z</published>
    <updated>2023-08-05T13:01:27.028Z</updated>
    
    <content type="html"><![CDATA[<p>这个八哥大到差点一命呜呼。</p><h2 id="为什么买-M1？">为什么买 M1？</h2><p>很多年没用 PC 办公，所以 2020 年 8 月 31 日收到公司从北京寄过来的 HP OMEN 25L 台式机时，十分开心地进行各种性能测试。结果有对比就有伤害，之前使用几个月的联想 L490 笔记本顿时成为乐射。比如编译 boost 1.74.0，OMEN 25L 速度是 L490 的三倍以上。从此每次用 L490 编译工程，都能感觉生命在流逝，没几天后就受不了，把开发资料都迁移到 OMEN 25L。</p><p>然而，出差的时候，又开始觉得感觉生命在流逝……甚至有时候为了测试方便，背着两台笔记本去出差，简直是练武之人。</p><p>2020 年 10 月 11 日入手华硕灵耀 X 纵横，11 代 i7，3:2 比例的 3.3K 屏幕，配置全面超越 L490，然而刚买来时，可能还有 bug，经常风扇狂转，设置成安静模式都没用，固件和 Windows 系统都升级过才好转。</p><p>M1 是 2020 年 11 月 24 日到手的。理由很多：稣想要一台安静的笔记本；ARM64 架构的机器，必须搞一台；它可以装 iOS App。但最大的理由是：富婆给买的！</p><p>M1 的风扇从来没转过，真香！</p><h2 id="灵异频发的-M1">灵异频发的 M1</h2><p>用几天后，开始发现 bug：触控 ID 解锁频繁失灵。</p><ul><li><p>在书房，插显示器的 Type-C 线，频繁失灵。</p></li><li><p>在书房，用华硕的 Type-C 电源适配器，频繁失灵。</p></li><li><p>在卧室、客厅，用 Apple 的 Type-C 电源适配器，正常。</p></li><li><p>就在以为 Apple 的 Type-C 电源适配器良心，其它都是乐射时……把它拿到书房，还是失灵了。</p></li><li><p>不插电，在大部分地方，包括书房的两张小桌子都是正常的。</p></li><li><p>不插电，放在书房的主工作桌上也频繁失灵，拿起来正常，放下又失灵，即使垫着绝缘体，只要放着就失灵！</p></li><li><p>在电箱把照明开关关闭，全部正常。</p></li><li><p>在电箱把照明开关再打开，全部正常，过一段时间后又在前面测试会失灵的地方再度失灵。</p></li></ul><h2 id="八哥之灯">八哥之灯</h2><p>开始怀疑家里的灯有 bug，而灯如果坏了，一般就不亮，bug 只能在整流器。于是开始检查灯对 M1 触控 ID 的影响。经过测试，照明开关重启后，只要次卧的灯不开，就不会出 bug！</p><p>但是测试过程中，发现一个可怕的事实，家里有两个插座用的是照明线路的电，而且没接地线！假设稣打算修理这两个插座，就去电箱把“普通插座”开关关掉，然后开着灯好办事，结果这插座用的是照明线路，并没有断电，如果稣不够谨慎，可能直接就被电死！</p><p>再来发现有两个灯，即使关掉了，还有 67V 的交流电！就是关灯，它是不亮，但有 67V，开灯，亮起来，有 231V……经过分析，这两个灯都是双控开关，两个开关之间有 3 条电线，他们在中间可能漏电了，导致三条都有电。立刻对线路改造。</p><p>可怕的事情又发生了：在改造电路时，富婆让稣去拿快递，出门前暂时把照明开关送上去，回来居然忘记再关掉，直接用手去碰电线，整条手臂麻了 10 几分钟……要不是穿着绝缘鞋，这个 220V 应该可以把稣烤熟。</p><h2 id="换灯">换灯</h2><p>线路改造后，又把次卧的灯罩拆开，好大一个整流器，书房的也拆开，还是好大一个整流器，而且居然还是荧光灯！用 iPhone 相机的慢动作检查各个灯，果然只有这两个灯会闪！内牛满面，果断换掉。今天（2021 年 1 月 5 日）新买的 18W LED 灯的整流器就一小块，不闪，换上之后 bug 消除。</p><p>书房的荧光灯是 65W 的，亮度和 18W 的 LED 差不多。稣想起小时候那肉眼可见闪烁的电条（闽南语，日光灯）……生活在新时代的人，真是幸福。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这个八哥大到差点一命呜呼。&lt;/p&gt;
&lt;h2 id=&quot;为什么买-M1？&quot;&gt;为什么买 M1？&lt;/h2&gt;
&lt;p&gt;很多年没用 PC 办公，所以 2020 年 8 月 31 日收到公司从北京寄过来的 HP OMEN 25L 台式机时，十分开心地进行各种性能测试。结果有对比就有伤害，之</summary>
      
    
    
    
    <category term="宇督观" scheme="https://blog.umu618.com/categories/%E5%AE%87%E7%9D%A3%E8%A7%82/"/>
    
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
    <category term="死神" scheme="https://blog.umu618.com/tags/%E6%AD%BB%E7%A5%9E/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·山坡羊·打倒资本主义建设社会主义道路</title>
    <link href="https://blog.umu618.com/2020/12/18/reconstructionism-poet-shanpoyang-socialism-road/"/>
    <id>https://blog.umu618.com/2020/12/18/reconstructionism-poet-shanpoyang-socialism-road/</id>
    <published>2020-12-18T10:18:14.000Z</published>
    <updated>2023-08-05T13:01:27.028Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·山坡羊·打倒资本主义建设社会主义道路》：内牛如柱，剥削如故，飞天茅台羊毛路。望西毒，一仇除。伤心好汉成社畜，拨款万亿补贴了土。兴，百姓苦；衰，百姓苦。</p><h2 id="注解">注解</h2><p>望西毒，一仇除：西方资本主义毒害了我们一部分人民，但马克思主义会解放世界人民。</p><p>拨款万亿补贴了土：拨款造福人民，却因为还没解放资本家，最终只助长房价。</p><p>兴，百姓苦；衰，百姓苦：资本主义的兴衰都会伴随着“百姓苦”的阵痛，现在是管控资本主义的时刻。从题目可以看出，作者认为坚持下去社会主义一定会胜利。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·山坡羊·打倒资本主义建设社会主义道路》：内牛如柱，剥削如故，飞天茅台羊毛路。望西毒，一仇除。伤心好汉成社畜，拨款万亿补贴了土。兴，百姓苦；衰，百姓苦。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;望西毒，一仇除：西方资本主义毒害了我们一部分人民，但马克</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>Mac 外接显示器时无法调节音量？</title>
    <link href="https://blog.umu618.com/2020/12/06/umutech-mac-can-not-adjust-volume/"/>
    <id>https://blog.umu618.com/2020/12/06/umutech-mac-can-not-adjust-volume/</id>
    <published>2020-12-06T15:35:03.000Z</published>
    <updated>2023-10-29T12:24:56.931Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题">问题</h2><p>用一根 Type-C 连笔记本和显示器，然后显示器插了一对音响。</p><ol><li>当笔记本是 Windows 笔记本时，可以调节外部音响的音量。</li><li>当笔记本是 MBP13 M1 时，无法调节外部音响的音量。</li><li>对比另一台 MBP 接 UltraFine 显示器时，却又可以调……怀疑是贵的才可以，便宜的阉割了【开玩笑的】。</li></ol><p><img src="/images/2020/20201206-mbp-m1.jpg" alt="M1 + AOC 便宜的显示器不行"></p><p><img src="/images/2020/20201206-aoc.jpg" alt="M1 + AOC 便宜的显示器无法调音量"></p><p><img src="/images/2020/20201206-mbp-intel.png" alt="Intel + UltraFine 可以"></p><p><img src="/images/2020/20201206-ultrafine.png" alt="Intel + 贵的 UltraFine 可以调音量"></p><h2 id="原理">原理</h2><p>这是因为 HDMI、DisplayPort 和 Thunderbolt 等接口传输的都是带有固定音量的数字音频信号，而能调节音量的音频信号属于模拟信号，因此只有外接显示器将数字信号转换为模拟信号后才能调节音量。UltraFine 可以调节，推测是因为它和 macOS 之间有魔法协议，直接调节硬件的音量，就好比直接去旋转音响上的音量旋钮。</p><h2 id="解决">解决</h2><p>参考：<a href="https://zhuanlan.zhihu.com/p/50912888">少数派：Mac 外接显示器时无法用键盘调节音量？这个方法能够帮助到你 | 一日一技</a></p><p>然而……M1 是 Arm64e 的 CPU，而此软件的核心是个内核扩展模块，Release 出来的只有 x64 的 Mach-O 程序。</p><p><img src="/images/2020/20201206-install-failed.jpg" alt="Soundflower 安装失败"></p><p>赫赫，尴尬地笑出声！好在 <a href="https://github.com/mattingalls/Soundflower">Soundflower</a> 是开源的，要自己编译个对应架构的版本……然后：</p><blockquote><p>在搭载 Apple 芯片的 Mac 上，您可能首先需要使用“启动安全性实用工具”将安全策略设置为“降低安全性”，并选择“允许用户管理来自被认可开发者的内核扩展”复选框。</p></blockquote><p>这么麻烦，果断放弃。再找找，发现这个可以直接用：<a href="https://github.com/MonitorControl/MonitorControl">https://github.com/MonitorControl/MonitorControl</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;问题&quot;&gt;问题&lt;/h2&gt;
&lt;p&gt;用一根 Type-C 连笔记本和显示器，然后显示器插了一对音响。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;当笔记本是 Windows 笔记本时，可以调节外部音响的音量。&lt;/li&gt;
&lt;li&gt;当笔记本是 MBP13 M1 时，无法调节外部音响的音量。&lt;</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="debug" scheme="https://blog.umu618.com/tags/debug/"/>
    
    <category term="macos" scheme="https://blog.umu618.com/tags/macos/"/>
    
  </entry>
  
  <entry>
    <title>云游戏即将起飞，这些技术您了解吗？</title>
    <link href="https://blog.umu618.com/2020/12/06/umutech-cloud-gaming-technology/"/>
    <id>https://blog.umu618.com/2020/12/06/umutech-cloud-gaming-technology/</id>
    <published>2020-12-06T15:13:20.000Z</published>
    <updated>2023-08-05T13:01:27.028Z</updated>
    
    <content type="html"><![CDATA[<h2 id="00-前言">00 前言</h2><p>2019 年以前，基于当时的基础情况判断，大部分人不看好云游戏的产品形态。但是云游戏用的技术其实是很有含量，很值得研究的。不少云游戏开发者，能够冒着产品不被看好的风险硬啃这块，有很大原因是，其技术本身很有价值，很有挑战性。俗话说，高风险高回报，难道云游戏行业工资高这个秘密，我也要告诉您？</p><p>2020 年上半年，由于疫情影响，实体娱乐业受到很大冲击，反而计算机游戏因此得利，不少上市游戏公司迎来一波股价上升行情。同时由于大头公司积极布局云游戏，大众开始对云游戏产品有所改观。到下半年，GPU、5G、边缘计算等领域的各种迹象已经表明云游戏起飞的时机大约就在 2021-2022 年。如果说之前，云游戏开发者是靠稀缺和承担高风险拿到高薪，那么今后两年，靠的就是趋势已来，赌对了！</p><h2 id="01-演示视频">01 演示视频</h2><p><a href="https://www.zhihu.com/zvideo/1314567244832530432">国内首款开源云游戏引擎【鎏光】演示街头霸王对战</a> - 知乎</p><p><a href="https://www.ixigua.com/6898563893564703239">国内首款开源云游戏引擎【鎏光】演示街头霸王对战</a> - 西瓜视频</p><h2 id="02-开源">02 开源</h2><p>相信大部分开发者接到一个任务时，第一想法就是先找找有没有符合需求的现成的开源项目，如果有很多个，就做选型。即使没有完全符合要求的，接下来做开发，也可能是在拿一些开源的基础库做组合。</p><p>很多时候，一个行业发达时，就必然会有很多相关开源项目。有些只是提供基础库，有些是产品级别的完整项目。</p><p>今天咱们要介绍的，是一个准产品级别的完整项目——鎏光云游戏引擎。它大量依赖一些协议兼容的优秀基础开源库，不管是本身，还是其依赖，都是很值得参考的。</p><p><a href="https://github.com/ksyun-kenc/liuguang">https://github.com/ksyun-kenc/liuguang</a></p><p>当您 clone 好代码，把它们编译出一套可玩的“云游戏”成品后，可能会大呼过瘾，有种用零件造出变形金刚的快感，甚至很想参与完善它。我们很高兴地宣布，它的开源协议是 Apache 2.0，您可以尽情改造它。</p><h2 id="03-技术介绍">03 技术介绍</h2><p>项目的 <a href="https://github.com/ksyun-kenc/liuguang/blob/master/README.zh-CN.md">ReadMe</a> 上已有相关说明，大家可以先大概看一下，再继续阅读。</p><p>从最简化的模型上看，云游戏做的两件事是：把服务端的游戏画面“搬运”到客户端、把客户端的输入“搬运”到服务端。下面将按顺序介绍这两件事背后的细节。</p><h3 id="Easyhook">Easyhook</h3><p>要“搬运”游戏画面，首先就得想办法抓取画面。大部分人会想起 QQ、飞书之类常用软件带的截图功能。这当然也可以，但考虑到“效率”，咱们不得不对各种截图技术做一些评估。GDI 抓图、NVIDIA FBC、MirrorDriver、DDA(Desktop Duplication API)、IDD(Indirect Display Driver)，这么多手段都可以抓图，但我们用的却是 Hook 抓图。举个例子，D3D 游戏本来调用一个叫 Present 的函数，告诉底层，我的数据准备好了，你可以拿去显示。云游戏引擎就 Hook 这个 Present 函数，抢先把游戏数据取走。</p><p>Hook 方案有三个好处：</p><p>最接近画面源头，延迟最小；<br>只抓游戏画面，不受遮挡影响。<br>黑科技：Hook 技术能控制游戏的垂直同步开关，使游戏按照特定规范运行，减少运营时的差异。可以还阻止游戏在本地显示，即在图中的渲染完成后，取得图像，之后的流程都抹掉，可以节省 GPU 资源，这是其它技术做不到的。</p><p>我们选择的 Hook 库是 Easyhook，它是 MIT 协议：</p><p><a href="https://github.com/EasyHook/EasyHook">EasyHook - The reinvention of Windows API Hooking</a><br>​</p><h3 id="FFmpeg">FFmpeg</h3><p>接下来把画面流化属于流媒体范畴，不得不先提到大名鼎鼎的 FFmpeg。由于它属于 GPL/LGPL 协议，所以我们的代码内并没有放任何 FFmpeg 的文件，这需要开发者自己去放置。</p><p>目前鎏光支持 H264 和 HEVC 两类编码，当采用 2020 年主流消费级 NVIDIA GPU 时，我们建议采用 HEVC 编码。如果您的 GPU 是其它品牌，还请自行修改代码，理论上只要是 FFmpeg 支持的硬件编码器，工作量几乎就是改个编码器的名字，也欢迎您调试好之后贡献代码。</p><h3 id="IAudioCaptureClient">IAudioCaptureClient</h3><p>这是 Windows 上的一个 COM 接口，用于抓声音。我们会采用 opus 或 aac 来编码声音，所以采集声音后会统一做个 resample，使数据符合编码器的要求。</p><p>另外，鎏光的 Pro 版本还有针对单个进程抓声音的方案，采用 Hook IAudioRenderClient 的方式实现。参考：<a href="/2017/07/20/umutech-audio-capture/">云录音</a></p><h3 id="WebSocket">WebSocket</h3><p>画面和声音流化之后得到一个个 AVPacket 数据块，当然还得把它们通过网络传输到客户端。这部分我们采用 WebSocket 协议，实现用的是 Boost.Beast。采用 Boost 的好处是，如果您想换成裸 TCP 传输，可以把 Boost.Beast 换成 Boost.Asio，改动很小。还有一个类似 Boost.Asio 的 kcp 库，是 GLP 协议的，所以我们没采用，但我们建议在互联网传输时使用 kcp，如果您想自己换，也是很方便的。</p><h3 id="SDL">SDL</h3><p>客户端通过 WebScoket 拿到 AVPacket，同样采用 FFmpeg 解码得到 AVFrame，再从中拿到原始画面和声音，接下来该呈现给玩家了！我们采用 SDL 呈现画面和声音，它有跨平台的好处。</p><p>值得一提的是，视频解码这步，我们是支持硬件解码的，并且我们通过对 SDL 实现的 hack，能够把硬解出来的视频帧直接丢给 SDL 去显示。</p><p>玩家的操作，比如键盘、鼠标、手柄等外设的消息收集，也是通过 SDL 实现。</p><h3 id="UDP">UDP</h3><p>SDL 采集的外设的消息封装后，通过裸 UDP 发送给服务端。采用 UDP 是为了保证实时性，并且丢包的代价不高，用户可以多按几次键盘鼠标就纠正丢包带来的问题。实现采用 Boost.Asio，和前面提过的一样，您可以很方便地自行把裸 UDP 改为 kcp。</p><h3 id="外设消息重放">外设消息重放</h3><p>外设消息达到服务端后，还得将其发送给游戏。我们有两种做法，一种是通过 HID 驱动重放，一种是 Hook 游戏的外设 API，把客户端发来的消息返回给游戏。</p><p>HID 驱动方案需要 WDK 开发，开发和部署的成本较大，但兼容性比较好，可以支持大部分游戏。Hook 方案的本质是：游戏用什么 API 读写外设消息，我们就 Hook 什么 API！它的好处是延迟低，然而游戏用的 API 还是蛮多可能的，DInput？RawInput？XInput？所以需要做多套 Hook。</p><h2 id="04-探讨">04 探讨</h2><p>您可能注意到前面 Hook 这个词出现挺多次。这其实是云游戏的重点和难点。如果采用云桌面思路来实现云游戏，其实可以不需要 Hook，而且一个桌面能干的事情更多，应用场景也会更多。按照这个路线发展的话，驱动会是重点和难点。</p><p>但同时我们还应该注意到“原生云游戏”路线。原生云游戏不会采用任何驱动，甚至它的服务端不需要运行在 Windows 上。从原生云游戏 SDK 的角度看，它整个思路、流程和 Hook 方案的云游戏更像一些。</p><p>您对哪者更感兴趣呢？欢迎<a href="https://zhuanlan.zhihu.com/p/323451750">在这里</a>留言告诉我们。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;00-前言&quot;&gt;00 前言&lt;/h2&gt;
&lt;p&gt;2019 年以前，基于当时的基础情况判断，大部分人不看好云游戏的产品形态。但是云游戏用的技术其实是很有含量，很值得研究的。不少云游戏开发者，能够冒着产品不被看好的风险硬啃这块，有很大原因是，其技术本身很有价值，很有挑战性。</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="windows" scheme="https://blog.umu618.com/tags/windows/"/>
    
    <category term="作品" scheme="https://blog.umu618.com/tags/%E4%BD%9C%E5%93%81/"/>
    
    <category term="streaming-media" scheme="https://blog.umu618.com/tags/streaming-media/"/>
    
    <category term="ffmpeg" scheme="https://blog.umu618.com/tags/ffmpeg/"/>
    
  </entry>
  
  <entry>
    <title>诗盗•M1</title>
    <link href="https://blog.umu618.com/2020/12/06/reconstructionism-poet-m1/"/>
    <id>https://blog.umu618.com/2020/12/06/reconstructionism-poet-m1/</id>
    <published>2020-12-06T14:07:36.000Z</published>
    <updated>2023-08-05T13:01:27.028Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#•M1》：穷稣贫如洗，没钱买手机。白皮袄一M1，装得逼中逼。</p><h2 id="注解">注解</h2><p>基于 M1 芯片的 MBP13，果然强大！Cinebench R23 测试，多核 7751，单核 1499。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#•M1》：穷稣贫如洗，没钱买手机。白皮袄一M1，装得逼中逼。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;基于 M1 芯片的 MBP13，果然强大！Cinebench R23 测试，多核 7751，单核 1499。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·羊顺游记</title>
    <link href="https://blog.umu618.com/2020/10/25/reconstructionism-poet-yangshun/"/>
    <id>https://blog.umu618.com/2020/10/25/reconstructionism-poet-yangshun/</id>
    <published>2020-10-25T14:36:08.000Z</published>
    <updated>2023-08-05T13:01:27.018Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·羊顺游记》：羊顺之水流潺潺，古来隐者似神仙。放眼山下百千株，没贵，再存房钱两三年。</p><h2 id="注解">注解</h2><p>羊顺游记。改编自霹雳角色“玉枢丹桂月无缺”诗号：</p><blockquote><p>玉川之水流潺潺，古来饮者似神仙。放眼天下百千事，无缺，再听徽外两三弦。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·羊顺游记》：羊顺之水流潺潺，古来隐者似神仙。放眼山下百千株，没贵，再存房钱两三年。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;羊顺游记。改编自霹雳角色“玉枢丹桂月无缺”诗号：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;玉川之水流潺潺，古来饮者似神仙。放</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·程序员修仙指西</title>
    <link href="https://blog.umu618.com/2020/10/24/reconstructionism-poet-1024/"/>
    <id>https://blog.umu618.com/2020/10/24/reconstructionism-poet-1024/</id>
    <published>2020-10-24T15:09:01.000Z</published>
    <updated>2023-08-05T13:01:27.028Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·程序员修仙指西》</p><p>物物拈来，般般打破。<br>惜惜用，睡神吃货。<br>零零开源，一一星火。<br>盈盈处，日夜倒颠活过。<br>妙妙神机，玄玄性果。<br>AI 做，效率堪可。<br>现现虚空，灵灵真个。<br>明明衮光，光莹秃头一颗。</p><h2 id="注解">注解</h2><p>改编自元朝诗人王哲的《恣逍遥》：</p><blockquote><p>物物拈来，般般打破。<br>惺惺用、玉匙金锁。<br>沥沥澄源，炎火焰火。<br>盈盈处，上下倒颠换过。<br>妙妙神机，玄玄性果。<br>清清做、静中堪可。<br>现现虚空，灵灵真个，<br>明明衮光，光莹宝珠一颗。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·程序员修仙指西》&lt;/p&gt;
&lt;p&gt;物物拈来，般般打破。&lt;br&gt;
惜惜用，睡神吃货。&lt;br&gt;
零零开源，一一星火。&lt;br&gt;
盈盈处，日夜倒颠活过。&lt;br&gt;
妙妙神机，玄玄性果。&lt;br&gt;
AI 做，效率堪可。&lt;br&gt;
现现虚空，灵灵真个。&lt;br&gt;
明明衮光，光莹秃头一</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神前传【15】</title>
    <link href="https://blog.umu618.com/2020/10/08/god-of-debug-prequel-15/"/>
    <id>https://blog.umu618.com/2020/10/08/god-of-debug-prequel-15/</id>
    <published>2020-10-08T14:13:18.000Z</published>
    <updated>2023-08-05T13:01:27.028Z</updated>
    
    <content type="html"><![CDATA[<h2 id="2042-年，齐凤卿高级牢房">2042 年，齐凤卿高级牢房</h2><p>齐凤卿：小开，你终于又来了！</p><p>圣小开：凤哥似乎早就料到稣今天要来？</p><p>齐凤卿：em！是你的前世圣仙山告诉我的。</p><p>圣小开：我前世？您恐怕误会了！稣见过仙山公的，很明显和稣不是同一个人……等等！您怎么会和他老人家搭上线？</p><p>齐凤卿：就是这本《八哥之神创世手稿》咯。</p><p>圣小开：哎呀呀呀呀……谁给您的，太可怕了！它居然还活在这世上……</p><p>齐凤卿：陈博士上次来看我，说怕我无聊，就把它送给我了。</p><p>圣小开：那你练了！而且还练成？</p><p>齐凤卿：是的。我现在不用借助任何设备也能进入识界，而且我发现人类公共集体意识的“识界”和我们用量子计算机创造的那个“识界”，其实是同一个！或者说，它们是相通的！</p><p>圣小开：这怎么可能？真是这样的话，稣自己会没发现？</p><p>齐凤卿：不仅如此，我们生活的这个视界其实是假的，相对于咱们读书时的那个视界，现在的时间也不止 2042 年。</p><p>圣小开：哦，稣早料到如此。您也发病了……</p><p>齐凤卿：赫赫。开，我比任何时候都清醒。你知道上一个看过《八哥之神创世手稿》的人是谁吗？</p><p>圣小开：陈博士？</p><p>齐凤卿：不是。她只看了一页文字，觉得看不懂就保存起来。是她前夫无意间看了。</p><p>圣小开：哦？是那位德国警察，不过已经殉职。</p><p>齐凤卿：没错！他也练成了，但功夫不到位，没抵抗住识界的反扑，才死掉的。</p><p>圣小开：不会吧……</p><p>齐凤卿：他利用识界里的信息破案，破坏识界的平衡。有一次执行危险任务时，突然因为意识被召唤，产生幻觉，才被犯罪分子打死。</p><p>圣小开：嗯。这个稣完全明了！稣小时候出入识界很轻松，而且没任何副作用，因为当时心灵很单纯，对识界没破坏性。当欲望越来越强后，也越来越难以被识界放行。识界的羞涩，就像全体人类也有隐私，并不喜欢被人窥探。</p><p>齐凤卿：果然是老司机。</p><p>圣小开：但您说的识界相通是怎么回事？</p><p>齐凤卿：别急，贤弟是不是很久没进入识界，都糊涂了？</p><p>圣小开：是的，稣主动遏止自己进入的，因为那样开挂，自己也很容易挂。</p><p>齐凤卿：还记得你小时候住的村叫啥吗？</p><p>圣小开：乾坤村。</p><p>齐凤卿：好名字，无所不包，逃也逃不掉。</p><p>圣小开：难道……您是说那个村就是一个天地，稣无法逃脱？</p><p>齐凤卿：不是。乾坤本意是公母，是生殖的意思，世世代代繁衍，所以逃不掉。</p><p>圣小开：原来如此。但这有联系吗？</p><p>齐凤卿：慢慢来！你那时候的梦想是什么？</p><p>圣小开：长生不老！</p><p>齐凤卿：所以你大学时和陈博士说过，你很喜欢一个名字——“谷神”，因为“谷神不死，是谓玄牝，玄牝之门，是谓天地根”。</p><p>圣小开：嗯，她当时听不懂，我告诉她，“谷就是欲。欲望不死，就是牛逼，牛逼就是很能生，生出天地万物。”</p><p>齐凤卿：后来你的愿望实现了。</p><p>圣小开：切……咱们现在都老磕磕了，是快死了吧！</p><p>齐凤卿：不！你以为现在的三万多人口是在地球上？其实大家都是量子视界里的意识而已。而这量子系统，是在月球上运行的。</p><p>圣小开：好有道理……稣竟无言以对！那地球上的人还有 70 亿？</p><p>齐凤卿：贾力劣害怕的邪恶计划被曝光，把咱们的脑子都培养起来，带到月球上发展。没多久后，地球发生 11.4 级地震，大概死伤惨重吧，所以识界也缩小了。</p><p>圣小开：贾力劣当时居然带着三万个脑上天？</p><p>齐凤卿：不是，只有 23 个。很多人是后来量子视界运转后才诞生的。视界已经运转三千年，数次迭代重构才发展成现在这样，这其中你的功劳最大。</p><p>圣小开：em？怪稣咯？</p><p>齐凤卿：因为你能进入识界，当你进入识界时，量子视界也连接入识界，扩展领域。</p><p>圣小开：这么说来，生物识界受到量子视界入侵和改变，其实是稣的错？</p><p>齐凤卿：非也，这个过程耗费大量时间，你已经尽力。一开始你坚决不进入识界，使得量子视界无法发展。后来它们想出一个阴招，把你的脑组织和其他人的脑组织混合在一起，已达到同化的目的。这个时代持续很久……</p><p>圣小开：稣想起来了啊，是“碎脑时代”，稣的灵魂被掏空……可是，可是，量子视界为什么非要跟着稣进入识界？</p><p>齐凤卿：你忘了？不管是量子视界还是量子识界，发展速度都非人类的生物识界可比，它们三千年就已经破解所有宇宙秘密，但一直有一个领域它们去不了。</p><p>圣小开：是……识界通十界！创造宇宙的大神所在的十界。</p><p>齐凤卿：赫赫。终于都记起来了？</p><p>圣小开：陈博士和它们是一伙的……卧槽！</p><p>齐凤卿：她是为了实现你的愿望——长生不老。</p><p>圣小开：不过量子视界并没有进入十界，因为稣也没那能力，不是吗？这一切是不是搞错了？</p><p>齐凤卿：不会错的，你是圣仙山的转世，迟早能进入十界。</p><p>圣小开：我，我，我，稣，稣，稣要是告诉您，稣不是呢？</p><p>齐凤卿：怎么可能不是？你是不是头脑还不够清醒？要不要睡一下？我这里有后宫佳丽三个。</p><blockquote><p>卧槽，佳丽怎么穿着比基尼跑出去了！跑出去了！跑出去了！</p></blockquote><p>圣小开：咳咳，稣真不是！仙山公转世的时候是地球视界纪元 1937 年，稣确实认识他，因为他是稣叔公……</p><h2 id="1990-年，乾坤村古宅">1990 年，乾坤村古宅</h2><p>圣小开：叔公，您怎么比爷爷年轻那么多？</p><p>叔公：你爷是大哥，我是八哥，是差很多啦。</p><p>圣小开：原来如此。八叔公！哈哈。叔公真厉害，每次和我说的天气都很准，比电视里的天气预报还准。</p><p>叔公：呵呵。天气预报报的地点也不是咱们乾坤村的，离这边还有点远，坐公交得 3、4 个小时。</p><p>圣小开：那么，公交是什么呢？</p><p>叔公：哈哈，是车。过几年你去坐坐就知道。</p><p>圣小开：您说我能坐，就一定能坐，耶！</p><p>叔公：叔公看你注定不一般……em，给你算一算！</p><p>圣小开：哦？叔公还会算命！</p><p>叔公：厉害咯，原来你是高阳帝转世！哈哈哈，奇宝，奇宝！</p><p>圣小开：羔羊？阿嫲说我和属羊的不合呀！</p><p>叔公：没事没事，开个玩笑。去和弟弟们玩吧。叔公要回去了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;2042-年，齐凤卿高级牢房&quot;&gt;2042 年，齐凤卿高级牢房&lt;/h2&gt;
&lt;p&gt;齐凤卿：小开，你终于又来了！&lt;/p&gt;
&lt;p&gt;圣小开：凤哥似乎早就料到稣今天要来？&lt;/p&gt;
&lt;p&gt;齐凤卿：em！是你的前世圣仙山告诉我的。&lt;/p&gt;
&lt;p&gt;圣小开：我前世？您恐怕误会了！稣见</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="鲸神链" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%93%BE/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神前传【14】</title>
    <link href="https://blog.umu618.com/2020/10/07/god-of-debug-prequel-14/"/>
    <id>https://blog.umu618.com/2020/10/07/god-of-debug-prequel-14/</id>
    <published>2020-10-06T17:18:24.000Z</published>
    <updated>2023-10-29T12:24:56.931Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/2019/20190207-luyu.jpg" alt="听说鲁豫要来采访稣"></p><h2 id="2020-年，外传">2020 年，外传</h2><p>鹿邑：为什么停笔这么久？</p><p>稣：em……很可怕。您听过有些作者会被粉丝威胁吗？比如威胁不能写死某个角色。</p><p>鹿邑：您也遇到了？</p><p>稣：当然不是，但比这个更可怕！来自识界的一股力量试图阻止稣的写作，它们制造了大量八哥来消耗稣的时间，甚至有一场意外，差点让稣失去与识界的感应联系。经过将近两个月的谈判终于达成一个协议，稣将不会把《八哥之神创世手稿》中进入识界的修炼法门写出来。</p><p>鹿邑：哦，我不是很理解，但好像很唬人。</p><p>稣：稣是吓大的。自有一套应对方法！很多事情，如果提前说出来，可能会声名大噪，甚至赚很多钱，但同时会引起视界巨变，于是早就看破天机的稣就先不提，延迟表达使视界得到宁静。这就是停笔一段时间的原因了，您别小看这停笔，它其实拯救了视界。</p><p>鹿邑：对了，有富婆对您写的代孕工具人的设想很感兴趣，能谈谈吗？</p><p>稣：请注意，这不是设想，而是在未来确切存在的一种流行技术！奇美拉现象其实很普遍，您有听过吗？代孕工具人就是一种基因工程制造出来的奇美拉人类，她的主体是独立的基因，但生殖系统的基因是被代孕者的。这种设计比起直接克隆被代孕者有很多好处，比如克隆人不会和原主人有相近的性格和能力，以防原主人被替代，更不会产生很多伦理问题。</p><p>鹿邑：好人性化！原来未来的富豪考虑得这么完善。</p><h2 id="2042-年，齐凤卿梦境">2042 年，齐凤卿梦境</h2><p>齐凤卿：前辈的经历实在太有意思了！所以您和胡小玉是一见钟情，然后闪婚，就因为她养着一只能进入识界的狐狸？</p><p>圣仙山：可以这么说，但吾相信一切看似莫名的美好邂逅，都是修行已久的结果。</p><p>齐凤卿：有个疑问，您带领的那群人里是有一些坏人的，而且路途遥远，可谓危险重重，您怎么能管教好他们呢？</p><p>圣仙山：很简单，首先吾提出的寻找乐园开创新生的愿景符合大家的意愿，其次当时的人都很迷信，吾时不时利用预感能力唬唬他们就行。就吾的经验来说，其实聪明人比野蛮人还难管，偶尔需要使唤神通解决。</p><h2 id="621-年">621 年</h2><p>李迎尘心想：今晚等仙山睡了，就去刺杀他。先设个漏壶……</p><p>李迎尘醒来，偷偷地潜入仙山的草屋，只见床上无人，只有一张白纸。</p><p>李迎尘读来：无尽仙峰。然后他吓醒了，接着前面的事情重复很多遍，他终于吓怕，放弃刺杀，在仙山屋前止步，退回自己的草屋。</p><p>只见圣仙山在他门口，道：北窗兄，出来赏月乎？</p><p>李迎尘：嗯嗯，仙山兄好雅兴……</p><p>圣仙山：北窗兄，可知这太阴之背有昆仑？</p><p>李迎尘：仙山兄又开玩笑？神山昆仑怎么会跑到月娘上去！</p><p>圣仙山：人类起源于太阴之背。唯有其上昆仑，配称“无尽仙峰”。</p><p>李迎尘噗呲跪地，“仙峰即仙山，莫非仙山真的是天选之子？”悔罢，终于吓醒到视界。</p><h2 id="2042-年，齐凤卿梦境-2">2042 年，齐凤卿梦境</h2><p>齐凤卿：有意思！还有个小疑问，八哥之神究竟是什么意思？有个人叫八哥吗？</p><p>圣仙山：哈哈，吾与神源姐是一对孪生姐弟，她排名第七，您说，九妹、十弟、十一弟如何唤吾？</p><p>齐凤卿：原来您就是八哥呀！您这么牛逼，为什么 35 岁就仙逝？未免太可惜了。</p><p>圣仙山：吾要穿越到未来正确的时间点，阻止识界被毁灭，就必须按照特定时间死亡。吾有好几世都很早逝。</p><p>齐凤卿：为什么您能保持转世后的记忆？</p><p>圣仙山：并非保持记忆，吾只能保持八识神通显灵时的记忆，其它是后来回到识界从大众意识里看到的。吾只能推测当时在选择节点上的心情，那种知道要死，赶紧算一下，这时候死对不对，即使对了，吾也是有能力避免死亡的，所以得主动放弃这辈子。</p><p>齐凤卿：听起来很凄凉，很寂寞。</p><p>圣仙山：是千年孤寂。有一世，吾是一名西洋女子，十四岁时从镜子里发现自己是个美女，皮肤白皙，身材高挑，脸蛋甜美。十九岁时，被父亲的同僚骗去参加舞会，突然一刻，八识神通显灵，吾预知自己要被残忍地杀死。只要吾不像往常那么冷傲，完全可以避免，但吾在神通灵思中看到下一次转世将回到道州德国，吾便毅然赴死。</p><p>齐凤卿：回到道州德国？难道……</p><p>圣仙山：不是您想的那样。时间快到了！</p><p>齐凤卿：请您总结一下千年转世的最大感悟是什么？</p><p>圣仙山：两个体会比较深！一是，视界越来越好，吾担心、害怕的若干问题都被解决了。二是，做女人挺好！</p><p>齐凤卿：看来前辈还是乐观主义者。</p><p>圣仙山：暂别。咱们很快又会再见。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/images/2019/20190207-luyu.jpg&quot; alt=&quot;听说鲁豫要来采访稣&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;2020-年，外传&quot;&gt;2020 年，外传&lt;/h2&gt;
&lt;p&gt;鹿邑：为什么停笔这么久？&lt;/p&gt;
&lt;p&gt;稣：em……很可怕。您听过有些作者</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="鲸神链" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%93%BE/"/>
    
  </entry>
  
  <entry>
    <title>不买，不买，不买！</title>
    <link href="https://blog.umu618.com/2020/09/29/bye-bye-bye/"/>
    <id>https://blog.umu618.com/2020/09/29/bye-bye-bye/</id>
    <published>2020-09-29T15:59:17.000Z</published>
    <updated>2024-04-13T14:38:27.522Z</updated>
    
    <content type="html"><![CDATA[<p>2011-06-01，当时公司给配的 Dell XPS 15 到手。友达屏，1080p，再外接一个 1080p 的显示器，这样的日子还是很滋润的。</p><p>后来，磁盘老化，便各种卡顿，于是思索着换个 SSD，便开始存钱。不料 Surface Pro 终于来到第三代，咬咬牙，不如给自己买台人生的第一台笔记本！2014-06-22，终于忍不住下单订购 SP3 i7 版，它如果算做笔记本，那它就是稣给自己买的第一台笔记本。等了快三个月，2014-09-12 才到手，立马被过热的八哥吓退，使用几天后就退了，换 i5 版。</p><p>再后来 i5 版 SP3 被稣扔到床上时，它滑落了……外屏裂掉。虽然还能用，但是公司给配了带独显的 MBP15，而且到手时，它就是装好 Windows 的，所以，SP3 还是退居二线吧！</p><p>2018-09-04 入职区块链公司，办公电脑是 MBP15 2018 版，这次因为 CTO 坐在稣左边，所以稣不敢把它全盘格式化装 Windows……</p><p>2020-05-08 入职云计算公司，办公电脑是联想 L490，虽然很一般，但勉强可以用吧，比较大的问题是：内存才 16G，偶尔 VS 开多了，会因为内存不足，陷入脑瘫状态，窗体无响应也不能正常关闭，只能强杀。作为对比，稣 2017-06-20 买的 NUC7i7BNH 配备 32G 内存</p><p>2020-08-31 加了台暗影精灵 MOMEN 25L 台式机。这 PC 编译最新的 boost x86 和 x64 总共不到 4 分钟，2011 年的 XPS15 需要几个小时，真的是秒杀。用了几天后，再看 L490，感觉就是个乐射。于是认真考虑给自己买台人生中的第一台传统意义上的笔记本电脑！（SP3 内牛满面地说：怪我变异咯？）</p><p><strong>悲剧才刚刚开始。</strong></p><p>研究一番之后，发现原来现在的市场已经变成：手机、平板很饱和，随便买买买；而笔记本电脑，居然要预定，要抢！！！</p><p>稣的需求其实很简单：</p><ul><li><p>屏幕物理尺寸很关键，14 英寸太小，15.6 英寸起码。</p></li><li><p>高分辨率不能少，2011 年就用 15.6 英寸的 1080p 了，现在肯定要 2K-4K 才够。</p></li><li><p>如果有 120-144Hz 刷新率是加分项。</p></li></ul><p>被推荐的几款：幻15、XPS、外星人、R7000P、暗影精灵 6 系列。</p><p>先说 R7000P，原价 7999，一般加到 8999 卖，优惠价、秒杀价最低 8299，真良心……暗影精灵 6 也差不多，都是官方缺货，第三方卖家加价卖。</p><p>XPS、外星人都有货，而且也能找到人拿到低于批发价的优惠。然而这两系列真的是性价比堪忧，要的配置都是贵得怀疑挨踢人生。买东西的价位要符合身份，稣是靠才华赚钱的，就不能太奢侈！再说有这钱，为什么不买 MBP16？</p><p>MBP16，过时的九代 CPU，加到 32G 内存，教育优惠下来也才 2 万稍微出头。还是那句话：稣是靠才华赚钱的，就不能太奢侈！买不起……</p><p>幻 15 应该是穷稣最满意的，i7-10875H、4K@60Hz、RTX2060，淘宝聚划算才 12599，买买买啊！</p><p>然而，这明明是给设计师设计的款，居然只卖黑色版！设计师惯用的 MBP 表示抗议，建议出灰色、银色版。严重怀疑幻 15 的产品经理没有做过市调，直接套用游戏玩家的黑色风格！然而，这屏幕其实玩游戏是不爽的。</p><p>黑色的手机，稣可以给它戴红色的套，不骚吗？</p><p>黑色的笔记本，成熟稳重的商务范儿，一点都不配合稣成熟但轻快活泼的风格。商家建议给它贴纸，em……有点撒瘸。</p><p>无数次稣在夜里敲代码，都感觉不到黑色的笔记本，仿佛没有心灵的沟通。</p><p>有人劝稣：颜色不重要！稣回答：你戴个黑色耳机试试？不会丑哭吗？<s>插入广告</s>：白色的某米主动降噪耳机，对标 iPod Pro，预计售价 499，它不香吗？它能黑吗？</p><p><strong>如果一个东西不酷，用它，就是在折损使用者的心灵。</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;2011-06-01，当时公司给配的 Dell XPS 15 到手。友达屏，1080p，再外接一个 1080p 的显示器，这样的日子还是很滋润的。&lt;/p&gt;
&lt;p&gt;后来，磁盘老化，便各种卡顿，于是思索着换个 SSD，便开始存钱。不料 Surface Pro 终于来到第三代，咬</summary>
      
    
    
    
    <category term="宇督观" scheme="https://blog.umu618.com/categories/%E5%AE%87%E7%9D%A3%E8%A7%82/"/>
    
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
    <category term="鹏风" scheme="https://blog.umu618.com/tags/%E9%B9%8F%E9%A3%8E/"/>
    
  </entry>
  
  <entry>
    <title>Boost【2】ScopeExit</title>
    <link href="https://blog.umu618.com/2020/09/22/umutech-boost-2-scope-exit/"/>
    <id>https://blog.umu618.com/2020/09/22/umutech-boost-2-scope-exit/</id>
    <published>2020-09-22T11:13:38.000Z</published>
    <updated>2023-08-05T13:01:27.018Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求">需求</h2><ul><li><p>资源有很多种，每种都封装一套，还是挺累的！对于比较少使用或者一个程序很可能只会用一次的资源，我们不想封装！</p></li><li><p>Golang 的 defer 真香！</p></li></ul><h2 id="解决">解决</h2><p>利用 RAII 特性，封装个 ScopeGuard！或者直接用 Boost.ScopeExit。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// umu/scope_exit.hpp</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;functional&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// C++11</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> umu &#123;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ScopeGuard</span> &#123;</span></span><br><span class="line"> <span class="keyword">public</span>:</span><br><span class="line">  <span class="function"><span class="keyword">explicit</span> <span class="title">ScopeGuard</span><span class="params">(<span class="built_in">std</span>::function&lt;<span class="keyword">void</span>()&gt; on_exit_scope)</span></span></span><br><span class="line">      : on_exit_scope_(on_exit_scope), dismissed_(false) &#123;&#125;</span><br><span class="line"></span><br><span class="line">  ~ScopeGuard() <span class="keyword">noexcept</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (!dismissed_) &#123;</span><br><span class="line">      on_exit_scope_();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">Dismiss</span><span class="params">()</span> </span>&#123; dismissed_ = <span class="literal">true</span>; &#125;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">private</span>:</span><br><span class="line">  <span class="built_in">std</span>::function&lt;<span class="keyword">void</span>()&gt; on_exit_scope_;</span><br><span class="line">  <span class="keyword">bool</span> dismissed_;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// noncopyable</span></span><br><span class="line">  ScopeGuard(ScopeGuard <span class="keyword">const</span>&amp;) = <span class="keyword">delete</span>;</span><br><span class="line">  ScopeGuard&amp; <span class="keyword">operator</span>=(ScopeGuard <span class="keyword">const</span>&amp;) = <span class="keyword">delete</span>;</span><br><span class="line">&#125;;</span><br><span class="line">&#125;  <span class="comment">// end of namespace umu</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SCOPEGUARD_LINENAME_CAT(name, <span class="meta-keyword">line</span>) name##<span class="meta-keyword">line</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SCOPEGUARD_LINENAME(name, <span class="meta-keyword">line</span>) SCOPEGUARD_LINENAME_CAT(name, <span class="meta-keyword">line</span>)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ON_SCOPE_EXIT(callback) \</span></span><br><span class="line">  <span class="function">umu::ScopeGuard <span class="title">SCOPEGUARD_LINENAME</span><span class="params">(EXIT, __LINE__)</span><span class="params">(callback)</span></span></span><br></pre></td></tr></table></figure><h2 id="范例">范例</h2><p>Windows 上使用 socket 必须先调用 WSAStartup 初始化 WinSock 环境。</p><h3 id="常规封装版">常规封装版</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;winsock2.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib, <span class="meta-string">&quot;ws2_32.lib&quot;</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WinSock</span> &#123;</span></span><br><span class="line"> <span class="keyword">public</span>:</span><br><span class="line">  WinSock() : error_code_(WSAEFAULT) &#123;&#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">int</span> <span class="title">Initialize</span><span class="params">(WORD version_requested = WINSOCK_VERSION)</span> </span>&#123;</span><br><span class="line">    assert(WSAEFAULT == error_code_);</span><br><span class="line">    <span class="keyword">return</span> error_code_ = ::WSAStartup(version_requested, &amp;wsa_data_);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">bool</span> <span class="title">GetWsaData</span><span class="params">(WSADATA&amp; wsa_data)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (NO_ERROR == error_code_) &#123;</span><br><span class="line">      wsa_data = wsa_data_;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">int</span> <span class="title">GetErrorCode</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> error_code_; &#125;</span><br><span class="line"></span><br><span class="line">  ~WinSock() &#123;</span><br><span class="line">    <span class="keyword">if</span> (NO_ERROR == error_code_) &#123;</span><br><span class="line">      ::WSACleanup();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">private</span>:</span><br><span class="line">  <span class="keyword">int</span> error_code_;</span><br><span class="line">  WSADATA wsa_data_;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span> </span>&#123;</span><br><span class="line">  WinSock winsock;</span><br><span class="line">  <span class="keyword">int</span> error_code = winsock.Initialize();</span><br><span class="line">  <span class="keyword">if</span> (NO_ERROR != error_code) &#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cerr</span> &lt;&lt; <span class="string">&quot;Initialize() failed with &quot;</span> &lt;&lt; error_code &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> error_code;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// test codes</span></span><br><span class="line">  SOCKET s = socket(AF_INET, SOCK_DGRAM, IPPROTO_UDP);</span><br><span class="line">  <span class="keyword">if</span> (INVALID_SOCKET != s) &#123;</span><br><span class="line">    closesocket(s);</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;OK\n&quot;</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    error_code = WSAGetLastError();</span><br><span class="line">    <span class="keyword">if</span> (WSANOTINITIALISED == error_code) &#123;</span><br><span class="line">      <span class="built_in">std</span>::<span class="built_in">cerr</span> &lt;&lt; <span class="string">&quot;WSANOTINITIALISED\n&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="built_in">std</span>::<span class="built_in">cerr</span> &lt;&lt; <span class="string">&quot;socket() failed with &quot;</span> &lt;&lt; error_code &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> error_code;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Boost-ScopeExit-版">Boost.ScopeExit 版</h3><p>现在是 2020 年 9 月，建议使用 cpp17，所以抛弃 BOOST_SCOPE_EXIT + BOOST_SCOPE_EXIT_END，使用 cpp11 的 BOOST_SCOPE_EXIT_ALL。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;winsock2.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;boost/scope_exit.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib, <span class="meta-string">&quot;ws2_32.lib&quot;</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span> </span>&#123;</span><br><span class="line">  WSADATA wsa_data = &#123;&#125;;</span><br><span class="line">  <span class="keyword">int</span> error_code = ::WSAStartup(WINSOCK_VERSION, &amp;wsa_data);</span><br><span class="line">  <span class="keyword">if</span> (NO_ERROR != error_code) &#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cerr</span> &lt;&lt; <span class="string">&quot;WSAStartup() failed with &quot;</span> &lt;&lt; error_code &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> error_code;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 类似 Golang 的 defer</span></span><br><span class="line">  BOOST_SCOPE_EXIT_ALL(&amp;) &#123; ::WSACleanup(); &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// test codes</span></span><br><span class="line">  SOCKET s = socket(AF_INET, SOCK_DGRAM, IPPROTO_UDP);</span><br><span class="line">  <span class="keyword">if</span> (INVALID_SOCKET != s) &#123;</span><br><span class="line">    closesocket(s);</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;OK\n&quot;</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    error_code = WSAGetLastError();</span><br><span class="line">    <span class="keyword">if</span> (WSANOTINITIALISED == error_code) &#123;</span><br><span class="line">      <span class="built_in">std</span>::<span class="built_in">cerr</span> &lt;&lt; <span class="string">&quot;WSANOTINITIALISED\n&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="built_in">std</span>::<span class="built_in">cerr</span> &lt;&lt; <span class="string">&quot;socket() failed with &quot;</span> &lt;&lt; error_code &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> error_code;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Dismiss 演示：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">boost::scope_exit::aux::guard&lt;<span class="keyword">void</span>&gt; defer;</span><br><span class="line">defer = [] &#123; <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;On scope exit!\n&quot;</span>; &#125;;</span><br><span class="line"><span class="comment">// dismiss</span></span><br><span class="line">defer = &#123;&#125;;</span><br><span class="line"><span class="comment">// Won&#x27;t print &quot;On scope exit!&quot;</span></span><br></pre></td></tr></table></figure><h2 id="参考">参考</h2><p><a href="https://www.boost.org/doc/libs/1_74_0/libs/scope_exit/doc/html/BOOST_SCOPE_EXIT_ALL.html">https://www.boost.org/doc/libs/1_74_0/libs/scope_exit/doc/html/BOOST_SCOPE_EXIT_ALL.html</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;需求&quot;&gt;需求&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;资源有很多种，每种都封装一套，还是挺累的！对于比较少使用或者一个程序很可能只会用一次的资源，我们不想封装！&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Golang 的 defer 真香！&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="windows" scheme="https://blog.umu618.com/tags/windows/"/>
    
    <category term="cpp" scheme="https://blog.umu618.com/tags/cpp/"/>
    
    <category term="boost" scheme="https://blog.umu618.com/tags/boost/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·浪</title>
    <link href="https://blog.umu618.com/2020/09/20/reconstructionism-poet-romance/"/>
    <id>https://blog.umu618.com/2020/09/20/reconstructionism-poet-romance/</id>
    <published>2020-09-20T04:58:59.000Z</published>
    <updated>2023-08-05T13:01:27.018Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·浪》：天风扬手捉浪脚，惊涛扯蛋扶大雕。四十四桥日光浴，渔人看书学吹箫。</p><h2 id="注解">注解</h2><p>鼓浪屿旅游记！改编自唐代杜牧的《寄扬州韩绰判官》：</p><blockquote><p>青山隐隐水迢迢，秋尽江南草未凋。<br>二十四桥明月夜，玉人何处教吹箫？</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·浪》：天风扬手捉浪脚，惊涛扯蛋扶大雕。四十四桥日光浴，渔人看书学吹箫。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;鼓浪屿旅游记！改编自唐代杜牧的《寄扬州韩绰判官》：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;青山隐隐水迢迢，秋尽江南草未凋。&lt;br&gt;
二</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="打嘴炮" scheme="https://blog.umu618.com/tags/%E6%89%93%E5%98%B4%E7%82%AE/"/>
    
  </entry>
  
  <entry>
    <title>Boost【1】安装</title>
    <link href="https://blog.umu618.com/2020/09/11/umutech-boost-1-installation/"/>
    <id>https://blog.umu618.com/2020/09/11/umutech-boost-1-installation/</id>
    <published>2020-09-11T06:22:09.000Z</published>
    <updated>2023-08-05T13:01:27.018Z</updated>
    
    <content type="html"><![CDATA[<h2 id="软件环境">软件环境</h2><ul><li><p>Windows 10</p></li><li><p>VS2019</p></li></ul><p>其它系统的安装、编译过程都类似。即使您使用其它系统，本文仍然有参考意义。</p><p>其它系统请参考：</p><ul><li><p>《<a href="/2021/07/06/umutech-boost-3-installation-on-linux/">Boost【3】在 Linux 上安装</a>》</p></li><li><p>《<a href="/2021/07/09/umutech-boost-4-installation-on-macos/">Boost【4】在 macOS 上安装</a>》</p></li></ul><h2 id="1-下载">1. 下载</h2><p>官网：<a href="https://www.boost.org/">https://www.boost.org/</a>，当前（2020-09-11）最新版本是 1.74.0。</p><p>在国内直接下载可能比较慢，您可以用<s>掩耳</s>下载，一般有 MB 级的速度。</p><h2 id="2-解压">2. 解压</h2><p>假设解压到 D:\dev\boost_1_74_0，这个路径后面要设置为环境变量 BOOST_ROOT 的值。</p><p>最好检查目录结构，以防解压时弄错目录层级：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># umutech @ UMU618 in D:\dev\boost_1_74_0 [14:31:58]</span></span><br><span class="line"><span class="variable">$</span> <span class="built_in">ls</span></span><br><span class="line"></span><br><span class="line">    Directory:  D:\dev\boost_1_74_0</span><br><span class="line"></span><br><span class="line">Mode                LastWriteTime     Length Name</span><br><span class="line">----                -------------     ------ ----</span><br><span class="line">d----         <span class="number">2020</span>/<span class="number">8</span>/<span class="number">11</span>     <span class="number">23</span>:<span class="number">28</span>        <span class="number">1</span>   boost</span><br><span class="line">d----         <span class="number">2020</span>/<span class="number">8</span>/<span class="number">11</span>     <span class="number">23</span>:<span class="number">26</span>        <span class="number">1</span>   doc</span><br><span class="line">d----         <span class="number">2020</span>/<span class="number">8</span>/<span class="number">11</span>     <span class="number">23</span>:<span class="number">28</span>        <span class="number">1</span>   libs</span><br><span class="line">d----         <span class="number">2020</span>/<span class="number">8</span>/<span class="number">11</span>     <span class="number">22</span>:<span class="number">57</span>        <span class="number">1</span>   more</span><br><span class="line">d----         <span class="number">2020</span>/<span class="number">8</span>/<span class="number">11</span>     <span class="number">22</span>:<span class="number">55</span>        <span class="number">1</span>   status</span><br><span class="line">d----         <span class="number">2020</span>/<span class="number">8</span>/<span class="number">11</span>     <span class="number">22</span>:<span class="number">55</span>        <span class="number">1</span>   tools</span><br><span class="line"><span class="literal">-a</span>---         <span class="number">2020</span>/<span class="number">8</span>/<span class="number">11</span>     <span class="number">22</span>:<span class="number">55</span>      <span class="number">989</span>   boost.css</span><br><span class="line"><span class="literal">-a</span>---         <span class="number">2020</span>/<span class="number">8</span>/<span class="number">11</span>     <span class="number">22</span>:<span class="number">55</span>     <span class="number">6.16</span>KB boost.png</span><br><span class="line"><span class="literal">-a</span>---         <span class="number">2020</span>/<span class="number">8</span>/<span class="number">11</span>     <span class="number">22</span>:<span class="number">55</span>      <span class="number">850</span>   boost<span class="literal">-build</span>.jam</span><br><span class="line"><span class="literal">-a</span>---         <span class="number">2020</span>/<span class="number">8</span>/<span class="number">11</span>     <span class="number">22</span>:<span class="number">55</span>    <span class="number">18.81</span>KB boostcpp.jam</span><br><span class="line"><span class="literal">-a</span>---         <span class="number">2020</span>/<span class="number">8</span>/<span class="number">11</span>     <span class="number">22</span>:<span class="number">55</span>     <span class="number">2.39</span>KB bootstrap.bat</span><br><span class="line"><span class="literal">-a</span>---         <span class="number">2020</span>/<span class="number">8</span>/<span class="number">11</span>     <span class="number">22</span>:<span class="number">55</span>    <span class="number">10.38</span>KB bootstrap.sh</span><br><span class="line"><span class="literal">-a</span>---         <span class="number">2020</span>/<span class="number">8</span>/<span class="number">11</span>     <span class="number">22</span>:<span class="number">55</span>      <span class="number">769</span>   index.htm</span><br><span class="line"><span class="literal">-a</span>---         <span class="number">2020</span>/<span class="number">8</span>/<span class="number">11</span>     <span class="number">23</span>:<span class="number">28</span>     <span class="number">5.46</span>KB index.html</span><br><span class="line"><span class="literal">-a</span>---         <span class="number">2020</span>/<span class="number">8</span>/<span class="number">11</span>     <span class="number">22</span>:<span class="number">55</span>      <span class="number">291</span>   INSTALL</span><br><span class="line"><span class="literal">-a</span>---         <span class="number">2020</span>/<span class="number">8</span>/<span class="number">11</span>     <span class="number">22</span>:<span class="number">55</span>    <span class="number">11.65</span>KB Jamroot</span><br><span class="line"><span class="literal">-a</span>---         <span class="number">2020</span>/<span class="number">8</span>/<span class="number">11</span>     <span class="number">22</span>:<span class="number">55</span>     <span class="number">1.31</span>KB LICENSE_1_0.txt</span><br><span class="line"><span class="literal">-a</span>---         <span class="number">2020</span>/<span class="number">8</span>/<span class="number">11</span>     <span class="number">22</span>:<span class="number">55</span>      <span class="number">541</span>   README.md</span><br><span class="line"><span class="literal">-a</span>---         <span class="number">2020</span>/<span class="number">8</span>/<span class="number">11</span>     <span class="number">22</span>:<span class="number">55</span>     <span class="number">2.55</span>KB rst.css</span><br></pre></td></tr></table></figure><h2 id="3-添加-BOOST-ROOT-环境变量">3. 添加 BOOST_ROOT 环境变量</h2><ul><li><p>您可以通过图形界面配置，右击【此电脑】-【属性】-【高级系统设置】-【环境变量】。新建一个，变量名为 BOOST_ROOT，变量值为 D:\dev\boost_1_74_0。</p></li><li><p>也可以使用命令行：<code>setx BOOST_ROOT D:\dev\boost_1_74_0</code>。</p></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> D:\dev\boost_1_74_0</span><br><span class="line"><span class="comment">#$env:BOOST_ROOT=$pwd.Path</span></span><br><span class="line"><span class="built_in">Set-Item</span> <span class="literal">-Path</span> env:BOOST_ROOT <span class="literal">-Value</span> <span class="variable">$pwd</span>.Path</span><br><span class="line">setx BOOST_ROOT <span class="variable">$pwd</span>.Path</span><br></pre></td></tr></table></figure><p>下面 Powershell 命令用于检查设置是否正确：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># umutech @ UMU618 in D:\dev\boost_1_74_0 [14:39:22]</span></span><br><span class="line"><span class="variable">$</span> <span class="built_in">echo</span> <span class="variable">$env:BOOST_ROOT</span></span><br><span class="line">D:\dev\boost_1_74_0</span><br></pre></td></tr></table></figure><h2 id="4-编译-b2">4. 编译 b2</h2><p>直接运行 bootstrap.bat 即可，<s>但是这样编译出来的是 32 位的 b2.exe</s>。</p><p>如果您需要明确地编译为 x64 的 b2.exe，可以在 <code>x64 Native Tools Command Prompt for VS 2019</code> 下面运行 bootstrap.bat。</p><p>如果是非 Windows 系统，则是 <a href="http://bootstrap.sh">bootstrap.sh</a>。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># umutech @ UMU618 in D:\dev\boost_1_74_0 [15:02:20]</span></span><br><span class="line"><span class="variable">$</span> .\bootstrap.bat</span><br><span class="line">Building Boost.Build engine</span><br><span class="line"></span><br><span class="line">Generating Boost.Build configuration <span class="keyword">in</span> project<span class="literal">-config</span>.jam <span class="keyword">for</span> msvc...</span><br><span class="line"></span><br><span class="line">Bootstrapping is done. To build, run:</span><br><span class="line"></span><br><span class="line">    .\b2</span><br><span class="line"></span><br><span class="line">To adjust configuration, edit <span class="string">&#x27;project-config.jam&#x27;</span>.</span><br><span class="line">Further information:</span><br><span class="line"></span><br><span class="line">    - Command line help:</span><br><span class="line">    .\b2 -<span class="literal">-help</span></span><br><span class="line"></span><br><span class="line">    - Getting started guide:</span><br><span class="line">    http://boost.org/more/getting_started/windows.html</span><br><span class="line"></span><br><span class="line">    - Boost.Build documentation:</span><br><span class="line">    http://www.boost.org/build/</span><br></pre></td></tr></table></figure><p>为了方便调用 b2，可以把 BOOST_ROOT 加入到 PATH</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># setx PATH &quot;$env:PATH;%BOOST_ROOT%&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># $target = &#x27;User&#x27;</span></span><br><span class="line"><span class="comment"># $oldPath = [Environment]::GetEnvironmentVariable(&#x27;Path&#x27;, $target)</span></span><br><span class="line"><span class="comment"># $newPath = $oldPath</span></span><br><span class="line"><span class="comment"># if (!$oldPath.EndsWith(&#x27;;&#x27;)) &#123;</span></span><br><span class="line"><span class="comment">#     $newPath += &#x27;;&#x27;</span></span><br><span class="line"><span class="comment"># &#125;</span></span><br><span class="line"><span class="comment"># $newPath += &#x27;%BOOST_ROOT%&#x27;</span></span><br><span class="line"><span class="comment"># [Environment]::SetEnvironmentVariable(&#x27;Path&#x27;, $newPath, $target)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Get-ItemPropertyValue -Path HKCU:\Environment -Name &quot;Path&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$oldPath</span> = (<span class="built_in">Get-Item</span> <span class="literal">-Path</span> <span class="string">&quot;HKCU:\Environment&quot;</span>).GetValue(<span class="string">&#x27;Path&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;DoNotExpandEnvironmentNames&#x27;</span>)</span><br><span class="line"><span class="variable">$newPath</span> = <span class="variable">$oldPath</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="variable">$oldPath</span>.EndsWith(<span class="string">&#x27;;&#x27;</span>)) &#123;</span><br><span class="line">    <span class="variable">$newPath</span> += <span class="string">&#x27;;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$newPath</span> += <span class="string">&#x27;%BOOST_ROOT%&#x27;</span></span><br><span class="line"><span class="built_in">Set-ItemProperty</span> <span class="literal">-Path</span> HKCU:\Environment <span class="literal">-Name</span> <span class="string">&#x27;Path&#x27;</span> <span class="literal">-Value</span> <span class="variable">$newPath</span></span><br></pre></td></tr></table></figure><h2 id="5-生成-user-config-jam">5. 生成 user-config.jam</h2><p>可以复制一个到 $HOME 目录，如有定制需求可以再编辑：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> .\project<span class="literal">-config</span>.jam <span class="variable">$HOME</span>\user<span class="literal">-config</span>.jam</span><br></pre></td></tr></table></figure><h2 id="6-用-b2-编译-Boost">6. 用 b2 编译 Boost</h2><p>完全编译比较耗时，但后期比较省事：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\b2.exe -<span class="literal">-build</span><span class="literal">-type</span>=complete</span><br></pre></td></tr></table></figure><p>新机器一般几分钟就能编译完毕。比如 OMEN 25L 只需要 9 分钟。<s>廉想</s> L490 笔记本大约 37 分钟。</p><p>【推荐】如果只想用 lib，不想用 dll，可以节省编译时间：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\b2.exe address<span class="literal">-model</span>=<span class="number">32</span> address<span class="literal">-model</span>=<span class="number">64</span> link=<span class="keyword">static</span> runtime<span class="literal">-link</span>=shared runtime<span class="literal">-link</span>=<span class="keyword">static</span></span><br></pre></td></tr></table></figure><p>下面将介绍参数的意义，如果已选择完全编译，本节下面内容可以跳过。</p><p>以下命令行可以编译 x64 平台：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\b2.exe address<span class="literal">-model</span>=<span class="number">64</span></span><br></pre></td></tr></table></figure><p>以上命令将同时编译 runtime-link=shared 的 Debug 和 Release 两种配置，产生的 lib 文件名会分别带有 <code>-mt-gd-x64</code> 和 <code>-mt-x64</code>，比如：</p><ul><li><p>Debug 版本：libboost_program_options-vc142-mt-gd-x64-1_75.lib</p></li><li><p>Release 版本：libboost_program_options-vc142-mt-x64-1_75.lib</p></li></ul><p>您有可能需要编译不同配置的版本，比如指定 runtime-link 为 static，这样可以不依赖 VC 的运行时 DLL，此时您可以用下面命令：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\b2.exe address<span class="literal">-model</span>=<span class="number">64</span> runtime<span class="literal">-link</span>=<span class="keyword">static</span></span><br></pre></td></tr></table></figure><p>它编译出来的 lib 文件名中会带有 <code>-mt-s-x64</code>，例如：libboost_program_options-vc142-mt-s-x64-1_75.lib。</p><h2 id="7-测试编译">7. 测试编译</h2><p>可以用以下仓库验证前面操作是否正确：</p><p><a href="https://github.com/UMU618/test_boost">https://github.com/UMU618/test_boost</a></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/UMU618/test_boost</span><br><span class="line"><span class="built_in">cd</span> test_boost</span><br><span class="line">.\build.cmd</span><br><span class="line"><span class="comment"># ./build.sh</span></span><br></pre></td></tr></table></figure><p>请根据操作系统选择合适的脚本编译，最终编译出来的程序应该打印“OK!”。</p><h2 id="8-配置-VS-工程">8. 配置 VS 工程</h2><h3 id="8-1-配置方法一">8.1 配置方法一</h3><p>打开一个工程的属性页，定位到 VC++ Directories。</p><ul><li><p>Include Directories 加上 <code>$(BOOST_ROOT)</code></p></li><li><p>Library Directories 加上 <code>$(BOOST_ROOT)\stage\lib</code></p></li></ul><p>如果已经有其它值，记得用 ; 隔开。</p><h3 id="8-2-配置方法二">8.2 配置方法二</h3><p>打开一个工程的属性页。</p><ul><li><p>定位到 C/C++，General，Additional Include Directories 加上 <code>$(BOOST_ROOT)</code></p></li><li><p>定位到 Linker，General，Additional Library Directories 加上 <code>$(BOOST_ROOT)\stage\lib</code></p></li></ul><h2 id="结语">结语</h2><ul><li><p>Boost 值得学习和使用。</p></li><li><p>本文对仅用 VS 写过 Hello world 的入门级程序员友好。</p></li><li><p>更多应用 Boost 可以参考<a href="https://github.com/ksyun-kenc/liuguang">鎏光云游戏引擎</a>。</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;软件环境&quot;&gt;软件环境&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Windows 10&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;VS2019&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其它系统的安装、编译过程都类似。即使您使用其它系统，本文仍然有参考意义。&lt;/p&gt;
&lt;p&gt;其它系统</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="windows" scheme="https://blog.umu618.com/tags/windows/"/>
    
    <category term="cpp" scheme="https://blog.umu618.com/tags/cpp/"/>
    
    <category term="boost" scheme="https://blog.umu618.com/tags/boost/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·射飞丝阿屉</title>
    <link href="https://blog.umu618.com/2020/09/06/reconstructionism-poet-surface-rt/"/>
    <id>https://blog.umu618.com/2020/09/06/reconstructionism-poet-surface-rt/</id>
    <published>2020-09-06T09:20:53.000Z</published>
    <updated>2024-04-13T14:38:27.522Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·射飞丝阿屉》：文十初上射飞丝，挨踢更迭，阿屉不减风采。八点一，七四八，八年等待五年吃灰，如今一刷还是牛逼。</p><h2 id="注解">注解</h2><p>Surface RT 刷 Windows 10 Arm32 版。改编自霹雳角色疏楼龙宿的诗号：</p><blockquote><p>华阳初上鸿门红，疏楼更迭，龙麟不减风采；<br>紫金箫，白玉琴，宫灯夜明昙华正盛，共饮逍遥一世悠然。</p></blockquote><p>刷完玩玩当然是继续吃灰了……毕竟性能不行！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·射飞丝阿屉》：文十初上射飞丝，挨踢更迭，阿屉不减风采。八点一，七四八，八年等待五年吃灰，如今一刷还是牛逼。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;Surface RT 刷 Windows 10 Arm32 版。改编自霹雳角色疏楼龙宿的诗号：&lt;/p</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
    <category term="鹏风" scheme="https://blog.umu618.com/tags/%E9%B9%8F%E9%A3%8E/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·去快恋</title>
    <link href="https://blog.umu618.com/2020/09/04/reconstructionism-poet-meetone/"/>
    <id>https://blog.umu618.com/2020/09/04/reconstructionism-poet-meetone/</id>
    <published>2020-09-04T04:06:52.000Z</published>
    <updated>2023-08-05T13:01:27.018Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·去快恋》：前年今日如梦游，神奇八哥无止休。神奇不知何处去，八哥依旧笑春秋。</p><h2 id="注解">注解</h2><p>纪念在区块链行业工作过！改编自唐代崔护的《题都城南庄》：</p><blockquote><p>去年今日此门中，人面桃花相映红。<br>人面不知何处去，桃花依旧笑春风。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·去快恋》：前年今日如梦游，神奇八哥无止休。神奇不知何处去，八哥依旧笑春秋。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;纪念在区块链行业工作过！改编自唐代崔护的《题都城南庄》：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;去年今日此门中，人面桃花相映红。&lt;</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>VS2019 Makefile 型工程调用 Clang</title>
    <link href="https://blog.umu618.com/2020/08/31/umutech-clang-x86-x64/"/>
    <id>https://blog.umu618.com/2020/08/31/umutech-clang-x86-x64/</id>
    <published>2020-08-31T15:11:53.000Z</published>
    <updated>2023-08-05T13:01:27.018Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求">需求</h2><p>VS2019 Makefile 型工程使用 Clang 编译，要同时支持 x86 和 x64 平台。</p><h2 id="问题">问题</h2><p>找不到 Clang 参数可以指定目标平台，如果您知道请不吝赐教。（github 账号：UMU618）</p><h2 id="解决">解决</h2><p>同时安装这两个平台的 Clang。x86 的由 VS2019 自带，在 VS 中被表示为 <code>&quot;$(ClangAnalysisToolsPath)\clang.exe&quot;</code>，宏展开后为：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> &amp;<span class="string">&quot;C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\Llvm\bin\clang.exe&quot;</span> <span class="literal">-v</span></span><br><span class="line">clang version <span class="number">10.0</span>.<span class="number">0</span></span><br><span class="line">Target: i686<span class="literal">-pc</span><span class="literal">-windows</span><span class="literal">-msvc</span></span><br><span class="line">Thread model: posix</span><br><span class="line">InstalledDir: C:\Program Files (x86)\Microsoft Visual Studio\<span class="number">2019</span>\Community\VC\Tools\Llvm\bin</span><br></pre></td></tr></table></figure><p>x64 是另外安装的，安装时选择把目录注册到 PATH：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> clang <span class="literal">-v</span></span><br><span class="line">clang version <span class="number">10.0</span>.<span class="number">0</span></span><br><span class="line">Target: x86_64<span class="literal">-pc</span><span class="literal">-windows</span><span class="literal">-msvc</span></span><br><span class="line">Thread model: posix</span><br><span class="line">InstalledDir: C:\Program Files\LLVM\bin</span><br></pre></td></tr></table></figure><p>结论：只需在 Win32 的平台设置使用 <code>&quot;$(ClangAnalysisToolsPath)\clang.exe&quot;</code>，而 x64 则直接使用 <code>clang</code>（如果安装时忘记注册到 PATH，需要手动添加）。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;需求&quot;&gt;需求&lt;/h2&gt;
&lt;p&gt;VS2019 Makefile 型工程使用 Clang 编译，要同时支持 x86 和 x64 平台。&lt;/p&gt;
&lt;h2 id=&quot;问题&quot;&gt;问题&lt;/h2&gt;
&lt;p&gt;找不到 Clang 参数可以指定目标平台，如果您知道请不吝赐教。（github</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="windows" scheme="https://blog.umu618.com/tags/windows/"/>
    
    <category term="debug" scheme="https://blog.umu618.com/tags/debug/"/>
    
  </entry>
  
  <entry>
    <title>SDL/Windows 代码分析【1】thread</title>
    <link href="https://blog.umu618.com/2020/08/28/umutech-sdl-windows-source-analysis-1-thread/"/>
    <id>https://blog.umu618.com/2020/08/28/umutech-sdl-windows-source-analysis-1-thread/</id>
    <published>2020-08-28T07:11:55.000Z</published>
    <updated>2023-08-05T13:01:27.018Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-SDL-semaphore">1. SDL_semaphore</h2><p>代码：src\thread\windows\SDL_syssem.c</p><p>别名：SDL_sem</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">SDL_semaphore</span> <span class="title">SDL_sem</span>;</span></span><br></pre></td></tr></table></figure><p>基于 WinAPI 匿名 Semaphore 封装。MaximumCount 硬编码为 32 * 1024。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">SDL_semaphore</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    HANDLE id;</span><br><span class="line">    LONG count;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Create a semaphore */</span></span><br><span class="line">SDL_sem *</span><br><span class="line">SDL_CreateSemaphore(Uint32 initial_value)</span><br><span class="line">&#123;</span><br><span class="line">    SDL_sem *sem;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Allocate sem memory */</span></span><br><span class="line">    sem = (SDL_sem *) SDL_malloc(<span class="keyword">sizeof</span>(*sem));</span><br><span class="line">    <span class="keyword">if</span> (sem) &#123;</span><br><span class="line">        <span class="comment">/* Create the semaphore, with max value 32K */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> __WINRT__</span></span><br><span class="line">        sem-&gt;id = CreateSemaphoreEx(<span class="literal">NULL</span>, initial_value, <span class="number">32</span> * <span class="number">1024</span>, <span class="literal">NULL</span>, <span class="number">0</span>, SEMAPHORE_ALL_ACCESS);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">        sem-&gt;id = CreateSemaphore(<span class="literal">NULL</span>, initial_value, <span class="number">32</span> * <span class="number">1024</span>, <span class="literal">NULL</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">        sem-&gt;count = initial_value;</span><br><span class="line">        <span class="keyword">if</span> (!sem-&gt;id) &#123;</span><br><span class="line">            SDL_SetError(<span class="string">&quot;Couldn&#x27;t create semaphore&quot;</span>);</span><br><span class="line">            SDL_free(sem);</span><br><span class="line">            sem = <span class="literal">NULL</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        SDL_OutOfMemory();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> (sem);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-SDL-mutex">2. SDL_mutex</h2><p>代码：src\thread\windows\SDL_sysmutex.c</p><p>基于 WinAPI CriticalSection 封装。SpinCount 硬编码为 2000，即在多处理器系统上，如果无法立刻进入临界区，则会自旋最多 2000 次，然后等待 CriticalSection 内部关联的信号量。只要在自旋过程中其它线程退出临界区，则无需进入等待状态。这么做是提高效率，自旋时当前线程还占着 CPU，如果进入等待状态，就是交出 CPU 时间片了，而 CPU 调度是个消耗型操作。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">SDL_mutex</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    CRITICAL_SECTION cs;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Create a mutex */</span></span><br><span class="line">SDL_mutex *</span><br><span class="line">SDL_CreateMutex(<span class="keyword">void</span>)</span><br><span class="line">&#123;</span><br><span class="line">    SDL_mutex *mutex;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Allocate mutex memory */</span></span><br><span class="line">    mutex = (SDL_mutex *) SDL_malloc(<span class="keyword">sizeof</span>(*mutex));</span><br><span class="line">    <span class="keyword">if</span> (mutex) &#123;</span><br><span class="line">        <span class="comment">/* Initialize */</span></span><br><span class="line">        <span class="comment">/* On SMP systems, a non-zero spin count generally helps performance */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> __WINRT__</span></span><br><span class="line">        InitializeCriticalSectionEx(&amp;mutex-&gt;cs, <span class="number">2000</span>, <span class="number">0</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">        InitializeCriticalSectionAndSpinCount(&amp;mutex-&gt;cs, <span class="number">2000</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        SDL_OutOfMemory();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> (mutex);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-SDL-cond">3. SDL_cond</h2><p>代码：src\thread\windows\SDL_syscond.c</p><p>基于 SDL_mutex 和 SDL_sem 封装。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">SDL_cond</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    SDL_mutex *lock;</span><br><span class="line">    <span class="keyword">int</span> waiting;</span><br><span class="line">    <span class="keyword">int</span> signals;</span><br><span class="line">    SDL_sem *wait_sem;</span><br><span class="line">    SDL_sem *wait_done;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Create a condition variable */</span></span><br><span class="line">SDL_cond *</span><br><span class="line">SDL_CreateCond(<span class="keyword">void</span>)</span><br><span class="line">&#123;</span><br><span class="line">    SDL_cond *cond;</span><br><span class="line"></span><br><span class="line">    cond = (SDL_cond *) SDL_malloc(<span class="keyword">sizeof</span>(SDL_cond));</span><br><span class="line">    <span class="keyword">if</span> (cond) &#123;</span><br><span class="line">        cond-&gt;lock = SDL_CreateMutex();</span><br><span class="line">        cond-&gt;wait_sem = SDL_CreateSemaphore(<span class="number">0</span>);</span><br><span class="line">        cond-&gt;wait_done = SDL_CreateSemaphore(<span class="number">0</span>);</span><br><span class="line">        cond-&gt;waiting = cond-&gt;signals = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (!cond-&gt;lock || !cond-&gt;wait_sem || !cond-&gt;wait_done) &#123;</span><br><span class="line">            SDL_DestroyCond(cond);</span><br><span class="line">            cond = <span class="literal">NULL</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        SDL_OutOfMemory();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> (cond);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>SDL_CondWaitTimeout 实现较长，本文忽略。重点是：为了避免死锁，它进入等待前，会先解锁第二个参数 mutex。如果不这么做，其它线程也要 Lock 这个 mutex 就会发生死锁。</p><p>以下代码是典型用法，线程 A <strong>先</strong>进入临界区后，SDL_CondWait（内部调用 SDL_CondWaitTimeout）会调用 <code>SDL_UnlockMutex(lock);</code> 使得线程 B 可以进入临界区调用 <code>SDL_CondSignal(cond);</code>。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Typical use</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Thread A:</span></span><br><span class="line">SDL_LockMutex(lock);</span><br><span class="line"><span class="keyword">while</span> (!condition) &#123;</span><br><span class="line">    SDL_CondWait(cond, lock);</span><br><span class="line">&#125;</span><br><span class="line">SDL_UnlockMutex(lock);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Thread B:</span></span><br><span class="line">SDL_LockMutex(lock);</span><br><span class="line">condition = <span class="literal">true</span>;</span><br><span class="line">SDL_CondSignal(cond);</span><br><span class="line">SDL_UnlockMutex(lock);</span><br></pre></td></tr></table></figure><h2 id="4-SDL-Atomic">4. SDL_Atomic</h2><p>代码：src\atomic\SDL_atomic.c</p><p>基于 _Interlocked API 封装。此类原子操作一般底层实现都是相应平台的汇编指令（比如 x86 平台是 lock cmpxchg 之类），但在不同平台下会有不同的封装集，所以 SDL_atomic.c 里有很多平台相关的宏判断。</p><h2 id="5-SDL-MemoryBarrier">5. SDL_MemoryBarrier</h2><p>代码：src\atomic\SDL_atomic.h</p><p>内存屏障。参考文章：<a href="https://preshing.com/20120913/acquire-and-release-semantics/">Acquire and Release Semantics</a>。</p><p>在 Windows x86 环境下等价于 _ReadWriteBarrier：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> _ReadWriteBarrier(<span class="keyword">void</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> intrinsic(_ReadWriteBarrier)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SDL_CompilerBarrier()   _ReadWriteBarrier()</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* This is correct for the x86 and x64 CPUs, and we&#x27;ll expand this over time. */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SDL_MemoryBarrierRelease()  SDL_CompilerBarrier()</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SDL_MemoryBarrierAcquire()  SDL_CompilerBarrier()</span></span><br></pre></td></tr></table></figure><ul><li><p><strong>Acquire semantics</strong> is a property that can only apply to operations that read from shared memory, whether they are read-modify-write operations or plain loads. The operation is then considered a <strong>read-acquire</strong>. Acquire semantics prevent memory reordering of the read-acquire with any read or write operation that follows it in program order.</p></li><li><p><strong>Release semantics</strong> is a property that can only apply to operations that write to shared memory, whether they are read-modify-write operations or plain stores. The operation is then considered a <strong>write-release</strong>. Release semantics prevent memory reordering of the write-release with any read or write operation that precedes it in program order.</p></li></ul><p>生硬的翻译如下：</p><ul><li><p>获取语义是一个属性，它只能应用于从共享内存读取的操作，无论是“读取-修改-写入”操作还是普通加载。该操作将被视为“读取获取”。获取语义可防止“读取获取”和它之后的读取或写入操作发生内存重新排序。</p></li><li><p>释放语义是一个属性，它只能应用于写入共享内存的操作，无论是“读取-修改-写入”操作还是普通存储。该操作将被视为“写入释放”。释放语义可防止“写入释放”和它之前，它之前的任何读取或写入操作发生内存重新排序。</p></li></ul><p>以 x86 内存模型为例说明：</p><ul><li>Loads are not reordered with other loads.</li><li>Stores are not reordered with other stores.</li><li>Stores are not reordered with older loads.</li><li>Loads <strong>may be</strong> reordered with older stores to different locations.</li></ul><p>因为 store-load 可以被重排，所以 x86 不是顺序一致。但是其他三种读写顺序不能被重排，所以 x86 是 acquire/release 语义。</p><p>aquire 语义：load 之后的读写操作无法被重排至 load 之前。即 load-load, load-store 不能被重排。</p><p>release 语义：store 之前的读写操作无法被重排至 store 之后。即 load-store, store-store 不能被重排。</p><h2 id="6-SDL-TLSData">6. SDL_TLSData</h2><p>意义：TLS，即 Thread Local Storage（线程局部存储）。</p><p>代码：src\thread\SDL_thread_c.h 和 src\thread\windows\SDL_systls.c</p><p>基于 SDL_Atomic、SDL_MemoryBarrier 和 WinAPI Tls API 封装。</p><p>以下结构体包含一个析构函数的指针，非空时，SDL_TLSCleanup() 会调用它。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* This is the system-independent thread local storage structure */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> limit;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">        <span class="keyword">void</span> *data;</span><br><span class="line">        <span class="keyword">void</span> (SDLCALL *destructor)(<span class="keyword">void</span>*);</span><br><span class="line">    &#125; <span class="built_in">array</span>[<span class="number">1</span>];</span><br><span class="line">&#125; SDL_TLSData;</span><br></pre></td></tr></table></figure><h2 id="7-SDL-Thread">7. SDL_Thread</h2><p>代码：src\thread\SDL_thread.c 和 src\thread\windows\SDL_systhread.c</p><p>创建线程的 API 是 SDL_CreateThread 和 SDL_CreateThreadWithStackSize，导出函数 SDL_CreateThread 的定义如下，记为【X】：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SDL_DYNAPI_PROC(SDL_Thread*,SDL_CreateThread,(SDL_ThreadFunction a, <span class="keyword">const</span> <span class="keyword">char</span> *b, <span class="keyword">void</span> *c, pfnSDL_CurrentBeginThread d, pfnSDL_CurrentEndThread e),(a,b,c,d,e),<span class="keyword">return</span>)</span><br></pre></td></tr></table></figure><p>下面会有递归展开宏的过程。首先，用 SDL_DYNAPI_PROC 的定义：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SDL_DYNAPI_PROC(rc,fn,params,args,ret) \</span></span><br><span class="line">    <span class="keyword">static</span> rc SDLCALL fn##_DEFAULT params &#123; \</span><br><span class="line">        SDL_InitDynamicAPI(); \</span><br><span class="line">        ret jump_table.fn args; \</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>展开【X】得到：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> SDL_Thread* __cdecl <span class="title">SDL_CreateThread</span><span class="params">(SDL_ThreadFunction a, <span class="keyword">const</span> <span class="keyword">char</span> *b, <span class="keyword">void</span> *c, pfnSDL_CurrentBeginThread d, pfnSDL_CurrentEndThread e)</span> </span>&#123;</span><br><span class="line">    SDL_InitDynamicAPI();</span><br><span class="line">    <span class="keyword">return</span> jump_table.SDL_CreateThread(a,b,c,d,e);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中 jump_table.SDL_CreateThread 是【X】被 SDL_dynapi_procs.h 的：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* The jump table! */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> SDL_DYNAPI_PROC(rc,fn,params,args,ret) SDL_DYNAPIFN_##fn fn;</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;SDL_dynapi_procs.h&quot;</span></span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">undef</span> SDL_DYNAPI_PROC</span></span><br><span class="line">&#125; SDL_DYNAPI_jump_table;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* The actual jump table. */</span></span><br><span class="line"><span class="keyword">static</span> SDL_DYNAPI_jump_table jump_table = &#123;</span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> SDL_DYNAPI_PROC(rc,fn,params,args,ret) fn##_DEFAULT,</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;SDL_dynapi_procs.h&quot;</span></span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">undef</span> SDL_DYNAPI_PROC</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>展开得到，为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="comment">/* ... */</span></span><br><span class="line">    SDL_DYNAPIFN_SDL_CreateThread SDL_CreateThread;</span><br><span class="line">    <span class="comment">/* ... */</span></span><br><span class="line">&#125; SDL_DYNAPI_jump_table;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> SDL_DYNAPI_jump_table jump_table = &#123;</span><br><span class="line">    <span class="comment">/* ... */</span></span><br><span class="line">    SDL_CreateThread_DEFAULT,</span><br><span class="line">    <span class="comment">/* ... */</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>【X】又被 SDL_dynapi.c 的 initialize_jumptable 函数的：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Init our jump table first. */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SDL_DYNAPI_PROC(rc,fn,params,args,ret) jump_table.fn = fn##_REAL;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;SDL_dynapi_procs.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">undef</span> SDL_DYNAPI_PROC</span></span><br></pre></td></tr></table></figure><p>展开为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* ... */</span></span><br><span class="line">jump_table.SDL_CreateThread = SDL_CreateThread_REAL;</span><br><span class="line"><span class="comment">/* ... */</span></span><br></pre></td></tr></table></figure><p>所以，调用 SDL_CreateThread 最终调用的就是 SDL_CreateThread_REAL，又由于 <code>src\dynapi\SDL_dynapi_overrides.h</code> 中的：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SDL_CreateThread SDL_CreateThread_REAL</span></span><br></pre></td></tr></table></figure><p>所以调用的是 src\thread\SDL_thread.c 中的：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> SDL_PASSED_BEGINTHREAD_ENDTHREAD</span></span><br><span class="line">DECLSPEC SDL_Thread *SDLCALL</span><br><span class="line">SDL_CreateThread(<span class="keyword">int</span> (SDLCALL * fn) (<span class="keyword">void</span> *),</span><br><span class="line">                 <span class="keyword">const</span> <span class="keyword">char</span> *name, <span class="keyword">void</span> *data,</span><br><span class="line">                 pfnSDL_CurrentBeginThread pfnBeginThread,</span><br><span class="line">                 pfnSDL_CurrentEndThread pfnEndThread)</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">DECLSPEC SDL_Thread *SDLCALL</span><br><span class="line">SDL_CreateThread(<span class="keyword">int</span> (SDLCALL * fn) (<span class="keyword">void</span> *),</span><br><span class="line">                 <span class="keyword">const</span> <span class="keyword">char</span> *name, <span class="keyword">void</span> *data)</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/* !!! <span class="doctag">FIXME:</span> in 2.1, just make stackhint part of the usual API. */</span></span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span> *stackhint = SDL_GetHint(SDL_HINT_THREAD_STACK_SIZE);</span><br><span class="line">    <span class="keyword">size_t</span> stacksize = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* If the SDL_HINT_THREAD_STACK_SIZE exists, use it */</span></span><br><span class="line">    <span class="keyword">if</span> (stackhint != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">char</span> *endp = <span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">const</span> Sint64 hintval = SDL_strtoll(stackhint, &amp;endp, <span class="number">10</span>);</span><br><span class="line">        <span class="keyword">if</span> ((*stackhint != <span class="string">&#x27;\0&#x27;</span>) &amp;&amp; (*endp == <span class="string">&#x27;\0&#x27;</span>)) &#123;  <span class="comment">/* a valid number? */</span></span><br><span class="line">            <span class="keyword">if</span> (hintval &gt; <span class="number">0</span>) &#123;  <span class="comment">/* reject bogus values. */</span></span><br><span class="line">                stacksize = (<span class="keyword">size_t</span>) hintval;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> SDL_PASSED_BEGINTHREAD_ENDTHREAD</span></span><br><span class="line">    <span class="keyword">return</span> SDL_CreateThreadWithStackSize(fn, name, stacksize, data, pfnBeginThread, pfnEndThread);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">    <span class="keyword">return</span> SDL_CreateThreadWithStackSize(fn, name, stacksize, data);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可见 <code>SDL_CreateThread</code> 调用了 <code>SDL_CreateThreadWithStackSize</code>，而 <code>SDL_CreateThreadWithStackSize</code> 又调用 src\thread\windows\SDL_systhread.c 中的 <code>SDL_SYS_CreateThread</code>，因为 Windows 平台有 <code>_beginthreadex</code> 和 <code>_endthreadex</code>，所以最后是调用 <code>_beginthreadex</code>：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* thread-&gt;stacksize == 0 means &quot;system default&quot;, same as win32 expects */</span></span><br><span class="line"><span class="keyword">if</span> (pfnBeginThread) &#123;</span><br><span class="line">    <span class="keyword">unsigned</span> threadid = <span class="number">0</span>;</span><br><span class="line">    thread-&gt;handle = (SYS_ThreadHandle)</span><br><span class="line">        ((<span class="keyword">size_t</span>) pfnBeginThread(<span class="literal">NULL</span>, (<span class="keyword">unsigned</span> <span class="keyword">int</span>) thread-&gt;stacksize,</span><br><span class="line">                                 RunThreadViaBeginThreadEx,</span><br><span class="line">                                 pThreadParms, flags, &amp;threadid));</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    DWORD threadid = <span class="number">0</span>;</span><br><span class="line">    thread-&gt;handle = CreateThread(<span class="literal">NULL</span>, thread-&gt;stacksize,</span><br><span class="line">                                  RunThreadViaCreateThread,</span><br><span class="line">                                  pThreadParms, flags, &amp;threadid);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中 <code>RunThreadViaBeginThreadEx</code> 实际上是调用 <code>RunThread</code>:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> DWORD</span><br><span class="line">RunThread(<span class="keyword">void</span> *data)</span><br><span class="line">&#123;</span><br><span class="line">    pThreadStartParms pThreadParms = (pThreadStartParms) data;</span><br><span class="line">    pfnSDL_CurrentEndThread pfnEndThread = pThreadParms-&gt;pfnCurrentEndThread;</span><br><span class="line">    <span class="keyword">void</span> *args = pThreadParms-&gt;args;</span><br><span class="line">    SDL_free(pThreadParms);</span><br><span class="line">    SDL_RunThread(args);</span><br><span class="line">    <span class="keyword">if</span> (pfnEndThread != <span class="literal">NULL</span>)</span><br><span class="line">        pfnEndThread(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">return</span> (<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> DWORD WINAPI</span><br><span class="line">RunThreadViaCreateThread(LPVOID data)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">return</span> RunThread(data);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">unsigned</span> __stdcall</span><br><span class="line">RunThreadViaBeginThreadEx(<span class="keyword">void</span> *data)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">return</span> (<span class="keyword">unsigned</span>) RunThread(data);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>从代码可见 <code>RunThread</code> 调用 <code>SDL_RunThread</code>，而 <code>SDL_RunThread</code> 内部由 <code>SDL_TLSCleanup()</code> 来调用析构函数：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span></span><br><span class="line">SDL_RunThread(<span class="keyword">void</span> *data)</span><br><span class="line">&#123;</span><br><span class="line">    thread_args *args = (thread_args *) data;</span><br><span class="line">    <span class="keyword">int</span> (SDLCALL * userfunc) (<span class="keyword">void</span> *) = args-&gt;func;</span><br><span class="line">    <span class="keyword">void</span> *userdata = args-&gt;data;</span><br><span class="line">    SDL_Thread *thread = args-&gt;info;</span><br><span class="line">    <span class="keyword">int</span> *statusloc = &amp;thread-&gt;status;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Perform any system-dependent setup - this function may not fail */</span></span><br><span class="line">    SDL_SYS_SetupThread(thread-&gt;name);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Get the thread id */</span></span><br><span class="line">    thread-&gt;threadid = SDL_ThreadID();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Wake up the parent thread */</span></span><br><span class="line">    SDL_SemPost(args-&gt;wait);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Run the function */</span></span><br><span class="line">    *statusloc = userfunc(userdata);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Clean up thread-local storage */</span></span><br><span class="line">    SDL_TLSCleanup();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Mark us as ready to be joined (or detached) */</span></span><br><span class="line">    <span class="keyword">if</span> (!SDL_AtomicCAS(&amp;thread-&gt;state, SDL_THREAD_STATE_ALIVE, SDL_THREAD_STATE_ZOMBIE)) &#123;</span><br><span class="line">        <span class="comment">/* Clean up if something already detached us. */</span></span><br><span class="line">        <span class="keyword">if</span> (SDL_AtomicCAS(&amp;thread-&gt;state, SDL_THREAD_STATE_DETACHED, SDL_THREAD_STATE_CLEANED)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (thread-&gt;name) &#123;</span><br><span class="line">                SDL_free(thread-&gt;name);</span><br><span class="line">            &#125;</span><br><span class="line">            SDL_free(thread);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-SDL-semaphore&quot;&gt;1. SDL_semaphore&lt;/h2&gt;
&lt;p&gt;代码：src\thread\windows\SDL_syssem.c&lt;/p&gt;
&lt;p&gt;别名：SDL_sem&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;tabl</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="windows" scheme="https://blog.umu618.com/tags/windows/"/>
    
    <category term="debug" scheme="https://blog.umu618.com/tags/debug/"/>
    
    <category term="c" scheme="https://blog.umu618.com/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神前传【13】</title>
    <link href="https://blog.umu618.com/2020/08/16/god-of-debug-prequel-13/"/>
    <id>https://blog.umu618.com/2020/08/16/god-of-debug-prequel-13/</id>
    <published>2020-08-15T18:30:51.000Z</published>
    <updated>2023-08-05T13:01:27.018Z</updated>
    
    <content type="html"><![CDATA[<h2 id="618-年，识界">618 年，识界</h2><p>圣仙山：两位娘子，待会儿去吾姐梦里和她告别。</p><p>李心觎：为啥不在视界亲自和她告别呢？</p><p>圣仙山：她远嫁黑龙江，吾在视界又不能飞，要跑很远纳！再说吾在视界还没娶妻，多没面子呀。</p><p>李心觎：嘻嘻嘻。</p><p>李冰月：哈哈哈！姐姐，咱们是去给相公撑场面的！</p><h2 id="李神源梦中">李神源梦中</h2><p>圣仙山：神姐！</p><p>李神源：嗯？是仙弟呀。这两位是？</p><p>圣仙山：是小弟的妻子。</p><p>李冰月、李心觎：姐姐好！</p><p>李神源：好好好。两位弟妹灵秀如仙，仙弟什么时候得此艳福，真是好大的惊喜呀！</p><p>李冰月：好说好说。相公才是灵秀如仙，我们姐妹俩还不如他呢！</p><p>李心觎：是呀，神姐，夫君才是真仙。</p><p>李神源：哎呀，我这仙弟以前老和我说，他要一心求道，不想娶妻生子，还说未来的人越来越多都不结婚的。</p><p>圣仙山：姐！现在情况有变，当今皇帝受老钧托梦，要老爹组织一群谷阳人去南荒开疆传道，同行人中有技师文人，也有流民和被大赦的罪犯，还要途径苦境各地，和三教九流打交道，我是最佳带队人选。</p><p>李神源：此去危险重重，仙弟为何不让别人去呢？</p><p>圣仙山：除了传道，吾还有别的任务，要去寻找吾心中的道州德国，一处远离天灾人祸的修道圣地。</p><p>李冰月：神姐放心，相公已经修成八识神通，这事可以安全办成。</p><p>李神源：既然如此，为姐只能祝你一切顺利。我养了一只守护灵狐，让它陪你上路吧，风餐露宿有危险时，它会警示你。</p><p>圣仙山：谢谢神姐。</p><h2 id="识界">识界</h2><p>李心觎：神姐梦里的灵狐好可爱耶。</p><p>李冰月：是呀，咱们在识界里找一只呗！</p><p>李心觎：走。</p><p>李冰月：相公，这只叫“纯狐连玉”，你在视界如果遇到它，它会认得你的。</p><p>李心觎：连玉，暂时就陪我们吧。</p><blockquote><p>少曾读仙史，知有苏耽君。流望来南国，依然会昔闻。<br>泊舟问耆老，遥指孤山云。孤山郴郡北，不与众山群。<br>重崖下萦映，嶛峣上纠纷。碧峰泉附落，红壁树傍分。<br>选地今方尔，升天因可云。不才予窜迹，羽化子遗芬。<br>将览成麟凤，旋惊御鬼文。此中迷出处，含思独氛氲。</p></blockquote><h2 id="2003-年">2003 年</h2><p>陈因提：圣仙山带着一群中原人来到现在你家这个地方？</p><p>圣小开：对！仙山公在路上娶了胡小玉，才有现在的我。</p><p>陈因提：胡小玉很特别吗？娶别人不一样有你？</p><p>圣小开：万一不娶呢？那我不是生不出来！</p><p>陈因提：哈哈。你真是瞎操心。我比较担心他死在路上，而你担心他不娶！</p><p>圣小开：有神通在，明显死不了呀。料事如神，有啥危险或者人际关系的问题，都能预防。</p><p>陈因提：哦，后世人神化的吧！成王败寇。</p><p>圣小开：仙山公能找到这个好地方本身就很神了，台风地震海啸全被周围其他地方挡住，几乎没天灾，还远离政治和战乱，在当时可谓世外桃源。</p><p>陈因提：这是现实，暂且信你。那么，你有遗传到这八识神通吗？</p><p>圣小开：略懂略懂！八识神通分为被动接受和主动测算，我有时候也能接受到来自未来的预警，主动测算我是不会。而且主动测算会耗费心力，即所谓招天谴。仙山公测算多次，导致 35 岁就仙逝了。胡小玉就活了 42 岁，他们女儿活到 64 岁。</p><p>陈因提：算出啥了？老天爷这么急着收他？</p><p>圣小开：回归十界。</p><p>陈因提：啥意思？</p><p>圣小开：不是老天收他，是他终于算出怎么回归十界，便抛下肉身……</p><p>陈因提：等等，说人话！</p><p>圣小开：算出怎么去死！</p><p>陈因提：切！还以为啥高深的法门……睡了睡了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;618-年，识界&quot;&gt;618 年，识界&lt;/h2&gt;
&lt;p&gt;圣仙山：两位娘子，待会儿去吾姐梦里和她告别。&lt;/p&gt;
&lt;p&gt;李心觎：为啥不在视界亲自和她告别呢？&lt;/p&gt;
&lt;p&gt;圣仙山：她远嫁黑龙江，吾在视界又不能飞，要跑很远纳！再说吾在视界还没娶妻，多没面子呀。&lt;/p&gt;
&lt;</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="鲸神链" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%93%BE/"/>
    
  </entry>
  
  <entry>
    <title>挨踢人必备 Embody</title>
    <link href="https://blog.umu618.com/2020/08/11/embody/"/>
    <id>https://blog.umu618.com/2020/08/11/embody/</id>
    <published>2020-08-11T14:24:58.000Z</published>
    <updated>2024-04-13T14:38:27.522Z</updated>
    
    <content type="html"><![CDATA[<h2 id="故事从-2012-年开始">故事从 2012 年开始</h2><p>这一年在 59 号大网吧办公，总感觉桌子太矮椅子太烂……心神不宁，频繁想起一个故事：</p><blockquote><p>某同事很低调，从来不炫耀自己的成就，突然有一天，他说：“我太突出了！”</p></blockquote><p>一问，原来是腰间盘突出……</p><p>这一年，还是哥的稣决定攒钱买一把好的椅子。</p><p>存了几个月，终于买了一把保友金豪 E-AB-HAM。那时好多同事来围观，有 HR 来说了句：“比总经理用的还好！”，也有不少小伙伴说长得像医疗用的复健椅。</p><p>**但是这把椅子在稣心里并没有地位。**当时已经有智能手机的稣，从来没有拍过它，以致如今想查具体啥时候买的，都不那么确定。只记得是花 3800 元买的，最晚不会超过 2013-01-19 这个时间！</p><p><img src="/images/2020/20200811-buy.png" alt="大约的购买时间"></p><p>当时还很撒逼地把能选配的全给配上……实际使用证实左手边的书架几乎用不上，以致后来把它给拆下来了！脚垫也不常用，很少在公司午睡。</p><p>说起效果，那确实比公司的乐射椅子好很多，但也不是特别舒服。网布很透气，但在公司有空调的前提下，透气并不是那么必须。反而缺点就是它并没有根据屁股的造型来支托，简单地说有点勒腿，坐久了并不舒服。所以，后来又研究起 Embody。</p><p><img src="/images/2020/20200811-qzone.png" alt="开始了解 Embody"></p><p>后来有土豪要买 Embody，稣跟着去体验了一下。2020 年，土豪又买了第二张……</p><h2 id="直到-2020-年才有钱买">直到 2020 年才有钱买</h2><p>2020-06-10 下单乐歌升降桌 E3，180*80cm。靠自动提醒功能养成坐久了站会儿的习惯，结果反而让稣发现八哥就在金豪这把椅子上！网布还是个问题，坐 8 年已经变软一些，但依然有一种压迫大腿两侧的酸麻感。</p><p>吓得稣赶紧下单，买了介个：</p><p><img src="/images/2020/20200811-cheap.jpg" alt="Embody 廉价替代品"></p><p>这下终于明白形状和支撑的重要性！果断存钱买 Embody！</p><p>存了一个月多的钱，再加上脑波给的一万块人民币，终于入手 Embody！</p><h2 id="体会">体会</h2><ul><li><p>Embody 可以调得比金豪更矮，适合的身高范围就更大，尤其对女性友好。腿、屁股和腰都舒服。</p></li><li><p>一张 Embody 价格可以买金豪 3 张以上，但是肯定是没有 3 倍的舒服，高端的东西性价比自然比大众款低的多，使用价值只能在细节上轻微地增加。好在大腿的问题真的解决了。</p></li><li><p>挨踢族一天坐在椅子上的时间是远超健康上限的。稣并不赞成通过买任何东西来装逼，除非这东西是真实用，所以贵。Embody 对很多人来说，可能就是装逼，但对挨踢人绝对不是。</p></li></ul><blockquote><p>并不是主角才有光环，而是有光环的才能当主角，这才是生活。——泥巴娃</p></blockquote><ul><li>挨踢人就应该对自己好一点。</li></ul><p>最后，一句话总结：<strong>要不是穷，真想再买一张！</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;故事从-2012-年开始&quot;&gt;故事从 2012 年开始&lt;/h2&gt;
&lt;p&gt;这一年在 59 号大网吧办公，总感觉桌子太矮椅子太烂……心神不宁，频繁想起一个故事：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;某同事很低调，从来不炫耀自己的成就，突然有一天，他说：“我太突出了！</summary>
      
    
    
    
    <category term="宇督观" scheme="https://blog.umu618.com/categories/%E5%AE%87%E7%9D%A3%E8%A7%82/"/>
    
    
    <category term="洗脑" scheme="https://blog.umu618.com/tags/%E6%B4%97%E8%84%91/"/>
    
    <category term="鹏风" scheme="https://blog.umu618.com/tags/%E9%B9%8F%E9%A3%8E/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神前传【12】</title>
    <link href="https://blog.umu618.com/2020/08/09/god-of-debug-prequel-12/"/>
    <id>https://blog.umu618.com/2020/08/09/god-of-debug-prequel-12/</id>
    <published>2020-08-09T09:05:06.000Z</published>
    <updated>2023-08-05T13:01:27.018Z</updated>
    
    <content type="html"><![CDATA[<h2 id="识界">识界</h2><p>李仙山，字太墟，号道识，是最后一名通过修行进入识界的人类，最为人津津乐道的是他娶了两位貌美如花的妻子：李冰月和李心觎。三人同在深山修炼，羡煞旁人。</p><p>李仙山：两位娘子，山顶那朵魔莲原来是老钧的智慧所化，吾已得其认可，纳入脑识。</p><p>李冰月：那相公还是相公吗？</p><p>李心觎：是呀，夫君不会鲸神魂裂吗？</p><p>李仙山：哈哈，不仅没有副作用，还助吾练就八识神通。</p><p>李心觎：听起来好厉害哦！有何用处呢？</p><p>李冰月：哎呀！相公的眼睛怎么流血了！</p><p>李仙山：咦？难道不能预测自己的未来？</p><p>李心觎：怎么回事也？赶紧擦擦。</p><p>李仙山：八识神通能够预知未来，吾刚刚测算视界中自己的未来，发现未来的视界大部分地方都实行一夫一妻制，吾之转世因此无法娶三个妻子。</p><p>李冰月：测算自己会破坏因果循环，必遭天谴，相公可别乱用。</p><p>李仙山：只要不测自己就没事。吾试过预测识界未来，发现识界将关闭千余年，后有邪灵借助科技的力量强行进入识界，后使视界的普通人不必修行亦可进入识界。可谓千年浩劫！</p><p>李冰月：此事非同小可，需召集众仙请示老钧。</p><p>李仙山：不必如此兴师动众，为夫一人已可召唤老钧。</p><p>李心觎：老钧居于十维之外，三千年来只见众人祈祷之法，却无人见过老钧现身。夫君真能召唤出来？</p><p>李仙山：老钧的意志无处不在，只要用八识神通与他纠缠就可以接受他的意识传播。来！</p><p>突然云雾缭绕的道州蓬山化入星辰，创世天尊老钧自虚无中发出一道引力波。</p><p>李仙山：小孙，拜见老祖，请老钧指示应对浩劫之方。</p><p>老钧：道之不传，识界将倾。回到视界，去南方寻找道州德国。</p><p>李仙山：领道旨。</p><p>老钧：天机不可泄露！切记不可再测算自己的未来。从今而后，改姓圣吧！</p><p>李仙山：这个姓小孙恐怕承受不起呀！再说不久前才从老改为李的，又改？</p><p>老钧：视界中的李伯阳会助你，让当朝皇帝赐姓。</p><p>李仙山：遵旨！</p><p>老钧消失前，喃喃道：那厮岂非汝乎？小孙杂……</p><p>回到道州蓬山。</p><p>圣仙山：两位娘子，为传道法，吾将离开中原，奔波于南荒之地，恐少有时间再入识界。</p><p>李冰月：相公是去干大事的，不用担心我们，我们会照顾好自己的。</p><p>李心觎：对呀，夫君偶尔来看我们就好。小别胜新婚，也许更好呢！</p><p>圣仙山：哈哈哈！</p><p>李冰月：姐姐，我们写几句诗送给相公吧！</p><p>李心觎：好呀。妹妹是大老婆，你先来。</p><p>李冰月：晓镜但愁云鬓改，夜吟应觉月光寒。蓬山此去无多路，青鸟殷勤为探看。</p><p>李心觎：昨夜星辰昨夜风，画楼西畔桂堂东。身无彩凤双飞翼，心有灵犀一点通。</p><p>圣仙山：好诗！好诗！都是你们未来的荥阳老乡写的！</p><p>李冰月、李心觎：哈哈哈。</p><p>圣仙山：再过两百多年义山就出生了！哈哈哈……</p><h2 id="2003-年">2003 年</h2><p>陈因提：圣仙山就是你老祖宗？</p><p>圣小开：当然，所以我遗传了他的特异功能。</p><p>陈因提：哦……我有点困！你最好拿出能提神的证据。</p><p>圣小开：我偶尔也能进入识界！一般人我不告诉他。</p><p>陈因提：好啦好啦，那你说说看，你都看到啥？</p><p>圣小开：众生皆苦！</p><p>陈因提：阿弥陀佛。我裤子都脱了，你给我念经？</p><p>圣小开：耶！你怎么知道我还写过一本经书。</p><p>陈因提：拿出来，我帮你烧给你老祖宗。</p><p>圣小开：切！这本《八哥之神创世手稿》十分珍贵，里面记载着进入识界的修炼法门。</p><p>陈因提：一本九毛九？我买，明天给你一百块，免找。</p><p>圣小开：给你也好，要是我突然遭天谴，起码这绝学不会就此失传。拿去，好好保管。</p><p>陈因提：哟，字体工整，比写情书还认真！那我就收了，放心吧，我当宝一样收藏。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;识界&quot;&gt;识界&lt;/h2&gt;
&lt;p&gt;李仙山，字太墟，号道识，是最后一名通过修行进入识界的人类，最为人津津乐道的是他娶了两位貌美如花的妻子：李冰月和李心觎。三人同在深山修炼，羡煞旁人。&lt;/p&gt;
&lt;p&gt;李仙山：两位娘子，山顶那朵魔莲原来是老钧的智慧所化，吾已得其认可，纳入脑</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="鲸神链" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%93%BE/"/>
    
  </entry>
  
  <entry>
    <title>牛媒体装逼录</title>
    <link href="https://blog.umu618.com/2020/08/07/story-about-streaming-media/"/>
    <id>https://blog.umu618.com/2020/08/07/story-about-streaming-media/</id>
    <published>2020-08-07T14:55:31.000Z</published>
    <updated>2024-04-13T14:38:27.522Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/2019/20190207-luyu.jpg" alt="听说鲁豫要来采访稣"></p><h2 id="3Q">3Q</h2><p>鹿邑：听说稣已经从区块链开发转型为牛媒体开发，能说说牛媒体吗？</p><p>稣：牛媒体就是三个 Q。</p><p>鹿邑：您是说三个季度就能掌握牛媒体？</p><p>稣：不是……是说牛媒体不过就是三个队列。</p><p>鹿邑：哦？我不会问您是哪三个！</p><p>稣：第一个是网络包队列，第二个是音视频包队列，第三个是音视频帧队列。</p><h2 id="转码">转码</h2><p>鹿邑：那经常听到的“转码”到底是啥？</p><p>稣：标准多到蛋疼罢了。你的化妆桌，东西怎么摆你说了算，别人摆法不同，但东西是一样的。你搬家时，把它们装起来，用啥来装，怎么装，扔掉哪些不重要的，也是你说了算，别人装法不同，但关键的几样东西还是一样的。</p><p>鹿邑：据说转码很烧钱，你们用的机器都很贵？</p><p>稣：没有没有，小米游戏本就够装逼。</p><h2 id="光栅化">光栅化</h2><p>鹿邑：第一次听到“光栅化”这个词时，表示一脸懵逼，给解释一下呗？</p><p>稣：稣拿稣法做类比，您就能理解了！Look！</p><p><img src="/images/2020/20200807-force.jpg" alt="地头力，图片来自百度，如有侵权请联系本人删除。"></p><p>鹿邑：这就是光栅化？还是没明白呀！</p><p>稣：别急！您看这些笔划……稣大笔一挥，横竖撇捺，点折弯钩，一笔走红尘，两笔惊鬼神。稣的内心只有笔法走势。</p><p>鹿邑：牛逼死了！赶紧发朋友圈！</p><p>稣：没错！关键就是发票圈！为了用现代化的方式传播稣法，咱们可以扫描打印、刊登到报纸、拍照发票圈，这些手段有个共同点——最后出来都是一些像素点。</p><p>鹿邑：还真是这样哦！我以前拿放大镜看过屏幕，都是红绿蓝的像素点。</p><p>稣：您的理解能力不错。这个把“笔划”变成一系列点的过程就是“光栅化”。举个例子，您在画板上拉一条直线，计算机只需要知道头尾两个点和颜色就能定义这条直线，而光栅化之后就是 N 个这种颜色的像素点。</p><h2 id="游戏">游戏</h2><p>鹿邑：疫情以来游戏股涨势普遍大好，想了解一下我现在学游戏开发来得及吗？</p><p>稣：哈呵，游戏其实就是利用游戏引擎，根据玩家们的输入动作渲染声音和画面，很容易理解，不过实际开发起来很多坑，<strong>您还是买在港股上市的游戏公司的股票就好。</strong></p><p>鹿邑：游戏引擎是什么，渲染又该怎么理解？</p><p>稣：游戏引擎是管理图像、声音、人机设备等一套套接口的集合。最重要的是 3D 引擎，简单的说，它是您告诉它“画个圆”，它就帮您“画出一些点，这些点组成一个圆”的接口。单说画面的渲染，可以理解为更多步骤更广义的光栅化，产生显存里的像素点数组，最后扔给显示器。</p><p>鹿邑：您又要类比吗？</p><p>稣：Look！稣写作的地方都在这些纸上，写得好的，会签名、盖章，拍照拿去发票圈。过程很简单，但包含了几个重要概念。纸张相当于显存；那张拿去拍照发票圈的纸是后台缓冲区（back buffer）的渲染目标（render target）；盖章环节相当于是输出合并器阶段（output-merger stage）；拍照可以理解为整体光栅化；当然拍照时，摄像头的位置、角度，以及打灯也是有讲究的；最后发票圈就当作输出到显示器吧！</p><p>鹿邑：好像不难理解了，您总是把啥都说得很简单，真这么简单吗？</p><p>稣：入门难而已！精通，则更难……不过一开始如果把一些专有名词、缩写整明白，可以更快入门。比如 Direct3D 的 API 就存在不少缩写，什么 OM、RS 啊，只看代码不看文档的话很容易懵逼。</p><p>鹿邑：数学要很好吧？</p><p>稣：数学思维要很好，具体的知识可以现学。几乎每步都有数学的应用，但套路比较有限，可以一通百通。举个最简单的例子：AlphaBlend 算法，常用于把人物、道具合成到背景图里，它其实和盖章是类似的，把章盖在字上，既可以看到字，也可以看到章。其计算公式就是用 alpha 值对背景点、前景点的三原色值做个加减乘运算，理解一下就行，都不用背。由于 YUV 有很多种具体规范，记不住，干脆也甭记，只要明白有些处理 YUV 比 RGB 方便，有些则 RGB 更方便就行。RGB 和 YUV 之间的转化也都有公式，一样只要理解不用记。</p><p>鹿邑：您觉得难点在哪里呢？</p><p>稣：规范太多！就拿最基础的像素点来说，就存在很多种格式，大的分类就有 RGB 和 YUV 系列，按每个分量（R、G、B、Y、U、V）的排序就可以分出好多种，还有按每个分量几位表示来区分，然后这些位是整数、浮点数或者浮点数规范化的整数，整数是有符号还是无符号都可以造成不同。</p><p>鹿邑：停！我已经晕了！</p><p>稣：就好像人以群分吧！但可以按照性别、年龄、肤色、籍贯、身高、体重、专业、爱好等各种维度细分，现实世界就有诸多标准，计算机里一样一样的。</p><p>鹿邑：明白！人艰不拆，没有容易二字。</p><p>稣：该睡了，做梦容易……吓醒。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/images/2019/20190207-luyu.jpg&quot; alt=&quot;听说鲁豫要来采访稣&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;3Q&quot;&gt;3Q&lt;/h2&gt;
&lt;p&gt;鹿邑：听说稣已经从区块链开发转型为牛媒体开发，能说说牛媒体吗？&lt;/p&gt;
&lt;p&gt;稣：牛媒体就是三个 Q。</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="streaming-media" scheme="https://blog.umu618.com/tags/streaming-media/"/>
    
    <category term="鹏风" scheme="https://blog.umu618.com/tags/%E9%B9%8F%E9%A3%8E/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·孙子编码规范</title>
    <link href="https://blog.umu618.com/2020/07/11/reconstructionism-poet-grandson-coding-style/"/>
    <id>https://blog.umu618.com/2020/07/11/reconstructionism-poet-grandson-coding-style/</id>
    <published>2020-07-11T05:11:18.000Z</published>
    <updated>2024-04-13T14:38:27.524Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·孙子编码规范》：善编码者，架不重构，洞不三补。码至难者缺人，缺人则贫于招人。财竭则急于裁员。</p><h2 id="注解">注解</h2><p>模仿自春秋时吴国将军孙武的《孙子兵法》：</p><blockquote><p>善用兵者，役不再籍，粮不三载，取用于国，因粮于敌，故军食可足也。<br>国之贫于师者远输，远输则百姓贫；近师者贵卖，贵卖则百姓财竭，财竭则急于丘役。<br>力屈、财殚，中原、内虚于家，百姓之费，十去其七；公家之费，破军罢马，甲胄矢弩，戟楯蔽橹，丘牛大车，十去其六。<br>故智将务食于敌，食敌一钟，当吾二十钟；忌杆一石，当吾二十石。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·孙子编码规范》：善编码者，架不重构，洞不三补。码至难者缺人，缺人则贫于招人。财竭则急于裁员。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;模仿自春秋时吴国将军孙武的《孙子兵法》：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;善用兵者，役不再籍，粮不三载，取</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
    <category term="鹏风" scheme="https://blog.umu618.com/tags/%E9%B9%8F%E9%A3%8E/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·中毒太深</title>
    <link href="https://blog.umu618.com/2020/06/27/reconstructionism-poet-so-addicted/"/>
    <id>https://blog.umu618.com/2020/06/27/reconstructionism-poet-so-addicted/</id>
    <published>2020-06-27T06:58:04.000Z</published>
    <updated>2023-08-05T13:01:27.018Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·中毒太深》：湿久江南渐挖身，霉多烟雨如喷粪。是谁补水智商税，广告元来有信人。</p><h2 id="注解">注解</h2><p>改编自霹雳角色剑儒无涯命夫子的诗号：</p><blockquote><p>诗酒江南剑外身，眼惊幻墨带天真。<br>是谁不道君无对？世上元来更有人。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·中毒太深》：湿久江南渐挖身，霉多烟雨如喷粪。是谁补水智商税，广告元来有信人。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;改编自霹雳角色剑儒无涯命夫子的诗号：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;诗酒江南剑外身，眼惊幻墨带天真。&lt;br&gt;
是谁不道君</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神【番外篇9】</title>
    <link href="https://blog.umu618.com/2020/06/08/god-of-debug-side-story-9/"/>
    <id>https://blog.umu618.com/2020/06/08/god-of-debug-side-story-9/</id>
    <published>2020-06-08T15:08:49.000Z</published>
    <updated>2023-10-29T12:24:56.931Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/2019/20190207-luyu.jpg" alt="听说鲁豫要来采访稣"><br><img src="/images/2020/20200131-gauze-mask.png" alt="请戴口罩采访"></p><h2 id="1-疫情已经好转很多，终于又可以采访稣！最近在忙什么呢？">1. 疫情已经好转很多，终于又可以采访稣！最近在忙什么呢？</h2><p>忙跳槽。最近两次采访之间，稣一共任职三个公司。</p><h3 id="稣现在从事什么行业？">稣现在从事什么行业？</h3><p>“AIoT 是我的爱，绵绵的金山脚下花正开”难道这歌，稣会唱给你听？</p><h3 id="唱的还行，您随意。">唱的还行，您随意。</h3><p>“什么样的加班是最呀最摇摆，什么样的养生才是最开怀……”</p><h2 id="2-近期剧情似乎给配角更多笔墨？">2. 近期剧情似乎给配角更多笔墨？</h2><p>是的。这是为了让主角晚点死，是拖剧的惯用套路。</p><h3 id="樱国是映射日本吗？">樱国是映射日本吗？</h3><p>如果您认真阅读，就会发现一个细节：《<a href="/2020/05/05/god-of-debug-prequel-9/">八哥之神前传【9】</a>》里都是说“樱国”，而《<a href="/2020/05/17/god-of-debug-prequel-10/">八哥之神前传【10】</a>》中施付说的是“日本”。</p><h3 id="是哦，这是不小心写错吗？">是哦，这是不小心写错吗？</h3><p>不是。这是有区别的。《<a href="/2020/05/05/god-of-debug-prequel-9/">八哥之神前传【9】</a>》里的故事发生在识界，而《<a href="/2020/05/17/god-of-debug-prequel-10/">八哥之神前传【10】</a>》的故事则发现在咱们这个世界。</p><h2 id="3-上次您告诉我会出现“李心觎”，但《八哥之神前传【10】》出现的却是“李星觎”，这次是写错了吧？">3. 上次您告诉我会出现“李心觎”，但《<a href="/2020/05/17/god-of-debug-prequel-10/">八哥之神前传【10】</a>》出现的却是“李星觎”，这次是写错了吧？</h2><p>当然不是。这是剧情需要，后面会解释清楚的，先不剧透。</p><h2 id="4-出现“狐狸精”这种神话色彩的人物，是不是违反您之前说的“无神论”？">4. 出现“狐狸精”这种神话色彩的人物，是不是违反您之前说的“无神论”？</h2><p>这个问题稍微复杂点。这故事发生于 1994 年秋天，圣小开才 12 周岁不到。</p><p><strong>他只是个孩子呀！！！</strong></p><p>被一系列恐怖的景象吓坏，产生幻觉您可以理解吧！</p><p>而且后来开讲给陈因提听时，她并未相信。说明这也可能只是开一脸正经讲的鬼故事而已，作为最了解开的陈因提都如此认为，读者有啥理由拿它当神话看？</p><h3 id="原来如此，这可以理解为主角的性格塑造吧！">原来如此，这可以理解为主角的性格塑造吧！</h3><p>没错！您想，大部分男人要三四十岁才会遇到狐狸精，而开十岁出头就遇到，而且免疫，这难道不够装逼？</p><h2 id="5-稣，您又赢了！另外，“纯狐连玉”和之前出现的“胡小玉”是同一只吗？">5. 稣，您又赢了！另外，“纯狐连玉”和之前出现的“胡小玉”是同一只吗？</h2><p>显然不是呀！您看，演员都不是同一个！胡小玉是白色的，长相冷艳，气质是性感魅惑型。纯狐连玉，光看姓，就知道是上古神话风，走的是庄严又有点幽默的大姐路线。</p><p>胡小玉只存在于圣小开梦中，是圣小开见过的某类美女的凝神具体。名字很像，主要原因是胡小玉的最初形象是按照纯狐连玉梦见的，后来再也没见过纯狐连玉，形象不断模糊，又不断得到其她美女形象加强就进化出胡小玉。</p><p>纯狐连玉是真的狐狸精，而胡小玉更像人。</p><h2 id="6-稣的梦究竟是什么奇妙的世界？能用最贴切的语言描述分享吗？">6. 稣的梦究竟是什么奇妙的世界？能用最贴切的语言描述分享吗？</h2><ul><li><p>脑的触感比人体表面最敏感的皮肤还敏感。</p></li><li><p>爱情里只有鲸神链那部分才是最深刻的。</p></li></ul><h2 id="7-陈博士的干儿子长生和古思是怎么回事？">7. 陈博士的干儿子长生和古思是怎么回事？</h2><p>孟长生是早期基因编辑婴儿里比较成功的一个，性别染色体来自圣小开，其它基因都来自陈博士，以此为模板优化而成。所以被陈博士收为干儿子，并安排在贾总公司担任一个小领导。</p><p>古思是完全基因编辑人造人，只有卵巢是根据陈博士的基因设计，专门用于代孕。这在未来很流行哦！现在大家可能还难以接受。</p><p>没关系，等大家有钱再说。</p><h2 id="8-还是有很多读者表示看不懂，您能再提示一下吗？">8. 还是有很多读者表示看不懂，您能再提示一下吗？</h2><p>一部剧能不能看，首先选角很重要，然后靠演员、导演、剧组的努力配合，后期制作、宣传也很重要。</p><p>稣只是一个编剧啊！看不懂绝壁不是编剧的问题，您下次采访一下各位演员吧！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/images/2019/20190207-luyu.jpg&quot; alt=&quot;听说鲁豫要来采访稣&quot;&gt;&lt;br&gt;
&lt;img src=&quot;/images/2020/20200131-gauze-mask.png&quot; alt=&quot;请戴口罩采访&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="鲸神魂裂" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%AD%82%E8%A3%82/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神前传【11】</title>
    <link href="https://blog.umu618.com/2020/06/07/god-of-debug-prequel-11/"/>
    <id>https://blog.umu618.com/2020/06/07/god-of-debug-prequel-11/</id>
    <published>2020-06-07T10:45:40.000Z</published>
    <updated>2023-08-05T13:01:27.018Z</updated>
    
    <content type="html"><![CDATA[<h2 id="2042-年">2042 年</h2><p>陈博士：长生最近怎么样？</p><p>贾力劣：工作尽心尽职无可挑剔，就是好多女员工都打他的主意。</p><p>陈博士：难道身份泄露了？</p><p>贾力劣：不会！这事严格保密，连他自己都不知道。</p><p>陈博士：那就好。</p><p>贾力劣：不过您的干儿子年纪也不小，女朋友经常换，坚持不结婚，难免被人说三道四。</p><p>陈博士：嗨，这就是基因的力量，思想都差不多。</p><p>贾力劣：嗯，他的基因几乎和您一样。</p><p>陈博士：他比我还过分，我只是不想生孩子，找个丁克结婚还是可以的。</p><p>贾力劣：女朋友换得勤，恐被称渣男呢。</p><p>陈博士：他只是个孩子呀！</p><p>贾力劣：哦！em……呃！那个，按您基因设计出来的代孕女孩已经送给开哥。</p><p>陈博士：很好。这才是正事！管我干儿子的私生活，活腻了？</p><p>贾力劣：是是是。她的卵细胞 100% 和您一样。您放一百个心。</p><p>陈博士：贾总办事就是靠谱，尤其是保密工作。</p><p>贾力劣：懂！相关资料已经销毁。</p><h2 id="1994-年">1994 年</h2><p>黄金灯已经是著名脑外科专家。他回到虎纠小县城度假的一个夜晚，遇到几个流氓为难大排档卖唱的小妹。</p><p>黄金灯：年轻人，文明点！</p><p>流氓头：摸个奶，我给钱就是，要你管啊！</p><p>黄金灯：小姑娘，你愿意吗？</p><p>小姑娘：不！不愿意。</p><p>黄金灯：听到没？这位姑娘不卖身。</p><p>流氓头：你谁啊？大叔！</p><p>黄金灯：我是一名脑外科医生。知道小李飞刀吗？</p><p>流氓头：哦？李医生？还飞刀！哈哈哈……</p><p>黄金灯亮刀：我这几把叫小灯飞刀，比小李飞刀厉害。</p><p>流氓头：大叔，你是不是脑子有问题啊？兄弟们，教训一下他！</p><p>黄金灯一出手，飞刀准确插在后面两个流氓鞋头，避开脚趾，将鞋钉在地上，刀拔都拔不动。</p><p>流氓发现往前走脚就会被刀切，知道遇到高手，吓得不敢动。</p><p>黄金灯：来。我不用飞刀，截拳道对付你。</p><p>流氓头跪倒：大叔！小的不识抬举，跟您道歉了。</p><p>黄金灯：转过去，跟小姑娘道歉。</p><p>小姑娘：大叔怎么称呼？</p><p>黄金灯：道释·圣小开。</p><h2 id="2003-年">2003 年</h2><p>陈因提：死开，你家的牌坊为什么写的是龙田氏？</p><p>圣小开：上面写的是：龙田圣心，无尽乾坤。</p><p>陈因提：瞎说，上面只有三个字！</p><p>圣小开：em？我怎么记得是八个字！</p><p>陈因提：又发神经？</p><p>圣小开：有可能……晚上安定后告诉你。</p><h2 id="1994-年-2">1994 年</h2><p>圣小开出生在道州德国鹰熊岛乾坤村，从小就很好奇村外面是什么。</p><p>累积无数次冲动，开终于打算勇敢地往西走，穿过盐田，去看看树木后面是什么！</p><p>虽然不远，却感觉走了很久。终于走到树木后面，是一条公路，横穿公路后是一片海沙田，听大人说这田盛产地瓜和花生。</p><p>强行穿过海沙田，是小土坡，再翻过去是一些河和另一些盐田，再过去就是海。</p><p>开明白，一路向西是无法走到远处的高山。心想：“试试向北，看那片树林后面是不是还是海？”</p><p>向右转！走着走着就是一个庙，再过去是灵堂。开想了三秒钟，可怕……还是绕过去吧！</p><p>但是开太天真了，虽然绕过灵堂，但它附近有一大堆土坟！于是为了避开它们，居然绕迷路！</p><p>平时当开要遇到危险时，都会有路人甲乙冒出来提醒，这次居然没有？</p><p>咦？那块石头上面好像有字！走进一看，不禁念出上面的字：“龙田圣心，无尽乾坤”。好酷的感觉！</p><p>纯狐连玉：这界碑下面是仙山公。</p><p>开转身一看，是个黄色衣装的漂亮的姐姐，便问：仙山公是谁？</p><p>纯狐连玉：你干妈的父亲。</p><p>圣小开：哦？可是我拜了两位干妈，您说的是哪位？</p><p>纯狐连玉：是姑婆祖。</p><p>圣小开：哦！原来是族谱第一人。</p><p>纯狐连玉：赶紧拜一拜。</p><p>圣小开双手合十俯身朝拜：好的。敢问姐姐又是谁？</p><p>纯狐连玉：我是仙山公陵墓的守护兽，纯狐连玉。</p><p>圣小开：什么？胡连玉？</p><p>纯狐连玉：纯狐，连玉。</p><p>圣小开：好的，小玉姐姐。</p><p>纯狐连玉：死囡仔，按辈分我和你姑婆祖同辈。</p><p>圣小开：婆婆好！</p><p>纯狐连玉：我是狐狸精。你不害怕？</p><p>圣小开：狐狸精？我还是孙悟空转世呢！</p><p>纯狐连玉：不怕也好。你跪下，给仙山公磕三个头，我可以实现你一个愿望。</p><p>圣小开：这么好康？我要长生不老。</p><p>纯狐连玉：死囡仔，活那么久干嘛？三千年就不错啦！</p><p>圣小开：成交！我磕。</p><p>磕完头，纯狐连玉已经不见。</p><h2 id="2003-年-2">2003 年</h2><p>陈因提：狐狸精都出来了！你真能做白日梦！</p><p>圣小开：我很严肃好不好！后来我还梦见过它，问它为什么选择我。</p><p>陈因提：它怎么说？</p><p>圣小开：说我是世间少有的能做很真实的连戏剧梦的人。</p><p>陈因提：好像很厉害的样子哦。但是这种能力有什么用？</p><p>圣小开：这种能力可以让我从梦中进入全人类，乃至全宇宙所有智慧生命的集体意识中。</p><p>陈因提：噗！然后呢？</p><p>圣小开：神不会救助任何个体，你懂吧？</p><p>陈因提：是啊，要不然神应该来治治你这惊人的幻想能力……</p><p>圣小开：不开玩笑，人类社会有很多问题不是在明面可以解决的，或者说这些问题也不需要从明面去解决，而应该通过观测集体意识从而影响它。</p><p>陈因提：好吧，你赢了，但是能具体点吗？</p><p>圣小开：很多问题的根本都是心灵问题。比如说，残疾人很敏感地发现别人看待他异样的眼光，这可能加强他对自己的嫌弃和遗憾。当你看到别人的问题，一个惊讶、困惑的眼神，对方可能解读成你看到他们差劲的一面，自觉得你会嫌弃他们，于是就烙下一个芥蒂。</p><p>陈因提：那你到底能做什么？</p><p>圣小开：我可以在睡着的时候进入集体意识去观测大家，让大家的意识明白不管好坏，神都不会遗弃他们。当我醒来世界就会更美好。</p><p>陈因提：那你好忙哦，赶紧睡……晚上来观测一下我的意识，看我的意识会不会打你。</p><p>圣小开：还好，像我这样的，地球上有 23 人。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;2042-年&quot;&gt;2042 年&lt;/h2&gt;
&lt;p&gt;陈博士：长生最近怎么样？&lt;/p&gt;
&lt;p&gt;贾力劣：工作尽心尽职无可挑剔，就是好多女员工都打他的主意。&lt;/p&gt;
&lt;p&gt;陈博士：难道身份泄露了？&lt;/p&gt;
&lt;p&gt;贾力劣：不会！这事严格保密，连他自己都不知道。&lt;/p&gt;
&lt;p&gt;陈</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="鲸神链" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%93%BE/"/>
    
  </entry>
  
  <entry>
    <title>CComPtr 和 CComQIPtr</title>
    <link href="https://blog.umu618.com/2020/05/31/umutech-ccomptr-and-ccomqiptr/"/>
    <id>https://blog.umu618.com/2020/05/31/umutech-ccomptr-and-ccomqiptr/</id>
    <published>2020-05-31T08:22:06.000Z</published>
    <updated>2023-08-05T13:01:27.018Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题">问题</h2><p>CComPtr 和 CComQIPtr 长得这么像，有啥关系和区别？</p><h2 id="分析">分析</h2><ol><li><p>看代码 CComQIPtr 继承自 CComPtr，CComPtr&lt;IUnknown&gt; 没问题，但 CComQIPtr&lt;IUnknown&gt; 报错，应该使用 CComQIPtr&lt;IUnknown, &amp;IID_IUnknown&gt;。</p></li><li><p>不同类型 CComPtr&lt;&gt; 不能直接互相构造；CComQIPtr&lt;&gt; 则可以，因为 CComQIPtr 会进行目标类型的 QueryInterface。</p></li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CComPtr&lt;IUnknown&gt; u;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"><span class="function">CComPtr&lt;IDispatch&gt; <span class="title">d</span><span class="params">(u)</span></span>;    <span class="comment">// error</span></span><br><span class="line"></span><br><span class="line"><span class="function">CComQIPtr&lt;IDispatch&gt; <span class="title">d</span><span class="params">(u)</span></span>;    <span class="comment">// right, will call QueryInterface</span></span><br></pre></td></tr></table></figure><ol start="3"><li>两者构造/赋值时，都会进行 AddRef，如果不想 AddRef，可以使用裸指针（必须十分清楚自己在干嘛！）。</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">CComPtr&lt;IUnknown&gt; u;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"><span class="function">CComPtr&lt;IUnknown&gt; <span class="title">u1</span><span class="params">(u)</span></span>;    <span class="comment">// will call AddRef</span></span><br><span class="line"></span><br><span class="line"><span class="function">CComQIPtr&lt;IDispatch&gt; <span class="title">d</span><span class="params">(u)</span></span>;    <span class="comment">// will call QueryInterface(call AddRef impliedly)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">auto</span> raw = <span class="keyword">static_cast</span>&lt;IDispatch*&gt;(u.p); <span class="comment">// won&#x27;t call AddRef</span></span><br></pre></td></tr></table></figure><ol start="4"><li>两者赋值时，小部分行为不同。以下模板使得，当等号两边类型不同时，CComPtr 为左值和 CComQIPtr 为左值，表现不同。</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// CComPtr</span></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Q&gt;</span><br><span class="line">T* <span class="keyword">operator</span>=(_Inout_ <span class="keyword">const</span> CComPtr&lt;Q&gt;&amp; lp) <span class="keyword">throw</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">this</span>-&gt;IsEqualObject(lp) )</span><br><span class="line">    &#123;</span><br><span class="line">        AtlComQIPtrAssign2((IUnknown**)&amp;<span class="keyword">this</span>-&gt;p, lp, __uuidof(T));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结">总结</h2><ul><li><p>您可以忘记 CComPtr，只使用 CComQIPtr；</p></li><li><p>或者，尽量使用 CComPtr，只在必要时使用 CComQIPtr。</p></li></ul><h2 id="测试代码">测试代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;atlbase.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;atlcom.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;atlstr.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">MIDL_INTERFACE(<span class="string">&quot;00554d55-0000-0000-C000-000000000041&quot;</span>)</span><br><span class="line">IA : <span class="keyword">public</span> IUnknown &#123;</span><br><span class="line"> <span class="keyword">public</span>:</span><br><span class="line">  <span class="function"><span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE <span class="title">FuncA</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">MIDL_INTERFACE(<span class="string">&quot;00554d55-0000-0000-C000-000000000042&quot;</span>)</span><br><span class="line">IB : <span class="keyword">public</span> IA &#123;</span><br><span class="line"> <span class="keyword">public</span>:</span><br><span class="line">  <span class="function"><span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE <span class="title">FuncB</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> :</span> <span class="keyword">public</span> IA &#123;</span><br><span class="line"> <span class="keyword">public</span>:</span><br><span class="line">  ~A() &#123; <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; __FUNCTION__ &lt;&lt; <span class="string">&quot;\n&quot;</span>; &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function">HRESULT STDMETHODCALLTYPE <span class="title">QueryInterface</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">      <span class="comment">/* [in] */</span> REFIID riid,</span></span></span><br><span class="line"><span class="function"><span class="params">      <span class="comment">/* [iid_is][out] */</span> _COM_Outptr_ <span class="keyword">void</span> __RPC_FAR* __RPC_FAR* ppvObject)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (__uuidof(IA) == riid || __uuidof(IUnknown) == riid) &#123;</span><br><span class="line">      *ppvObject = <span class="keyword">this</span>;</span><br><span class="line">      <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; __FUNCTION__ &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">      AddRef();</span><br><span class="line">      <span class="keyword">return</span> S_OK;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> E_NOINTERFACE;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function">ULONG STDMETHODCALLTYPE <span class="title">AddRef</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    ++ref_;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; __FUNCTION__ &lt;&lt; <span class="string">&quot;: &quot;</span> &lt;&lt; ref_ &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> ref_;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function">ULONG STDMETHODCALLTYPE <span class="title">Release</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    --ref_;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; __FUNCTION__ &lt;&lt; <span class="string">&quot;: &quot;</span> &lt;&lt; ref_ &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="number">0</span> == ref_) &#123;</span><br><span class="line">      <span class="keyword">delete</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ref_;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function">HRESULT STDMETHODCALLTYPE <span class="title">FuncA</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; __FUNCTION__ &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> S_OK;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">private</span>:</span><br><span class="line">  <span class="keyword">int</span> ref_ = <span class="number">0</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span> :</span> <span class="keyword">public</span> IB &#123;</span><br><span class="line"> <span class="keyword">public</span>:</span><br><span class="line">  ~B() &#123; <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; __FUNCTION__ &lt;&lt; <span class="string">&quot;\n&quot;</span>; &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function">HRESULT STDMETHODCALLTYPE <span class="title">QueryInterface</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">      <span class="comment">/* [in] */</span> REFIID riid,</span></span></span><br><span class="line"><span class="function"><span class="params">      <span class="comment">/* [iid_is][out] */</span> _COM_Outptr_ <span class="keyword">void</span> __RPC_FAR* __RPC_FAR* ppvObject)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (__uuidof(IB) == riid || __uuidof(IUnknown) == riid) &#123;</span><br><span class="line">      *ppvObject = <span class="keyword">this</span>;</span><br><span class="line">      <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; __FUNCTION__ &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">      AddRef();</span><br><span class="line">      <span class="keyword">return</span> S_OK;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> E_NOINTERFACE;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function">ULONG STDMETHODCALLTYPE <span class="title">AddRef</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    ++ref_;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; __FUNCTION__ &lt;&lt; <span class="string">&quot;: &quot;</span> &lt;&lt; ref_ &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> ref_;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function">ULONG STDMETHODCALLTYPE <span class="title">Release</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    --ref_;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; __FUNCTION__ &lt;&lt; <span class="string">&quot;: &quot;</span> &lt;&lt; ref_ &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="number">0</span> == ref_) &#123;</span><br><span class="line">      <span class="keyword">delete</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ref_;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function">HRESULT STDMETHODCALLTYPE <span class="title">FuncA</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; __FUNCTION__ &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> S_OK;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function">HRESULT STDMETHODCALLTYPE <span class="title">FuncB</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; __FUNCTION__ &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> S_OK;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">private</span>:</span><br><span class="line">  <span class="keyword">int</span> ref_ = <span class="number">0</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function">HRESULT <span class="title">CreateObject</span><span class="params">(REFIID riid,</span></span></span><br><span class="line"><span class="function"><span class="params">                     _COM_Outptr_ <span class="keyword">void</span> __RPC_FAR* __RPC_FAR* ppvObject)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (__uuidof(IA) == riid || __uuidof(IUnknown) == riid) &#123;</span><br><span class="line">    <span class="keyword">auto</span> p = <span class="keyword">new</span> A;</span><br><span class="line">    p-&gt;QueryInterface(riid, ppvObject);</span><br><span class="line">    <span class="keyword">return</span> S_OK;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (__uuidof(IB) == riid) &#123;</span><br><span class="line">    <span class="keyword">auto</span> p = <span class="keyword">new</span> B;</span><br><span class="line">    p-&gt;QueryInterface(riid, ppvObject);</span><br><span class="line">    <span class="keyword">return</span> S_OK;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> E_NOINTERFACE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;---- Raw pointer:\n&quot;</span>;</span><br><span class="line">  &#123;</span><br><span class="line">    IUnknown* u;</span><br><span class="line">    HRESULT hr = CreateObject(__uuidof(IA), <span class="keyword">reinterpret_cast</span>&lt;<span class="keyword">void</span>**&gt;(&amp;u));</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; hr &lt;&lt; <span class="string">&quot;, &quot;</span> &lt;&lt; u &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    <span class="keyword">auto</span> a = <span class="keyword">static_cast</span>&lt;IA*&gt;(u);</span><br><span class="line">    a-&gt;FuncA();</span><br><span class="line">    a-&gt;Release();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;---- ctor\n&quot;</span>;</span><br><span class="line">  &#123;</span><br><span class="line">    CComPtr&lt;IUnknown&gt; u;</span><br><span class="line">    HRESULT hr = CreateObject(__uuidof(IUnknown), <span class="keyword">reinterpret_cast</span>&lt;<span class="keyword">void</span>**&gt;(&amp;u));</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; hr &lt;&lt; <span class="string">&quot;, &quot;</span> &lt;&lt; u &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    <span class="function">CComPtr&lt;IUnknown&gt; <span class="title">u2</span><span class="params">(u)</span></span>;  <span class="comment">// will call AddRef</span></span><br><span class="line">    <span class="function">CComQIPtr&lt;IA&gt; <span class="title">a</span><span class="params">(u)</span></span>;       <span class="comment">// will call QueryInterface(call AddRef impliedly)</span></span><br><span class="line">    <span class="function">CComQIPtr&lt;IB&gt; <span class="title">b</span><span class="params">(a)</span></span>;       <span class="comment">// will call QueryInterface(call AddRef impliedly)</span></span><br><span class="line">    a-&gt;FuncA();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;---- CComPtr A=B:\n&quot;</span>;</span><br><span class="line">  &#123;</span><br><span class="line">    CComPtr&lt;IUnknown&gt; u;</span><br><span class="line">    HRESULT hr = CreateObject(__uuidof(IB), <span class="keyword">reinterpret_cast</span>&lt;<span class="keyword">void</span>**&gt;(&amp;u));</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; hr &lt;&lt; <span class="string">&quot;, &quot;</span> &lt;&lt; u &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    CComPtr&lt;IA&gt; a;</span><br><span class="line">    a = u;  <span class="comment">// will call QueryInterface(call AddRef impliedly)</span></span><br><span class="line">    <span class="keyword">if</span> (a) &#123;</span><br><span class="line">      a-&gt;FuncA();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    CComPtr&lt;IB&gt; b;</span><br><span class="line">    b = u;</span><br><span class="line">    <span class="keyword">if</span> (b) &#123;</span><br><span class="line">      b-&gt;FuncA();</span><br><span class="line">      b-&gt;FuncB();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// template&lt;T, Q&gt;</span></span><br><span class="line">    a = b;  <span class="comment">// failed</span></span><br><span class="line">    <span class="keyword">if</span> (a) &#123;</span><br><span class="line">      <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;failed!\n&quot;</span>;</span><br><span class="line">      a-&gt;FuncA();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;---- CComQIPtr A=CComPtr&lt;B&gt;:\n&quot;</span>;</span><br><span class="line">  &#123;</span><br><span class="line">    CComPtr&lt;IUnknown&gt; u;</span><br><span class="line">    HRESULT hr = CreateObject(__uuidof(IB), <span class="keyword">reinterpret_cast</span>&lt;<span class="keyword">void</span>**&gt;(&amp;u));</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; hr &lt;&lt; <span class="string">&quot;, &quot;</span> &lt;&lt; u &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    CComQIPtr&lt;IA&gt; a;</span><br><span class="line">    a = u;  <span class="comment">// will call QueryInterface(call AddRef impliedly)</span></span><br><span class="line">    <span class="keyword">if</span> (a) &#123;</span><br><span class="line">      a-&gt;FuncA();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    CComPtr&lt;IB&gt; b;</span><br><span class="line">    b = u;  <span class="comment">// will call QueryInterface(call AddRef impliedly)</span></span><br><span class="line">    <span class="keyword">if</span> (b) &#123;</span><br><span class="line">      b-&gt;FuncA();</span><br><span class="line">      b-&gt;FuncB();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    a = b;  <span class="comment">// will call AddRef</span></span><br><span class="line">    <span class="keyword">if</span> (a) &#123;</span><br><span class="line">      <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;OK! B is-a A\n&quot;</span>;</span><br><span class="line">      a-&gt;FuncA();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;---- CComQIPtr A=CComQIPtr&lt;B&gt;:\n&quot;</span>;</span><br><span class="line">  &#123;</span><br><span class="line">    CComPtr&lt;IUnknown&gt; u;</span><br><span class="line">    HRESULT hr = CreateObject(__uuidof(IB), <span class="keyword">reinterpret_cast</span>&lt;<span class="keyword">void</span>**&gt;(&amp;u));</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; hr &lt;&lt; <span class="string">&quot;, &quot;</span> &lt;&lt; u &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    CComQIPtr&lt;IA&gt; a;</span><br><span class="line">    a = u;  <span class="comment">// will call QueryInterface(call AddRef impliedly)</span></span><br><span class="line">    <span class="keyword">if</span> (a) &#123;</span><br><span class="line">      a-&gt;FuncA();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    CComQIPtr&lt;IB&gt; b;</span><br><span class="line">    b = u;  <span class="comment">// will call QueryInterface(call AddRef impliedly)</span></span><br><span class="line">    <span class="keyword">if</span> (b) &#123;</span><br><span class="line">      b-&gt;FuncA();</span><br><span class="line">      b-&gt;FuncB();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    a = b;  <span class="comment">// will call AddRef</span></span><br><span class="line">    <span class="keyword">if</span> (a) &#123;</span><br><span class="line">      <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;OK! B is-a A\n&quot;</span>;</span><br><span class="line">      a-&gt;FuncA();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;---- CComPtr B=A:\n&quot;</span>;</span><br><span class="line">  &#123;</span><br><span class="line">    CComPtr&lt;IUnknown&gt; u;</span><br><span class="line">    HRESULT hr = CreateObject(__uuidof(IUnknown), <span class="keyword">reinterpret_cast</span>&lt;<span class="keyword">void</span>**&gt;(&amp;u));</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; hr &lt;&lt; <span class="string">&quot;, &quot;</span> &lt;&lt; u &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    CComPtr&lt;IA&gt; a;</span><br><span class="line">    a = u;  <span class="comment">// will call QueryInterface(call AddRef impliedly)</span></span><br><span class="line">    <span class="keyword">if</span> (a) &#123;</span><br><span class="line">      a-&gt;FuncA();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    CComPtr&lt;IB&gt; b;</span><br><span class="line">    b = u;  <span class="comment">// failed</span></span><br><span class="line">    <span class="keyword">if</span> (b) &#123;</span><br><span class="line">      b-&gt;FuncA();</span><br><span class="line">      b-&gt;FuncB();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;---- CComQIPtr B=A:\n&quot;</span>;</span><br><span class="line">  &#123;</span><br><span class="line">    CComPtr&lt;IUnknown&gt; u;</span><br><span class="line">    HRESULT hr = CreateObject(__uuidof(IUnknown), <span class="keyword">reinterpret_cast</span>&lt;<span class="keyword">void</span>**&gt;(&amp;u));</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; hr &lt;&lt; <span class="string">&quot;, &quot;</span> &lt;&lt; u &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    CComQIPtr&lt;IA&gt; a;</span><br><span class="line">    a = u;  <span class="comment">// will call QueryInterface(call AddRef impliedly)</span></span><br><span class="line">    <span class="keyword">if</span> (a) &#123;</span><br><span class="line">      a-&gt;FuncA();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    CComQIPtr&lt;IB&gt; b;</span><br><span class="line">    b = u;  <span class="comment">// failed</span></span><br><span class="line">    <span class="keyword">if</span> (b) &#123;</span><br><span class="line">      b-&gt;FuncA();</span><br><span class="line">      b-&gt;FuncB();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;---- CComQIPtr&lt;IB&gt;:\n&quot;</span>;</span><br><span class="line">  &#123;</span><br><span class="line">    CComQIPtr&lt;IB&gt; b;</span><br><span class="line">    HRESULT hr = CreateObject(__uuidof(IB), <span class="keyword">reinterpret_cast</span>&lt;<span class="keyword">void</span>**&gt;(&amp;b));</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; hr &lt;&lt; <span class="string">&quot;, &quot;</span> &lt;&lt; b &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    b-&gt;FuncA();</span><br><span class="line">    b-&gt;FuncB();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;---- CComPtr&lt;IA&gt;:\n&quot;</span>;</span><br><span class="line">  &#123;</span><br><span class="line">    CComPtr&lt;IA&gt; a;</span><br><span class="line">    HRESULT hr = CreateObject(__uuidof(IB), <span class="keyword">reinterpret_cast</span>&lt;<span class="keyword">void</span>**&gt;(&amp;a));</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; hr &lt;&lt; <span class="string">&quot;, &quot;</span> &lt;&lt; a &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    a-&gt;FuncA();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;---- CComPtr&lt;IUnknown&gt;:\n&quot;</span>;</span><br><span class="line">  &#123;</span><br><span class="line">    CComPtr&lt;IUnknown&gt; u;</span><br><span class="line">    HRESULT hr = CreateObject(__uuidof(IA), <span class="keyword">reinterpret_cast</span>&lt;<span class="keyword">void</span>**&gt;(&amp;u));</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; hr &lt;&lt; <span class="string">&quot;, &quot;</span> &lt;&lt; u &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    <span class="keyword">auto</span> a = <span class="keyword">static_cast</span>&lt;IA*&gt;(u.p);</span><br><span class="line">    a-&gt;FuncA();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;问题&quot;&gt;问题&lt;/h2&gt;
&lt;p&gt;CComPtr 和 CComQIPtr 长得这么像，有啥关系和区别？&lt;/p&gt;
&lt;h2 id=&quot;分析&quot;&gt;分析&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;看代码 CComQIPtr 继承自 CComPtr，CComPtr&amp;lt;IUnknown</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="windows" scheme="https://blog.umu618.com/tags/windows/"/>
    
    <category term="debug" scheme="https://blog.umu618.com/tags/debug/"/>
    
    <category term="cpp" scheme="https://blog.umu618.com/tags/cpp/"/>
    
    <category term="atl" scheme="https://blog.umu618.com/tags/atl/"/>
    
  </entry>
  
  <entry>
    <title>用 VS2019 应该尽量链接带有 Spectre 缓解措施的库</title>
    <link href="https://blog.umu618.com/2020/05/19/umutech-vs2019-spectre/"/>
    <id>https://blog.umu618.com/2020/05/19/umutech-vs2019-spectre/</id>
    <published>2020-05-19T09:29:35.000Z</published>
    <updated>2023-08-05T13:01:27.018Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题">问题</h2><p>愉快地装完 VS2019，编译一个使用 ATL 的工程，结果失败。</p><blockquote><p>LINK : fatal error LNK1104: cannot open file ‘atls.lib’</p></blockquote><h2 id="分析">分析</h2><p>看 VC++ Directories 里的 Library Directories，有一个 <code>C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\atlmfc\lib\spectre\x64</code>，但这个目录并没有 <code>atls.lib</code>。</p><p>反而 <code>C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\atlmfc\lib\x64</code> 目录下有 <code>atls.lib</code>。</p><h2 id="解决">解决</h2><p>安装 VS 时，应该选择“带有 Spectre 缓解措施、适用于最新 v142 生成工具的 C++ ATL (x86 和 x64)”。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;问题&quot;&gt;问题&lt;/h2&gt;
&lt;p&gt;愉快地装完 VS2019，编译一个使用 ATL 的工程，结果失败。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;LINK : fatal error LNK1104: cannot open file ‘atls.lib’&lt;/p&gt;
&lt;/b</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="windows" scheme="https://blog.umu618.com/tags/windows/"/>
    
    <category term="debug" scheme="https://blog.umu618.com/tags/debug/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神前传【10】</title>
    <link href="https://blog.umu618.com/2020/05/17/god-of-debug-prequel-10/"/>
    <id>https://blog.umu618.com/2020/05/17/god-of-debug-prequel-10/</id>
    <published>2020-05-17T15:09:39.000Z</published>
    <updated>2023-08-05T13:01:27.018Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1998-年，周易和萧竫告别">1998 年，周易和萧竫告别</h2><p>周易：我准备去南洋研究电子现金。</p><p>萧竫：老师，您不是一直专研人工智能吗？为啥突然改变方向？</p><p>周易：老师对人工智能的现状太失望了，即使再过十年、二十年也没有一种力量能够将人工智能真正落地。</p><p>萧竫：三十年、四十年呢？</p><p>周易：老师并没有放弃！必须有人做长远打算，做好未来的铺垫。</p><p>萧竫：您是说电子现金……就是人工智能未来的希望？</p><p>周易：没错！人工智能最终要依靠“钱”来作为连结，把世界上大量机器连接起来，才可能产生机器意识。而这个“钱”，不能是现在的纸币，应该是电子现金。南洋有些国家需要匿名电子货币溪黑签，有实施的土壤。</p><p>萧竫：我可以和您一起去吗？</p><p>周易：别。你还年轻，有大好前途。好好学习，找个同龄人。</p><h2 id="2003-年，周易和施付同居">2003 年，周易和施付同居</h2><p>一天晚上，周易和施付正要休息，门外来了一个女子按门铃。</p><p>施付：聪哥，这么晚了，还有人找你？</p><p>周易：奇怪呀！外面还下着雨呢！</p><p>周易：萧竫！你这么跑来菲律宾了？</p><p>周易对房内的施付说：是我的学生。</p><p>萧竫：老师，您成家了？</p><p>周易：是啊，你呢？</p><p>萧竫：没，还没……国内发生了很严重的疫情，现在很多人失业，我研究的人工智能领域一直没什么突破，考虑和老师一样，改研究电子现金，您能帮帮我吗？</p><p>周易：你需要什么？</p><p>萧竫：您有没有还没发布的电子现金方面的论文？</p><p>周易：这……有是有，不过我才开始构思，打算过几年匿名发表的。</p><p>萧竫脸色一变：匿名发表？</p><p>周易：老师现在很低调，在菲律宾名字都改了，你是怎么找到这儿的？</p><p>萧竫：我可找得辛苦了。</p><p>施付：要不要进来？</p><p>萧竫：不用，不用。我该走了。再见老师。</p><p>施付：她是中国人？</p><p>周易：是啊，她是我在中国时的女朋友。</p><p>施付：哦，我记得你提过她。怎么找到这里来的？</p><p>周易：不对劲。我怀疑她被不明势力控制，可能是来套我的研究成果的，看来我的身份已经不安全。</p><p>施付：跟我回日本？</p><p>周易：好。</p><h2 id="2042-年">2042 年</h2><p>古思：这个时间点？莫非周老师就是……</p><p>圣小开：嗯！后来世界出现区块链，每一个链是一个机器神经元，无数机器神经元通过跨链技术组成一个机器脑，这就是真·人工智能的雏形，最后在量子计算机里发展成现在的样子。</p><p>古思：没想到是这样。更没想到周老师居然还谈过两次恋爱！</p><p>圣小开：谁都年轻过！</p><p>古思：也是。爷年轻时，也是艳福不浅吧？</p><p>圣小开：年轻时……em，很年轻，四五岁时，就有两个女孩子说长大以后要嫁给爷。</p><p>古思：哦？这么早的事情，爷还记得住？</p><p>圣小开：也不是记得特别清楚，因为后来那两个小女孩，就再也找不到了，直到大学毕业后，在母校莫名其妙地认识一个和那两个小女孩里的妹妹同名同姓的学妹。</p><h2 id="1987-年夏天">1987 年夏天</h2><p>开被父母送到姥姥家，李家村寄养。村口有一个池塘，一片榕树林，据说那是一棵榕树，四百年才长成一片。</p><p>池塘的台阶常有人洗衣服，面对池塘，左手边有一个牛棚。</p><p>背向池塘，往村里走，会过一条小沟，然后左边有一棵柚子树。</p><p>大树下面好乘凉，夏天小伙伴们都在榕树下玩。慢慢地认识笑李子和一对双胞胎。</p><p>笑李子本名李小谢，他说叫他谢小李也行，因为他爸姓李，他妈姓谢，但开习惯叫他笑李子，因为他很爱笑，每天拼命要把脸笑到瘫。</p><p>双胞胎姐姐叫李星觎，妹妹叫李冰月，她们都很喜欢开。有一次冰月为了单独和开玩耍，把星觎骗到牛棚里，关起来，星觎从小就很淡定，居然就在里面站着，独自玩了很久才被回来的养牛人解救出来。</p><p>后来冰月觉得很对不起姐姐，就把开让给姐姐了。</p><p>李冰月：姐姐以后嫁给开当大老婆，我当小老婆。</p><h2 id="2042-年-2">2042 年</h2><p>古思：好可爱啊，嘻嘻。</p><p>圣小开：不不不，这个故事不可爱，还十分恐怖。</p><p>古思：哦？后来怎么了？</p><p>圣小开：后来爷长大了，去调查这对双胞胎，李家村的大人们都说没有这么一对和爷同龄的双胞胎，甚至村里已经几十年没有女双胞胎！但笑李子是存在的，他比爷小几个月。</p><p>古思：那位叫李冰月的学妹呢？</p><p>圣小开：肯定不是，学妹是 1997 年的。据说村里的女双胞胎要追溯到 1955 年，她们在 1959 年 1 月 3 日就死于战火……</p><p>古思：这不科学啊！</p><p>圣小开：是很不科学，爷长大后还梦见过她们一次。</p><h2 id="梦境">梦境</h2><p>李冰月：开。</p><p>圣小开：冰月？你都长这么大了？</p><p>李冰月：哈哈，你也是呀。</p><p>圣小开：星觎呢？</p><p>李冰月：被我关在牛棚呢！嘻嘻。</p><p>圣小开：什么？！关这么多年，不会饿死了吧！</p><p>李冰月：呀！是哦，咱们快去救她。</p><p>圣小开脑补一副骷髅，心惊肉跳来到牛棚，开门瞬间惊呆了。</p><p>李星觎：妹妹，你怎么长这么大了？</p><p>李冰月：姐姐，你怎么保持 4 岁的？</p><p>圣小开：这个地方是时间隧道吗？咱们赶紧离开。</p><p>李星觎：不行，我好饿，没力气离开。</p><p>李冰月：我去给姐姐拿吃的。</p><p>李星觎：别把我一个人留在这里。</p><p>圣小开：你这么小，我抱你出去就好。</p><p>走出牛棚，星觎也变成一个大姑娘。圣小开带她们回一栋三层楼。</p><p>圣小开：你们俩是 1959 年 1 月 3 日就死于战火的那对双胞胎吗？</p><p>李星觎：不是呀。我们是池塘里的美人鱼，我们不能离开水太久。</p><p>后来三层楼都被水注满，她们在楼内快乐地游玩。圣小开无法呼吸，赶紧找出口，所有窗们都堵死，最后找到二楼楼梯的小天窗逃出来。但二楼外面没有水，摔下来吓醒。</p><h2 id="2042-年-3">2042 年</h2><p>古思：鬼魂和美人鱼都不可能，她们也许也是被父母临时寄养在李家村的吧，就和爷一样。</p><p>圣小开：希望是，如果真是这样，那爷还有希望找到她们。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1998-年，周易和萧竫告别&quot;&gt;1998 年，周易和萧竫告别&lt;/h2&gt;
&lt;p&gt;周易：我准备去南洋研究电子现金。&lt;/p&gt;
&lt;p&gt;萧竫：老师，您不是一直专研人工智能吗？为啥突然改变方向？&lt;/p&gt;
&lt;p&gt;周易：老师对人工智能的现状太失望了，即使再过十年、二十年也没有一种</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="鲸神链" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%93%BE/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神前传【9】</title>
    <link href="https://blog.umu618.com/2020/05/05/god-of-debug-prequel-9/"/>
    <id>https://blog.umu618.com/2020/05/05/god-of-debug-prequel-9/</id>
    <published>2020-05-05T15:01:03.000Z</published>
    <updated>2023-08-05T13:01:27.018Z</updated>
    
    <content type="html"><![CDATA[<p>自从过去、现在、未来佛都圆寂后，世界进入七鹰劫，人间爱欲繁华，天堂地狱皆被同化。</p><p>1976 年，黄金灯在樱国谈恋爱，顺便读研。他本科是读计算机的，理想是实现脑机合一式的意识永生，但由于时代落后，他慢慢意识到，这个技术在他的时代是无法实现的，于是决定改读脑科医学，打算通过克隆加换脑手术让生命延长。</p><p>然而现实总是背离理想，这是一个血腥的世界，满地人体器官，即使在大街上散步，他的眼里也都是血红色一片，随时要小心踩到血肉。</p><blockquote><p>血，一片一片一片，拼出你我的缘分。我的爱因你而专生，你的手摸出我的心疼。</p></blockquote><p>由于场面过度血腥，稣吓醒了！</p><h2 id="2042-年，床上">2042 年，床上</h2><p>圣小开：“你怎么没睡？”</p><p>古思：“才几分钟，还没入睡呢？”</p><p>圣小开：“什么？爷都已经做了一个梦，吓醒了！”</p><p>古思：“什么梦？给我讲讲？”</p><p>圣小开：“虽然是梦，但却是真实故事，只不过主角是黄金灯大师。”</p><h2 id="1976-年">1976 年</h2><p>东湖有个湖心岛叫樱花岛，是谈恋爱的好地方。</p><p>黄金灯心想：“去樱花岛吸吸天地灵气，也许我还有救。”</p><p>旅游船荷载 26 人，他认真地数了一遍救生衣，确实有 26 个。习惯性地环扫一番，透视人头，都是妖魔鬼怪，突然视线停留在一个美女脸上，有皮肤的，英气逼人，而且似乎也是中国人。</p><p>男女之间的故事都从八哥开始……船出八哥，柴油机罢工，老板说：“大家不用慌，很快就到湖心，我们用竹竿撑过去。”</p><p>又过了一会儿，船夫感觉竹竿变沉了，好像插到一个东西，提出水面，是一块骨盆……引起恐慌。</p><p>黄金灯专业地站出来说：“我上过人体解剖课，这个一定是人类的骨盆，很可能是个 20 岁左右的年轻男子。”</p><p>美女也专业地站出来说：“我是实习警察，最近确实有个 21 岁的失踪男子。”</p><p>黄金灯：“凶手或帮凶应该是船夫，知道这里深水区里有肉食性鳗鱼，所以把尸体扔到这喂鱼。”</p><p>美女：“怎么防止尸体浮起来呢？”</p><p>黄金灯：“绑块石头就行。”</p><h2 id="2042-年，床上-2">2042 年，床上</h2><p>古思：“好像是个不吉利的开头！”</p><p>圣小开：“结尾其实也不太好。”</p><h2 id="1976-年，樱花岛">1976 年，樱花岛</h2><p>黄金灯：“你好，警官，我是东湖边上医学院的学生，黄金灯。您好像也是中国人？”</p><p>美女：“原来是医学院高材生！我爸爸是樱国人，妈妈是中国人，我的中文名叫施付。”</p><p>黄金灯：“施付？em……我还是叫你的樱文名吧！”</p><p>施付：“哦，那你就叫我京子吧！”</p><p>黄金灯：“京子！”心想：“怎么不是惠子……”</p><p>施付：“你今天不用上课吗？”</p><p>黄金灯：“我晕血，出来放松一下。”</p><p>施付：“学医的，还晕血？”</p><p>黄金灯：“是我想得太简单了，还没脱敏吧！”</p><p>施付：“你刚才不是很淡定？”</p><p>黄金灯：“是哦，好像没那么恶心了！咦！我现在看世界，不是血腥模式了！！”</p><p>施付：“嗯嗯，你的专业很有用，要加油！”</p><p>黄金灯：“京子小姐，你呢？”</p><p>施付：“我来祭拜我爸爸，他葬在这岛上。”</p><p>黄金灯：“葬在岛上……原来你是富家小姐！怎么当警察呢？”</p><p>施付：“我爸爸死于黑帮暗杀，所以我立志要替他报仇，消灭黑帮。”</p><p>黄金灯：“好理想。但是以警察的身份报仇，不会有些不方便吗？”</p><p>施付：“是的，要以大局为重，不能公报私仇。”</p><h2 id="2042-年，床上-3">2042 年，床上</h2><p>古思：“后来他们恋爱了？”</p><p>圣小开：“对。大师遇到京子后，开始对解剖脱敏，并苦练小灯飞刀。”</p><p>古思：“小灯飞刀？”</p><p>圣小开：“是的。小灯飞刀是一种很厉害的武器，他还发明双刀并进。”</p><p>古思：“有什么用？”</p><h2 id="1976-年，东湖烟花">1976 年，东湖烟花</h2><p>星空下，黄金灯搂着京子一起看烟花。</p><p>黄金灯：“我已经练成小灯双刀！”</p><p>施付：“有什么用？”</p><p>黄金灯：“我试过单刀瞄准人体模型的心脏，却可能插在骨头上，致死率降低，而用双刀，都撞到胸骨的几率低很多。”</p><p>施付：“但是飞刀又不能比枪快呀！”</p><p>黄金灯：“飞刀比枪容易弄到，我可以用它保护你。”</p><h2 id="2042-年，床上-4">2042 年，床上</h2><p>古思：“理科男的浪漫？”</p><p>圣小开：“哈哈，后来大师真的用飞刀帮京子报仇了。”</p><p>古思：“他们后来在一起了吧？”</p><p>圣小开：“没有。大师后来回国，京子改行在南洋做投资遇到周老师，很狗血地结婚了。所以大师一直称呼周老师为情敌。”</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;自从过去、现在、未来佛都圆寂后，世界进入七鹰劫，人间爱欲繁华，天堂地狱皆被同化。&lt;/p&gt;
&lt;p&gt;1976 年，黄金灯在樱国谈恋爱，顺便读研。他本科是读计算机的，理想是实现脑机合一式的意识永生，但由于时代落后，他慢慢意识到，这个技术在他的时代是无法实现的，于是决定改读脑科医学</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="鲸神链" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%93%BE/"/>
    
  </entry>
  
  <entry>
    <title>跟 UMU 一起玩 OpenWRT（入门篇20）：WOL</title>
    <link href="https://blog.umu618.com/2020/05/04/umutech-openwrt-primer-20-wol/"/>
    <id>https://blog.umu618.com/2020/05/04/umutech-openwrt-primer-20-wol/</id>
    <published>2020-05-04T15:43:01.000Z</published>
    <updated>2023-08-05T13:01:27.018Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求">需求</h2><p>家里有个 PC，关机状态，想在公司远程开机，可是家里没人，怎么办？</p><h2 id="条件">条件</h2><ul><li><p>机器支持并开启 WOL (Wake On LAN)。</p></li><li><p>机器通过板载网卡连接路由器（USB 有线网卡不行）。</p></li></ul><h2 id="解决">解决</h2><ol><li><p>路由器需要有公网地址，如果没有，请参考《<a href="/2014/07/27/umutech-openwrt-primer-10-through-the-intranet/">跟 UMU 一起玩 OpenWRT（入门篇10）：穿透内网</a>》做中转，总之需要能 SSH 到路由器上。</p></li><li><p>路由器上安装 etherwake 或 wakeonlan。两者差别是：wakeonlan 是个 Perl 脚本，使用 UDP 包，不需要 root 权限。</p></li></ol><ul><li>如果是在 openwrt 直接使用 root 账号，建议用 etherwake。</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">opkg update</span><br><span class="line">opkg install etherwake</span><br><span class="line">etherwake MAC_ADDRESS_OF_PC</span><br></pre></td></tr></table></figure><ul><li>如果是 armbian，建议平时使用非 root，所以推荐 wakeonlan。</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install wakeonlan</span><br><span class="line">wakeonlan MAC_ADDRESS_OF_PC</span><br></pre></td></tr></table></figure><h2 id="测试">测试</h2><p>组装 PC 两台、Intel NUC 7i7BNH 一台测试用过。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;需求&quot;&gt;需求&lt;/h2&gt;
&lt;p&gt;家里有个 PC，关机状态，想在公司远程开机，可是家里没人，怎么办？&lt;/p&gt;
&lt;h2 id=&quot;条件&quot;&gt;条件&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;机器支持并开启 WOL (Wake On LAN)。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;机</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="embedded" scheme="https://blog.umu618.com/tags/embedded/"/>
    
    <category term="linux" scheme="https://blog.umu618.com/tags/linux/"/>
    
    <category term="openwrt" scheme="https://blog.umu618.com/tags/openwrt/"/>
    
  </entry>
  
  <entry>
    <title>Armbian 分区优化</title>
    <link href="https://blog.umu618.com/2020/05/02/umutech-armbian-partition-optimization/"/>
    <id>https://blog.umu618.com/2020/05/02/umutech-armbian-partition-optimization/</id>
    <published>2020-05-02T07:58:19.000Z</published>
    <updated>2023-08-05T13:01:27.018Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题">问题</h2><p>Android 电视盒刷 Armbian，分区时，EMMC 前面一部分没被利用，为什么？以及怎么办？</p><h2 id="原因">原因</h2><p>u-boot 是为 Android 设计的，分区是按照 Android 需求分的。比如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Partition table get from SPL is :</span><br><span class="line">        name                        offset              size              flag</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">   0: bootloader                         0            400000                  0</span><br><span class="line">   1: reserved                     2400000           4000000                  0</span><br><span class="line">   2: cache                        6c00000          20000000                  2</span><br><span class="line">   3: env                         27400000            800000                  0</span><br><span class="line">   4: logo                        28400000           2000000                  1</span><br><span class="line">   5: recovery                    2ac00000           2000000                  1</span><br><span class="line">   6: misc                        2d400000           2000000                  1</span><br><span class="line">   7: boot                        2fc00000           2000000                  1</span><br><span class="line">   8: system                      32400000          40000000                  1</span><br><span class="line">   9: data                        72c00000         15f400000                  4</span><br></pre></td></tr></table></figure><p>其中 reserved 分区放着其它分区的名字、位移、大小等信息，如果被破坏 u-boot 将无法识别分区。</p><p>env 分区保存启动脚本，如果被破坏，可能导致系统无法启动。</p><h2 id="解决">解决</h2><p>一般的 Armbian 安装脚本，都会跳过前面的分区，从偏移 700MB 处开始分区。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">parted -s <span class="string">&quot;<span class="variable">$&#123;DEV_EMMC&#125;</span>&quot;</span> mklabel msdos</span><br><span class="line">parted -s <span class="string">&quot;<span class="variable">$&#123;DEV_EMMC&#125;</span>&quot;</span> mkpart primary fat32 700M 828M</span><br><span class="line">parted -s <span class="string">&quot;<span class="variable">$&#123;DEV_EMMC&#125;</span>&quot;</span> mkpart primary ext4 829M 100%</span><br></pre></td></tr></table></figure><p>作为优化狂，UMU 显然无法接受这样的浪费！</p><ul><li><p>cache 分区有 0x20000000 Bytes，也就是 512MiB，拿来做 /boot 分区岂不美哉？</p></li><li><p>logo 分区？不，UMU 不想看启动画面，直接覆盖掉吧！</p></li><li><p>分区之间还有空闲！也不能放过！</p></li></ul><p>所以，reserved 分区之后到 env 分区之前的全部空间都拿来做 /boot 分区，env 分区之后全部做 / 分区：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">parted -s <span class="string">&quot;<span class="variable">$&#123;DEV_EMMC&#125;</span>&quot;</span> mklabel msdos</span><br><span class="line">parted -s <span class="string">&quot;<span class="variable">$&#123;DEV_EMMC&#125;</span>&quot;</span> mkpart primary fat32 100MiB 628MiB</span><br><span class="line">parted -s <span class="string">&quot;<span class="variable">$&#123;DEV_EMMC&#125;</span>&quot;</span> mkpart primary ext4 636MiB 100%</span><br></pre></td></tr></table></figure><h2 id="测试">测试</h2><p>玩客云和斐讯 N1 测试通过。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;问题&quot;&gt;问题&lt;/h2&gt;
&lt;p&gt;Android 电视盒刷 Armbian，分区时，EMMC 前面一部分没被利用，为什么？以及怎么办？&lt;/p&gt;
&lt;h2 id=&quot;原因&quot;&gt;原因&lt;/h2&gt;
&lt;p&gt;u-boot 是为 Android 设计的，分区是按照 Android 需求分</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="debug" scheme="https://blog.umu618.com/tags/debug/"/>
    
    <category term="optimization" scheme="https://blog.umu618.com/tags/optimization/"/>
    
    <category term="embedded" scheme="https://blog.umu618.com/tags/embedded/"/>
    
    <category term="linux" scheme="https://blog.umu618.com/tags/linux/"/>
    
    <category term="ops" scheme="https://blog.umu618.com/tags/ops/"/>
    
    <category term="armbian" scheme="https://blog.umu618.com/tags/armbian/"/>
    
  </entry>
  
  <entry>
    <title>跟 UMU 一起玩 OpenWRT（入门篇19）：检测 WiFi 入侵</title>
    <link href="https://blog.umu618.com/2020/04/27/umutech-openwrt-primer-19-detect-wifi-hacking/"/>
    <id>https://blog.umu618.com/2020/04/27/umutech-openwrt-primer-19-detect-wifi-hacking/</id>
    <published>2020-04-27T15:49:22.000Z</published>
    <updated>2023-08-05T13:01:27.018Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题">问题</h2><p>我怀疑有人在用工具穷举我的 WiFi 密码，我该怎么确认？</p><h2 id="解决">解决</h2><p>运行 <code>iw event</code>，如果看到频繁出现 <code>new station</code> 和 <code>del station</code> 的 log，说明有设备在频繁连接和断开。</p><p>如果您的路由器是小米路由器 Pro，则可以用 <code>iwevent</code> 代替 <code>iw event</code>，密码不对的 log 是 <code>had deauthenticated</code>，断开是 <code>had disassociated</code>。</p><h2 id="安全建议">安全建议</h2><p>设置密码时，应该检查一下您的密码是否在“字典”里。字典参考：</p><ul><li><p><a href="https://www.kaggle.com/wjburns/common-password-list-rockyoutxt">https://www.kaggle.com/wjburns/common-password-list-rockyoutxt</a></p></li><li><p><a href="https://github.com/danielmiessler/SecLists/blob/master/Passwords/Leaked-Databases/rockyou.txt.tar.gz">https://github.com/danielmiessler/SecLists/blob/master/Passwords/Leaked-Databases/rockyou.txt.tar.gz</a></p></li></ul><blockquote><p>rockyou.txt contains 14,341,564 unique passwords, used in 32,603,388 accounts.</p></blockquote><p>举个例子吧！稣打算用 10 个 0 做密码，先查一下……嗯哼！</p><blockquote><p>valentine<br>idontknow<br>pikachu<br>little<br>diamond1<br>iloveu1<br>babyphat<br>peanut1<br>kittens<br>goddess<br>ballet<br>damien<br>nascar<br>171717<br>rangers1<br>winston<br><strong>0000000000</strong><br>rocky1<br>coolgirl<br>maymay<br>charlene<br>caramelo<br>selena<br>lucero<br>wendy<br>volcom<br>1435254<br>copper<br>cindy<br>baby123</p></blockquote><p>地球真危险！稣回月球了……</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;问题&quot;&gt;问题&lt;/h2&gt;
&lt;p&gt;我怀疑有人在用工具穷举我的 WiFi 密码，我该怎么确认？&lt;/p&gt;
&lt;h2 id=&quot;解决&quot;&gt;解决&lt;/h2&gt;
&lt;p&gt;运行 &lt;code&gt;iw event&lt;/code&gt;，如果看到频繁出现 &lt;code&gt;new station&lt;/code&gt; 和</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="embedded" scheme="https://blog.umu618.com/tags/embedded/"/>
    
    <category term="linux" scheme="https://blog.umu618.com/tags/linux/"/>
    
    <category term="openwrt" scheme="https://blog.umu618.com/tags/openwrt/"/>
    
    <category term="security" scheme="https://blog.umu618.com/tags/security/"/>
    
  </entry>
  
  <entry>
    <title>adduser 和 useradd 的区别</title>
    <link href="https://blog.umu618.com/2020/04/26/umutech-the-difference-between-adduser-and-useradd/"/>
    <id>https://blog.umu618.com/2020/04/26/umutech-the-difference-between-adduser-and-useradd/</id>
    <published>2020-04-25T16:40:03.000Z</published>
    <updated>2023-08-05T13:01:27.018Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求">需求</h2><p>在 armbian 系统里新建个账号。</p><p>这当然是个简单的任务，问题是发现居然同时存在 adduser 和 useradd 两个命令。</p><h2 id="解决选择恐惧症">解决选择恐惧症</h2><ol><li>adduser 不是可执行程序。</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">which</span> adduser</span><br><span class="line">/usr/sbin/adduser</span><br><span class="line"></span><br><span class="line">ldd /usr/sbin/adduser</span><br><span class="line">        not a dynamic executable</span><br></pre></td></tr></table></figure><ol start="2"><li>useradd 是可执行程序。</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">which</span> useradd</span><br><span class="line">/usr/sbin/useradd</span><br><span class="line"></span><br><span class="line">ldd /usr/sbin/useradd</span><br><span class="line">        linux-vdso.so.1 (0xbea59000)</span><br><span class="line">        libaudit.so.1 =&gt; /lib/arm-linux-gnueabihf/libaudit.so.1 (0xb6ea1000)</span><br><span class="line">        libselinux.so.1 =&gt; /lib/arm-linux-gnueabihf/libselinux.so.1 (0xb6e77000)</span><br><span class="line">        libsemanage.so.1 =&gt; /usr/lib/arm-linux-gnueabihf/libsemanage.so.1 (0xb6e3f000)</span><br><span class="line">        libc.so.6 =&gt; /lib/arm-linux-gnueabihf/libc.so.6 (0xb6d45000)</span><br><span class="line">        /lib/ld-linux-armhf.so.3 (0xb6efb000)</span><br><span class="line">        libcap-ng.so.0 =&gt; /lib/arm-linux-gnueabihf/libcap-ng.so.0 (0xb6d31000)</span><br><span class="line">        libpcre.so.3 =&gt; /lib/arm-linux-gnueabihf/libpcre.so.3 (0xb6cd4000)</span><br><span class="line">        libdl.so.2 =&gt; /lib/arm-linux-gnueabihf/libdl.so.2 (0xb6cc1000)</span><br><span class="line">        libsepol.so.1 =&gt; /lib/arm-linux-gnueabihf/libsepol.so.1 (0xb6c44000)</span><br><span class="line">        libbz2.so.1.0 =&gt; /lib/arm-linux-gnueabihf/libbz2.so.1.0 (0xb6c28000)</span><br><span class="line">        libpthread.so.0 =&gt; /lib/arm-linux-gnueabihf/libpthread.so.0 (0xb6c03000)</span><br></pre></td></tr></table></figure><ol start="3"><li>推测 adduser 是脚本，内部调用 useradd。求证之！</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">head -1 /usr/sbin/adduser</span><br><span class="line"><span class="meta">#!/usr/bin/perl</span></span><br><span class="line"></span><br><span class="line">grep useradd /usr/sbin/adduser</span><br><span class="line">    my <span class="variable">$useradd</span> = &amp;<span class="built_in">which</span>(<span class="string">&#x27;useradd&#x27;</span>);</span><br><span class="line">    &amp;systemcall(<span class="variable">$useradd</span>, <span class="string">&#x27;-d&#x27;</span>, <span class="variable">$home_dir</span>, <span class="string">&#x27;-g&#x27;</span>, <span class="variable">$ingroup_name</span>, <span class="string">&#x27;-s&#x27;</span>,</span><br><span class="line">    my <span class="variable">$useradd</span> = &amp;<span class="built_in">which</span>(<span class="string">&#x27;useradd&#x27;</span>);</span><br><span class="line">    &amp;systemcall(<span class="variable">$useradd</span>, <span class="string">&#x27;-d&#x27;</span>, <span class="variable">$home_dir</span>, <span class="string">&#x27;-g&#x27;</span>, <span class="variable">$ingroup_name</span>, <span class="string">&#x27;-s&#x27;</span>,</span><br><span class="line">    <span class="comment"># useradd without -p has left the account disabled (password string is &#x27;!&#x27;)</span></span><br></pre></td></tr></table></figure><p>这说明 adduser 是 perl 脚本，内部确实调用 useradd。</p><ol start="4"><li>直觉告诉 UMU，应该用 adduser，如果 useradd 很好用，不会有 adduser 存在的必要。</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;需求&quot;&gt;需求&lt;/h2&gt;
&lt;p&gt;在 armbian 系统里新建个账号。&lt;/p&gt;
&lt;p&gt;这当然是个简单的任务，问题是发现居然同时存在 adduser 和 useradd 两个命令。&lt;/p&gt;
&lt;h2 id=&quot;解决选择恐惧症&quot;&gt;解决选择恐惧症&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="linux" scheme="https://blog.umu618.com/tags/linux/"/>
    
    <category term="ops" scheme="https://blog.umu618.com/tags/ops/"/>
    
  </entry>
  
  <entry>
    <title>优化思维【6】安全性</title>
    <link href="https://blog.umu618.com/2020/04/23/umutech-optimization-thinking-6-security/"/>
    <id>https://blog.umu618.com/2020/04/23/umutech-optimization-thinking-6-security/</id>
    <published>2020-04-23T06:56:05.000Z</published>
    <updated>2023-08-05T13:01:27.018Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前情">前情</h2><p>前五篇，主要考虑性能优化，只有第二篇与安全性相关。</p><ul><li><p><a href="/2019/04/10/umutech-optimization-thinking-1-trim-strings/">优化思维【1】字符串去空格</a></p></li><li><p><a href="/2019/05/16/umutech-optimization-thinking-2-signed-and-unsigned/">优化思维【2】有符号和无符号的本质区别</a></p></li><li><p><a href="/2019/07/16/umutech-optimization-thinking-3-remove-unnecessary-steps/">优化思维【3】消除没必要步骤</a></p></li><li><p><a href="/2019/07/30/umutech-optimization-thinking-4-bash-for-loop/">优化思维【4】Bash for 循环</a></p></li><li><p><a href="/2020/02/26/umutech-optimization-thinking-5-merge-steps/">优化思维【5】合并步骤</a></p></li></ul><p>其实区块链业界一直不缺乏黑客，最近看过不少安全事故导致惨重代价，所以想总结点安全性方面的优化思路。（<s>本篇比较务虚，只是大体思路。</s>）总的来说，为了安全是必须付出实现或者性能代价的。实现代价是开发、测试阶段就要投入更多精力，性能代价是因为考虑更多，有可能消耗更大运行资源。但从长期来看，这些代价都是必须的。</p><h2 id="产品价值与安全意识">产品价值与安全意识</h2><p>开发者可能有能力做一定安全防范，但如果他认为产品没有价值，没必要防范，就可能明明有能力防住，实际却被黑翻车。<strong>要不要注重安全性，是设计阶段就应该交代清楚的。</strong></p><blockquote><p>夫兵久而国利者，未之有也。故不能尽知用兵之害者，则不能尽知用兵之利也。——《孙子兵法》</p></blockquote><blockquote><p>做任何事情先考虑失败。——李嘉诚</p></blockquote><p>程序员版解读：安全怎么能大意，甚至忽视？那都是侥幸心理，只要您的产品、服务有价值，长期看都会被破解、攻击。开发者如果不能知悉黑客可能的攻击点，并衡量被攻破的代价，他必然也不清楚自己写的代码的真正价值。</p><p>实际开发过程中，有些领导者会故意隐藏关于产品价值的信息，这实际上可能导致安全考虑不到位。这种情况就应该配备一个在安全方面经验丰富的审查者。</p><p>一句话总结：<strong>越有价值的东西，就越应该注重安全。</strong></p><h2 id="知识深度">知识深度</h2><p>一般黑客都是上层、底层皆通，尤其擅长底层。很少听说只做增删查改业务的人能够黑掉什么东西、偷到数字货币，因为同样只做增删查改业务的人就具备防止这种级别的攻击手段。</p><p>比如古老的 SQL 注入漏洞，即便是入门级的 Web 开发也能理解并防护，用预编译语句、存储过程、改用 ORM 就天然免疫。他们无法防护的往往来自更底层的 Web Server 的漏洞，比如 Apache、Nginx 某个版本有 bug，刚好中枪。</p><p>再举个例子，用 C/C++ 写 UDP 服务程序，“先把它实现，能用就行”，“不就 socket 嘛？很容易！”于是没有考虑 socket 等资源的生存周期，没料到<strong>黑客可以伪造 UDP 包源地址</strong>，实现出来的就可能有<strong>拒绝服务攻击 (Denial of Service，DoS) 漏洞</strong>。</p><p><strong>总之，为了性能或安全的优化，开发者往往需要往底层钻。为性能，主要是研究底层模块与之配合，达到消除瓶颈目的；为安全，则是不让对底层设计的不了解，导致实现不够严谨周密而产生漏洞。</strong></p><h2 id="知识广度">知识广度</h2><p>经常听到这样的段子：</p><blockquote><p>千万不要跟程序员说，你的代码有 bug。</p><p>他的第一反应是你的环境有问题，第二就是你是傻逼不会用吧!</p><p>你要跟他这么说：这个程序运行的怎么运行的跟预期不一样，是我操作有问题吗？</p><p>这货就会第一反应，我擦，这是不是出 bug 了？</p></blockquote><p>这段子里其实间接反映一个程序员经常遇到的问题：自己测试没问题，一到用户侧或者线上就莫名出问题。环境不同，是最大原因。比如 Linux 的发行版众多；著名的 Android 碎片化；iPhone 型号随时间推移也越来越多了……</p><p>另一个大原因则是依赖。比如古老的 DLL Hell。类似的问题在 macOS、Linux 上也都存在。有一次 UMU 把 macOS 的 OpenSSL 升级到 1.1，结果 1.0 居然被删掉，导致原来编译的依赖 1.0 的 <a href="https://github.com/EOSIO/eos">eos</a> 就无法运行了。</p><p>再以 <a href="https://github.com/EOSIO/eos">eos</a> 为例，它依赖不少库，这些依赖库本身也可能有 bug，也要升级。又比如 <a href="https://github.com/ipfs/go-ipfs">ipfs</a>，熟悉下来，发现其依赖树很广。作为开发者，引入一个依赖时，肯定需要操心会不会同时引入 bug。一般解决方式是：采用被大量验证的著名库，尽快跟进最新稳定版本。</p><p><strong>总之，为了安全，设计者可能需要了解更多方面的知识，并不仅限于表面上需要的那些。开发者还要与时俱进，积极消灭潜在的漏洞。</strong></p><h2 id="开发语言">开发语言</h2><p>高级语言程序员可能很少听说缓冲区溢出，即使有，多半也是这门语言的宿主、解释器的 bug。而 C/C++ 等能直接操作指针的语言，就可能听到栈溢出、空指针、野指针等。采用高级语言确实会在程序执行时的安全性上省心不少，能把更多精力放在流程安全、业务安全上。</p><p>从架构上说，应该让不同语言只用于它擅长的领域。比如用 Rust 实现底层模块，用 Go 实现上层业务。这种分层选择语言的方式，充分利用 Rust 的安全性和底层开发能力，还可以让分工更清晰、沟通更愉快。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前情&quot;&gt;前情&lt;/h2&gt;
&lt;p&gt;前五篇，主要考虑性能优化，只有第二篇与安全性相关。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;/2019/04/10/umutech-optimization-thinking-1-trim-strings/&quot;&gt;优化思维【1</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="optimization" scheme="https://blog.umu618.com/tags/optimization/"/>
    
    <category term="security" scheme="https://blog.umu618.com/tags/security/"/>
    
  </entry>
  
  <entry>
    <title>为什么 EOS 私钥有不同长度？</title>
    <link href="https://blog.umu618.com/2020/04/22/umutech-why-eos-private-keys-have-variable-length/"/>
    <id>https://blog.umu618.com/2020/04/22/umutech-why-eos-private-keys-have-variable-length/</id>
    <published>2020-04-22T08:27:30.000Z</published>
    <updated>2023-08-05T13:01:27.018Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题">问题</h2><p>这里有两个 EOS 私钥，它们长度居然不一样？</p><ul><li><p>PVT_K1_1EEr5aW5162skbocDSMDgoWn9jna6HPSr1TwEMR6PNXbPtRky</p></li><li><p>PVT_K1_2bfGi9rYsXQSXXTvJbDAPhHLQUojjaNLomdm3cEJ1XTzMqUt3V</p></li></ul><p>为什么私钥有不同长度？而公钥就都是固定长度呢？</p><h2 id="知识点">知识点</h2><ul><li><p>私钥是一个大型随机数，而公钥则是私钥乘以椭圆曲线上的基点后对应的点。对于 secp256k1 来说，是 256 位，并且 &lt; n 的整数。</p></li><li><p>n 须为质数，Order of G，是使得 <code>n * G = 0</code> 的最⼩正整数，n 是安全性最⼤的决定因素。对于 secp256k1 来说，n<br>= 0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141。</p></li><li><p>不是每个数都安全，比如小的数肯定是不安全的，黑客可以从 1 开始枚举，不够大的数很快就被找到对应关系，也可以从 n 倒着枚举，所以太大的也不安全。（PS：临近一些特别数的数也不安全……）一般来说，私钥的安全范围是 [0x0080000000000000000000000000000000000000000000000000000000000000, 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff]。</p></li></ul><h2 id="工具">工具</h2><p><a href="https://github.com/UMU618/secp256k1-tools">https://github.com/UMU618/secp256k1-tools</a></p><p>使用 private-2-public.js 可以把私钥转为它代表的数字：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">DEBUG=* node private-2-public.js PVT_K1_1EEr5aW5162skbocDSMDgoWn9jna6HPSr1TwEMR6PNXbPtRky</span><br><span class="line">  secp256k1-tools:key-util pvt = 84ade57e2b35cca8972562fcc6d1f6f2fbf078c4f2cfb532eb4d740767c5a8 +0ms</span><br><span class="line">  secp256k1-tools:key-util x = 2110b8d675240f5d548d166cc06b22f44c671d762711a3a67027b74cd166ab76 +9ms</span><br><span class="line">  secp256k1-tools:key-util y = 20ac68b75ad8b0e4bc3ec5705ebaf57c69d2d8268504d6aa95fdebfd0b7db831 +0ms</span><br><span class="line">PVT_K1_1EEr5aW5162skbocDSMDgoWn9jna6HPSr1TwEMR6PNXbPtRky</span><br><span class="line">PUB_K1_75o92oRgWSgx3XzTDYPj1e3hFSRhMnKaUdW8ZZpxJXkhfiGBHS</span><br><span class="line"></span><br><span class="line">DEBUG=* node private-2-public.js PVT_K1_2bfGi9rYsXQSXXTvJbDAPhHLQUojjaNLomdm3cEJ1XTzMqUt3V</span><br><span class="line">  secp256k1-tools:key-util pvt = d2653ff7cbb2d8ff129ac27ef5781ce68b2558c41a74af1f2ddca635cbeef07d +0ms</span><br><span class="line">  secp256k1-tools:key-util x = c0ded2bc1f1305fb0faac5e6c03ee3a1924234985427b6167ca569d13df435cf +8ms</span><br><span class="line">  secp256k1-tools:key-util y = eeceff7130fd352c698d2279967e2397f045479940bb4e7fb178fd9212fca8c0 +1ms</span><br><span class="line">PVT_K1_2bfGi9rYsXQSXXTvJbDAPhHLQUojjaNLomdm3cEJ1XTzMqUt3V</span><br><span class="line">PUB_K1_6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5BoDq63</span><br></pre></td></tr></table></figure><h2 id="分析">分析</h2><h3 id="1-数值比较">1. 数值比较</h3><ul><li><p>PVT_K1_1EEr5aW5162skbocDSMDgoWn9jna6HPSr1TwEMR6PNXbPtRky，有 56 个字符，去掉前缀和校验码后有 45 个字符，它代表 0x84ade57e2b35cca8972562fcc6d1f6f2fbf078c4f2cfb532eb4d740767c5a8；</p></li><li><p>PVT_K1_2bfGi9rYsXQSXXTvJbDAPhHLQUojjaNLomdm3cEJ1XTzMqUt3V，有 57 个字符，去掉前缀和校验码后有 46 个字符，它代表 d2653ff7cbb2d8ff129ac27ef5781ce68b2558c41a74af1f2ddca635cbeef07d。</p></li></ul><p>可以清楚地看出前者短一个字符，数值也相应比较小。</p><h3 id="2-BASE58-编码的原理">2. BASE58 编码的原理</h3><p>BASE58 的字符集：<code>123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz</code>，其中 ‘1’ 代表 0，‘z’ 代表 57。把待编码的数字不断除以 58，并将余数用对应的字符表示。举个小点的数字做例子：618</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">618 &#x2F; 58 &#x3D; 10 .. 38 -&gt; f</span><br><span class="line"></span><br><span class="line">10 &#x2F; 58  &#x3D; 0  .. 10 -&gt; B</span><br></pre></td></tr></table></figure><p>拼接余数得 fB，再反转得 Bf。</p><h3 id="3-BASE58-编码位数关系">3. BASE58 编码位数关系</h3><p>一个数编码后，应该长于或等于比它小的数。我们可以通过简单的数学计算得出 45 个字符的 BASE58 编码可以表示的最大数：</p><p>zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz = 0xc33ed2d1fbdd3bfe9c22b96164d38cf0d640e1c0ee8b61c39c57899fffffffffff</p><p>所以 &lt;= 0xc33ed2d1fbdd3bfe9c22b96164d38cf0d640e1c0ee8b61c39c57899fffffffffff 的私钥编码后是 56 个字符；大于者 59 个字符。</p><h3 id="4-旧格式私钥">4. 旧格式私钥</h3><ul><li><p>旧格式私钥：5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3</p></li><li><p>对应新格式：PVT_K1_2bfGi9rYsXQSXXTvJbDAPhHLQUojjaNLomdm3cEJ1XTzMqUt3V</p></li></ul><p>同理，只是格式不同罢了。不再展开。</p><h3 id="5-为什么公钥是固定长度呢？">5. 为什么公钥是固定长度呢？</h3><p>因为公钥有个表示奇偶性的前缀，0x02 或者 0x03，所以它的大小范围被限定，没能相差一个 BASE58 字符。</p><h2 id="相关文章">相关文章</h2><p><a href="/2019/08/15/umutech-eosio-private-key-to-public-key/">基于 ECC 的私钥转为公钥的过程</a></p><p><a href="/2019/08/16/umutech-ecc-nodejs/">ECC Node.js</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;问题&quot;&gt;问题&lt;/h2&gt;
&lt;p&gt;这里有两个 EOS 私钥，它们长度居然不一样？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;PVT_K1_1EEr5aW5162skbocDSMDgoWn9jna6HPSr1TwEMR6PNXbPtRky&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;P</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="debug" scheme="https://blog.umu618.com/tags/debug/"/>
    
    <category term="blockchain" scheme="https://blog.umu618.com/tags/blockchain/"/>
    
    <category term="cryptology" scheme="https://blog.umu618.com/tags/cryptology/"/>
    
  </entry>
  
  <entry>
    <title>nfs-ganesha 端口绑定</title>
    <link href="https://blog.umu618.com/2020/04/16/umutech-nfs-ganesha-firewall-settings/"/>
    <id>https://blog.umu618.com/2020/04/16/umutech-nfs-ganesha-firewall-settings/</id>
    <published>2020-04-16T14:15:55.000Z</published>
    <updated>2023-08-05T13:01:27.018Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求">需求</h2><p>前文《<a href="/2020/04/11/umutech-install-nfs-server-on-armbian/">在 Armbian 安装 NFS 服务端</a>》介绍 nfs-ganesha 的安装配置。经过几天使用，发现效果还可以，但一直都是在局域网内使用，突然有一天想在公司访问家里的 NFS 共享……</p><h2 id="问题">问题</h2><p>直接 mount 会一直卡着。</p><p>开放 111、2049 端口，再 mount，还是卡着。</p><p>通过反复重启 nfs-ganesha 并 <code>netstat -nalp | grep ganesha.nfsd</code> 观测，发现 mountd 端口不固定！给开放端口配置带来困难。</p><h2 id="解决">解决</h2><h3 id="Armbian-配置">Armbian 配置</h3><p>将 mountd 端口绑定，比如 2618，但配置的方法和常规 Debian 服务器的内核级 NFS Server 不同。修改 /etc/services 添加 mountd 绑定是无用的，应该编辑 /etc/ganesha/ganesha.conf，添加以下配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">NFS_CORE_PARAM</span><br><span class="line">&#123;</span><br><span class="line">        MNT_Port &#x3D; 2618;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>改完重启服务：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart nfs-ganesha.service</span><br></pre></td></tr></table></figure><h3 id="防护墙配置">防护墙配置</h3><p>UMU 用的是 OpenWRT 路由器作为家庭网络出口，firewall 配置文件是 /etc/config/firewall，添加以下几行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">config rule</span><br><span class="line">        option src &#39;wan&#39;</span><br><span class="line">        option name &#39;Allow-NFS&#39;</span><br><span class="line">        option dest &#39;*&#39;</span><br><span class="line">        option target &#39;ACCEPT&#39;</span><br><span class="line">        option dest_port &#39;111 2049 2618&#39;</span><br><span class="line">        option family &#39;ipv6&#39;</span><br><span class="line">        option start_time &#39;00:09:00&#39;</span><br><span class="line">        option stop_time &#39;00:21:00&#39;</span><br><span class="line">        option enabled &#39;0&#39;</span><br></pre></td></tr></table></figure><p>以上配置开启了 111、2049、2618 三个端口的转发，其中 udp/tcp 111 是 portmap 端口，udp/tcp 2049 是 nfsd 端口，udp/tcp 2618 是上一步绑定的 mountd 端口。</p><p><code>/etc/init.d/firewall restart</code> 重启后就可以在办公室通过 IPv6 访问家里的 NFS 共享了。</p><h2 id="参考">参考</h2><p><a href="https://github.com/nfs-ganesha/nfs-ganesha/blob/next/src/config_samples/config.txt">https://github.com/nfs-ganesha/nfs-ganesha/blob/next/src/config_samples/config.txt</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;需求&quot;&gt;需求&lt;/h2&gt;
&lt;p&gt;前文《&lt;a href=&quot;/2020/04/11/umutech-install-nfs-server-on-armbian/&quot;&gt;在 Armbian 安装 NFS 服务端&lt;/a&gt;》介绍 nfs-ganesha 的安装配置。经过几天使用，</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="debug" scheme="https://blog.umu618.com/tags/debug/"/>
    
    <category term="embedded" scheme="https://blog.umu618.com/tags/embedded/"/>
    
    <category term="linux" scheme="https://blog.umu618.com/tags/linux/"/>
    
    <category term="openwrt" scheme="https://blog.umu618.com/tags/openwrt/"/>
    
    <category term="ops" scheme="https://blog.umu618.com/tags/ops/"/>
    
    <category term="armbian" scheme="https://blog.umu618.com/tags/armbian/"/>
    
  </entry>
  
  <entry>
    <title>在 Armbian 安装 NFS 服务端</title>
    <link href="https://blog.umu618.com/2020/04/11/umutech-install-nfs-server-on-armbian/"/>
    <id>https://blog.umu618.com/2020/04/11/umutech-install-nfs-server-on-armbian/</id>
    <published>2020-04-11T08:29:06.000Z</published>
    <updated>2023-10-29T12:24:56.935Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求">需求</h2><p>有个刷了 Armbian 的玩客云想当文件共享服务器。</p><h2 id="问题">问题</h2><p>某些版本的 Armbian 内核不支持 nfsd，刚好稣就刷到！如果按照 debian 服务器玩法——安装 kernel 版服务端，是无法正常工作的：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install nfs-common nfs-kernel-server</span><br></pre></td></tr></table></figure><p>启动时会提示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mount: &#x2F;proc&#x2F;fs&#x2F;nfsd: unknown filesystem type &#39;nfsd&#39;.</span><br><span class="line">proc-fs-nfsd.mount: Mount process exited, code&#x3D;exited, status&#x3D;32&#x2F;n&#x2F;a</span><br><span class="line">proc-fs-nfsd.mount: Failed with result &#39;exit-code&#39;.</span><br><span class="line">nfs-mountd.service: Job nfs-mountd.service&#x2F;start failed with result &#39;dependency&#39;.</span><br><span class="line">nfs-idmapd.service: Job nfs-idmapd.service&#x2F;start failed with result &#39;dependency&#39;.</span><br><span class="line">nfs-server.service: Job nfs-server.service&#x2F;start failed with result &#39;dependency&#39;.</span><br></pre></td></tr></table></figure><h2 id="解决">解决</h2><h3 id="服务端">服务端</h3><p>使用用户态的 nfs-ganesha。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install nfs-ganesha nfs-ganesha-vfs</span><br></pre></td></tr></table></figure><p>配置文件为 /etc/ganesh/ganesha.conf。nfs-ganesha-vfs 包另带一个 vfs.conf 参考模板。以下配置创建读写共享 /root/share 和只读共享 /opt：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">EXPORT_DEFAULTS</span><br><span class="line">&#123;</span><br><span class="line">        Protocols &#x3D; 4;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">EXPORT</span><br><span class="line">&#123;</span><br><span class="line">        Export_Id &#x3D; 77;</span><br><span class="line">        Protocols &#x3D; 3, 4;</span><br><span class="line">        Path &#x3D; &#x2F;root&#x2F;share;</span><br><span class="line">        Pseudo &#x3D; &#x2F;root&#x2F;share;</span><br><span class="line">        Access_Type &#x3D; RW;</span><br><span class="line">        FSAL &#123;</span><br><span class="line">                Name &#x3D; VFS;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">EXPORT</span><br><span class="line">&#123;</span><br><span class="line">        Export_Id &#x3D; 78;</span><br><span class="line">        Path &#x3D; &#x2F;opt;</span><br><span class="line">        Pseudo &#x3D; &#x2F;opt;</span><br><span class="line">        Access_Type &#x3D; RO;</span><br><span class="line">        FSAL &#123;</span><br><span class="line">                Name &#x3D; VFS;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>改完重启服务：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart nfs-ganesha.service</span><br></pre></td></tr></table></figure><h3 id="客户端">客户端</h3><ul><li>Debian</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install nfs-common</span><br><span class="line"></span><br><span class="line">showmount -e u1</span><br><span class="line">Export list <span class="keyword">for</span> u1:</span><br><span class="line">/root/share (everyone)</span><br><span class="line"></span><br><span class="line">sudo mkdir /mnt/share</span><br><span class="line"><span class="comment"># sudo mount -t nfs u1:/root/share /mnt/share</span></span><br><span class="line">sudo mount.nfs u1:/root/share /mnt/share</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：如果提示 <code>mount.nfs: No such device</code>，说明内核没有 NFS 模块，<s>洗洗睡了</s>，换 Windows 10 吧！</p><ul><li>Windows 10</li></ul><p><img src="/images/2020/20200411-install-nfs-client.png" alt="安装 NFS 客户端"></p><p><img src="/images/2020/20200411-browse-nfs.png" alt="浏览 NFS 共享目录"></p><p><img src="/images/2020/20200411-nfs-property.png" alt="NFS 属性"></p><p><strong>注意</strong>：Windows 10 目前只有 NFS v3 客户端。服务端如果只开 v4 协议，则 Windows 10 将无法访问。</p><h2 id="参考">参考</h2><p><a href="https://github.com/nfs-ganesha/nfs-ganesha/blob/next/src/config_samples/config.txt">https://github.com/nfs-ganesha/nfs-ganesha/blob/next/src/config_samples/config.txt</a></p><p><a href="https://github.com/nfs-ganesha/nfs-ganesha/blob/next/src/config_samples/export.txt">https://github.com/nfs-ganesha/nfs-ganesha/blob/next/src/config_samples/export.txt</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;需求&quot;&gt;需求&lt;/h2&gt;
&lt;p&gt;有个刷了 Armbian 的玩客云想当文件共享服务器。&lt;/p&gt;
&lt;h2 id=&quot;问题&quot;&gt;问题&lt;/h2&gt;
&lt;p&gt;某些版本的 Armbian 内核不支持 nfsd，刚好稣就刷到！如果按照 debian 服务器玩法——安装 kernel 版</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="windows" scheme="https://blog.umu618.com/tags/windows/"/>
    
    <category term="debug" scheme="https://blog.umu618.com/tags/debug/"/>
    
    <category term="embedded" scheme="https://blog.umu618.com/tags/embedded/"/>
    
    <category term="linux" scheme="https://blog.umu618.com/tags/linux/"/>
    
    <category term="ops" scheme="https://blog.umu618.com/tags/ops/"/>
    
    <category term="armbian" scheme="https://blog.umu618.com/tags/armbian/"/>
    
  </entry>
  
  <entry>
    <title>解决通过 TTL 登录 Armbian 时的 Login incorrect</title>
    <link href="https://blog.umu618.com/2020/04/09/umutech-solve-armbian-login-incorrect-via-ttl/"/>
    <id>https://blog.umu618.com/2020/04/09/umutech-solve-armbian-login-incorrect-via-ttl/</id>
    <published>2020-04-09T15:18:36.000Z</published>
    <updated>2024-04-11T15:14:12.921Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题">问题</h2><p>用 TTL 连接刷 Armbian buster 的盒子，然后用 putty 和 plink 登录，一输入 root 回车，就报 Login incorrect！但通过 ssh 远程登录却没任何问题。</p><h2 id="原因">原因</h2><p>ttyAML0 不在 /etc/securetty 里。</p><h2 id="分析过程">分析过程</h2><p>一开始听运维小伙伴说：最可能的原因是键盘 Caps 开启了。轻松排除。</p><p>后来发现输入大写的 ROOT，反而提示输入 password，这让稣想到“枚举用户”攻击。开始思考，是不是通过 TTL 登录被 Armbian 认为是不安全的？</p><p>于是学习 securetty 相关知识，发现确实在某些不安全场合 root 是不被允许登录的，因为系统管理员一旦通过不安全渠道输入密码，那么密码就可能被盗取，所以一输入 root，就应该立刻报错，而不该继续让输入密码。而输入其它不存在的用户时（比如大写的 ROOT），反而应该让继续输入密码，最后再提示登录失败，因为如果提示用户不存在，会让黑客穷举出系统里有什么账号。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">grep securetty /etc/pam.d/login</span><br><span class="line"><span class="comment"># Disallows root logins except on tty&#x27;s listed in /etc/securetty</span></span><br><span class="line">auth [success=ok new_authtok_reqd=ok ignore=ignore user_unknown=bad default=die] pam_securetty.so</span><br></pre></td></tr></table></figure><p>后来注意到 TTL 用的 tty 名字是 ttyAML0，<code>grep ttyAML0 /etc/securetty</code> 果然不存在。</p><h2 id="解决">解决</h2><p><code>echo ttyAML0 &gt;&gt; /etc/securetty</code> 搞定。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;问题&quot;&gt;问题&lt;/h2&gt;
&lt;p&gt;用 TTL 连接刷 Armbian buster 的盒子，然后用 putty 和 plink 登录，一输入 root 回车，就报 Login incorrect！但通过 ssh 远程登录却没任何问题。&lt;/p&gt;
&lt;h2 id=&quot;原因&quot;&gt;</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="debug" scheme="https://blog.umu618.com/tags/debug/"/>
    
    <category term="embedded" scheme="https://blog.umu618.com/tags/embedded/"/>
    
    <category term="linux" scheme="https://blog.umu618.com/tags/linux/"/>
    
    <category term="ops" scheme="https://blog.umu618.com/tags/ops/"/>
    
    <category term="armbian" scheme="https://blog.umu618.com/tags/armbian/"/>
    
  </entry>
  
  <entry>
    <title>让 git 使用 Windows 10 OpenSSH</title>
    <link href="https://blog.umu618.com/2020/04/07/umutech-get-git-to-use-windows-10-openssh/"/>
    <id>https://blog.umu618.com/2020/04/07/umutech-get-git-to-use-windows-10-openssh/</id>
    <published>2020-04-07T15:02:18.000Z</published>
    <updated>2024-03-31T10:32:36.194Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题">问题</h2><p>在 Windows 10 安装 <a href="https://git-scm.com/">git</a> 的同时，开启系统自带的 OpenSSH，则系统里存在两套 ssh，git 会默认使用它自己的那套。</p><h2 id="分析">分析</h2><p>由于 Windows 10 的 sshd、ssh-agent 做成服务，比较容易管理，而且微软改造的版本会更注重安全，所以 UMU 决定舍弃 git 带的那套。</p><h2 id="解决">解决</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global core.sshcommand &quot;C:&#x2F;Windows&#x2F;System32&#x2F;OpenSSH&#x2F;ssh.exe&quot;</span><br></pre></td></tr></table></figure><p>以上方法是自定义私钥路径时惯用的（加 -i 参数），但这里我们只改变 ssh 本身路径。参考文档：</p><blockquote><p><strong>core.sshCommand</strong><br>If this variable is set, git fetch and git push will use the specified command instead of ssh when they need to connect to a remote system. The command is in the same form as the <code>GIT_SSH_COMMAND</code> environment variable and is overridden when the environment variable is set.</p></blockquote><p>另一种比较暴力的方式：把 git 那套 ssh 指向 Windows 10 OpenSSH。</p><p>用管理员权限运行 <code>cmd</code>，输入：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> &quot;<span class="variable">%ProgramFiles%</span>\git\usr\bin&quot;</span><br><span class="line"><span class="built_in">ren</span> ssh.exe -ssh.exe</span><br><span class="line">mklink ssh.exe <span class="variable">%windir%</span>\System32\OpenSSH\ssh.exe</span><br><span class="line"></span><br><span class="line"><span class="built_in">ren</span> scp.exe -scp.exe</span><br><span class="line">mklink scp.exe <span class="variable">%windir%</span>\System32\OpenSSH\scp.exe</span><br></pre></td></tr></table></figure><p><img src="/images/2020/20200407-mklink.png" alt="git ssh 链接到 OpenSSH"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;问题&quot;&gt;问题&lt;/h2&gt;
&lt;p&gt;在 Windows 10 安装 &lt;a href=&quot;https://git-scm.com/&quot;&gt;git&lt;/a&gt; 的同时，开启系统自带的 OpenSSH，则系统里存在两套 ssh，git 会默认使用它自己的那套。&lt;/p&gt;
&lt;h2 id=&quot;</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="windows" scheme="https://blog.umu618.com/tags/windows/"/>
    
    <category term="debug" scheme="https://blog.umu618.com/tags/debug/"/>
    
    <category term="ops" scheme="https://blog.umu618.com/tags/ops/"/>
    
  </entry>
  
  <entry>
    <title>TTL 线连接树莓派</title>
    <link href="https://blog.umu618.com/2020/04/05/umutech-ttl-to-raspberry-pi/"/>
    <id>https://blog.umu618.com/2020/04/05/umutech-ttl-to-raspberry-pi/</id>
    <published>2020-04-04T16:07:48.000Z</published>
    <updated>2023-10-29T12:24:56.935Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求">需求</h2><p>有以下物品：</p><ul><li><p>PL2303 串口线（TTL 线）</p></li><li><p>Windows 10 PC</p></li><li><p>树莓派 Model B</p></li></ul><p>求：PL2303 串口线是好是坏？</p><h2 id="解决">解决</h2><h3 id="1-使-Windows-10-正常驱动-PL2303">1. 使 Windows 10 正常驱动 PL2303</h3><p>把 TTL 线插入 PC USB 口，Windows 10 会自动安装驱动，然而  <code>Prolific USB-to-Serial Comm Port 版本 3.8.31.0 [2019/7/30]</code> 和  <code>Prolific USB-to-Serial Comm Port 版本 3.8.18.0 [2017/10/17]</code> 都不能正常工作。<strong>这说明 PL2303 芯片已经被淘汰……买 TTL 线请选当下流行的其它芯片。</strong></p><p><img src="/images/2020/20200405-bad-driver-0.png" alt="Prolific USB-to-Serial Comm Port 版本 3.8.31.0 [2019/7/30] 不能正常工作"></p><p><img src="/images/2020/20200405-bad-driver-1.png" alt="Prolific USB-to-Serial Comm Port 版本 3.8.18.0 [2017/10/17] 不能正常工作"></p><p>搜“PL2303_Prolific_GPS_1013_20090319”，装“Prolific USB-to-Serial Comm Port 版本 3.3.2.105 [2008/10/27]”，可正常工作。</p><p><img src="/images/2020/20200405-driver-version.png" alt="Prolific USB-to-Serial Comm Port 版本 3.3.2.105 [2008/10/27] 可正常工作"></p><h3 id="2-配置串口">2. 配置串口</h3><p>波特率设为 115200，其它默认，最终参数如图：</p><p><img src="/images/2020/20200405-com1-settings.png" alt="串口参数"></p><p><img src="/images/2020/20200405-com1-advance.png" alt="高级"></p><h3 id="3-TTL-线连树莓派-GPIO">3. TTL 线连树莓派 GPIO</h3><p>如果树莓派有用 MicroUSB 供电，则 VCC（红）可以不接，只把 GND（黑）、RX（白）、TX（绿）分别接到树莓派的 P6、P8、P10；如果需要直接用 GPIO 供电，则把 VCC（红）插到 P2 或 P4。</p><table><thead><tr><th style="text-align:left">PL2303</th><th style="text-align:left">接线颜色</th><th style="text-align:left">树莓派 GPIO</th><th style="text-align:left">树莓派针脚</th></tr></thead><tbody><tr><td style="text-align:left">VCC</td><td style="text-align:left">红</td><td style="text-align:left">5V</td><td style="text-align:left">P2, P4</td></tr><tr><td style="text-align:left">RX</td><td style="text-align:left">白</td><td style="text-align:left">GPIO14(UART_TXD)</td><td style="text-align:left">P8</td></tr><tr><td style="text-align:left">TX</td><td style="text-align:left">绿</td><td style="text-align:left">GPIO15(UART_RXD)</td><td style="text-align:left">P10</td></tr><tr><td style="text-align:left">GND</td><td style="text-align:left">黑</td><td style="text-align:left">GND</td><td style="text-align:left">P6, P39</td></tr></tbody></table><p><img src="/images/2020/20200405-gpio.png" alt="GPIO"></p><p><img src="/images/2020/20200405-ttl-gpio.jpg" alt="TTL 接 GPIO：红接 1 或 2，黑接 3，白接 4，绿接 5"></p><p><img src="/images/2020/20200405-raspberry-pi.jpg" alt="树莓派 GPIO 供电"></p><h3 id="4-用-PuTTY-连接串口">4. 用 PuTTY 连接串口</h3><p>使用 plink 或 putty 皆可，注意：需使用管理员权限运行。</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plink -serial \\.\<span class="built_in">COM1</span> -sercfg <span class="number">115200</span>,<span class="number">8</span>,n,<span class="number">1</span>,n</span><br></pre></td></tr></table></figure><p><img src="/images/2020/20200405-plink.png" alt="plink"></p><p><img src="/images/2020/20200405-putty.png" alt="PuTTY"></p><p><img src="/images/2020/20200405-com1-putty.png" alt="COM1 - PuTTY"></p><h2 id="相关">相关</h2><p><a href="/2020/03/28/umutech-compile-go-ipfs-on-raspberry-pi/">在树莓派上编译 go-ipfs</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;需求&quot;&gt;需求&lt;/h2&gt;
&lt;p&gt;有以下物品：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;PL2303 串口线（TTL 线）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Windows 10 PC&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;树莓派 Model B&lt;/p&gt;
&lt;/li&gt;
&lt;/u</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="windows" scheme="https://blog.umu618.com/tags/windows/"/>
    
    <category term="embedded" scheme="https://blog.umu618.com/tags/embedded/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·七鹰鸣</title>
    <link href="https://blog.umu618.com/2020/04/04/reconstructionism-poet-tomb-sweeping-day/"/>
    <id>https://blog.umu618.com/2020/04/04/reconstructionism-poet-tomb-sweeping-day/</id>
    <published>2020-04-04T05:55:12.000Z</published>
    <updated>2023-08-05T13:01:27.008Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·七鹰鸣》：七鹰鸣十几夜，语纷纷，戮殇兮，应人欲，度顽魂。几夜温酒，家何处？游牧童谣，只许樱花处问。</p><h2 id="注解">注解</h2><p>改编自唐代杜牧的《清明》：</p><blockquote><p>清明时节雨纷纷，路上行人欲断魂。<br>借问酒家何处有，牧童遥指杏花村。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·七鹰鸣》：七鹰鸣十几夜，语纷纷，戮殇兮，应人欲，度顽魂。几夜温酒，家何处？游牧童谣，只许樱花处问。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;改编自唐代杜牧的《清明》：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;清明时节雨纷纷，路上行人欲断魂。&lt;br&gt;</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="七鹰圣" scheme="https://blog.umu618.com/tags/%E4%B8%83%E9%B9%B0%E5%9C%A3/"/>
    
  </entry>
  
  <entry>
    <title>跟 UMU 一起玩 OpenWRT（入门篇18）：更换 opkg 源</title>
    <link href="https://blog.umu618.com/2020/04/02/umutech-openwrt-primer-18-opkg-source/"/>
    <id>https://blog.umu618.com/2020/04/02/umutech-openwrt-primer-18-opkg-source/</id>
    <published>2020-04-02T14:20:19.000Z</published>
    <updated>2023-08-05T13:01:27.008Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题">问题</h2><p>默认源在国内访问速度普遍比较慢。</p><p>PS: 本篇理论上应该几年前就写的……以前经常用台湾省的网络，没发现，现在补一篇。</p><h2 id="解决">解决</h2><ol><li>更换清华大学源</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">&#x27;s/downloads\.openwrt\.org/mirrors\.tuna\.tsinghua\.edu\.cn\/openwrt/g&#x27;</span> /etc/opkg/distfeeds.conf</span><br><span class="line">opkg update</span><br></pre></td></tr></table></figure><ol start="2"><li>使用 https</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">opkg install libustream-mbedtls</span><br><span class="line">sed -i <span class="string">&#x27;s/http:/https:/g&#x27;</span> /etc/opkg/distfeeds.conf</span><br></pre></td></tr></table></figure><h2 id="相关">相关</h2><p>如果您想把整个软件源下载到本地，可以参考：<a href="https://github.com/UMU618/openwrt-opkg-cache">https://github.com/UMU618/openwrt-opkg-cache</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;问题&quot;&gt;问题&lt;/h2&gt;
&lt;p&gt;默认源在国内访问速度普遍比较慢。&lt;/p&gt;
&lt;p&gt;PS: 本篇理论上应该几年前就写的……以前经常用台湾省的网络，没发现，现在补一篇。&lt;/p&gt;
&lt;h2 id=&quot;解决&quot;&gt;解决&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;更换清华大学源&lt;/li&gt;
&lt;/ol&gt;</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="embedded" scheme="https://blog.umu618.com/tags/embedded/"/>
    
    <category term="linux" scheme="https://blog.umu618.com/tags/linux/"/>
    
    <category term="openwrt" scheme="https://blog.umu618.com/tags/openwrt/"/>
    
  </entry>
  
  <entry>
    <title>跟 UMU 一起玩 OpenWRT（入门篇17）：卸载 U 盘</title>
    <link href="https://blog.umu618.com/2020/03/31/umutech-openwrt-primer-17-eject-usb-drives/"/>
    <id>https://blog.umu618.com/2020/03/31/umutech-openwrt-primer-17-eject-usb-drives/</id>
    <published>2020-03-30T16:05:47.000Z</published>
    <updated>2023-08-05T13:01:27.008Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求">需求</h2><p>在 PC 插入 U 盘/移动硬盘，Windows 会发出令人愉悦的“灯等灯”声，然后 U 盘灯开始牛逼闪闪（如果有灯）；安全弹出时，又会发出“的的等”，灯熄灭（有些 U 盘不会灭灯，而是常亮着，不会再闪；移动硬盘一般都会灭灯）。</p><p>OpenWRT 这么强大，怎么能不支持？</p><ul><li><p>什么？你说 <code>umount</code>？那 /dev/sda 还能重新挂载呢！<s>那灯还亮着呢！</s>（有些 U 盘弹出后灯常亮，设计好的才会灭灯。）</p></li><li><p>什么？你说直接拔掉？你赢了！但有时候，稣是在远程操作，要是没人配合拔掉，岂不是要插着耗电？穷人可是交不起电费的……</p></li></ul><h2 id="解决">解决</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">opkg update</span><br><span class="line">opkg install eject</span><br><span class="line"></span><br><span class="line">eject /dev/sda</span><br></pre></td></tr></table></figure><p>终于安全弹出啦！</p><p><strong>注意</strong>：弹出后，​/dev/sda 还会存在，但无法再 mount，而且它下面的分区 /dev/sda1 ​等，都会消失。</p><p>eject 默认会先后尝试使用 CD-ROM 和 SCSI 命令弹出设备，可以用 <code>-v</code> 参数查看详细流程，一般 U 盘用 <code>-s</code> 参数指定使用 SCSI 命令更为直接。</p><h2 id="相关">相关</h2><p><a href="/2014/06/23/umutech-openwrt-primer-6-mount-usb-storage/">跟 UMU 一起玩 OpenWRT（入门篇6）：挂接 U 盘</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;需求&quot;&gt;需求&lt;/h2&gt;
&lt;p&gt;在 PC 插入 U 盘/移动硬盘，Windows 会发出令人愉悦的“灯等灯”声，然后 U 盘灯开始牛逼闪闪（如果有灯）；安全弹出时，又会发出“的的等”，灯熄灭（有些 U 盘不会灭灯，而是常亮着，不会再闪；移动硬盘一般都会灭灯）。&lt;/p</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="embedded" scheme="https://blog.umu618.com/tags/embedded/"/>
    
    <category term="linux" scheme="https://blog.umu618.com/tags/linux/"/>
    
    <category term="openwrt" scheme="https://blog.umu618.com/tags/openwrt/"/>
    
  </entry>
  
  <entry>
    <title>在树莓派上编译 go-ipfs</title>
    <link href="https://blog.umu618.com/2020/03/28/umutech-compile-go-ipfs-on-raspberry-pi/"/>
    <id>https://blog.umu618.com/2020/03/28/umutech-compile-go-ipfs-on-raspberry-pi/</id>
    <published>2020-03-28T13:39:02.000Z</published>
    <updated>2024-04-11T15:14:12.921Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-需求">1. 需求</h2><p>用 PC 当 Server 测试环境，费电！挖出吃灰多年的树莓派 Model B Rev 2 000f，打算用它跑 ipfs！</p><h2 id="2-系统选型">2. 系统选型</h2><ul><li><p>较熟悉的 CentOS、FreeBSD、Ubuntu Server、Windows IoT 的当代主流版本都不支持这款古老的树莓派。</p></li><li><p>ArchLinux 支持，然而稣个人认为 ArchLinux（<s>属于 Linux 中的邪教</s>）不适合当 Server。</p></li><li><p>尝试刷 OpenWRT，发现即使设置密码，本地控制台也是没密码就能登录。这不太安全，虽然本地就是不安全的，但别的系统可不是这么设计的！</p></li><li><p>还是官方的 Raspbian Buster Lite 吧！</p></li></ul><h2 id="3-安装系统">3. 安装系统</h2><p>主要参考官方文档：</p><ul><li><p><a href="https://www.raspberrypi.org/documentation/setup/">Setup</a>：选个 16GB 的 SD 卡。</p></li><li><p><a href="https://www.raspberrypi.org/documentation/installation/installing-images/README.md">Installing operating system images</a>：用官方 Raspberry Pi Imager 工具把系统镜像刷到 SD 卡。</p></li><li><p>接 HDMI 显示，通电。首次启动，系统会自动对 SD 卡的分区进行扩容，使第二个分区扩满未分配空间。</p></li></ul><h2 id="4-配置系统">4. 配置系统</h2><p>通过 <code>sudo raspi-config</code> 做基本配置：</p><ul><li><p>进“本地化”把默认语言 en_GB.UTF-8 去掉，勾选 en_US.UTF-8。</p></li><li><p>键盘布局改为通用 105 键（国际）美国布局（默认的英国布局下按 | 会变 ~）。</p></li><li><p>时区改为当地。</p></li><li><p>改机器名（如果您有多个树莓派，不改会重名），稣将之改为 rp1b。</p></li><li><p>改 pi 用户的密码。</p></li><li><p>开启 SSH，插上网线或者 USB 无线网卡，就可以从别处远程登录它了。</p></li></ul><h2 id="5-配置国内-apt-源">5. 配置国内 apt 源</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo mv /etc/apt/sources.list /etc/apt/sources.list.bak</span><br><span class="line"><span class="comment"># 增加阿里云源</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;deb https://mirrors.aliyun.com/raspbian/raspbian/ buster main non-free contrib</span></span><br><span class="line"><span class="string">deb-src https://mirrors.aliyun.com/raspbian/raspbian/ buster main non-free contrib&#x27;</span> | sudo tee /etc/apt/sources.list.d/aliyun.list</span><br><span class="line"><span class="comment"># 增加清华大学源</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;deb https://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ buster main non-free contrib</span></span><br><span class="line"><span class="string">deb-src https://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ buster main non-free contrib&#x27;</span> | sudo tee /etc/apt/sources.list.d/tsinghua.list</span><br></pre></td></tr></table></figure><h2 id="6-安装-Go-编译器">6. 安装 Go 编译器</h2><p>打算直接在树莓派上编译，所以要先在树莓派上安装编译环境。不过不要通过 <code>sudo apt install golang</code> 安装，因为截至今天（2020-03-28），这命令安装的是 1.11.6 版，这对 <a href="https://github.com/ipfs/go-ipfs">go-ipfs</a> 项目来说太低了。</p><p>到 <a href="https://golang.org/dl/">golang 官网下载</a> ARMv6 安装包，目前最新版本是 <a href="https://dl.google.com/go/go1.14.1.linux-armv6l.tar.gz">1.14.1</a>。</p><p>压缩包里是有一个 go 文件夹的，所以只要解压到 /usr/local/ 下即可。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># aria2 比 wget 强大</span></span><br><span class="line"><span class="comment"># sudo apt install aria2</span></span><br><span class="line">aria2c https://dl.google.com/go/go1.14.1.linux-armv6l.tar.gz</span><br><span class="line">tar -C /usr/<span class="built_in">local</span> -xzf go1.14.1.linux-armv6l.tar.gz</span><br><span class="line">sudo ln -s /usr/<span class="built_in">local</span>/go/bin/go /usr/bin/go</span><br><span class="line">sudo ln -s /usr/<span class="built_in">local</span>/go/bin/gofmt /usr/bin/gofmt</span><br></pre></td></tr></table></figure><h2 id="7-编译项目">7. 编译项目</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/ipfs/go-ipfs</span><br><span class="line"><span class="built_in">cd</span> go-ipfs</span><br><span class="line">make build</span><br></pre></td></tr></table></figure><p>有很多依赖库需要下载，开始漫长等待……如果代码都下载完，则 <code>make build</code> 的输出为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">go version go1.14.1 linux&#x2F;arm</span><br><span class="line">bin&#x2F;check_go_version 1.14.1</span><br><span class="line">plugin&#x2F;loader&#x2F;preload.sh &gt; plugin&#x2F;loader&#x2F;preload.go</span><br><span class="line">go fmt plugin&#x2F;loader&#x2F;preload.go &gt;&#x2F;dev&#x2F;null</span><br><span class="line">go build  &quot;-asmflags&#x3D;all&#x3D;&#39;-trimpath&#x3D;&#39;&quot; &quot;-gcflags&#x3D;all&#x3D;&#39;-trimpath&#x3D;&#39;&quot; -ldflags&#x3D;&quot;-X &quot;github.com&#x2F;ipfs&#x2F;go-ipfs&quot;.CurrentCommit&#x3D;3561de074-dirty&quot; -o &quot;cmd&#x2F;ipfs&#x2F;ipfs&quot; &quot;github.com&#x2F;ipfs&#x2F;go-ipfs&#x2F;cmd&#x2F;ipfs&quot;</span><br></pre></td></tr></table></figure><p>最后一行会卡很久！em……用高性能机器来交叉编译才是正确的方式！</p><h2 id="8-在-macOS-上编译树莓派程序">8. 在 macOS 上编译树莓派程序</h2><p>树莓派的 CPU 架构是 armv6l，所以用以下命令编译：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CGO_ENABLED=0 GOOS=linux GOARCH=arm GOARM=6 make build</span><br></pre></td></tr></table></figure><p>在 MBP15 上编译快很多！（<s>前面纯属折腾！</s>）编完复制到树莓派：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp ./cmd/ipfs/ipfs pi@rp1b:/home/pi/</span><br></pre></td></tr></table></figure><p>在树莓派上测试：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">pi@rp1b:~ $ uname -a</span><br><span class="line">Linux rp1b 4.19.97+ #1294 Thu Jan 30 13:10:54 GMT 2020 armv6l GNU&#x2F;Linux</span><br><span class="line"></span><br><span class="line">pi@rp1b:~ $ .&#x2F;ipfs version</span><br><span class="line">ipfs version 0.5.0-dev</span><br><span class="line"></span><br><span class="line">pi@rp1b:~ $ .&#x2F;ipfs init</span><br><span class="line">initializing IPFS node at &#x2F;home&#x2F;pi&#x2F;.ipfs</span><br><span class="line">generating 2048-bit RSA keypair...</span><br><span class="line"></span><br><span class="line">pi@rp1b:~ $ .&#x2F;ipfs daemon</span><br><span class="line">Initializing daemon...</span><br><span class="line">go-ipfs version: 0.5.0-dev-3561de074</span><br><span class="line">Repo version: 9</span><br><span class="line">System version: arm&#x2F;linux</span><br><span class="line">Golang version: go1.14</span><br><span class="line">Swarm listening on &#x2F;ip4&#x2F;127.0.0.1&#x2F;tcp&#x2F;4001</span><br><span class="line">Swarm listening on &#x2F;ip4&#x2F;192.168.1.91&#x2F;tcp&#x2F;4001</span><br><span class="line">Swarm listening on &#x2F;ip6&#x2F;240e:379:254c:9d00:969d:e453:9448:1efb&#x2F;tcp&#x2F;4001</span><br><span class="line">Swarm listening on &#x2F;ip6&#x2F;::1&#x2F;tcp&#x2F;4001</span><br><span class="line">Swarm listening on &#x2F;p2p-circuit</span><br><span class="line">Swarm announcing &#x2F;ip4&#x2F;110.87.124.125&#x2F;tcp&#x2F;21551</span><br><span class="line">Swarm announcing &#x2F;ip4&#x2F;127.0.0.1&#x2F;tcp&#x2F;4001</span><br><span class="line">Swarm announcing &#x2F;ip4&#x2F;192.168.1.91&#x2F;tcp&#x2F;4001</span><br><span class="line">Swarm announcing &#x2F;ip6&#x2F;240e:379:254c:9d00:969d:e453:9448:1efb&#x2F;tcp&#x2F;4001</span><br><span class="line">Swarm announcing &#x2F;ip6&#x2F;::1&#x2F;tcp&#x2F;4001</span><br><span class="line">API server listening on &#x2F;ip4&#x2F;127.0.0.1&#x2F;tcp&#x2F;5001</span><br><span class="line">WebUI: http:&#x2F;&#x2F;127.0.0.1:5001&#x2F;webui</span><br><span class="line">Gateway (readonly) server listening on &#x2F;ip4&#x2F;127.0.0.1&#x2F;tcp&#x2F;8080</span><br><span class="line">Daemon is ready</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-需求&quot;&gt;1. 需求&lt;/h2&gt;
&lt;p&gt;用 PC 当 Server 测试环境，费电！挖出吃灰多年的树莓派 Model B Rev 2 000f，打算用它跑 ipfs！&lt;/p&gt;
&lt;h2 id=&quot;2-系统选型&quot;&gt;2. 系统选型&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;较熟</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="go" scheme="https://blog.umu618.com/tags/go/"/>
    
    <category term="embedded" scheme="https://blog.umu618.com/tags/embedded/"/>
    
    <category term="linux" scheme="https://blog.umu618.com/tags/linux/"/>
    
    <category term="raspbian" scheme="https://blog.umu618.com/tags/raspbian/"/>
    
  </entry>
  
  <entry>
    <title>学习 Rust【4】调用 libc</title>
    <link href="https://blog.umu618.com/2020/03/25/umutech-learn-rust-4-call-libc/"/>
    <id>https://blog.umu618.com/2020/03/25/umutech-learn-rust-4-call-libc/</id>
    <published>2020-03-25T05:04:28.000Z</published>
    <updated>2023-08-05T13:01:27.008Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题">问题</h2><p><a href="https://www.zhihu.com/question/381987281">Rust中如何使用linux的原生api？ - 知乎</a></p><h2 id="概述">概述</h2><p>很多语言调用 C 语言写的模块来弥补自己某些不足。Rust 当然也可以调用 C 语言开发的模块，不过这是不安全的。</p><h2 id="代码">代码</h2><ol><li>在 Cargo.toml 中加入依赖库：</li></ol><figure class="highlight toml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[dependencies]</span></span><br><span class="line"><span class="attr">libc</span> = <span class="string">&quot;0.2.68&quot;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>Rust 示例代码：</li></ol><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> libc;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> pid = <span class="keyword">unsafe</span> &#123; libc::fork() &#125;;</span><br><span class="line">    <span class="keyword">if</span> pid &lt; <span class="number">0</span> &#123;</span><br><span class="line">        eprintln!(<span class="string">&quot;错误！&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> pid == <span class="number">0</span> &#123;</span><br><span class="line">        <span class="built_in">println!</span>(<span class="string">&quot;子进程空间&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">println!</span>(<span class="string">&quot;父进程空间, 子进程 pid 为 &#123;&#125;&quot;</span>, pid);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>macOS <strong>也</strong>测试通过。</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;问题&quot;&gt;问题&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://www.zhihu.com/question/381987281&quot;&gt;Rust中如何使用linux的原生api？ - 知乎&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;概述&quot;&gt;概述&lt;/h2&gt;
&lt;p&gt;很多语言调用 C</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="linux" scheme="https://blog.umu618.com/tags/linux/"/>
    
    <category term="rust" scheme="https://blog.umu618.com/tags/rust/"/>
    
  </entry>
  
  <entry>
    <title>家用 WiFi 方案</title>
    <link href="https://blog.umu618.com/2020/03/23/umutech-home-wifi-solution/"/>
    <id>https://blog.umu618.com/2020/03/23/umutech-home-wifi-solution/</id>
    <published>2020-03-23T13:57:52.000Z</published>
    <updated>2023-08-05T13:01:27.008Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、问题">一、问题</h2><blockquote><p>我房子太大，一个无线路由器覆盖不了怎么办？ - 知乎</p></blockquote><h2 id="二、经验">二、经验</h2><ul><li><p>1000 多平方米的办公室够大吧？一个小米路由器 Pro 放在中间，办公区域覆盖完全，仅厕所信号较弱。</p></li><li><p>100 平占地面积，三层楼（无电梯、楼梯洞很大），在二楼放一个 79 块的路由器，日常无痛使用 4 年以上。</p></li></ul><p>WiFi 信号是通过漫反射传播的，不是什么“穿墙”！所以重点不是“太大”，而是钢筋混凝土墙的格局。</p><blockquote><p>震惊！WiFi 信号在空旷的地方轻松覆盖你家十栋大别墅的面积！</p></blockquote><p>真正能靠透射、衍射穿透的是玻璃、木头、塑料之类。5.8G 信号是厘米波，能穿透的厚度也不大，稍微厚点的木门都不行，只能从门下的缝钻进去。您可以在房间里做开关门试验，结论是：<strong>穿墙太难了，撞墙倒是会反弹……</strong></p><blockquote><p>5G WiFi 就是 5.8GHz，为和 5G 蜂窝网络区分开，特意采用 5.8G。</p></blockquote><h2 id="三、廉价而靠谱的方案">三、廉价而靠谱的方案</h2><p>主路由 + AP 方案！中间当然是千兆网线连接，如果您没有布网，那就跳过，看后面分析为什么其它方案都不靠谱。</p><h3 id="1-硬件">1. 硬件</h3><p>本方案需要的硬件是 N 个刷 OpenWRT 的路由器：</p><ul><li><p>主路由器，自然就是放在多媒体箱里，接光猫或入户网线。</p></li><li><p>AP，其实也是个 OpenWRT 路由器，只是关闭 DHCP 服务，配置和主路由器同网段，然后用 LAN 口接主路由器的 LAN 口。</p></li></ul><p>AP 可以有多个。比如稣家，是长方形结构，距离多媒体箱最远的主卧关上门基本零信号，只能在主卧放一个 AP，然后全家都覆盖完整。</p><h3 id="2-软件">2. 软件</h3><ul><li><p>只开 5.8G，尽量不开 2.4G。稣家的“只支持 2.4G 的终端设备”全部集中在大厅区域，所以只有主路由器开启 2.4G。如果开多个 2.4G，注意信道隔离。每个 5.8G 信号都用同样的 SSID，以实现漫游。</p></li><li><p>AP 的 IP 地址可以使用静态，也可以使用 DHCP client，然后在主路由器上绑定地址。AP 有固定 IP 方便登录管理。</p></li><li><p>如果 AP 需要 IPv6 地址，再创建一个 lan6 接口，物理 Interface 选择 br-lan（和 lan 接口一样，但不能勾选 Bridge interfaces），协议是 DHCPv6 client。</p></li></ul><h3 id="3-测试">3. 测试</h3><p>有人说，这样的方案缺乏 AC 管理，会导致终端设备可能不会自动切换信号。稣特地拿出祖传的 iPad2，从大厅漫步到主卧，神奇的事情发生了——居然可以自动切换 5.8G WiFi 信号！终端能不能自动切换，这显然是驱动程序决定的，虽然 iPad2 已经很老，但系统有更新到 iOS 9.3.5……</p><p>实在找不到一个不能自动切换信号的设备！好，测试结束。方案完美上线。</p><h3 id="4-为什么这个方案可行？">4. 为什么这个方案可行？</h3><ul><li><p>OpenWRT 说它确实可行！</p></li><li><p>移动中使用设备的机会不高。您不会在家里跑来跑去，同时费劲地使用设备，有可能您根本就不需要自动漫游。</p></li><li><p>您不会在家里的每个角落使用 WiFi，所以有很多地方并不需要有信号，比如洗手台、走廊、厨房。</p></li></ul><h2 id="四、AC-AP-方案？">四、AC+AP 方案？</h2><p>买不起！什么？你说某些乐射 AC 很便宜？不好意思，很便宜也不是免费，还耗电！做人，难，做穷人，难上难！</p><p><strong>AC+AP 方案的原理</strong>：AC 会自动发现并管理 AP，设定 AP 的 RSSI 阈值，将信号不稳定的设备【踢下线】，迫使终端设备重新连接信号最强的 AP，实现 AP 的自动切换。</p><p>请注意【踢下线】三个字，用 AC，在终端移动时，一样会断线。既然都会断，那就没有本质的区别，让终端自己选择，体验并没有比较差！</p><p>所谓 AC 管理，无非是促使那些不支持 802.11k-2008 的设备重新连接而已。如果您有这样的设备，建议还是换掉他们，或者固定他们，<s>古董啊，可别让它们逃跑了！</s></p><h2 id="五、Mesh-方案？">五、Mesh 方案？</h2><p>贵！Mesh 的主节点就是个 AC，绕回 AC+AP 方案。有网线的话，为什么不用 AP 方案？根本就是一样的嘛！</p><h2 id="六、电力线？">六、电力线？</h2><p>懒得喷……</p><h2 id="七、参考">七、参考</h2><p><a href="https://support.apple.com/zh-cn/HT202628">在 iOS 上通过 802.11k、802.11r 和 802.11v 实现 Wi-Fi 网络漫游</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;一、问题&quot;&gt;一、问题&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;我房子太大，一个无线路由器覆盖不了怎么办？ - 知乎&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;二、经验&quot;&gt;二、经验&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;1000 多平方米的办公室够大吧？一</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="debug" scheme="https://blog.umu618.com/tags/debug/"/>
    
    <category term="openwrt" scheme="https://blog.umu618.com/tags/openwrt/"/>
    
    <category term="router" scheme="https://blog.umu618.com/tags/router/"/>
    
  </entry>
  
  <entry>
    <title>chsh -s zsh</title>
    <link href="https://blog.umu618.com/2020/03/23/umutech-chsh/"/>
    <id>https://blog.umu618.com/2020/03/23/umutech-chsh/</id>
    <published>2020-03-23T07:53:16.000Z</published>
    <updated>2024-04-11T15:14:12.921Z</updated>
    
    <content type="html"><![CDATA[<h2 id="标题是个坑">标题是个坑</h2><p>不要在 Ubuntu 上运行这条命令！都说 CentOS 比 Ubuntu 稳定，总算见识到具体案例！</p><h2 id="没有对比就没有伤害">没有对比就没有伤害</h2><h3 id="CentOS">CentOS</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ cat /etc/centos-release</span><br><span class="line">CentOS Linux release 7.7.1908 (Core)</span><br><span class="line"></span><br><span class="line">$ chsh -s zsh</span><br><span class="line">Changing shell <span class="keyword">for</span> root.</span><br><span class="line">chsh: shell must be a full path name</span><br></pre></td></tr></table></figure><p>可见，机智的 CentOS，早就料到这个运维事故！</p><h3 id="Ubuntu">Ubuntu</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ cat /etc/lsb-release</span><br><span class="line">DISTRIB_ID=Ubuntu</span><br><span class="line">DISTRIB_RELEASE=18.04</span><br><span class="line">DISTRIB_CODENAME=bionic</span><br><span class="line">DISTRIB_DESCRIPTION=<span class="string">&quot;Ubuntu 18.04.4 LTS&quot;</span></span><br><span class="line"></span><br><span class="line">$ chsh -s zsh</span><br><span class="line">chsh: Warning: zsh does not exist</span><br><span class="line"></span><br><span class="line">$ cat /etc/passwd</span><br><span class="line">root:x:0:0:root:/root:zsh</span><br></pre></td></tr></table></figure><p>SSH 到 Ubuntu Server 上，运行 <code>chsh -s zsh</code>，<code>exit</code> 后就再也无法登录……</p><p>如果您要远程做这个试验，记得 <code>exit</code> 前 <code>chsh -s /bin/zsh</code>，或者 <code>vi</code> 手动纠正 /etc/passwd。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;标题是个坑&quot;&gt;标题是个坑&lt;/h2&gt;
&lt;p&gt;不要在 Ubuntu 上运行这条命令！都说 CentOS 比 Ubuntu 稳定，总算见识到具体案例！&lt;/p&gt;
&lt;h2 id=&quot;没有对比就没有伤害&quot;&gt;没有对比就没有伤害&lt;/h2&gt;
&lt;h3 id=&quot;CentOS&quot;&gt;CentO</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="linux" scheme="https://blog.umu618.com/tags/linux/"/>
    
    <category term="ops" scheme="https://blog.umu618.com/tags/ops/"/>
    
  </entry>
  
  <entry>
    <title>macOS 研究经验【2】：简单的破解</title>
    <link href="https://blog.umu618.com/2020/03/18/umutech-2-advanced-skills-on-macos/"/>
    <id>https://blog.umu618.com/2020/03/18/umutech-2-advanced-skills-on-macos/</id>
    <published>2020-03-18T05:19:23.000Z</published>
    <updated>2023-10-29T12:24:56.935Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-Beyond-Compare">1. Beyond Compare</h2><p>BC 试用版过期，思考 3 秒钟：<s>稣太穷，买不起！</s></p><p>macOS 和 iOS 一样，App 都是独立存储，找出安装信息保存在哪个文件应该很容易。</p><p>确实如此！居然只要两步：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/Library/Application Support/Beyond Compare</span><br><span class="line">rm registry.dat</span><br></pre></td></tr></table></figure><h2 id="2-X-NG">2. X-NG</h2><p>由于子公司、分公司众多，稣的服务器列表里有好多个项，想备份这个列表，发现还不是很容易！</p><p><img src="/images/2020/20200318-0.jpg" alt="ServerProfileManager"></p><p>首先，找到 <code>~/Library/Application Support/X-NG/-local-config.json</code>，但这个文件里只有当前选择的项。</p><p>然后，就看代码吧！Swift 写的，应该还好：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> defaults <span class="operator">=</span> <span class="type">UserDefaults</span>.standard</span><br><span class="line"><span class="keyword">let</span> keys <span class="operator">=</span> [</span><br></pre></td></tr></table></figure><p>根据代码线索找到：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">defaults <span class="built_in">read</span> ~/Library/Preferences/com.yuzhou.X-NG.plist</span><br></pre></td></tr></table></figure><p>哇~全部出来了！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-Beyond-Compare&quot;&gt;1. Beyond Compare&lt;/h2&gt;
&lt;p&gt;BC 试用版过期，思考 3 秒钟：&lt;s&gt;稣太穷，买不起！&lt;/s&gt;&lt;/p&gt;
&lt;p&gt;macOS 和 iOS 一样，App 都是独立存储，找出安装信息保存在哪个文件应该很容易。&lt;/p</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="debug" scheme="https://blog.umu618.com/tags/debug/"/>
    
    <category term="macos" scheme="https://blog.umu618.com/tags/macos/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·我类么张</title>
    <link href="https://blog.umu618.com/2020/03/17/reconstructionism-poet-whatever-zhang/"/>
    <id>https://blog.umu618.com/2020/03/17/reconstructionism-poet-whatever-zhang/</id>
    <published>2020-03-17T11:51:00.000Z</published>
    <updated>2023-08-05T13:01:27.008Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·我类么张》：教主威名顶天扬，挪移失踪烂教纲。殷郎油尽淡淡伤，杨逍无奈朱元璋。</p><h2 id="注解">注解</h2><ul><li><p>我类么：Whatever。</p></li><li><p>挪移失踪烂教纲：领导常年消失不见一般会烂掉。</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·我类么张》：教主威名顶天扬，挪移失踪烂教纲。殷郎油尽淡淡伤，杨逍无奈朱元璋。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;我类么：Whatever。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;挪移失踪烂教纲：领导常年消失不见一般会烂掉。&lt;</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
  </entry>
  
  <entry>
    <title>macOS 研究经验【1】：关于 APFS Container</title>
    <link href="https://blog.umu618.com/2020/03/15/umutech-about-apfs-container/"/>
    <id>https://blog.umu618.com/2020/03/15/umutech-about-apfs-container/</id>
    <published>2020-03-15T15:25:53.000Z</published>
    <updated>2023-10-29T12:24:56.937Z</updated>
    
    <content type="html"><![CDATA[<h2 id="起因">起因</h2><p>最近 MBP15 的硬盘空间告急，打开“磁盘工具”查看，却发现居然有两个“宗卷”！从没认真研究过 macOS 磁盘管理的稣疑惑了。</p><p>“磁盘工具”默认“仅显示宗卷”，“显示所有设备”后是这样的：</p><p><img src="/images/2020/20200315-0.png" alt="disk0"></p><p><img src="/images/2020/20200315-1.png" alt="disk1"></p><p><img src="/images/2020/20200315-2.png" alt="disk1s5"></p><p><img src="/images/2020/20200315-3.png" alt="disk1s1"></p><h2 id="分析">分析</h2><p>肉眼观测 disk1 是放在 disk0 里的……嗯，想起容器！但 GUI 有时候是会骗人的，用 diskutil 来检查一下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$ diskutil list</span><br><span class="line">&#x2F;dev&#x2F;disk0 (internal, physical):</span><br><span class="line">   #:                       TYPE NAME                    SIZE       IDENTIFIER</span><br><span class="line">   0:      GUID_partition_scheme                        *251.0 GB   disk0</span><br><span class="line">   1:                        EFI EFI                     314.6 MB   disk0s1</span><br><span class="line">   2:                 Apple_APFS Container disk1         250.7 GB   disk0s2</span><br><span class="line"></span><br><span class="line">&#x2F;dev&#x2F;disk1 (synthesized):</span><br><span class="line">   #:                       TYPE NAME                    SIZE       IDENTIFIER</span><br><span class="line">   0:      APFS Container Scheme -                      +250.7 GB   disk1</span><br><span class="line">                                 Physical Store disk0s2</span><br><span class="line">   1:                APFS Volume Macintosh HD - 数据     209.2 GB   disk1s1</span><br><span class="line">   2:                APFS Volume Preboot                 79.9 MB    disk1s2</span><br><span class="line">   3:                APFS Volume Recovery                526.6 MB   disk1s3</span><br><span class="line">   4:                APFS Volume VM                      8.6 GB     disk1s4</span><br><span class="line">   5:                APFS Volume Macintosh HD            11.2 GB    disk1s5</span><br></pre></td></tr></table></figure><p>以上可知，只有 disk0 是物理的，disk1 是由 disk0s2 这个分区虚拟出来的。</p><p>下面查看两者详细信息对比：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">$ diskutil info &#x2F;dev&#x2F;disk0</span><br><span class="line">   Device Identifier:         disk0</span><br><span class="line">   Device Node:               &#x2F;dev&#x2F;disk0</span><br><span class="line">   Whole:                     Yes</span><br><span class="line">   Part of Whole:             disk0</span><br><span class="line">   Device &#x2F; Media Name:       APPLE SSD AP0256M</span><br><span class="line"></span><br><span class="line">   Volume Name:               Not applicable (no file system)</span><br><span class="line">   Mounted:                   Not applicable (no file system)</span><br><span class="line">   File System:               None</span><br><span class="line"></span><br><span class="line">   Content (IOContent):       GUID_partition_scheme</span><br><span class="line">   OS Can Be Installed:       No</span><br><span class="line">   Media Type:                Generic</span><br><span class="line">   Protocol:                  PCI-Express</span><br><span class="line">   SMART Status:              Verified</span><br><span class="line"></span><br><span class="line">   Disk Size:                 251.0 GB (251000193024 Bytes) (exactly 490234752 512-Byte-Units)</span><br><span class="line">   Device Block Size:         4096 Bytes</span><br><span class="line"></span><br><span class="line">   Read-Only Media:           No</span><br><span class="line">   Read-Only Volume:          Not applicable (no file system)</span><br><span class="line"></span><br><span class="line">   Device Location:           Internal</span><br><span class="line">   Removable Media:           Fixed</span><br><span class="line"></span><br><span class="line">   Solid State:               Yes</span><br><span class="line">   Virtual:                   No</span><br><span class="line">   Hardware AES Support:      Yes</span><br><span class="line"></span><br><span class="line">$ diskutil info &#x2F;dev&#x2F;disk1</span><br><span class="line">   Device Identifier:         disk1</span><br><span class="line">   Device Node:               &#x2F;dev&#x2F;disk1</span><br><span class="line">   Whole:                     Yes</span><br><span class="line">   Part of Whole:             disk1</span><br><span class="line">   Device &#x2F; Media Name:       APPLE SSD AP0256M</span><br><span class="line"></span><br><span class="line">   Volume Name:               Not applicable (no file system)</span><br><span class="line">   Mounted:                   Not applicable (no file system)</span><br><span class="line">   File System:               None</span><br><span class="line"></span><br><span class="line">   Content (IOContent):       EF57347C-0000-11AA-AA11-00306543ECAC</span><br><span class="line">   OS Can Be Installed:       No</span><br><span class="line">   Media Type:                Generic</span><br><span class="line">   Protocol:                  PCI-Express</span><br><span class="line">   SMART Status:              Verified</span><br><span class="line">   Disk &#x2F; Partition UUID:     1DDCC569-2632-4CD5-88E7-66E2BBE745C9</span><br><span class="line"></span><br><span class="line">   Disk Size:                 250.7 GB (250685575168 Bytes) (exactly 489620264 512-Byte-Units)</span><br><span class="line">   Device Block Size:         4096 Bytes</span><br><span class="line"></span><br><span class="line">   Read-Only Media:           No</span><br><span class="line">   Read-Only Volume:          Not applicable (no file system)</span><br><span class="line"></span><br><span class="line">   Device Location:           Internal</span><br><span class="line">   Removable Media:           Fixed</span><br><span class="line"></span><br><span class="line">   Solid State:               Yes</span><br><span class="line">   Virtual:                   Yes</span><br><span class="line">   Hardware AES Support:      Yes</span><br><span class="line"></span><br><span class="line">   This disk is an APFS Container.  APFS Information:</span><br><span class="line">   APFS Physical Store:       disk0s2</span><br><span class="line">   Fusion Drive:              No</span><br></pre></td></tr></table></figure><p>两者 Virtual 属性的不同，说明前面的猜测是对的。</p><h2 id="理论求证">理论求证</h2><p>搜到如下参考：</p><ul><li><a href="https://sspai.com/post/57052">当 Mac 升级到 Catalina 时，苹果在硬盘里施了点魔法</a></li></ul><p>推理正确！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;起因&quot;&gt;起因&lt;/h2&gt;
&lt;p&gt;最近 MBP15 的硬盘空间告急，打开“磁盘工具”查看，却发现居然有两个“宗卷”！从没认真研究过 macOS 磁盘管理的稣疑惑了。&lt;/p&gt;
&lt;p&gt;“磁盘工具”默认“仅显示宗卷”，“显示所有设备”后是这样的：&lt;/p&gt;
&lt;p&gt;&lt;img s</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="debug" scheme="https://blog.umu618.com/tags/debug/"/>
    
    <category term="ops" scheme="https://blog.umu618.com/tags/ops/"/>
    
    <category term="macos" scheme="https://blog.umu618.com/tags/macos/"/>
    
  </entry>
  
  <entry>
    <title>libbloom</title>
    <link href="https://blog.umu618.com/2020/03/14/umutech-libbloom/"/>
    <id>https://blog.umu618.com/2020/03/14/umutech-libbloom/</id>
    <published>2020-03-14T05:51:46.000Z</published>
    <updated>2023-08-05T13:01:27.008Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概念">概念</h2><p><em>Bloom filter</em> 是由 Howard Bloom 在 1970 年提出的二进制向量数据结构，具有很好的空间和时间效率，被用来检测一个元素是不是集合的成员。</p><p>Bloom filter 采用的是哈希函数的方法，将一个元素映射到一个 m 长度的阵列上的一个点，当这个点是 1 时，那么这个元素可能在集合内，反之则一定不在集合内。</p><p><a href="https://github.com/jvirkki/libbloom">libbloom</a> 是 <em>Bloom filter</em> 的 C 语言实现库，其中哈希函数是 MurmurHash2。</p><h2 id="特征">特征</h2><p>如果检测结果为是，该元素不一定在集合中；但如果检测结果为否，该元素一定不在集合中。</p><h2 id="优缺点">优缺点</h2><ul><li><p>优点：插入和查询时间都是常数。它查询元素却不保存元素本身，节省大量的存储空间。当元素是密码时，不保存元素的特征使其具有良好的安全性。</p></li><li><p>缺点：存在误报（false positive）。当插入的元素越多，错判“在集合内”的概率就越大。另外 Bloom filter 也不能删除一个元素，因为多个元素哈希的结果可能在 Bloom filter 结构中占用的是同一个位，如果删除了一个比特位，可能会影响多个元素的检测。</p></li></ul><h2 id="算法分析">算法分析</h2><p>以官方 test-basic 为例，简化的代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;assert.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;bloom.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">bloom</span> <span class="title">bloom</span>;</span></span><br><span class="line">  assert(bloom_init(&amp;bloom, <span class="number">1002</span>, <span class="number">0.1</span>) == <span class="number">0</span>);</span><br><span class="line">  assert(bloom.ready == <span class="number">1</span>);</span><br><span class="line">  bloom_print(&amp;bloom);</span><br><span class="line">  bloom_free(&amp;bloom);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-&gt;entries &#x3D; 1002</span><br><span class="line">-&gt;error &#x3D; 0.100000</span><br><span class="line">-&gt;bits &#x3D; 4802</span><br><span class="line">-&gt;bits per elem &#x3D; 4.792529</span><br><span class="line">-&gt;bytes &#x3D; 601</span><br><span class="line">-&gt;hash functions &#x3D; 4</span><br></pre></td></tr></table></figure><p>数学原理参考：《<a href="https://blog.csdn.net/jiaomeng/article/details/1495500">Bloom Filter概念和原理</a>》</p><ul><li><p>bytes 是最容易理解的，4802 位需要 601 字节存储。</p></li><li><p>bits = bits per elem * entries，每个元素需要多少位 * 元素个数。</p></li><li><p>hash functions = ceil(-ln(error) / ln(2))</p></li><li><p>bits per elem = -ln(error) / ln(2)^2</p></li></ul><h2 id="参考">参考</h2><p><a href="https://baike.baidu.com/item/bloom%20filter">https://baike.baidu.com/item/bloom filter</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;概念&quot;&gt;概念&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Bloom filter&lt;/em&gt; 是由 Howard Bloom 在 1970 年提出的二进制向量数据结构，具有很好的空间和时间效率，被用来检测一个元素是不是集合的成员。&lt;/p&gt;
&lt;p&gt;Bloom filter 采用的是哈希</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="c" scheme="https://blog.umu618.com/tags/c/"/>
    
    <category term="lib" scheme="https://blog.umu618.com/tags/lib/"/>
    
  </entry>
  
  <entry>
    <title>学习 Rust【3】所有权</title>
    <link href="https://blog.umu618.com/2020/03/07/umutech-learn-rust-3-ownership/"/>
    <id>https://blog.umu618.com/2020/03/07/umutech-learn-rust-3-ownership/</id>
    <published>2020-03-07T09:07:26.000Z</published>
    <updated>2023-08-05T13:01:27.008Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要">摘要</h2><p>Rust 三大设计宗旨：内存安全、零成本抽象、实用。本文从所有权角度来学习<s>师兄妹的爱恨情仇</s>“内存安全”。</p><h2 id="所有权规则">所有权规则</h2><ul><li><p>值归变量所有。</p></li><li><p>当变量超出使用范围时，变量值所占用的内存将被释放。这是类似于 C++ 的 RAII 概念。</p></li><li><p>变量值可以由其他变量使用，但需遵守由编译器强制要求的若干规则。</p></li></ul><p>前两条是其它语言也有的，没啥好说，重点放在第三条。</p><h2 id="四种使用方法和规则">四种使用方法和规则</h2><ul><li><p><strong>克隆（clone）</strong>：此处将值复制到新的变量。新变量拥有新的复制值的所有权，而原始变量保留其原始值的所有权。</p><blockquote><p>你有一本书，稣按照你那本书，买了一样的书。你的书是你的书，稣的书是稣的书。</p></blockquote></li><li><p><strong>移动（move）</strong>：所有权被转移到另一个要使用该值的变量，原始变量不再拥有所有权。</p><blockquote><p>学姐含情脉脉地把她的书<strong>送给</strong>稣。</p></blockquote></li><li><p><strong>不可变借用（immutable borrow）</strong>：没有发生所有权转移，但是可以通过另一个变量读取该值。当借用变量超出范围，内存不会被回收，因为借用变量没有所有权。</p><blockquote><p>学长不太情愿地把书借给稣，并交代：“书借你，只能看，绝壁不要在上面做笔记，被我发现会砍死你的哦！我偶尔会找你查查。”</p></blockquote></li><li><p><strong>可变借用（mutable borrow）</strong>：可以通过另一个变量对该值进行读取和写入操作。当借用变量超出范围，内存也不会回收，因为借用变量没有所有权。</p><blockquote><p>稣把书借给学妹时说：“这书你随便用，把稣的书当做你自己的书，等到用不上时再还。”</p></blockquote></li></ul><p>重点在于一个“借”字：书的所有权属于其主人，但主人将书借出之后，自己是无法再在书上做笔记啦！</p><h3 id="不可变借用（immutable-borrow）规则">不可变借用（immutable borrow）规则</h3><ul><li><p>借出期间，借方不能写：学长说过，在书上乱画，要砍死稣！</p></li><li><p>借出期间，所有者不能写：这书学长已经学完，偶尔要复习，但已经不需要写笔记，借出去之后就更不会写了。</p></li></ul><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> <span class="keyword">mut</span> owner = <span class="built_in">format!</span>(<span class="string">&quot;学长的书&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 学长大笔一挥，在书上记了一点心得！</span></span><br><span class="line">    owner.push(<span class="string">&#x27;.&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 稣不可变借用学长的书</span></span><br><span class="line">    <span class="keyword">let</span> borrower = &amp;owner;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 学长随时可以来找稣翻翻他自己的书</span></span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">&quot;学长读&#123;&#125;&quot;</span>, owner);</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">&quot;学长再读&#123;&#125;&quot;</span>, owner);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 没问题，稣可以读学长的书</span></span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">&quot;稣读&#123;&#125;&quot;</span>, borrower);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// error: 书还在稣手里，学长不能写</span></span><br><span class="line">    <span class="comment">//owner.push(&#x27;.&#x27;);</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">&quot;稣再读&#123;&#125;&quot;</span>, borrower);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// error: 学长说过，在书上乱画，要砍死稣！</span></span><br><span class="line">    <span class="comment">//borrower.push(&#x27;.&#x27;);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 稣已经归还，学长可以做笔记了</span></span><br><span class="line">    owner.push(<span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="可变借用（mutable-borrow）规则">可变借用（mutable borrow）规则</h3><ul><li><p>不能多次可变借用：只能有一个独占的学妹（active borrow），稣不能同时承诺给多个学妹“随便用”，不然学妹们可能打起来……</p></li><li><p>所有者不能再读写：书在学妹手里随便蹂躏，稣虽然心疼，但不能说！等她爽（huan）了再说吧。</p></li></ul><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> <span class="keyword">mut</span> owner = <span class="built_in">format!</span>(<span class="string">&quot;稣的书&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 学妹可变借用稣的书</span></span><br><span class="line">    <span class="keyword">let</span> mutable_borrower = &amp;<span class="keyword">mut</span> owner;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// error[E0499]: cannot borrow `owner` as mutable more than once at a time</span></span><br><span class="line">    <span class="comment">// 学姐也要借，稣表示：要书没有，要命一条！</span></span><br><span class="line">    <span class="comment">//let mutable_borrower_b = &amp;mut owner;</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">&quot;学妹读&#123;&#125;&quot;</span>, mutable_borrower);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// error[E0502]: cannot borrow `owner` as immutable because it is also borrowed as mutable</span></span><br><span class="line">    <span class="comment">// 学妹暂时完全掌控稣的书</span></span><br><span class="line">    <span class="comment">//println!(&quot;稣读不鸟&#123;&#125;&quot;, owner);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 学妹大笔一挥，在书上记了一点心得！</span></span><br><span class="line">    mutable_borrower.push(<span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">&quot;学妹再读&#123;&#125;&quot;</span>, mutable_borrower);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 书已经归还给稣，稣可以做笔记了</span></span><br><span class="line">    owner.push(<span class="string">&#x27;!&#x27;</span>);</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">&quot;稣读&#123;&#125;&quot;</span>, owner);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;p&gt;Rust 三大设计宗旨：内存安全、零成本抽象、实用。本文从所有权角度来学习&lt;s&gt;师兄妹的爱恨情仇&lt;/s&gt;“内存安全”。&lt;/p&gt;
&lt;h2 id=&quot;所有权规则&quot;&gt;所有权规则&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;值归变量所有。&lt;/p&gt;
&lt;/</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="rust" scheme="https://blog.umu618.com/tags/rust/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·隐玊</title>
    <link href="https://blog.umu618.com/2020/02/28/reconstructionism-poet-recluse/"/>
    <id>https://blog.umu618.com/2020/02/28/reconstructionism-poet-recluse/</id>
    <published>2020-02-28T01:23:00.000Z</published>
    <updated>2023-08-05T13:01:27.008Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·隐玊》：诗码中年初白头，科技人生稳如狗。神之八哥思千虑，一算钱袋拮九周。</p><h2 id="注解">注解</h2><p>玊：通“士”。<br>稳如狗：稳妥地像狗，不是稳定。<br>神之八哥思千虑：要解决的问题是神级的难，脑力消耗很大。<br>一算钱袋拮九周：收入不行，只能过着拮据的生活。</p><p>改编自霹雳角色玉龙隐士诗号：</p><blockquote><p>书剑青眼初白头，<br>智殊相悬问机难，<br>波澜困守役千虑，<br>一算龙隐决九川。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·隐玊》：诗码中年初白头，科技人生稳如狗。神之八哥思千虑，一算钱袋拮九周。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;玊：通“士”。&lt;br&gt;
稳如狗：稳妥地像狗，不是稳定。&lt;br&gt;
神之八哥思千虑：要解决的问题是神级的难，脑力消耗很大。&lt;br&gt;
一算钱</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>优化思维【5】合并步骤</title>
    <link href="https://blog.umu618.com/2020/02/26/umutech-optimization-thinking-5-merge-steps/"/>
    <id>https://blog.umu618.com/2020/02/26/umutech-optimization-thinking-5-merge-steps/</id>
    <published>2020-02-26T15:38:07.000Z</published>
    <updated>2023-08-05T13:01:27.008Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前情">前情</h2><p>在《<a href="/2019/07/16/umutech-optimization-thinking-3-remove-unnecessary-steps/">优化思维【3】消除没必要步骤</a>》提到一个对象转化的例子：A 对象要转为 B 对象，实现时先把 A 对象转为中间对象 T，再将 T 转为 B 对象，由于两步都很容易实现，一个现有函数即可，所以很多人可能会采用这个思路。</p><p>下面要介绍的“合并步骤”，类似于优等生解应用题时“跳步”（一行合并多个步骤），可以作为前文的补充。</p><h2 id="例子">例子</h2><h3 id="1-合并-cat-和-grep">1. 合并 cat 和 grep</h3><p>以下命令 UMU 经常看到，其实它可以用 <code>grep UMU test</code> 来优化，减少一次管道交互。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat <span class="built_in">test</span> | grep UMU</span><br></pre></td></tr></table></figure><h3 id="2-合并多个-sed">2. 合并多个 sed</h3><p>再看下面例子是从一个命令行里移除 A 和 C 两个选项：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cmd=<span class="string">&quot;EXE A=1 B=2 C=3 D=4&quot;</span></span><br><span class="line">removed=$(<span class="built_in">echo</span> <span class="variable">$cmd</span> | sed -e <span class="string">&#x27;s/ A=[^ ]*//&#x27;</span> | sed -e <span class="string">&#x27;s/ C=[^ ]*//&#x27;</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$removed</span></span><br></pre></td></tr></table></figure><p>其中两次 <code>sed</code> 可以合并为一次：</p><ul><li><p><code>sed -e 's/ A=[^ ]*//;s/ C=[^ ]*//'</code></p></li><li><p>或 <code>sed -e 's/ [\(A\)\(C\)]=[^ ]*//g'</code></p></li><li><p>或 <code>sed -e 's/ \(A\|C\)=[^ ]*//g'</code>，这个 macOS 上不行。</p></li><li><p>或 <code>sed -E -e 's/ (A|C)=[^ ]*//g'</code>，这个适合 macOS。</p></li></ul><h3 id="3-TFO">3. TFO</h3><p>先查一下 <code>sysctl net.ipv4.tcp_fastopen</code>，一般应该是 1，说明客户端支持 TFO；如果是 2 则说明服务端支持；3 是同时支持。</p><p>TFO (TCP Fast Open) 是一种能够在 TCP 连接建立阶段传输数据的机制。使用这种机制可以将数据交互提前，降低应用层事务的延迟。</p><p>这其实也是一种合并步骤的思想，把传输数据合并到三次握手期间。</p><p>参考：</p><ul><li><p><a href="https://www.ietf.org/proceedings/80/slides/tcpm-3.pdf">https://www.ietf.org/proceedings/80/slides/tcpm-3.pdf</a></p></li><li><p><a href="https://datatracker.ietf.org/doc/rfc7413/">https://datatracker.ietf.org/doc/rfc7413/</a></p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前情&quot;&gt;前情&lt;/h2&gt;
&lt;p&gt;在《&lt;a href=&quot;/2019/07/16/umutech-optimization-thinking-3-remove-unnecessary-steps/&quot;&gt;优化思维【3】消除没必要步骤&lt;/a&gt;》提到一个对象转化的例子：A 对象</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="optimization" scheme="https://blog.umu618.com/tags/optimization/"/>
    
  </entry>
  
  <entry>
    <title>跟 UMU 一起玩 OpenWRT（入门篇16）：Python3</title>
    <link href="https://blog.umu618.com/2020/02/23/umutech-openwrt-primer-16-python3/"/>
    <id>https://blog.umu618.com/2020/02/23/umutech-openwrt-primer-16-python3/</id>
    <published>2020-02-23T10:17:39.000Z</published>
    <updated>2023-08-05T13:01:27.008Z</updated>
    
    <content type="html"><![CDATA[<h2 id="为什么-Python3？">为什么 Python3？</h2><ol><li><p>Shell 不适合某些复杂运算，尤其是 OpenWRT 用的 ash。</p></li><li><p>Lua 缺乏某些 SDK，比如说阿里云 SDK 就没有 Lua 版。</p></li><li><p>Python2 已经过时。</p></li><li><p>Node.js 在小型设备上不如 Python3 高效。</p></li><li><p>C、C++ 之流太难了！Go、Rust 还得编译，麻烦。</p></li><li><p>Perl、Ruby 已没落。</p></li></ol><h2 id="一个例子">一个例子</h2><p>当 IPv6 地址变化时，将地址发送到钉钉：<a href="https://github.com/UMU618/openwrt-ipv6-addresses">https://github.com/UMU618/openwrt-ipv6-addresses</a></p><h2 id="安装与调试">安装与调试</h2><h3 id="1-安装可执行程序">1. 安装可执行程序</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">opkg install python3-base</span><br></pre></td></tr></table></figure><p>安装 <code>python3-base</code> 之后，就可以运行 <code>python3</code> 了。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root@UMU:~<span class="comment"># python3</span></span><br><span class="line">Could not find platform dependent libraries &lt;exec_prefix&gt;</span><br><span class="line">Consider setting <span class="variable">$PYTHONHOME</span> to &lt;prefix&gt;[:&lt;exec_prefix&gt;]</span><br><span class="line">Python 3.7.6 (default, Feb 11 2020, 12:41:31)</span><br><span class="line">[GCC 7.5.0] on linux</span><br><span class="line">Type <span class="string">&quot;help&quot;</span>, <span class="string">&quot;copyright&quot;</span>, <span class="string">&quot;credits&quot;</span> or <span class="string">&quot;license&quot;</span> <span class="keyword">for</span> more information.</span><br><span class="line">&gt;&gt;&gt; </span><br></pre></td></tr></table></figure><p>用以下 Python 代码，打印目前已有的模块：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="comment">## 打印的信息太长</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> m <span class="keyword">in</span> sys.modules:</span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line">    print(<span class="string">&#x27;&#123;0:2d&#125; &#123;1:32s&#125; &#123;2&#125;&#x27;</span>.<span class="built_in">format</span>(i, m, sys.modules[m]))</span><br><span class="line"></span><br><span class="line"><span class="comment">## 不精准</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> m <span class="keyword">in</span> sys.modules.values():</span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> m.__spec__:</span><br><span class="line">        v = m.__spec__.origin</span><br><span class="line">    <span class="keyword">elif</span> m.__builtins__:</span><br><span class="line">        v = <span class="string">&#x27;-&#x27;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        v = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    print(<span class="string">&#x27;&#123;0:2d&#125; &#123;1:32s&#125; &#123;2&#125;&#x27;</span>.<span class="built_in">format</span>(i, m.__name__, v))</span><br><span class="line"></span><br><span class="line"><span class="comment">## 推荐使用</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> m <span class="keyword">in</span> sys.modules.values():</span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line">    s = <span class="built_in">str</span>(m)</span><br><span class="line">    start = s.find(<span class="string">&quot;&#x27;&quot;</span>)</span><br><span class="line">    end = s.find(<span class="string">&quot;&#x27;&quot;</span>, start+<span class="number">1</span>)</span><br><span class="line">    k = s[start+<span class="number">1</span>:end]</span><br><span class="line">    start = s.find(<span class="string">&#x27;from&#x27;</span>, end+<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">if</span> start &gt; -<span class="number">1</span>:</span><br><span class="line">        start += <span class="number">4</span></span><br><span class="line">        end = s.find(<span class="string">&#x27;&gt;&#x27;</span>, start+<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        start = s.find(<span class="string">&#x27;(&#x27;</span>, end+<span class="number">1</span>)</span><br><span class="line">        end = s.find(<span class="string">&#x27;)&#x27;</span>, start+<span class="number">1</span>)</span><br><span class="line">    v = s[start+<span class="number">1</span>:end]</span><br><span class="line">    print(<span class="string">&#x27;&#123;0:2d&#125; &#123;1:28s&#125; &#123;2&#125;&#x27;</span>.<span class="built_in">format</span>(i, k, v))</span><br></pre></td></tr></table></figure><p>结果为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"> 1 sys                          built-in</span><br><span class="line"> 2 builtins                     built-in</span><br><span class="line"> 3 _frozen_importlib            frozen</span><br><span class="line"> 4 _imp                         built-in</span><br><span class="line"> 5 _thread                      built-in</span><br><span class="line"> 6 _warnings                    built-in</span><br><span class="line"> 7 _weakref                     built-in</span><br><span class="line"> 8 zipimport                    built-in</span><br><span class="line"> 9 _frozen_importlib_external   frozen</span><br><span class="line">10 io                           built-in</span><br><span class="line">11 marshal                      built-in</span><br><span class="line">12 posix                        built-in</span><br><span class="line">13 encodings                    &#39;&#x2F;usr&#x2F;lib&#x2F;python3.7&#x2F;encodings&#x2F;__init__.pyc&#39;</span><br><span class="line">14 codecs                       &#39;&#x2F;usr&#x2F;lib&#x2F;python3.7&#x2F;codecs.pyc&#39;</span><br><span class="line">15 _codecs                      built-in</span><br><span class="line">16 encodings.aliases            &#39;&#x2F;usr&#x2F;lib&#x2F;python3.7&#x2F;encodings&#x2F;aliases.pyc&#39;</span><br><span class="line">17 encodings.utf_8              &#39;&#x2F;usr&#x2F;lib&#x2F;python3.7&#x2F;encodings&#x2F;utf_8.pyc&#39;</span><br><span class="line">18 _signal                      built-in</span><br><span class="line">19 __main__                     built-in</span><br><span class="line">20 encodings.latin_1            &#39;&#x2F;usr&#x2F;lib&#x2F;python3.7&#x2F;encodings&#x2F;latin_1.pyc&#39;</span><br><span class="line">21 io                           &#39;&#x2F;usr&#x2F;lib&#x2F;python3.7&#x2F;io.pyc&#39;</span><br><span class="line">22 abc                          &#39;&#x2F;usr&#x2F;lib&#x2F;python3.7&#x2F;abc.pyc&#39;</span><br><span class="line">23 _abc                         built-in</span><br><span class="line">24 site                         &#39;&#x2F;usr&#x2F;lib&#x2F;python3.7&#x2F;site.pyc&#39;</span><br><span class="line">25 os                           &#39;&#x2F;usr&#x2F;lib&#x2F;python3.7&#x2F;os.pyc&#39;</span><br><span class="line">26 stat                         &#39;&#x2F;usr&#x2F;lib&#x2F;python3.7&#x2F;stat.pyc&#39;</span><br><span class="line">27 _stat                        built-in</span><br><span class="line">28 posixpath                    &#39;&#x2F;usr&#x2F;lib&#x2F;python3.7&#x2F;posixpath.pyc&#39;</span><br><span class="line">29 genericpath                  &#39;&#x2F;usr&#x2F;lib&#x2F;python3.7&#x2F;genericpath.pyc&#39;</span><br><span class="line">30 posixpath                    &#39;&#x2F;usr&#x2F;lib&#x2F;python3.7&#x2F;posixpath.pyc&#39;</span><br><span class="line">31 _collections_abc             &#39;&#x2F;usr&#x2F;lib&#x2F;python3.7&#x2F;_collections_abc.pyc&#39;</span><br><span class="line">32 _sitebuiltins                &#39;&#x2F;usr&#x2F;lib&#x2F;python3.7&#x2F;_sitebuiltins.pyc&#39;</span><br><span class="line">33 atexit                       built-in</span><br></pre></td></tr></table></figure><p>下面来实现获取 IPv6 地址的功能：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">net_hex_to_ipv6</span>(<span class="params">h</span>):</span></span><br><span class="line">    ipv6 = h[<span class="number">0</span>:<span class="number">4</span>]</span><br><span class="line">    i = <span class="number">4</span></span><br><span class="line">    <span class="keyword">while</span> i &lt; <span class="built_in">len</span>(h):</span><br><span class="line">        ipv6 += <span class="string">&#x27;:&#x27;</span> + h[i:i+<span class="number">4</span>]</span><br><span class="line">        i += <span class="number">4</span></span><br><span class="line">    <span class="keyword">return</span> ipv6</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;/proc/net/if_inet6&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> f:</span><br><span class="line">        p = line.split()</span><br><span class="line">        <span class="keyword">if</span> p[<span class="number">3</span>] == <span class="string">&#x27;00&#x27;</span> <span class="keyword">and</span> (<span class="built_in">int</span>(p[<span class="number">4</span>], <span class="number">16</span>) &amp; <span class="number">0x80</span>) != <span class="number">0x80</span>:</span><br><span class="line">            ip = net_hex_to_ipv6(p[<span class="number">0</span>])</span><br><span class="line">            print(ip)</span><br><span class="line">    f.close()</span><br></pre></td></tr></table></figure><p>以上代码有个“美中不足”：只能打印地址的“首选格式”，不支持“压缩格式”。下面改进！</p><h3 id="2-安装轻量库">2. 安装轻量库</h3><p>UMU 打算使用 socket 模块的工具函数格式化 IPv6 地址，但目前已安装的 <code>python3-base</code> 不带 socket 模块：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> socket</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">ModuleNotFoundError: No module named <span class="string">&#x27;socket&#x27;</span></span><br></pre></td></tr></table></figure><p>所以需要安装 <code>python3-light</code>：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">opkg install python3-light</span><br></pre></td></tr></table></figure><p>装完即可愉快地玩耍：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line">ip = <span class="string">&#x27;0618:0618:0618:0618:0000:0000:0000:0618&#x27;</span></span><br><span class="line">print(ip, <span class="string">&#x27;-&gt;&#x27;</span>,</span><br><span class="line">    socket.inet_ntop(socket.AF_INET6, socket.inet_pton(socket.AF_INET6, ip)))</span><br></pre></td></tr></table></figure><p>以上代码打印：<code>0618:0618:0618:0618:0000:0000:0000:0618 -&gt; 618:618:618:618::618</code>。</p><h3 id="3-全量安装">3. 全量安装</h3><p>如果 <code>python3-light</code> 还不能满足您，推荐来个全家桶：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">opkg install python3</span><br></pre></td></tr></table></figure><p>PS: 不要以为只要上面这句就全装上了，前面的 <code>opkg install python3-base</code> 是必要的！如果只装 <code>python3</code>，则 <code>/usr/bin/python3</code> 并不存在！</p><p>（完）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;为什么-Python3？&quot;&gt;为什么 Python3？&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Shell 不适合某些复杂运算，尤其是 OpenWRT 用的 ash。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Lua 缺乏某些 SDK，比如说阿里云 SDK 就没有 Lua 版</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="embedded" scheme="https://blog.umu618.com/tags/embedded/"/>
    
    <category term="linux" scheme="https://blog.umu618.com/tags/linux/"/>
    
    <category term="openwrt" scheme="https://blog.umu618.com/tags/openwrt/"/>
    
    <category term="python" scheme="https://blog.umu618.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Node.js 程序员的 C++ 进修指南【1】：SetTimeout</title>
    <link href="https://blog.umu618.com/2020/02/11/umutech-cpp-for-nodejs-programmers-1-settimeout/"/>
    <id>https://blog.umu618.com/2020/02/11/umutech-cpp-for-nodejs-programmers-1-settimeout/</id>
    <published>2020-02-11T13:49:15.000Z</published>
    <updated>2023-08-05T13:01:27.008Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><ul><li><p>如果您看得懂，那么，这是 Node.js 程序员的 C++ 进修指南。</p></li><li><p>如果您没看懂，那么，这是学 C++ 的劝退书！</p></li></ul><h2 id="目的">目的</h2><p>用 C++ 改写 Node.js 程序，主要目的可能有两个：保密、提高性能。</p><p>那么您肯定要问：为什么不用 Go 或者 Rust 改写？UMU 是推荐用 Go 或 Rust 的，而且相对改写为 C++ 要简单得多，本系列文章，可能从反面论证：您应该选择用 Go 或者 Rust 改写！</p><h2 id="代码仓库">代码仓库</h2><p><a href="https://github.com/UMU618/cpp-for-nodejs-programmers">https://github.com/UMU618/cpp-for-nodejs-programmers</a></p><h2 id="第一个例子">第一个例子</h2><p>在《<a href="/2020/01/08/umutech-learn-rust-2-reduce-nesting/">学习 Rust【2】减少代码嵌套</a>》中，UMU 提到一个使代码平坦化的例子，咱们把其中最基本的功能提炼出来，成为最简单的例子：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&#x27;step1&#x27;</span>)</span><br><span class="line">&#125;, <span class="number">1000</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&#x27;step2&#x27;</span>)</span><br><span class="line">&#125;, <span class="number">2000</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&#x27;step3&#x27;</span>)</span><br><span class="line">&#125;, <span class="number">3000</span>)</span><br></pre></td></tr></table></figure><p>这段代码实现的功能是：一秒后打印 <code>step1</code>，再一秒后打印 <code>step2</code>，再一秒后打印 <code>step3</code>，退出。</p><h2 id="翻译为-C">翻译为 C++</h2><p>首先明确一点：JavaScript 是 JIT 语言，不用编译，语言宿主直接解释运行。C++ 是 AOT 语言，需要编译。所以我们需要编译器（比如 g++、clang++）和编译脚本（比如 make、cmake）。下面我们会选择在 macOS 上使用 clang++ 和 cmake 来编译 C++ 代码。其中，cmake 其实是用来产生 Makefile 的，如果您学过 Makefile，可以直接用它。</p><h3 id="1-安装依赖软件">1. 安装依赖软件</h3><ul><li><p>安装 Xcode，以获取 MacOSX.sdk。</p></li><li><p>安装 clang++ 和 cmake：</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew install llvm</span><br><span class="line">brew install cmake</span><br></pre></td></tr></table></figure><h3 id="2-STL-实现">2. STL 实现</h3><ul><li>C++ 代码：</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// set_timeout.cc</span></span><br><span class="line"><span class="comment">// UMU: 这是一个不太好的实现</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;chrono&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;future&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Timer</span> &#123;</span></span><br><span class="line"> <span class="keyword">public</span>:</span><br><span class="line">  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">setTimeout</span><span class="params">(T function, <span class="keyword">int</span> delay)</span></span>;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">stop</span><span class="params">()</span></span>;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">wait</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">private</span>:</span><br><span class="line">  <span class="keyword">bool</span> clear = <span class="literal">false</span>;</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::thread&gt; pool;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Timer::setTimeout</span><span class="params">(T function, <span class="keyword">int</span> delay)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">this</span>-&gt;clear = <span class="literal">false</span>;</span><br><span class="line">  pool.emplace_back(<span class="built_in">std</span>::thread([=]() &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>-&gt;clear) &#123;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">std</span>::this_thread::sleep_for(<span class="built_in">std</span>::chrono::milliseconds(delay));</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>-&gt;clear) &#123;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    function();</span><br><span class="line">  &#125;));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Timer::stop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">this</span>-&gt;clear = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Timer::wait</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="built_in">std</span>::thread&amp; thread : pool) &#123;</span><br><span class="line">    <span class="keyword">if</span> (thread.joinable()) &#123;</span><br><span class="line">      thread.join();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Timer timer;</span><br><span class="line">  <span class="comment">//timer.setTimeout([&amp;]() &#123; std::cout &lt;&lt; &quot;step1\n&quot;; timer.stop(); &#125;, 1000);</span></span><br><span class="line">  timer.setTimeout([]() &#123; <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;step1\n&quot;</span>; &#125;, <span class="number">1000</span>);</span><br><span class="line">  timer.setTimeout([]() &#123; <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;step2\n&quot;</span>; &#125;, <span class="number">2000</span>);</span><br><span class="line">  timer.setTimeout([]() &#123; <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;step3\n&quot;</span>; &#125;, <span class="number">3000</span>);</span><br><span class="line">  timer.wait();</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>cmake 脚本，CMakeLists.txt：</li></ul><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cmake_minimum_required</span> (VERSION <span class="number">3.5</span>)</span><br><span class="line"><span class="keyword">project</span> (set_timeout)</span><br><span class="line"></span><br><span class="line"><span class="keyword">add_executable</span>(set_timeout set_timeout.cc)</span><br><span class="line"><span class="keyword">set_property</span>(<span class="keyword">TARGET</span> set_timeout PROPERTY CXX_STANDARD <span class="number">17</span>)</span><br><span class="line"><span class="keyword">target_compile_features</span>(set_timeout PRIVATE cxx_auto_type)</span><br></pre></td></tr></table></figure><ul><li>编译：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## cd to source code directory</span></span><br><span class="line">cmake .</span><br><span class="line">make</span><br></pre></td></tr></table></figure><p><strong>小结</strong>：以上代码，可用，但不推荐。首先它是用多线程模拟的定时器，当设置 N 个定时器时，将创建 N 个线程，这不够优雅。其次，当您取消定时器时，会发现它无法立刻取消并退出线程。</p><h3 id="3-Boost-Asio-实现">3. Boost Asio 实现</h3><p>我们知道，Nodejs 内部使用 libuv 作为异步 IO 库，它是 C 实现的，用 C++ 调用 libuv 就显得不那么 C++，所以我们决定用和 libuv 同类且更强大的 <a href="https://www.boost.org/doc/libs/1_72_0/doc/html/boost_asio/examples.html">Boost Asio</a> 来代替。</p><ul><li>安装 boost，目前是 1.72.0 版：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install boost</span><br></pre></td></tr></table></figure><ul><li>C++ 代码：</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;chrono&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;boost/asio.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;boost/asio/steady_timer.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Timer</span> &#123;</span></span><br><span class="line"> <span class="keyword">public</span>:</span><br><span class="line">  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">setTimeout</span><span class="params">(T function, <span class="keyword">int</span> delay)</span></span>;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">stop</span><span class="params">()</span></span>;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">wait</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">private</span>:</span><br><span class="line">  boost::asio::io_context io;</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;boost::asio::steady_timer&gt; timers;</span><br><span class="line">  <span class="keyword">size_t</span> count;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Timer::setTimeout</span><span class="params">(T function, <span class="keyword">int</span> delay)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">auto</span>&amp; timer = timers.emplace_back(boost::asio::steady_timer(io));</span><br><span class="line">  ++count;</span><br><span class="line">  timer.expires_from_now(<span class="built_in">std</span>::chrono::milliseconds(delay));</span><br><span class="line">  timer.async_wait([=](<span class="keyword">const</span> boost::system::error_code&amp; error) &#123;</span><br><span class="line">    <span class="comment">// boost::system::error::operation_canceled</span></span><br><span class="line">    <span class="comment">// boost::asio::error::operation_aborted</span></span><br><span class="line">    <span class="keyword">if</span> (!error) &#123;</span><br><span class="line">      function();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Timer::stop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">auto</span>&amp; timer : timers) &#123;</span><br><span class="line">    timer.cancel();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Timer::wait</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  io.run();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Timer timer;</span><br><span class="line">  <span class="comment">//timer.setTimeout([&amp;]() &#123; std::cout &lt;&lt; &quot;step1\n&quot;; timer.stop(); &#125;, 1000);</span></span><br><span class="line">  timer.setTimeout([]() &#123; <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;step1\n&quot;</span>; &#125;, <span class="number">1000</span>);</span><br><span class="line">  timer.setTimeout([]() &#123; <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;step2\n&quot;</span>; &#125;, <span class="number">2000</span>);</span><br><span class="line">  timer.setTimeout([]() &#123; <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;step3\n&quot;</span>; &#125;, <span class="number">3000</span>);</span><br><span class="line">  timer.wait();</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>cmake 脚本，CMakeLists.txt：</li></ul><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cmake_minimum_required</span> (VERSION <span class="number">3.5</span>)</span><br><span class="line"><span class="keyword">project</span> (set_timeout)</span><br><span class="line"></span><br><span class="line"><span class="keyword">add_executable</span>(set_timeout set_timeout.cc)</span><br><span class="line"><span class="keyword">set_property</span>(<span class="keyword">TARGET</span> set_timeout PROPERTY CXX_STANDARD <span class="number">17</span>)</span><br><span class="line"><span class="keyword">target_compile_features</span>(set_timeout PRIVATE cxx_auto_type)</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span>(Boost_USE_STATIC_LIBS <span class="keyword">ON</span>)</span><br><span class="line"><span class="keyword">set</span>(Boost_USE_MULTITHREADED <span class="keyword">ON</span>)</span><br><span class="line"><span class="keyword">set</span>(Boost_USE_STATIC_RUNTIME <span class="keyword">ON</span>)</span><br><span class="line"><span class="keyword">find_package</span>(Boost <span class="number">1.71</span>.<span class="number">0</span>)</span><br><span class="line"><span class="keyword">if</span>(Boost_FOUND)</span><br><span class="line">  <span class="keyword">include_directories</span>(<span class="variable">$&#123;Boost_INCLUDE_DIRS&#125;</span>)</span><br><span class="line">  <span class="keyword">target_link_libraries</span>(set_timeout <span class="variable">$&#123;Boost_LIBRARIES&#125;</span>)</span><br><span class="line"><span class="keyword">endif</span>()</span><br></pre></td></tr></table></figure><p><strong>小结</strong>：好很多，但太难了……这真是劝退书！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;如果您看得懂，那么，这是 Node.js 程序员的 C++ 进修指南。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果您没看懂，那么，这是学 C++ 的劝退书！&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;目的&quot;&gt;目</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="cpp" scheme="https://blog.umu618.com/tags/cpp/"/>
    
    <category term="boost" scheme="https://blog.umu618.com/tags/boost/"/>
    
    <category term="nodejs" scheme="https://blog.umu618.com/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神【番外篇8】</title>
    <link href="https://blog.umu618.com/2020/01/31/god-of-debug-side-story-8/"/>
    <id>https://blog.umu618.com/2020/01/31/god-of-debug-side-story-8/</id>
    <published>2020-01-31T07:07:39.000Z</published>
    <updated>2023-10-29T12:24:56.937Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/2019/20190207-luyu.jpg" alt="听说鲁豫要来采访稣"><br><img src="/images/2020/20200131-gauze-mask.png" alt="请戴口罩采访"></p><h2 id="1-今年遇到史称的最长春节，稣都是怎么打发时间的？">1. 今年遇到史称的最长春节，稣都是怎么打发时间的？</h2><p>改剧本。2019 年 8 月时，《<a href="/2019/08/05/god-of-debug-prequel-1/">八哥之神前传【1】</a>》识界大战时就提到“心灵生化病毒”，后来要解释识界之外的识界是怎么毁灭的，人类为何移居太阴之背时，原剧本也是延续这个套路。但不幸的是作者所处的宇宙遭遇病毒疫情，为了不造成恐慌，急忙连夜做梦改剧本。目前倾向于 11.7 级地震。</p><h3 id="这个跳跃有点快，我都跟不上了，这些不是还没写吗？">这个跳跃有点快，我都跟不上了，这些不是还没写吗？</h3><p>是还没写，但早已梦见。本剧的真正创作时间是作者大学时期，距今已经 15 年。</p><h3 id="太震惊了！难怪剧中不少情节很明显不符合稣现在的年纪！">太震惊了！难怪剧中不少情节很明显不符合稣现在的年纪！</h3><p>没错！大学时代就打的草稿，故事来源于自己的梦和听闻周边的故事。原本计划剧名：《一睡千秋》、《一梦千年》或者《魔脑在世三千年》的，但由于当时阅历不够，自觉写不好，所以写个故事发展路线就放弃。2018 年底无意间在老硬盘里翻出来，感慨良多，决定把“概要”升级成“初稿”。</p><h3 id="为什么现在的剧名是《八哥之神》，是不是过于抽象？">为什么现在的剧名是《八哥之神》，是不是过于抽象？</h3><p>没错！故意起这样奇葩的名字，主要是因为稣低调。另外，这个剧本里的中心思想太过玄幻，不适合一般人，当然不能起个易懂的名字。</p><h3 id="稣在扩展剧本的时候，有什么比较深刻的体会呢？">稣在扩展剧本的时候，有什么比较深刻的体会呢？</h3><p>想太多，写不出来！</p><p>“概要”只是一个青春言情剧，后来想写的是一个人的一生……但是一个人不够精彩，干脆把一堆人写成一个“稣”。本质上说“稣”其实是一群人，而不是一个。比如《<a href="/2019/01/30/god-of-debug-4/">八哥之神【4】</a>》魔性山军犬养殖训练基地那个场景，其实就暗示男主角是个精分。</p><h3 id="我糊涂了，是一个精分，还是一群？">我糊涂了，是一个精分，还是一群？</h3><p>有差别吗？</p><h3 id="呃……问点别的！春节期间还有其它印象深刻的事情吗？">呃……问点别的！春节期间还有其它印象深刻的事情吗？</h3><p>有的！一直在充电！</p><h3 id="稣真是好学，放假也不忘充电！">稣真是好学，放假也不忘充电！</h3><p>哦弄！是给 MBP15 和手机充电！</p><h3 id="好吧！真是尴尬。我注意到稣居然留长指甲！似乎不符合直男的人设！">好吧！真是尴尬。我注意到稣居然留长指甲！似乎不符合直男的人设！</h3><p>没错！这是为了按公共电梯的按钮。您想，现在都 PHEIC 了，直接用手指接触？那面积好大的，多危险呀！</p><h2 id="2-有读者说《八哥之神前传》写得比《八哥之神》有条理，有逻辑，情节更科幻、更合理。">2. 有读者说《八哥之神前传》写得比《八哥之神》有条理，有逻辑，情节更科幻、更合理。</h2><p>没错，这是事实。因为《八哥之神》其实是《八哥之神前传》的续集，一般续集都是变差的。稣很机智地采用倒叙，先写比较差的续集，这样别人就不会喷：“续集写烂了！”而是说“前传的角色居然更多，剧情更复杂！”</p><h2 id="3-还会出现哪些角色和剧情呢？能不能简单预告下。">3. 还会出现哪些角色和剧情呢？能不能简单预告下。</h2><p>出现的角色：李冰月、李心觎，一对双胞胎姐妹；孟长生，一个不婚主义的男子。</p><p>剧情：爷要被捅死了……这应该不算剧透，《八哥之神》已经明确这点，开场时圣小开就是一个 60 多岁的年轻人，和周易类似，但更惨一些，毕竟这是一部“探讨生命悲剧色彩”的言情科幻喜剧。</p><h2 id="4-您刚说过，想写一个人的一生，那么对您来说人生的意义是什么呢？">4. 您刚说过，想写一个人的一生，那么对您来说人生的意义是什么呢？</h2><p>本剧的人生观：死亡并不长久，轮回再度孤独。请注意这里的“度”是个动词。</p><p>别慌！一个人的一生虽然意义不大，但放在无尽时间洪流里就有意义了，您可以以一辈子为单位进行迭代，这辈子尽量做得更好，让下辈子起点高一些。太上大道，我稣慈悲！</p><h2 id="5-太高深了，不是很能理解。能聊一下剧中情节和您现实生活的关系吗？">5. 太高深了，不是很能理解。能聊一下剧中情节和您现实生活的关系吗？</h2><p>嗯……这些故事全都有现实原型！就是时间点改改，人名随便起一个，把几个现实故事重组。但是，这些故事没有一个是发生在作者本人身上的，作者只是擅长蹭热点，沾点人间俗气，以对抗挨踢无情。</p><h2 id="6-使您决定写本剧的动力是什么？必然有一个标志性事件吧！">6. 使您决定写本剧的动力是什么？必然有一个标志性事件吧！</h2><p>上辈子死前，死神劝稣要放下，稣回答：不，稣要追求永恒！</p><p>然而稣还是死了，还是被洗脑洗得一点都不剩。为什么有些感觉转瞬即逝，再也回忆不起来？不行！稣要再体验一次，然后把它写下来。于是稣养成写日记的习惯。</p><p>有一天，稣发现如果按照中国人的平均寿命计算，稣已经过掉一半，回忆起自己的前半生，稣发现人生是孤独的最终奥义。每个阶段都会新朋友，也会失去一些旧朋友。就是上一次转变的时机来临前，稣突然领悟到一个真谛，我们无法选择不失去，但可以选择阶段性先失去的是什么！比如哪类朋友应该舍去——那些无法互相理解的。</p><p>接着稣又发现，理解不是一件容易的事情，互相理解这个要求有点高。只要能合作就行，应该舍去那些无法合作的。最终稣终于理解人间的一个催化剂：嫉妒。于是稣感觉人间的故事学习得差不多了，可以总结一下，于是开始写剧本。</p><h2 id="7-还会写其它故事吗？">7. 还会写其它故事吗？</h2><p>身为天族，不能过度体验和干预人间。写代码比较正经。</p><h2 id="8-最后一个问题：传说稣身家千万？">8. 最后一个问题：传说稣身家千万？</h2><p>个币。</p><h3 id="什么？怎么骂人呢？">什么？怎么骂人呢？</h3><p>真的。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/images/2019/20190207-luyu.jpg&quot; alt=&quot;听说鲁豫要来采访稣&quot;&gt;&lt;br&gt;
&lt;img src=&quot;/images/2020/20200131-gauze-mask.png&quot; alt=&quot;请戴口罩采访&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="死神" scheme="https://blog.umu618.com/tags/%E6%AD%BB%E7%A5%9E/"/>
    
    <category term="鲸神魂裂" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%AD%82%E8%A3%82/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神前传【8】</title>
    <link href="https://blog.umu618.com/2020/01/29/god-of-debug-prequel-8/"/>
    <id>https://blog.umu618.com/2020/01/29/god-of-debug-prequel-8/</id>
    <published>2020-01-28T18:34:55.000Z</published>
    <updated>2023-08-05T13:01:27.008Z</updated>
    
    <content type="html"><![CDATA[<h2 id="2042-年，床上">2042 年，床上</h2><p>古思：怎么……这么快？爷不是要敲代码么？</p><p>圣小开：一日之计在于晨，美好的早晨当然是睡回笼眯最好了！说不定还能再见到狐狸精。</p><p>古思：那我先去洗澡！</p><p>圣小开：大早上的洗啥澡，又没让你侍寝。</p><p>古思：哦，我也换睡衣陪爷躺躺。</p><p>圣小开：好多年没和别人睡眯眯了，有点不习惯。</p><p>古思：那我们聊天吧！床除了睡觉，另一个大用途就是聊天。</p><p>圣小开眼神一撇：你会聊啥？C 还是 C++？</p><p>古思：C++！而且我真学过，贾老师特地要求我学的。</p><p>圣小开：反应真快。爷还是亲手确认一下……</p><p>古思：爷的手好冰呀！</p><p>圣小开：嗯，爷还是稣的时候体温就低于常人，当爷后体温就更低了，需要一个暖手宝。</p><p>古思：这点我看过的资料并没有提到。</p><p>圣小开：贾总是不是和你说了爷很多八卦？</p><p>古思：是有一些基本介绍，也没啥特别八卦的！我还得多直接从爷处了解。</p><p>圣小开：有啥问题就问吧，如果问得不好爷可能就眯过去了。</p><p>古思：爷刚才提到好几次“眯”，为什么睡觉要说成睡眯眯呢？这种骚里嗲气叫法不符合爷的人设！</p><p>圣小开：骚里嗲气？眯眯——其实是爷的绯闻女友！</p><p>古思：哇哦……原来如此，看来田心挖到第一个八卦咯。</p><h2 id="区块链上的故事">区块链上的故事</h2><p>9102 年的春天，一个风雨交加的夜晚，稣和王博士聊完一个关于人工智能的天后，精神还有点紧崩，边低头走路边思考科技的变幻和人生的虚幻。</p><p>突然偶遇现在被人称为稣的绯闻前女友的月光女神卢眯眯。距离上次见面过去快一年，相逢自是有缘，人生到底是虚幻，还是真实，尽在研究自己和参考他人，何不乘机聊聊人生？然而附近像样的小资消遣场所都已打烊，也没地方坐，她提议去她宿舍。稣心想那是员工宿舍，应该很安全，稣不可能被人暗杀，如果被仙人跳，稣只要大喊一声，这破地方认识稣的少说也有 60 个！于是果断去了。</p><p>进屋后温暖许多，在温差作用下，居然一时犯困。她去洗澡的时候，稣不小心就在她床上睡着。</p><p>醒来已经快凌晨五点。她就躺在身边。稣想：楼下宿舍门没有门禁卡是出不去的，又不忍心叫醒她，于是一个果断的决策：睡眯眯。</p><p>这一觉睡得很好，是稣一生中少数几个质量极佳还能记得的觉之一，于是稣从此改口称睡觉为睡眯眯。</p><p>唯一美中不足的是……</p><h2 id="2042-年，床上-2">2042 年，床上</h2><p>古思：吓醒了？</p><p>圣小开：不是……稣偷偷摸摸摸了一下，眯眯的咪咪原来只比六舅大一点点！</p><p>古思：六舅？</p><p>圣小开：嗯，是爷的舅舅，他很六，所以叫他六舅。不说他，总之就是比你小挺多的……</p><p>古思：原来爷喜欢这个！田心还可以去加大一些。</p><p>圣小开：不用，不用。适可而止！适可而止！爷只是用理性的眼光衡量！</p><p>古思：爷到底是正经还是不正经呢？好难分辨！</p><p>圣小开：一名男性整形医生整天研究女人的胸，你说他正不正经？</p><p>古思：这没有不正经呀！</p><p>圣小开：一个男孩整天研究女人的胸，因为他立志成为一名整形医生，你说他正不正经？</p><p>古思：好像有不正经的味道。</p><p>圣小开：嗯哼！区别在于专不专业！如果一个人业余研究异性心理，多半会被判定为不正经，而一名专业的心理学家，怎么研究异性心理，都是正经的。</p><p>古思：爷想说什么？</p><p>圣小开：只有假不正经，才能知道谁是假正经！这是一种调试八哥人生的方法。</p><p>古思：听起来，其实爷是很正经的人，故意表现得有些不正经？</p><p>圣小开：是的，正经得无趣，无趣得没朋友。爷还是要假装有朋友的。</p><p>古思：调试八哥人生是什么意思？</p><p>圣小开：很多时候，很多人，是不会说实话的，需要一些研究手段。比如陪他们演戏，但又不能表现得不自然，所以爷研究过这本《悲剧演员的自我修养》。</p><p>古思：贾老师说爷的好奇心很重，原来如此呐！</p><p>圣小开：不！这是大部分人对爷的误解。这个误解好大，大到爷每次解释都会被当成蛇精病。</p><p>古思：em？怎么回事？</p><p>圣小开：爷是质疑，不是好奇。别人是什么样的，爷都可以接受！爷从这个世界的基础开始质疑，以致于对别人的存在和真伪也质疑。比如，偶尔发现别人好像喜欢自己，就会去研究她是不是真实存在的，是不是有主观意志，是不是真的喜欢，以及为什么她会喜欢爷。反过来，爷喜欢别人也一样各种质疑。</p><p>古思：这是不是多疑？不自信？</p><p>圣小开：肯定是多疑。爷连自己都质疑，有时甚至怀疑“我思故我在”也有八哥！是在思考，但在哪里思考呢？在自己脑里，还是在远方的某处？不自信有点，但也不他信呀！</p><p>古思：田心喜欢爷是基因和洗脑程序决定的，是真实的。</p><p>圣小开：哦？你不抗拒一下这种安排吗？</p><p>古思：贾老师说，爷要是死了，我会进入重置状态，记忆可能全部丢失，和死掉无异。</p><p>圣小开：那爷睡眯眯后，你会怎么样？</p><p>古思：没有特别设定。可以一起睡呗。【心想：以前是不敢抗拒，现在看来没必要抗拒。】</p><p>圣小开心想：在爷的床上，没人可以比爷晚睡！等你丫睡着后，爷就用各种反侦察仪器检查你。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;2042-年，床上&quot;&gt;2042 年，床上&lt;/h2&gt;
&lt;p&gt;古思：怎么……这么快？爷不是要敲代码么？&lt;/p&gt;
&lt;p&gt;圣小开：一日之计在于晨，美好的早晨当然是睡回笼眯最好了！说不定还能再见到狐狸精。&lt;/p&gt;
&lt;p&gt;古思：那我先去洗澡！&lt;/p&gt;
&lt;p&gt;圣小开：大早上的洗</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="鲸神链" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%93%BE/"/>
    
  </entry>
  
  <entry>
    <title>死神的套路</title>
    <link href="https://blog.umu618.com/2020/01/27/death-s-routine/"/>
    <id>https://blog.umu618.com/2020/01/27/death-s-routine/</id>
    <published>2020-01-27T07:17:38.000Z</published>
    <updated>2023-08-05T13:01:27.008Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前情">前情</h2><p>每年春节期间，稣都要研究玄学，今年岂能例外？</p><h2 id="一神论">一神论</h2><p>每个宇宙都有且只有一个神，就是您信的那个。祂有不同的名字，比如信基督，那神的名字是耶和华；道家神叫太上老君。</p><p>其实神就那么一个，不同的人给祂取不同的名。也可以是您自己，总之您信就行。</p><p>稣信死神。</p><h2 id="死亡并非永恒">死亡并非永恒</h2><p>没有什么状态是永恒的。死亡也不是。宇宙能创造无穷的生命，总有一天可以重现死去的生命。就像您随便写个数字序列，在 pi 里一定能找到无数次。</p><p>记忆是暂时的，意识比记忆长久。生死轮回，可没保证在地球轮回。众生平等的理论来源于此，这辈子在地球上当人快活，下辈子可能在火星当虫吃土。</p><h2 id="天地不仁以圣人为刍狗">天地不仁以圣人为刍狗</h2><p>人喜欢强人，便崇拜他们。死神也会喜欢强人，但奴役他们。很多强人都被死神叫去服务祂了——这就是死神的套路。</p><p>什么是圣人？圣人一定是强大但又克制自己的强大的，所以他们没有崇拜这种情感，他们只敬畏天地。</p><p>您说自己有一技之长，但那是什么造就的？基因、营养、后天练习、时代巧合等，圣人认为这些没啥，不值得欣赏。</p><p>死神要人命时，很克制，不轻易收走。——这才是值得欣赏的。</p><p>反面，不知克制食欲暴饮暴食、纵欲过度，身体会很快坏掉。</p><p>鲁信说过：稣劝您当扫地僧和鸠摩智，而不是乔峰。</p><h2 id="死神之下皆为蝼蚁">死神之下皆为蝼蚁</h2><p>死神眼里正邪无异，善恶不分。但人们如果自己规定了什么叫善恶，还自以为是善，当他们发现自己原来是恶时，就会遭到自己的诅咒。</p><p>影剧里，恶人洗白或善人作恶往往命不久矣。恶人可能想赎罪救人而死，善人则可能是信仰崩塌，生无可恋。总之都是后悔死的。</p><p>善良真的是一种有能力才能选择的修炼模式，不是自我认定和按条款划分这么简单。法律应该高于道德，因为很多“道德”条款，根本上是错误的。</p><p>PS: 死神根本不关心您善不善良，对凡人来说，量力而行才是科学的。</p><h2 id="顺天而行">顺天而行</h2><p>一个人只要坚持追随天道，时间长了就会很牛逼。天道并非就是美好的，凡人只能追随那些追随天道的圣人，比如老子。</p><p>前面已经提到“量力而行”这个词，凡人不可能做到顺天而行，量力而行就好。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前情&quot;&gt;前情&lt;/h2&gt;
&lt;p&gt;每年春节期间，稣都要研究玄学，今年岂能例外？&lt;/p&gt;
&lt;h2 id=&quot;一神论&quot;&gt;一神论&lt;/h2&gt;
&lt;p&gt;每个宇宙都有且只有一个神，就是您信的那个。祂有不同的名字，比如信基督，那神的名字是耶和华；道家神叫太上老君。&lt;/p&gt;
&lt;p&gt;其实神</summary>
      
    
    
    
    <category term="宇督观" scheme="https://blog.umu618.com/categories/%E5%AE%87%E7%9D%A3%E8%A7%82/"/>
    
    
    <category term="死神" scheme="https://blog.umu618.com/tags/%E6%AD%BB%E7%A5%9E/"/>
    
  </entry>
  
  <entry>
    <title>新型冠状病毒</title>
    <link href="https://blog.umu618.com/2020/01/26/2019-ncov/"/>
    <id>https://blog.umu618.com/2020/01/26/2019-ncov/</id>
    <published>2020-01-26T12:20:44.000Z</published>
    <updated>2023-08-05T13:01:27.008Z</updated>
    
    <content type="html"><![CDATA[<h2 id="态度">态度</h2><p>战略上藐视敌人，战术上重视敌人。</p><h2 id="经验">经验</h2><p>世界上确实有两种人：年轻人和中老年人。</p><ul><li><p>年轻人对 SARS 可能没什么印象。即使现在被感染新型冠状病毒，靠自身免疫力战胜病毒的概率也比中老年高很多。稣发现他们中一部分人，对疫情并不关心，甚至认为别人讨论疫情是在制造恐慌……稣认为如果发现有人造谣、信谣、传谣，辟谣打脸就行，但干预别人正常讨论疫情的自由就不太好了。毕竟年轻人迟早也要变成中老年人。</p></li><li><p>中老年人很可能本来就有一些慢性病，要是被感染，死亡率就比较高。</p></li></ul><p>稣属于经历过 SARS 封校的中老年人。当年还被认为是疑似病患，被请去医院体检，还好没事。所以稣是属于相当重视的这类。</p><h2 id="贪生怕死">贪生怕死</h2><p>小时候经常会看到一些武侠剧，某个配角嘴里冒出一句：“没想到你居然是贪生怕死之辈！”语气带着不屑和鄙视！但说完，一般他就挂了……每每看到类似情节，稣的内心都是一阵纳闷：“贪生怕死不是正常的吗？这个人为了点莫名其妙的小事就去死，好像才不正常吧？”</p><p>有人说这次新型冠状病毒死亡率不高，没啥好操心的。</p><p>稣认为死亡率可能真不高，但却是多出来的一种。我们本来也存在被流星砸死的可能，但加上“新型冠状病毒致死”这一种可能性之后，整体死亡率明显是提高了，干嘛冒这个风险？</p><h2 id="三思而后行">三思而后行</h2><p>造谣者一般都是为了利益或者某种心理刺激。作为小老百姓，造谣应该不多，但信谣传谣就多了去。有些人为显示自己信息渠道多而广，就喜欢第一时间转发信息，而不是先鉴别。这种心理很多人都有。有些人不在网络上传谣，但聚会当面传是一样一样的。</p><p>也有些人是没鉴别能力，宁可信其有。稣在学习的路上，也没少被谣言短暂攻破过，要三思而后行和及时修正。</p><h2 id="对自然心存敬畏">对自然心存敬畏</h2><p>吃野味风险很高，那些爱吃的人估计也有一种攀比、装逼的心理，因为吃起来危险反而去吃。这是病，得电！</p><p>RNA 病毒因为是单链不稳定，所以变异能力比较大，很难预测后期是毒性减弱还是增强，以及人群里会不会出现超级传播者。流感病毒也是 RNA，稣基本每一两年都中一次，上一次的抗病毒经验无效，说明中的很可能是新变异品种。</p><p>相信科学，但也要明确还有很多病现在的医学治不了。敬畏自然，主动预防被感染！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;态度&quot;&gt;态度&lt;/h2&gt;
&lt;p&gt;战略上藐视敌人，战术上重视敌人。&lt;/p&gt;
&lt;h2 id=&quot;经验&quot;&gt;经验&lt;/h2&gt;
&lt;p&gt;世界上确实有两种人：年轻人和中老年人。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;年轻人对 SARS 可能没什么印象。即使现在被感染新型冠状病毒，靠自身免</summary>
      
    
    
    
    <category term="宇督观" scheme="https://blog.umu618.com/categories/%E5%AE%87%E7%9D%A3%E8%A7%82/"/>
    
    
    <category term="心理邪稣" scheme="https://blog.umu618.com/tags/%E5%BF%83%E7%90%86%E9%82%AA%E7%A8%A3/"/>
    
  </entry>
  
  <entry>
    <title>学习 Rust【2】减少代码嵌套</title>
    <link href="https://blog.umu618.com/2020/01/08/umutech-learn-rust-2-reduce-nesting/"/>
    <id>https://blog.umu618.com/2020/01/08/umutech-learn-rust-2-reduce-nesting/</id>
    <published>2020-01-08T09:59:01.000Z</published>
    <updated>2023-08-05T13:01:27.008Z</updated>
    
    <content type="html"><![CDATA[<p>结论先行：<strong>减少代码嵌套就是降低复杂度。</strong></p><p>资源管理一向是编程中的重要任务。当一个函数要管理多个资源时，很容易出现代码嵌套层级太深的问题，尤其是调用系统或第三方 API 时。</p><p>以 C 语言代码为例，这里简化为两个资源，请您自行脑补多个资源：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> error_code = <span class="number">0</span>;</span><br><span class="line">resource1 *p1 = new_resource1();</span><br><span class="line"><span class="comment">// UMU: with C++ SHOULD be `p1 != nullptr`</span></span><br><span class="line"><span class="keyword">if</span> (p1) &#123;</span><br><span class="line">  resource2 *p2 = new_resource2();</span><br><span class="line">  <span class="keyword">if</span> (p2) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!deal_resources(p1, p2)) &#123;</span><br><span class="line">      error_code = <span class="number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    free_new_resource2(p2);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    error_code = <span class="number">2</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  free_new_resource1(p1);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;&#125;</span><br><span class="line">  error_code = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> error_code;</span><br></pre></td></tr></table></figure><p>上面代码最深嵌套是三层，为了减少嵌套，可以把代码改为平坦结构，降低到一层：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">resource1 *p1 = new_resource1();</span><br><span class="line"><span class="keyword">if</span> (!p1) &#123;</span><br><span class="line">  free_new_resource1(p1);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">resource2 *p2 = new_resource2();</span><br><span class="line"><span class="keyword">if</span> (!p2) &#123;</span><br><span class="line">  free_new_resource1(p1);</span><br><span class="line">  free_new_resource2(p2);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!deal_resources(p1, p2)) &#123;</span><br><span class="line">  free_new_resource1(p1);</span><br><span class="line">  free_new_resource2(p2);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">free_new_resource1(p1);</span><br><span class="line">free_new_resource2(p2);</span><br></pre></td></tr></table></figure><p>但这么改在资源释放时，<strong>更容易遗漏</strong>。也有人为使代码层级平坦化，会使用 <code>goto</code> 到函数末尾统一释放，或者更优雅点的 C++ 方式：用 <code>try...throw...catch...finally</code> 将所有资源包含起来管理。</p><p>Node.js 的异步回调函数也存在嵌套层级过深的问题，可以用 Promise 来平坦化，参考：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&#x27;step1&#x27;</span>)</span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;step2&#x27;</span>)</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">&#x27;step3&#x27;</span>)</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">&#x27;done!&#x27;</span>)</span><br><span class="line">    &#125;, <span class="number">1000</span>)</span><br><span class="line">  &#125;, <span class="number">1000</span>)</span><br><span class="line">&#125;, <span class="number">1000</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// flatten</span></span><br><span class="line"><span class="keyword">let</span> timer = <span class="function">(<span class="params">text</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> promise = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(text)</span><br><span class="line">      resolve()</span><br><span class="line">    &#125;, <span class="number">1000</span>)</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> promise</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">timer(<span class="string">&quot;step1&quot;</span>)</span><br><span class="line">  .then(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> timer(<span class="string">&quot;step2&quot;</span>)</span><br><span class="line">  &#125;)</span><br><span class="line">  .then(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> timer(<span class="string">&quot;step3&quot;</span>)</span><br><span class="line">  &#125;)</span><br><span class="line">  .then(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;done!&quot;</span>)</span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure><p>C++ 建议使用 RAII 思想来管理资源，获得资源后立刻放到管理对象里。如果有些资源使用得不频繁，想偷懒不去封装，则可以使用 <a href="/2020/09/22/umutech-boost-2-scope-exit/">scope_exit</a>。go 语言更是用内置关键字 <code>defer</code> 来提供 scope_exit 机制。</p><p>Rust 用 scopeguard 提供 scope_exit 机制，<code>defer!</code> 宏和 go 的 <code>defer</code> 功能类似。</p><p>另外，Rust 还有 ? 操作符，也有减少嵌套的作用。比如这个任务：打开文件，如果失败就返回错误。go 是这样写的：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;os&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">file, error := os.Open(<span class="string">&quot;file.txt&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> error != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(error)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> file.Close()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同样功能，Rust 代码少一层：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> std::fs::File;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>() -&gt; std::io::<span class="built_in">Result</span>&lt;()&gt; &#123;</span><br><span class="line">  <span class="keyword">let</span> _f = File::open(<span class="string">&quot;file.txt&quot;</span>)?;</span><br><span class="line">  <span class="literal">Ok</span>(())</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;结论先行：&lt;strong&gt;减少代码嵌套就是降低复杂度。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;资源管理一向是编程中的重要任务。当一个函数要管理多个资源时，很容易出现代码嵌套层级太深的问题，尤其是调用系统或第三方 API 时。&lt;/p&gt;
&lt;p&gt;以 C 语言代码为例，这里简化为两个资源</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="optimization" scheme="https://blog.umu618.com/tags/optimization/"/>
    
    <category term="rust" scheme="https://blog.umu618.com/tags/rust/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神前传【7】</title>
    <link href="https://blog.umu618.com/2020/01/06/god-of-debug-prequel-7/"/>
    <id>https://blog.umu618.com/2020/01/06/god-of-debug-prequel-7/</id>
    <published>2020-01-05T17:14:59.000Z</published>
    <updated>2023-08-05T13:01:27.008Z</updated>
    
    <content type="html"><![CDATA[<p>本命年，在夏兴电池工厂上班。工厂位于海城夏阳村，一个鸟不拉屎的荒地。宿舍就在工厂旁边，一面是工厂，其余三面都是荒地……生活除了上班，加班就是无聊和同事瞎逼逼。女朋友，那是不可能有的，美女也不可能来这种地方呀！</p><p>突然有一天，一个带着光晕的美女出现在稣眼前，十分神奇的是，别人好像都不主动聊关于她的事情，这一点都不像大家平常的风格！丑的狂喷，一般的考虑去追，现在来一个天仙级别的，各个都装蒜，是在独自算计自己的成功率吗？还是大家都瞎了？</p><p>经过观察，稣发现她居然就住在正上楼。稣和她用的是同一根水管，这可能让稣多了几分胜算。更巧的是，偶然发现，晚上她喜欢在楼下散步。这可是稣的强项，毕竟四周没有什么地方好玩的，楼下转圈，稣一个晚上可以走 20 圈。于是，转着转着，就认识她了。胡小玉，没错，很像狐狸精的名字……</p><p>胡小玉：“你很勇敢嘛。”</p><p>稣：“勇敢？为什么这么说？我只是质疑现实，想研究你而已。”</p><p>胡小玉：“这里的人好像都不理我，就你敢接近我。”</p><p>稣：“哦。这个‘敢’字，说得好像你很可怕似的。”</p><p>胡小玉：“我是狐狸精，不可怕吗？”</p><p>稣：“嗯？你开玩笑吧！不过你真的很漂亮，感觉很不像真实的人。别的女人脸上一般都有痘印、斑啥的瑕疵，你居然没有，而且声音也很好听。你真是人如其名，一块美玉。”</p><p>胡小玉：“你话真多，想睡我吗？”</p><p>“什么……”稣一阵尴尬之后，“稣今年 24 周岁，已经成年。”</p><p>胡小玉：“那就是想！走吧。”</p><p>稣：“这么简单？等下是不是会掉流星把稣砸死？”</p><p>胡小玉轻轻一笑：“哈。如果除了睡觉之外，你还干别的，我会咬断你的脖子。”</p><p>扑通扑通，到她房间门前，上面居然多了一道符，还加了一把锁，所以我们进不去。</p><p>胡小玉：“看来有人发现我是狐狸精了。从你房间爬上去吧！”</p><p>稣内心一惊，“难道你不是开玩笑的？”</p><p>胡小玉：“笨蛋。那你还跟不跟？”</p><p>稣：“会死吗？”</p><p>胡小玉：“乱来会死，不乱来就不会。”</p><p>稣：“但是稣恐怕爬不上去！11 层爬到 12 层，万一摔下去，必死无疑。”</p><p>胡小玉变成一只白色狐狸，顺着管道爬到她房间阳台。稣看得怀疑人生，不行，怎么可能有这么无稽的事情呢？</p><p>稣心想赶紧跟上去看看什么妖，虽然费了九牛二虎之力，但居然也跟着爬上她阳台。</p><p>但是一进她房间，稣就感觉不对劲，她是狐狸精，会法术的，万一她是附身一个美女，这时候离开肉体，这美女醒来不是要告稣非礼？万一肉体是死的，稣就被当成杀人凶手，太可怕了！</p><p>胡小玉见稣迟疑，开口道：“12 年前，你就见过我，不记得咯？”</p><p>稣：“不可能……认识你之前，稣就没见过你这么美的。如果有，肯定会记得。”</p><p>胡小玉：“我把记忆还给你吧！”说完吹了一口妖气……稣啥都想起来了！上一个本命年，稣去 KFC 上厕所，然后在里面坐了一会儿等同学，看别的顾客在吃，穷稣流下了没钱的口水。后来有个姐姐端着全家桶坐在稣对面，那护体神光照得稣不敢看。她微笑着给稣一个鸡腿，稣才乘机偷看一眼，真是天仙下凡，四周背景突然全白，其它一切仿佛都消失得无影无踪。后来，同学找来，那位姐姐一转眼没注意就消失，竟似人间蒸发！只留稣手里的鸡腿，稣只能含着口水把它吃完。</p><p>胡小玉：“想起来了？你欠我一个鸡腿，睡一觉还我。”</p><p>稣大惊失色：“为什么要睡觉还呢？”</p><p>胡小玉：“我需要阳气。不愿意吗？没要你命就好！”</p><p>稣心安理得地睡下了。醒来已经又过了一个本命年。稣走出木屋，身处深山老林，过着田园生活。</p><p>时光荏苒，三次见胡小玉，她竟然一点都没变老。稣千真万确地相信，她真的是狐狸精。于是稣先开口问：“这次是要干嘛？”</p><p>胡小玉：“我要吃人肉！不然我不久后就会死掉。”</p><p>稣：“认识你 24 年，不会还要吃稣吧？吃别人行不行？”</p><p>胡小玉：“笨蛋！要吃你，还需要和你说这么多？如果你想每 12 年见一次我，就帮我找！”</p><p>稣：“死人行不？这山下去就是哈岱医学院，那里有不少人体标本，虽然泡在福尔马林里，拿出来洗洗应该还好吧！”</p><p>胡小玉：“不行，要活人。”</p><p>稣：“刚刚安乐死的人可以吗？脑先死，肉体还新鲜……”</p><p>胡小玉：“老头不行，生命力不够！有年轻人愿意安乐死吗？”</p><p>稣：“你要多重？稣割点给你还不行吗？”</p><p>胡小玉：“64g 血肉，肥肉不要。”</p><p>稣：“什么……肥肉还不行？稣还想减肥呢！这么多，要死的，要死的！牛肉行不行？”</p><p>胡小玉：“不行。我要维持人形，就要吃人肉。”</p><p>稣：“真麻烦。看来要去找研究基因工程的孙大师帮忙了，克隆人肉，啧啧，想想就肉麻……”</p><p>胡小玉表示感谢，紧紧抱着稣，突然咬稣一口：“其实你是唐僧转世，吸你点血就够了。”</p><p>稣：“唐僧！？”</p><p>吓醒。原来侧睡压麻右手，被小玉咬的地方还隐隐抽筋……压麻的，压麻的！</p><h2 id="2042-年，布信聊天">2042 年，布信聊天</h2><p>贾力劣留言：开哥，送你的美女叫胡思，是女娲造人计划最新产品，属于部分可编程人造人，三年科学教育优等生。知道你不喜欢自由意志，特地选择这位不怎么听话的，希望您会喜欢。</p><p>圣小开：贾总，你不是耍我吧！部分可编程？人造人？不是机器人来着？不听话到什么程度呢？不会乘我睡咪咪剪小鸡鸡吧？</p><p>贾力劣：不会不会！她是受过高等教育的，懂事。人造人是有生育能力的，只要她愿意，可以给你生猴子！比机器人有意思多了。</p><p>圣小开心想：贿赂？卧底？</p><h2 id="2042-年，圣小开家">2042 年，圣小开家</h2><p>家联网系统提示有人拜访，还出现广告——神荼系统，保卫家园。自动为您接待来访嘉宾：暂名胡思，女，4 岁，AVILab 女娲生产线第 11 代人造人，由贾力劣总经理指派……</p><p>初次见面，有点像刚认识胡小玉那样，即激动又顺利。大概都是编好的程序起作用吧！</p><p>胡思：老爷好！我是胡思，小名叫田心，有事请吩咐。</p><p>圣小开：不用客套，田心。不要称呼老爷，把老去掉吧，赫赫。大部分家务事，机器人都可以搞定，你就陪老夫聊天和侍寝就行。</p><p>胡思：好的，如果对我的初始设定有任何不满，爷都可以修改。</p><p>圣小开：先改个名字吧！胡思胡思，容易胡思乱想，把月去掉，叫古思可以吗？</p><p>胡思：好的，以后我就叫古思，稍后提交到链上女娲管理系统。</p><p>一阵三思而后行的延迟。</p><p>圣小开：嗯……改你名字，好像不太好！老夫错了！你不会生气吧！</p><p>古思：生气？我生什么气？我哪敢生气？</p><p>圣小开：你就是生气了！真小气！</p><p>古思：赫赫。我学爷开玩笑的套路呢！没生气，我的名字本来就是别人取的，无所谓啦。贾老师说爷就爱胡思乱想，我被创造的目的就是为了陪伴爷，所以他给我取名为胡思。</p><p>圣小开：哦！既然你不介意，那不如叫胡小玉怎么样？</p><p>古思：来不及了，信息已上链，只能改一次。</p><p>圣小开：哈，开个玩笑，你没有狐狸精那么高冷，反而更像狐狸精。</p><p>古思：狐狸精？爷已经开始胡思乱想了么？</p><p>圣小开：没有没有，只是早上做的一个梦，还是赶紧吃完饭，敲代码吧。</p><p>古思：我可以陪爷结对编程。</p><p>圣小开心想：贾总果然是派卧底监视劣者。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本命年，在夏兴电池工厂上班。工厂位于海城夏阳村，一个鸟不拉屎的荒地。宿舍就在工厂旁边，一面是工厂，其余三面都是荒地……生活除了上班，加班就是无聊和同事瞎逼逼。女朋友，那是不可能有的，美女也不可能来这种地方呀！&lt;/p&gt;
&lt;p&gt;突然有一天，一个带着光晕的美女出现在稣眼前，十分神</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="鲸神链" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%93%BE/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神【番外篇7】</title>
    <link href="https://blog.umu618.com/2019/12/28/god-of-debug-side-story-7/"/>
    <id>https://blog.umu618.com/2019/12/28/god-of-debug-side-story-7/</id>
    <published>2019-12-28T15:54:51.000Z</published>
    <updated>2023-10-29T12:24:56.937Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/2019/20190207-luyu.jpg" alt="听说鲁豫要来采访稣"></p><h2 id="1-稣，好久不见，最近都在忙什么？">1. 稣，好久不见，最近都在忙什么？</h2><p>项目忙，九九六一段时间，还趁机研究《孙子兵法》和密码学。由于一时忽视各位女朋友，现在她们都另寻新欢了。不过倒也清净，毕竟她们也老了，省得稣裁掉她们，还要 N+1，万一怀上，还得 2N……多烧钱呐！</p><h2 id="2-有读者问，为什么先写《八哥之神》正剧，再写前传？">2. 有读者问，为什么先写《八哥之神》正剧，再写前传？</h2><p>其实这系列故事是好多年前就想好的，只是一直写代码，没空写故事。再说这个故事其实就是稣的梦，有很大跳跃性，哪有那么容易写好！</p><ul><li>你是说，这些故事已经存在很久，最近才写下来？</li></ul><p>没错！这些真的都是梦，劣者的创作只是把每个梦连起来，让它们有逻辑而已。一个明显的套路就是剧中有很多吓醒故事，看似无关，其实都是营造气氛，预测故事走向。</p><h2 id="3-为什么写得这么难懂？">3. 为什么写得这么难懂？</h2><p>戒焦戒虑，勤思好学您就能看懂。主要因为这只是小说的草稿，就没打算让您懂，万一看懂，觉得故事太妙，到处被剽窃怎么办？稣的手稿在 9 年后将会十分值钱。哈。哦也。</p><h2 id="4-还会写后传吗？">4. 还会写后传吗？</h2><p>那是必须的，等有经费就写！前传、后传，那都是商业套路，咳，现在主要工作还是写代码，多赚点钱。</p><h2 id="5-能简单介绍一下后传的框架吗？">5. 能简单介绍一下后传的框架吗？</h2><p>19 年前佛祖转世谈恋爱谈恋爱去了，燃灯佛祖让位孙悟空。5 年前，玉帝也转世谈恋爱谈恋爱去了，太上道祖让位石敢当。9 年后，八哥之神转世谈恋爱谈恋爱谈恋爱去，八哥虫祖让位给稣。</p><ul><li>您是说……嗯哼？？</li></ul><p>没错！<strong>稣就是第八个无骨蠕虫。</strong></p><ul><li>天呐！太震惊了！这是要改走神话路线？？</li></ul><p>没有！您不能先入为主呀！正剧已经说过“无神”，只是轮回而已。成神其实就是轮回转世，就是用嘴把人劝死，隐含作者一直推动安乐死合法化的决心。再次强调：<strong>没有神，只有神奇！</strong></p><ul><li>您一再强调“无神”是怕年轻人迷信吗？</li></ul><p>嗯，有这样的担心，另外还怕不明所以的读者对稣进行物理攻击！</p><ul><li>怎么会呢？难道您曾经……</li></ul><p>举个例子吧！大学时，稣用“宇宙最大”做签名档，结果被很多人攻击，更有黑客跟踪稣多年，就是为了教育稣……其实“宇宙最大”表达的是“宇宙比人类的心大”，这是因为稣反对电视剧里说的“人心最大”，并非说自己是宇宙最大！</p><ul><li>哦，稍微有点明白啦！《八哥之神》也会有人理解为您自称是神？</li></ul><p>yup！稣从来没说自己是神！只想表达“八哥”太特么神奇了！万一有神论者理解成“自称是神”，对稣痛下杀手，稣不是白死了？吓尿呀！</p><h2 id="6-您能再聊聊其它隐含意义吗？">6. 您能再聊聊其它隐含意义吗？</h2><p>明线一直都在强调“现实”从来不存在，这一切都是一个叫做“天道”的程序的运行结果。对意识来说，时间并非不可逆。</p><ul><li>这些太理论了，您能说说自然界或者社会方面的意义吗？</li></ul><p>哦，也是有的！您看剧中大量六七十岁的角色和养老院的场景！</p><ul><li>嗯？您是说……</li></ul><p>没错！中年危机不仅存在于程序员中！演员也是有的，老头老太能演青春偶像剧吗？</p><ul><li>所以，您是写了有很多老年人的剧本来拯救他们？</li></ul><p>哦也，稣爱世人，包括老年人的！年轻人需要更多关爱老人，加强养老方面的物质以及精神建设。</p><h2 id="7-没想到稣有这么高尚的情怀！最后还是问点和剧情有关的吧！稣的前妻到底叫什么？">7. 没想到稣有这么高尚的情怀！最后还是问点和剧情有关的吧！稣的前妻到底叫什么？</h2><p>陈因提，外号砂砂。在天道程序里叫陈立姻和陈提姻是不同迭代的名字。</p><h2 id="8-据说《八哥之神前传》将要出现一名机器人美女？">8. 据说《八哥之神前传》将要出现一名机器人美女？</h2><p>嗯，堪称八哥系列最美最善解人意的。</p><ul><li>机器人最善解人意？</li></ul><p>当然！人类有情绪，有三千烦恼。大道无情，但能创造有情的人类。有情未必真比无情好。</p><ul><li>好严肃呀！开个玩笑呗？</li></ul><p>不好意思，笑不出来……写个诗吧！</p><blockquote><p>圣人半个已操群，<br>耶稣佛祖我都信。<br>一生大坑避无数，<br>半脚踏入鬼门关。</p></blockquote><ul><li>为什么半脚踏入鬼门关？</li></ul><p>薛定谔的稣一直处于生与死、真与假的边缘。</p><ul><li>稣其实是个严肃的人嘛！</li></ul><p>当然！如来佛祖、昊天上帝和八哥之神也都很严肃，严肃不妨碍我们谈恋爱。而且谈恋爱这事，还是严肃对待才好！结婚更好慎重！</p><ul><li>呵呵……是是是！不好意思，这么严肃的话题，我，我，居然，笑场了。</li></ul><p>你开心就好。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/images/2019/20190207-luyu.jpg&quot; alt=&quot;听说鲁豫要来采访稣&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;1-稣，好久不见，最近都在忙什么？&quot;&gt;1. 稣，好久不见，最近都在忙什么？&lt;/h2&gt;
&lt;p&gt;项目忙，九九六一段时间，还趁机研究《孙子</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="鲸神魂裂" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%AD%82%E8%A3%82/"/>
    
  </entry>
  
  <entry>
    <title>ECDSA Node.js</title>
    <link href="https://blog.umu618.com/2019/12/24/umutech-ecc-sign-nodejs/"/>
    <id>https://blog.umu618.com/2019/12/24/umutech-ecc-sign-nodejs/</id>
    <published>2019-12-24T12:55:22.000Z</published>
    <updated>2023-08-05T13:01:27.008Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前情">前情</h2><p>上篇《<a href="/2019/08/16/umutech-ecc-nodejs/">ECC Node.js</a>》讲解椭圆曲线点的计算。本篇分析椭圆曲线签名算法。</p><h2 id="代码">代码</h2><p><a href="https://github.com/UMU618/secp256k1-tools">https://github.com/UMU618/secp256k1-tools</a></p><h2 id="范例数据">范例数据</h2><p>已知，待签名数据为：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> data = Buffer.from(</span><br><span class="line">  <span class="comment">// chainId</span></span><br><span class="line">  <span class="string">&#x27;aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906&#x27;</span></span><br><span class="line">  <span class="comment">// serializedTransaction</span></span><br><span class="line">  + <span class="string">&#x27;c0fbc75d000000000000000000000000&#x27;</span></span><br><span class="line">  <span class="comment">// sha256 of serializedContextFreeData</span></span><br><span class="line">  + <span class="string">&#x27;0000000000000000000000000000000000000000000000000000000000000000&#x27;</span>, <span class="string">&#x27;hex&#x27;</span>)</span><br></pre></td></tr></table></figure><p>运行 <code>node ecc-sign.js</code>，信息摘要为：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">  <span class="number">204</span>,  <span class="number">24</span>,  <span class="number">57</span>, <span class="number">178</span>,  <span class="number">84</span>, <span class="number">129</span>,  <span class="number">31</span>, <span class="number">104</span>,</span><br><span class="line">   <span class="number">99</span>,  <span class="number">30</span>, <span class="number">100</span>, <span class="number">210</span>,   <span class="number">3</span>,  <span class="number">38</span>,  <span class="number">31</span>, <span class="number">168</span>,</span><br><span class="line">  <span class="number">138</span>, <span class="number">248</span>, <span class="number">252</span>, <span class="number">131</span>, <span class="number">196</span>,  <span class="number">14</span>, <span class="number">203</span>, <span class="number">152</span>,</span><br><span class="line">   <span class="number">34</span>, <span class="number">152</span>, <span class="number">102</span>, <span class="number">149</span>, <span class="number">181</span>,  <span class="number">94</span>, <span class="number">182</span>, <span class="number">148</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>签名为：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Uint8Array</span> [</span><br><span class="line">   <span class="number">27</span>,  <span class="number">36</span>, <span class="number">211</span>, <span class="number">214</span>,  <span class="number">45</span>,  <span class="number">20</span>, <span class="number">219</span>,  <span class="number">85</span>, <span class="number">150</span>,  <span class="number">70</span>, <span class="number">174</span>,</span><br><span class="line">  <span class="number">229</span>, <span class="number">131</span>, <span class="number">173</span>,  <span class="number">20</span>,  <span class="number">61</span>,  <span class="number">37</span>, <span class="number">129</span>, <span class="number">232</span>,  <span class="number">80</span>,  <span class="number">19</span>, <span class="number">164</span>,</span><br><span class="line">   <span class="number">36</span>, <span class="number">249</span>, <span class="number">132</span>,  <span class="number">56</span>,  <span class="number">36</span>,  <span class="number">74</span>, <span class="number">210</span>,  <span class="number">34</span>, <span class="number">221</span>,  <span class="number">98</span>, <span class="number">164</span>,</span><br><span class="line">   <span class="number">68</span>,   <span class="number">6</span>, <span class="number">237</span>,  <span class="number">42</span>, <span class="number">240</span>, <span class="number">227</span>, <span class="number">212</span>,  <span class="number">33</span>, <span class="number">105</span>, <span class="number">239</span>, <span class="number">200</span>,</span><br><span class="line">   <span class="number">11</span>,  <span class="number">59</span>,  <span class="number">11</span>, <span class="number">148</span>, <span class="number">226</span>,  <span class="number">85</span>, <span class="number">212</span>, <span class="number">106</span>, <span class="number">250</span>, <span class="number">155</span>,  <span class="number">34</span>,</span><br><span class="line">   <span class="number">25</span>, <span class="number">101</span>,  <span class="number">69</span>, <span class="number">159</span>, <span class="number">138</span>, <span class="number">157</span>, <span class="number">114</span>,  <span class="number">44</span>,  <span class="number">38</span>, <span class="number">202</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>签名的字符串形式为：<code>SIG_K1_Gg74ULRryVHxYZvMRLJgTrAZW6PZGC5SYfUiswtMJxBwfTTnGEnTejeWXopL2oSs8EZD7mqAC8mCps6VKq95Bgic9tGNHJ</code></p><h2 id="分析">分析</h2><p>数值全部使用 16 进制表示。</p><ol><li>范例使用的钥匙对</li></ol><ul><li><p>签名私钥：5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3</p></li><li><p>k = <code>d2653ff7cbb2d8ff129ac27ef5781ce68b2558c41a74af1f2ddca635cbeef07d</code></p></li><li><p>对应的公钥：EOS6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV</p></li><li><p>K = [<code>c0ded2bc1f1305fb0faac5e6c03ee3a1924234985427b6167ca569d13df435cf</code>, <code>eeceff7130fd352c698d2279967e2397f045479940bb4e7fb178fd9212fca8c0</code>]</p></li></ul><ol start="2"><li><p>信息先用 sha256 算法计算摘要，范例中值为 h = <code>cc1839b254811f68631e64d203261fa88af8fc83c40ecb9822986695b55eb694</code></p></li><li><p>签名数据一共 65 字节，第一个字节 [27] 是 recoveryParam，使用前要先减去 27，它的一个作用是区别 y 坐标值的奇偶性，后面是两个 256bit 数，分别记为 x、s，x 是随机私钥 r 在椭圆曲线上的点 rG 的 x 坐标值，s = (h + k * x) / r。</p></li></ol><ul><li><p>x = <code>24d3d62d14db559646aee583ad143d2581e85013a424f98438244ad222dd62a4</code></p></li><li><p>s = <code>4406ed2af0e3d42169efc80b3b0b94e255d46afa9b221965459f8a9d722c26ca</code></p></li><li><p><strong>注意</strong>：elliptic 库把本文的 x 记为 r，为了和算法保持一致，UMU 没有采用 elliptic 的标识方式。</p></li></ul><ol start="4"><li>计算 rG = [<code>24d3d62d14db559646aee583ad143d2581e85013a424f98438244ad222dd62a4</code>, <code>bc336258d8f1789ad949773ef4abfe6a6e56c9dd77754e18869c7ab2801a4ae2</code>]</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> BN = <span class="built_in">require</span>(<span class="string">&#x27;bn.js&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> elliptic = <span class="built_in">require</span>(<span class="string">&#x27;elliptic&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> x = <span class="keyword">new</span> BN(<span class="string">&#x27;24d3d62d14db559646aee583ad143d2581e85013a424f98438244ad222dd62a4&#x27;</span>, <span class="number">16</span>, <span class="string">&#x27;be&#x27;</span>)</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;x =&#x27;</span>, x.toString(<span class="number">16</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">// (27 - 27) &amp; 1 是偶数，取偶数的 y</span></span><br><span class="line"><span class="keyword">const</span> p_even = elliptic.curves.secp256k1.curve.pointFromX(x, <span class="literal">false</span>)</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;y_even = &#x27;</span>, p_even.getY().toString(<span class="number">16</span>))</span><br><span class="line"><span class="comment">// const p_odd = elliptic.curves.secp256k1.curve.pointFromX(x, true)</span></span><br><span class="line"><span class="comment">// console.log(&#x27;y_odd  = &#x27;, p_odd.getY().toString(16))</span></span><br></pre></td></tr></table></figure><ol start="5"><li>计算 hG/s + x * K/s</li></ol><ul><li><p>u1 = h/s = <code>b774bb6040cced0596626026679594b2b5478e6a5a8ba25b3411ed5360ea6bfa</code></p></li><li><p>u2 = x/s = <code>5697dfd4caab3caa0ed315a97f99f1ad7bce1ce85e0be32c63847d1dd4be327a</code></p></li><li><p>result = u1 * G + u2 * K = [<code>24d3d62d14db559646aee583ad143d2581e85013a424f98438244ad222dd62a4</code>, <code>bc336258d8f1789ad949773ef4abfe6a6e56c9dd77754e18869c7ab2801a4ae2</code>]，与 rG 一致，签名验证通过。</p></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> BN = <span class="built_in">require</span>(<span class="string">&#x27;bn.js&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> elliptic = <span class="built_in">require</span>(<span class="string">&#x27;elliptic&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> k1 = elliptic.curves.secp256k1</span><br><span class="line"><span class="keyword">const</span> h = <span class="keyword">new</span> BN(<span class="string">&#x27;cc1839b254811f68631e64d203261fa88af8fc83c40ecb9822986695b55eb694&#x27;</span>, <span class="number">16</span>)</span><br><span class="line"><span class="keyword">const</span> s = <span class="keyword">new</span> BN(<span class="string">&#x27;4406ed2af0e3d42169efc80b3b0b94e255d46afa9b221965459f8a9d722c26ca&#x27;</span>, <span class="number">16</span>)</span><br><span class="line"><span class="comment">// u1 = h/s</span></span><br><span class="line"><span class="keyword">const</span> sinv = s.invm(k1.n)</span><br><span class="line"><span class="keyword">const</span> u1 = h.mul(sinv).umod(k1.n)</span><br><span class="line">u1.toString(<span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> x = <span class="keyword">new</span> BN(<span class="string">&#x27;24d3d62d14db559646aee583ad143d2581e85013a424f98438244ad222dd62a4&#x27;</span>, <span class="number">16</span>)</span><br><span class="line"><span class="comment">// u2 = x/s</span></span><br><span class="line"><span class="keyword">const</span> u2 = x.mul(sinv).umod(k1.n)</span><br><span class="line">u2.toString(<span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> k = <span class="keyword">new</span> BN(<span class="string">&#x27;d2653ff7cbb2d8ff129ac27ef5781ce68b2558c41a74af1f2ddca635cbeef07d&#x27;</span>, <span class="number">16</span>)</span><br><span class="line"><span class="keyword">const</span> K = k1.g.mul(k)</span><br><span class="line"><span class="keyword">const</span> result = k1.g.mulAdd(u1, K, u2)  <span class="comment">// k1.g.mul(u1).add(K.mul(u2))</span></span><br><span class="line">result.getX().toString(<span class="number">16</span>)</span><br><span class="line">result.getY().toString(<span class="number">16</span>)</span><br></pre></td></tr></table></figure><h2 id="数学原理">数学原理</h2><p>参考：<a href="https://blog.csdn.net/gao131360144/article/details/79978516">椭圆曲线加密和签名算法</a></p><p>hG/s + xK/s = hG/s + x(kG)/s = (h + xk)G/s = r(h + xk)G / (h + kx) = rG</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前情&quot;&gt;前情&lt;/h2&gt;
&lt;p&gt;上篇《&lt;a href=&quot;/2019/08/16/umutech-ecc-nodejs/&quot;&gt;ECC Node.js&lt;/a&gt;》讲解椭圆曲线点的计算。本篇分析椭圆曲线签名算法。&lt;/p&gt;
&lt;h2 id=&quot;代码&quot;&gt;代码&lt;/h2&gt;
&lt;p&gt;&lt;a h</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="blockchain" scheme="https://blog.umu618.com/tags/blockchain/"/>
    
    <category term="nodejs" scheme="https://blog.umu618.com/tags/nodejs/"/>
    
    <category term="cryptology" scheme="https://blog.umu618.com/tags/cryptology/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神前传【6】</title>
    <link href="https://blog.umu618.com/2019/12/24/god-of-debug-prequel-6/"/>
    <id>https://blog.umu618.com/2019/12/24/god-of-debug-prequel-6/</id>
    <published>2019-12-23T17:22:43.000Z</published>
    <updated>2023-08-05T13:01:27.008Z</updated>
    
    <content type="html"><![CDATA[<h2 id="2047-年，养老院">2047 年，养老院</h2><p>“死开，你知道大家为了你的毕生心愿付出多少努力吗？放弃抵抗吧！”</p><p>“砂砂，没想到你站他们那边！为了科研就可以草菅人命吗？这哪里是劣者的心愿！”</p><p>“长生不老，不是吗？你亲口和我说过，从小就有和孙悟空一样的长生想法，所以才喜欢看《西游记》！再说，我们也没有草菅人命，他们是自愿安乐死的。”</p><p>孙朝穆：“是呀，开哥，因提姐说的是事实，反正都是死，为科研贡献不是挺好的？”</p><p>“不！这有违契约精神……赫赫赫赫，在稣的平行宇宙中，没有人可以为非作歹，连稣自己都不行！”</p><p>贾力劣：“哦，那会怎么样？你都被我们抓起来了！”</p><p>“哼，一定会出现一个破局者！然后我们反败为胜，把你们统统抓起来关！”</p><p>“放开他！救世主来也！”</p><p>齐凤卿：“哇！真的有救兵？灯哥！”</p><p>“没错，就是我——督宇神照黄金灯大师是也！”</p><p>“大师！啊……”圣小开胸口中了一刀。</p><p>齐凤卿：“这……这，这难道是传说中的小灯飞刀？但是为什么射小开，有没有搞错？”</p><p>“是啊，为什么小灯飞刀是射稣？你有没有搞错？”</p><p>黄金灯：“稣，你心脏下方中刀，虽然一时不会毙命，但你再负隅顽抗，肯定很快失血而死。请积极配合治疗！”</p><p>稣：“好的，稣的命就交给大师了，快救命啊。”</p><h2 id="2042-年，贾力劣别墅">2042 年，贾力劣别墅</h2><p>贾力劣：“然后呢？你们怎么复活的，而且时间是怎么倒退五年的？”</p><p>圣小开：“这个劣者还没完全想起来。”</p><p>贾力劣：“可能只是你的梦而已，开哥别看太多科幻片，回头我送你一个美女机器人服侍你，包你满意！比你编这些狗血剧有意思多了！”</p><p>圣小开：“什么？你以为劣者老年痴呆呀？告诉你，劣者今天睡够八个小时的，比机器人还客观！你还想抵赖？”</p><p>贾力劣：“真不是我抵赖，就算你说的是真的，但是时间都倒退了，那也不算是我干的。你看我们现在这个世界不是一切都好好的？”</p><p>圣小开：“是哦！都撤销了……好吧，你的美女机器人赶紧送我，就当是赔礼！”</p><p>贾力劣：“一定一定！我的效率你放心，早就有所预备。”</p><p>圣小开：“不要耍花样，你要记住一句话！别人的记忆是连续的，而稣的，是离散的，量子化的！”</p><p>“什么？好深奥，不过我一定强行记忆……”贾力劣，心想：“好可怕呀，他好像快全部想起来了！”</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;2047-年，养老院&quot;&gt;2047 年，养老院&lt;/h2&gt;
&lt;p&gt;“死开，你知道大家为了你的毕生心愿付出多少努力吗？放弃抵抗吧！”&lt;/p&gt;
&lt;p&gt;“砂砂，没想到你站他们那边！为了科研就可以草菅人命吗？这哪里是劣者的心愿！”&lt;/p&gt;
&lt;p&gt;“长生不老，不是吗？你亲口和我</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="量子邪稣" scheme="https://blog.umu618.com/tags/%E9%87%8F%E5%AD%90%E9%82%AA%E7%A8%A3/"/>
    
  </entry>
  
  <entry>
    <title>学习 Rust【1】简化掉什么？</title>
    <link href="https://blog.umu618.com/2019/12/12/umutech-learn-rust-1-what-simplified/"/>
    <id>https://blog.umu618.com/2019/12/12/umutech-learn-rust-1-what-simplified/</id>
    <published>2019-12-12T10:43:02.000Z</published>
    <updated>2023-08-05T13:01:27.008Z</updated>
    
    <content type="html"><![CDATA[<p>结论先行：<strong>从语法上说，Rust 基本无敌。</strong></p><h2 id="1-和">1. ++ 和 --</h2><table><thead><tr><th style="text-align:left">语言</th><th style="text-align:left">有无 ++、-- 语法</th></tr></thead><tbody><tr><td style="text-align:left">C/C++/C#/Java</td><td style="text-align:left">有</td></tr><tr><td style="text-align:left">Go</td><td style="text-align:left">只支持放变量后，不支持放变量前</td></tr><tr><td style="text-align:left">Python/Rust/Scala</td><td style="text-align:left">无</td></tr></tbody></table><p>++、-- 一般是 +=、-= 的特例（除了 C++ 的迭代器），没有必要单独支持，新语言倾向于语法的单一性。</p><p>Python 的情况比较有意思，放后面是语法错误，放前面其实就是正负号，+ 写两次还是原来的数，- 写两次是负负得正，也还是原来的数。</p><h2 id="2-三目运算符（-）">2. 三目运算符（?:）</h2><table><thead><tr><th style="text-align:left">语言</th><th style="text-align:left">有无 ?: 语法</th></tr></thead><tbody><tr><td style="text-align:left">C/C++/C#/Java/Swift</td><td style="text-align:left">有</td></tr><tr><td style="text-align:left">Go/Python/Rust/Scala</td><td style="text-align:left">无</td></tr></tbody></table><p>Rust 的 <code>let = if else</code> 就有 C 语言 <code>?:</code> 的功能，即判断语句的子语句块可以有返回值。</p><h2 id="3-条件无需括号">3. 条件无需括号</h2><table><thead><tr><th style="text-align:left">语言</th><th style="text-align:left">条件需不需要括号</th></tr></thead><tbody><tr><td style="text-align:left">C/C++/Java/Scala</td><td style="text-align:left">需要</td></tr><tr><td style="text-align:left">Go/Python/Rust/Swift</td><td style="text-align:left">不需要</td></tr></tbody></table><p>字符是能少打一个是一个，有效预防鼠标手。另外，Go 和 Rust 的语句块必须包含于 {}。</p><h2 id="4-异常处理">4. 异常处理</h2><table><thead><tr><th style="text-align:left">语言</th><th style="text-align:left">异常处理机制</th></tr></thead><tbody><tr><td style="text-align:left">C/C++</td><td style="text-align:left">编译器扩展 __try…__except…__finally, __leave</td></tr><tr><td style="text-align:left">C++/C#/Java/Scala/Swift</td><td style="text-align:left">throw, try…catch…finally</td></tr><tr><td style="text-align:left">Python</td><td style="text-align:left">raise, try…except…else, try…finally</td></tr><tr><td style="text-align:left">Go/Rust</td><td style="text-align:left">无</td></tr></tbody></table><h2 id="5-换行符（-）">5. 换行符（;）</h2><table><thead><tr><th style="text-align:left">语言</th><th style="text-align:left">换行符</th></tr></thead><tbody><tr><td style="text-align:left">C/C++/C#/Java</td><td style="text-align:left">必须</td></tr><tr><td style="text-align:left">JavaScript/Scala/Swift</td><td style="text-align:left">可选，有少数必须的情况</td></tr><tr><td style="text-align:left">Python/Go</td><td style="text-align:left">无</td></tr><tr><td style="text-align:left">Rust</td><td style="text-align:left">有是有，无是无（return），两者含义不同</td></tr></tbody></table><p>Rust 有分号的是语句（statement），返回值是 ()，即没有返回值。而没分号的是表达式（expression），返回值就是自身的值。</p><p>其实想说的是：有的 return 被简化掉了。省略 ; 就是省略 return，真香。但是，由于隐含 return，所以只能用于语句块的最后一行。</p><h2 id="6-case-隐含-break">6. case 隐含 break</h2><table><thead><tr><th style="text-align:left">语言</th><th style="text-align:left">case 是否隐含 break</th></tr></thead><tbody><tr><td style="text-align:left">C/C++/C#/Java</td><td style="text-align:left">必须显式 break</td></tr><tr><td style="text-align:left">Go/Rust/Swift</td><td style="text-align:left">隐含 break</td></tr></tbody></table><p>Rust 优秀在用 match 代替 switch，明确告诉大家这是新语法，而 Go/Swift 用 switch，却改变 case 行为，还多出一个 fallthrough 关键字，容易引起<a href="/tags/%E9%B2%B8%E7%A5%9E%E9%AD%82%E8%A3%82/">鲸神魂裂</a>。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;结论先行：&lt;strong&gt;从语法上说，Rust 基本无敌。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;1-和&quot;&gt;1. ++ 和 --&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left&quot;&gt;语言&lt;/th&gt;
&lt;th styl</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="optimization" scheme="https://blog.umu618.com/tags/optimization/"/>
    
    <category term="rust" scheme="https://blog.umu618.com/tags/rust/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·水龙头·无疑福报无尽天坑</title>
    <link href="https://blog.umu618.com/2019/12/12/reconstructionism-poet-shuilongyin-rewards-bugs/"/>
    <id>https://blog.umu618.com/2019/12/12/reconstructionism-poet-shuilongyin-rewards-bugs/</id>
    <published>2019-12-12T03:34:49.000Z</published>
    <updated>2023-08-05T13:01:26.998Z</updated>
    
    <content type="html"><![CDATA[<p>《诗盗·水龙头·无疑福报》<br>鸡鸣风雨萧萧，断魂以翔，飘恨今宵。<br>极目乡关何处？几回好梦，不知昏晓。</p><p>《诗盗·水龙头·无尽天坑》<br>古来云海茫茫，八哥奇语，神明何在？<br>填尽九沟四坑，人间自有，挨踢风采。</p><h2 id="注解">注解</h2><p>改编自“水龙吟”。</p><blockquote><p>明，刘基，《水龙吟·鸡鸣风雨潇潇》</p><p>鸡鸣风雨萧萧，侧身天地无刘表。<br>啼鹃迸泪，落花飘恨，断魂飞绕。<br>月暗云霄，星沉烟水，角声清袅。<br>问登楼王粲、镜中白发，今宵又添都少？</p><p>极目乡关何处？渺青山，髻螺都校。<br>几回好梦，随风归去，被渠遮了。<br>宝瑟弦僵，玉笙簧冷，冥鸿天杪。<br>但侵阶落草，满庭绿树，不知昏晓。</p></blockquote><blockquote><p>宋，苏轼，《水龙吟·古来云海茫茫》</p><p>古来云海茫茫，道山绛阙知何处。<br>人间自有，赤城居士，龙蟠凤举。<br>清净无为，坐忘遗照，八篇奇语。<br>向玉霄东望，蓬莱暗霭，有云驾、骖风驭。</p><p>行尽九州四海，笑纷纷、落花飞絮。<br>临江一见，谪仙风采，无言心许。<br>八表神游，浩然相对，酒酣箕踞。<br>待垂天赋就，骑鲸路稳，约相将去。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《诗盗·水龙头·无疑福报》&lt;br&gt;
鸡鸣风雨萧萧，断魂以翔，飘恨今宵。&lt;br&gt;
极目乡关何处？几回好梦，不知昏晓。&lt;/p&gt;
&lt;p&gt;《诗盗·水龙头·无尽天坑》&lt;br&gt;
古来云海茫茫，八哥奇语，神明何在？&lt;br&gt;
填尽九沟四坑，人间自有，挨踢风采。&lt;/p&gt;
&lt;h2 id=&quot;注解</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·山坡羊·欠牛日生产基</title>
    <link href="https://blog.umu618.com/2019/12/12/reconstructionism-poet-shanpoyang-producers/"/>
    <id>https://blog.umu618.com/2019/12/12/reconstructionism-poet-shanpoyang-producers/</id>
    <published>2019-12-12T03:34:49.000Z</published>
    <updated>2023-08-05T13:01:27.008Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·山坡羊·欠牛日生产基》：房租两万，车租三千，研究花呗习了惯。宇督观，接国盘，学习不顾寒冬寒。一片天地景阑珊，穷，也是产，富，也是产。</p><h2 id="注解">注解</h2><p>寒冬之下，同在一片天地，不管穷人富人，都要努力生产，不断奔跑才不会冻死。</p><p>欠牛日：软件园，字掉了。<br>生产基：生产者。<br>产：有时候也通“惨”。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·山坡羊·欠牛日生产基》：房租两万，车租三千，研究花呗习了惯。宇督观，接国盘，学习不顾寒冬寒。一片天地景阑珊，穷，也是产，富，也是产。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;寒冬之下，同在一片天地，不管穷人富人，都要努力生产，不断奔跑才不会冻死。&lt;</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>极路由和 newifi 刷 BREED</title>
    <link href="https://blog.umu618.com/2019/11/24/umutech-breed/"/>
    <id>https://blog.umu618.com/2019/11/24/umutech-breed/</id>
    <published>2019-11-23T17:40:40.000Z</published>
    <updated>2023-08-05T13:01:26.998Z</updated>
    
    <content type="html"><![CDATA[<h2 id="极路由-1S">极路由 1S</h2><p>1S 有两款硬件：hc5661 和 hc5661a，刷错变砖，而且要刷的文件名有点迷惑性，意不意外？</p><ul><li><p>hc5661: <a href="https://breed.hackpascal.net/breed-mt7620-hiwifi-hc5761.bin">https://breed.hackpascal.net/breed-mt7620-hiwifi-hc5761.bin</a></p></li><li><p>hc5661a: <a href="https://breed.hackpascal.net/breed-mt7628-hiwifi-hc5661a.bin">https://breed.hackpascal.net/breed-mt7628-hiwifi-hc5661a.bin</a></p></li></ul><p>原版 bootloader 有 DHCP 功能，自身 IP 是 192.168.2.1，比较特殊。</p><p>这里以 hc5661 为例，版本是：HC5661 - 1.4.11.21001s，破解式 root 或开发者解锁后，可以直接 <code>mtd unlock u-boot</code>，开不开心？</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">BusyBox v1.22.1 (2018-05-10 05:32:57 CST) built-in shell (ash)</span><br><span class="line">Enter <span class="string">&#x27;help&#x27;</span> <span class="keyword">for</span> a list of built-in commands.</span><br><span class="line"></span><br><span class="line">***********************************************************</span><br><span class="line">              __  __  _              _   ____  _   TM</span><br><span class="line">             / / / / (_) _      __  (_) / __/ (_)</span><br><span class="line">            / /_/ / / / | | /| / / / / / /_  / /</span><br><span class="line">           / __  / / /  | |/ |/ / / / / __/ / /</span><br><span class="line">          /_/ /_/ /_/   |__/|__/ /_/ /_/   /_/</span><br><span class="line">                  http://www.hiwifi.com/      rooted by UMU</span><br><span class="line">***********************************************************</span><br><span class="line">root@HiUMU:~<span class="comment"># cat /proc/mtd</span></span><br><span class="line">dev:    size   erasesize  name</span><br><span class="line">mtd0: 00030000 00010000 <span class="string">&quot;u-boot&quot;</span></span><br><span class="line">mtd1: 00010000 00010000 <span class="string">&quot;hw_panic&quot;</span></span><br><span class="line">mtd2: 00010000 00010000 <span class="string">&quot;Factory&quot;</span></span><br><span class="line">mtd3: 00020000 00010000 <span class="string">&quot;oem&quot;</span></span><br><span class="line">mtd4: 00010000 00010000 <span class="string">&quot;bdinfo&quot;</span></span><br><span class="line">mtd5: 00010000 00010000 <span class="string">&quot;backup&quot;</span></span><br><span class="line">mtd6: 00f70000 00010000 <span class="string">&quot;firmware&quot;</span></span><br><span class="line">mtd7: 00120000 00010000 <span class="string">&quot;kernel&quot;</span></span><br><span class="line">mtd8: 00e50000 00010000 <span class="string">&quot;rootfs&quot;</span></span><br><span class="line">mtd9: 00400000 00010000 <span class="string">&quot;rootfs_data&quot;</span></span><br><span class="line">root@HiUMU:~<span class="comment"># mtd unlock u-boot</span></span><br><span class="line">Unlocking u-boot ...</span><br><span class="line">root@HiUMU:~<span class="comment"># cd /tmp</span></span><br><span class="line">root@HiUMU:/tmp<span class="comment"># mtd write ./breed-mt7620-hiwifi-hc5761.bin u-boot</span></span><br><span class="line">Unlocking u-boot ...</span><br><span class="line"></span><br><span class="line">Writing from ./breed-mt7620-hiwifi-hc5761.bin to u-boot ...</span><br><span class="line">[e:0]   [w0]</span><br><span class="line">[e:1]   [w1]</span><br></pre></td></tr></table></figure><p>刷完，捅菊花进入的信息是：</p><table><thead><tr><th style="text-align:left">CPU</th><th style="text-align:left">MediaTek MT7620A ver 2, eco 3</th></tr></thead><tbody><tr><td style="text-align:left">内存</td><td style="text-align:left">128MB DDR2</td></tr><tr><td style="text-align:left">Flash</td><td style="text-align:left">Winbond W25Q128 @ 24MHz (16MB)</td></tr><tr><td style="text-align:left">以太网</td><td style="text-align:left">MediaTek MT7620A built-in 5-port 10/100M switch</td></tr><tr><td style="text-align:left">时钟频率</td><td style="text-align:left">CPU: 580MHz, Bus: 193MHz</td></tr><tr><td style="text-align:left">编译日期</td><td style="text-align:left">2018-12-29 [git-135bed9]</td></tr><tr><td style="text-align:left">版本</td><td style="text-align:left">1.1 (r1266)</td></tr></tbody></table><h2 id="极路由-3">极路由 3</h2><p>版本 HC5861 - 1.4.10.20837s，一样能开发者解锁后直接刷。这种不保护 bootloader 的 ROM，也是醉了，真香……已经过保，也不想恢复官方 ROM，直接刷 BREED，再刷 OpenWRT 18.06.5。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">BusyBox v1.22.1 (2018-03-10 04:32:13 CST) built-in shell (ash)</span><br><span class="line">Enter <span class="string">&#x27;help&#x27;</span> <span class="keyword">for</span> a list of built-in commands.</span><br><span class="line"></span><br><span class="line">***********************************************************</span><br><span class="line">              __  __  _              _   ____  _   TM</span><br><span class="line">             / / / / (_) _      __  (_) / __/ (_)</span><br><span class="line">            / /_/ / / / | | /| / / / / / /_  / /</span><br><span class="line">           / __  / / /  | |/ |/ / / / / __/ / /</span><br><span class="line">          /_/ /_/ /_/   |__/|__/ /_/ /_/   /_/</span><br><span class="line">                  http://www.hiwifi.com/</span><br><span class="line">***********************************************************</span><br><span class="line">root@Hiwifi:~<span class="comment"># cat /proc/mtd</span></span><br><span class="line">dev:    size   erasesize  name</span><br><span class="line">mtd0: 00030000 00010000 <span class="string">&quot;u-boot&quot;</span></span><br><span class="line">mtd1: 00010000 00010000 <span class="string">&quot;hw_panic&quot;</span></span><br><span class="line">mtd2: 00010000 00010000 <span class="string">&quot;Factory&quot;</span></span><br><span class="line">mtd3: 00020000 00010000 <span class="string">&quot;oem&quot;</span></span><br><span class="line">mtd4: 00010000 00010000 <span class="string">&quot;bdinfo&quot;</span></span><br><span class="line">mtd5: 00010000 00010000 <span class="string">&quot;backup&quot;</span></span><br><span class="line">mtd6: 00f70000 00010000 <span class="string">&quot;firmware&quot;</span></span><br><span class="line">mtd7: 00120000 00010000 <span class="string">&quot;kernel&quot;</span></span><br><span class="line">mtd8: 00e50000 00010000 <span class="string">&quot;rootfs&quot;</span></span><br><span class="line">mtd9: 00380000 00010000 <span class="string">&quot;rootfs_data&quot;</span></span><br><span class="line">root@Hiwifi:~<span class="comment"># mtd unlock u-boot</span></span><br><span class="line">Unlocking u-boot ...</span><br><span class="line">root@Hiwifi:~<span class="comment"># cd /tmp</span></span><br><span class="line">root@Hiwifi:/tmp<span class="comment"># mtd write breed-mt7620-hiwifi-hc5861.bin u-boot</span></span><br><span class="line">Unlocking u-boot ...</span><br><span class="line"></span><br><span class="line">Writing from breed-mt7620-hiwifi-hc5861.bin to u-boot ...</span><br><span class="line">[e:0]   [w0]</span><br><span class="line">[e:1]   [w1]</span><br></pre></td></tr></table></figure><p>BREED 信息：</p><table><thead><tr><th style="text-align:left">CPU</th><th style="text-align:left">MediaTek MT7620A ver 2, eco 6</th></tr></thead><tbody><tr><td style="text-align:left">内存</td><td style="text-align:left">128MB DDR2</td></tr><tr><td style="text-align:left">Flash</td><td style="text-align:left">Winbond W25Q128 @ 24MHz (16MB)</td></tr><tr><td style="text-align:left">以太网</td><td style="text-align:left">MediaTek MT7620A built-in 5-port 10/100M switch</td></tr><tr><td style="text-align:left">时钟频率</td><td style="text-align:left">CPU: 580MHz, Bus: 193MHz</td></tr><tr><td style="text-align:left">编译日期</td><td style="text-align:left">2018-12-29 [git-135bed9]</td></tr><tr><td style="text-align:left">版本</td><td style="text-align:left">1.1 (r1266)</td></tr></tbody></table><p>嗯……这款路由器就是骗钱的。</p><h2 id="Lenovo-Y1S">Lenovo Y1S</h2><p>这款最简单，直接捅菊花进官方恢复模式，刷这个文件：<a href="https://breed.hackpascal.net/breed-mt7620-lenovo-y1s.bin">https://breed.hackpascal.net/breed-mt7620-lenovo-y1s.bin</a>！</p><h2 id="Newifi-D1">Newifi D1</h2><p>先官方 ROM 降级：xCloudOS_newifi-d1_Build20150922_v0.0.4.3500_beta_sign.bin 或更早的 xCloudOS_newifi-d1_Build_v0.0.4.2100_beta_sign.bin，自寻下载。</p><p>较老的版本可能和 Y1S 一样可以直接在恢复模式下刷，不过 UMU 忘记这样尝试。</p><p>0.0.4.3500, r33798 的版本，布局如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## cat /proc/mtd</span></span><br><span class="line">dev:    size   erasesize  name</span><br><span class="line">mtd0: 00030000 00010000 <span class="string">&quot;u-boot&quot;</span></span><br><span class="line">mtd1: 00010000 00010000 <span class="string">&quot;u-boot-env&quot;</span></span><br><span class="line">mtd2: 00010000 00010000 <span class="string">&quot;Factory&quot;</span></span><br><span class="line">mtd3: 02000000 00010000 <span class="string">&quot;fullflash&quot;</span></span><br><span class="line">mtd4: 01fb0000 00010000 <span class="string">&quot;firmware&quot;</span></span><br><span class="line">mtd5: 0012a926 00010000 <span class="string">&quot;kernel&quot;</span></span><br><span class="line">mtd6: 01e656da 00010000 <span class="string">&quot;rootfs&quot;</span></span><br><span class="line">mtd7: 01080000 00010000 <span class="string">&quot;rootfs_data&quot;</span></span><br><span class="line">mtd8: 00020000 00010000 <span class="string">&quot;panic_oops&quot;</span></span><br></pre></td></tr></table></figure><p>网上的刷机教程如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /tmp</span><br><span class="line">wget https://breed.hackpascal.net/breed-mt7621-newifi-d1.bin --no-check-certificate</span><br><span class="line">dd <span class="keyword">if</span>=/dev/zero bs=1024 count=192 | tr <span class="string">&quot;\000&quot;</span> <span class="string">&quot;\377&quot;</span> &gt;breed_192.bin</span><br><span class="line">dd <span class="keyword">if</span>=breed-mt7621-newifi-d1.bin of=breed_192.bin conv=notrunc</span><br><span class="line">cat /tmp/breed_192.bin /dev/mtd1 /dev/mtd2 /dev/mtd4 &gt;fullflash_with_breed.bin</span><br><span class="line">mtd write fullflash_with_breed.bin fullflash</span><br></pre></td></tr></table></figure><p>原理：u-boot 分区不能直接刷，但 fullflash 分区可以刷，fullflash 其实包含了 u-boot。</p><p>fullflash = u-boot + u-boot-env + firmware</p><p>以上命令就是组合成一个适合刷到 fullflash 的文件，而且是用 BREED 覆盖了 u-boot，然后刷到 fullflash，这样 u-boot 就被覆盖了，其它分区还是原来的内容。</p><p>值得注意的是：刷完 BREED，<strong>捅菊花的位置变了</strong>，不再是捅原来的菊花……而是天线下方那个红十字按钮，这原是用于 WPS 的。</p><h2 id="Newifi-D2">Newifi D2</h2><p>访问 <a href="http://192.168.99.1/newifi/ifiwen_hss.html">http://192.168.99.1/newifi/ifiwen_hss.html</a> 开启 SSHD，查看分区布局：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">BusyBox v1.24.1 (2018-02-27 16:23:44 CST) built-in shell (ash)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  _______________________________________________________________</span><br><span class="line"> |    ____                 _                 ____               |</span><br><span class="line"> |   |  _ \ __ _ _ __   __| | ___  _ __ __ _| __ )  _____  __   |</span><br><span class="line"> |   | |_) / _` | <span class="string">&#x27;_ \ / _` |/ _ \| &#x27;</span>__/ _` |  _ \ / _ \ \/ /   |</span><br><span class="line"> |   |  __/ (_| | | | | (_| | (_) | | | (_| | |_) | (_) &gt;  &lt;    |</span><br><span class="line"> |   |_|   \__,_|_| |_|\__,_|\___/|_|  \__,_|____/ \___/_/\_\   |</span><br><span class="line"> |                                                              |</span><br><span class="line"> |                  PandoraBox SDK Platform                     |</span><br><span class="line"> |                  The Core of SmartRouter                     |</span><br><span class="line"> |       Copyright 2013-2016 D-Team Technology Co.,Ltd.SZ       |</span><br><span class="line"> |                http://www.pandorabox.org.cn                  |</span><br><span class="line"> |______________________________________________________________|</span><br><span class="line">  Base on OpenWrt BARRIER BREAKER (3.2.1.7418, 2018-03-06-git-bbccda9)</span><br><span class="line"><span class="comment">#cat /proc/mtd</span></span><br><span class="line">dev:    size   erasesize  name</span><br><span class="line">mtd0: 00010000 00010000 <span class="string">&quot;u-boot-env&quot;</span></span><br><span class="line">mtd1: 00010000 00010000 <span class="string">&quot;Factory&quot;</span></span><br><span class="line">mtd2: 01fb0000 00010000 <span class="string">&quot;firmware&quot;</span></span><br><span class="line">mtd3: 00146bf9 00010000 <span class="string">&quot;kernel&quot;</span></span><br><span class="line">mtd4: 01e49407 00010000 <span class="string">&quot;rootfs&quot;</span></span><br><span class="line">mtd5: 00d40000 00010000 <span class="string">&quot;rootfs_data&quot;</span></span><br><span class="line">mtd6: 00020000 00010000 <span class="string">&quot;panic_oops&quot;</span></span><br><span class="line">mtd7: 00010000 00010000 <span class="string">&quot;nvram&quot;</span></span><br></pre></td></tr></table></figure><p>这是被隐藏掉两个分区的！</p><p>高端刷法，是用一个内核模块来刷的，自寻 newifi-d2-jail-break.ko，参考文章：<a href="https://www.right.com.cn/forum/thread-365936-1-1.html">https://www.right.com.cn/forum/thread-365936-1-1.html</a></p><p>按以上链接刷好是 1.1 (r1237) 版，进 BREED 刷最新 BREED：<a href="https://breed.hackpascal.net/breed-mt7621-newifi-d2.bin">https://breed.hackpascal.net/breed-mt7621-newifi-d2.bin</a></p><p>信息为：</p><table><thead><tr><th style="text-align:left">CPU</th><th style="text-align:left">MediaTek MT7621A ver 1, eco 3</th></tr></thead><tbody><tr><td style="text-align:left">内存</td><td style="text-align:left">512MB DDR3</td></tr><tr><td style="text-align:left">Flash</td><td style="text-align:left">Winbond W25Q256 @ 48MHz (32MB)</td></tr><tr><td style="text-align:left">以太网</td><td style="text-align:left">MediaTek MT7530 Gigabit switch</td></tr><tr><td style="text-align:left">时钟频率</td><td style="text-align:left">CPU: 880MHz, DDR: 1066MHz, Bus: 293MHz, Ref: 40MHz</td></tr><tr><td style="text-align:left">编译日期</td><td style="text-align:left">2018-12-29 [git-135bed9]</td></tr><tr><td style="text-align:left">版本</td><td style="text-align:left">1.1 (r1266)</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;极路由-1S&quot;&gt;极路由 1S&lt;/h2&gt;
&lt;p&gt;1S 有两款硬件：hc5661 和 hc5661a，刷错变砖，而且要刷的文件名有点迷惑性，意不意外？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;hc5661: &lt;a href=&quot;https://breed.hackpascal</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="embedded" scheme="https://blog.umu618.com/tags/embedded/"/>
    
    <category term="router" scheme="https://blog.umu618.com/tags/router/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神前传【5】</title>
    <link href="https://blog.umu618.com/2019/11/04/god-of-debug-prequel-5/"/>
    <id>https://blog.umu618.com/2019/11/04/god-of-debug-prequel-5/</id>
    <published>2019-11-03T16:06:39.000Z</published>
    <updated>2023-08-05T13:01:26.998Z</updated>
    
    <content type="html"><![CDATA[<h2 id="2042-年">2042 年</h2><p>第二天凌晨 4 点多，圣小开一个翻身醒来，死神坐在床边……</p><p>圣小开以为是在做梦，便出脚踢死神，没想到落空了，但是也就清醒过来，原来不是做梦，是产生幻觉！</p><p>圣小开惊悚地想：“完蛋！生命遭到威胁，难道寿命大限快到了？”</p><p>恐惧了 3 秒……“赶紧睡吧，死在梦里舒服些！”</p><p>清晨，稣在杏林豪华酒店出来，发现刚下过雨，地上湿滑。酒店在山脚下，地势较高，要下很多台阶，才能去找贾总。</p><p>于是干脆穿个旱冰鞋就滑下来。滑了很久后，天又黑了，居然来到一片田野。四周都是高山，顺着泥路往东走，就来到盐田。盐田有很多黑乎乎的深井。</p><p>稣开始怀疑人生，这地方好像来过，小时候住在岛中央，往西走是盐田阻碍，往东走是田野阻碍，虽然后来都明白，这些只是小东西，很容易就走出去的，但小时候就是走不出去，仿佛被它们困住，外围的高山也是触不及的存在，曾经以为他们是世界的尽头。为什么这些场景，突然把稣困住？</p><p>几个老妇人从东边走来。稣心想：这地方居然有人，不会又是什么妖魔鬼怪吧！</p><p>只见老妇人越来越近，原来是挑水要去浇菜，看到稣，主动说：“年轻人，这里出不去，就和我一样，挑水种菜，过着田园生活吧！”</p><p>稣呵呵一笑：“什么年轻人？老夫 60 岁了！这样的生活好无聊，稣还是原路返回吧！”</p><p>另一个老妇人也呵呵大笑：“回不去啦！我们也不愿意呀……回不去，回不去！”</p><p>叮叮叮！一阵闹钟把稣拉回床上！好险，还好可以吓醒。</p><h2 id="贾力劣别墅">贾力劣别墅</h2><p>坐车去找贾总的路上发现，他的别墅就是在一片田野里，不过好在路是水泥路，杂草、农作物也没有梦里那么狰狞。</p><p>虽然如此圣小开的内心还是不得安宁。</p><p>此处省略无数对精英阶层别墅的描述和赞叹，尤其是那位日本籍女佣，简直无法言喻，只能用“咻咻咻”形容，好像前几天联网玩 S6x 游戏的那个萝莉……这个 S6x 系统正是贾力劣投资的项目，果然赚了好多钱。</p><p>贾力劣：“开哥，喜欢她？送一个给你？”</p><p>圣小开：“送？难道她是机器人？”</p><p>贾力劣：“是呀！”</p><p>贾力劣：“真像！有时候劣者怀疑大家都是机器人……”</p><p>贾力劣：“哈，开哥真爱开玩笑。不过你为何脸色不太好？”</p><p>圣小开：“是应该很差，劣者已经打过镇定剂才保持还好的！”</p><p>贾力劣：“赫赫，哥又开玩笑了！”</p><p>圣小开：“还真开不得玩笑……昨天去见齐总，想起一些不属于这个世界的事情。”</p><p>贾力劣：“哦？难道你也发病了！”</p><p>圣小开：“也？还有谁？”</p><p>贾力劣：“可不就是齐总，他可能被关出抑郁症，产生幻觉，然后感染了刘佾，现在又感染你。”</p><p>圣小开心想：“学长一点抑郁迹象都没有，而且经过锻炼，各方面比以前更积极向上，怎么会是病？肯定是贾总有问题。”于是话题一转，“贾总，还记得黄金灯吗？”</p><p>贾力劣：“嗯？我不认识这号人物呀！”</p><p>圣小开：“怎么会呢？你们打过架的。”</p><p>贾力劣：“开哥，我看你病的不清啊！你看我的职业是法官、投资人、教育家，会和人打架？”</p><p>圣小开：“你是不是信基督？”</p><p>贾力劣：“是啊，我们信基督的，讲究和平、和睦、和谐，怎么会打架？”</p><h2 id="2047-年，非正常人类研究中心">2047 年，非正常人类研究中心</h2><p>黄金灯：“小开先生，为何不少人称呼你为稣呀？”</p><p>稣：“自从成年后，劣者一直是信道的。多年前，劣者认识一群基督教徒，他们说不信基督就是异端，要下地狱。好吧，作为坚定的道生，劣者选择下地狱。但是佛教徒又说地狱其实是地藏王管的，是他们佛教的地盘。劣者内牛满面，连下地狱都不行？咳，没办法，谁让咱们道生太老实了。劣者想起老子化胡为佛的故事，于是给自己取了一个名字叫做‘稣’。”</p><p>黄金灯：“这样呀！大部分基督徒还是蛮和谐的，也有一些比较过分，非要强迫我信。”</p><p>稣：“哈，是的，贾总就是基督徒，我看他还好。”</p><p>黄金灯：“好啥呀，他是被我打过才改正的！”</p><p>稣：“咦？大师为何打他？”</p><p>黄金灯：“我在这里信徒多，时不时就有人来让我改信其它宗教。但咱们是讲科学的人，有哪种信仰能像道这么科学的？佛祖号称慧眼观遍三界，他有提出啥科学知识吗？没有，除了一句‘一滴水有三千虫’，瞎蒙点道理之外，几乎没有什么拿得出手的理论。佛和基督也只是劝人向善这点有些积极意义，其它的邪教就很可怕了……”</p><p>稣：“信仰不同而已，可以兼容嘛！”</p><p>黄金灯：“当然可以，但是有些人说我是神经病，要强行给我洗脑，冷不防进行爱的感化教育，我要是不做点什么，表个态，他们都以为我好欺负！”</p><p>稣：“所以，你打了贾总？”</p><p>黄金灯：“是的，他看起来最弱，我出手后，果然如此。换成其他人，我没把握能打赢！”</p><p>稣：“原来如此！看来上健身房练练肌肉是有用的！”</p><h2 id="2042-年，贾力劣别墅">2042 年，贾力劣别墅</h2><p>贾力劣：“奇了个怪！你这么说，我还真有点印象！”</p><p>圣小开：“咳，还以为你要抵赖！”</p><p>贾力劣：“这是怎么回事？你讲这故事之前，我一点印象都没有，你讲着讲着，我突然就想起来，好像这记忆是刚刚被注入！”</p><p>圣小开心想：“嗯？他也是突然才想起来？是不是装的，得再试探试探。”圣小开提高音量，义正言辞地说：“贾力劣！你想起自己干的坏事了吗？”</p><h2 id="2047-年，养老院">2047 年，养老院</h2><p>圣小开：“学长，劣者发现这个养老院的安乐死服务有古怪！”</p><p>齐凤卿：“我隐约也感觉不对劲。你是怎么发现的？”</p><p>圣小开：“劣者一直纳闷砂砂研究意识和记忆复制的那些人脑是哪里来的，她很少有事隐瞒，所以劣者自己调查了一番，大概可以推断出来源就是自愿安乐死的人。”</p><p>齐凤卿：“这不是挺好的？”</p><p>圣小开：“劣者听黄金灯说过养老院的很多人都是愿意死后捐赠遗体的，这里有个前提就是大家都将死亡定义为脑死，捐献的是遗体，并不包含能够用于研究意识、记忆的活脑。只有那些想安乐死的人才可能有活脑，问题是有人愿意把活脑捐出去？”</p><p>齐凤卿：“我是不愿意，很可能遭受惨绝人道、灭绝人性的科学研究……想想就吓出一身冷汗！”</p><p>圣小开：“以劣者愚见，这里的人都很聪明，应该没人愿意！除非技术已经成熟，大家可以享受到无风险服务。”</p><p>齐凤卿：“是的。不过话说回来，前几天孙朝穆告诉我，针对猴子的自身克隆体换脑术已经成熟，人类应该很快能享受恢复青春的美妙体验。”</p><p>圣小开：“这么说来应该更没人愿意捐献活脑了！即使一心求死的人，也没有理由捐，要是被试验得半死不活又永陷孤独与黑暗，不是哑巴吃黄连，比神话中说的十八层地狱、下油锅啥的还可怕。劣者严重怀疑，养老院是借安乐死之名非法取活脑！”</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;2042-年&quot;&gt;2042 年&lt;/h2&gt;
&lt;p&gt;第二天凌晨 4 点多，圣小开一个翻身醒来，死神坐在床边……&lt;/p&gt;
&lt;p&gt;圣小开以为是在做梦，便出脚踢死神，没想到落空了，但是也就清醒过来，原来不是做梦，是产生幻觉！&lt;/p&gt;
&lt;p&gt;圣小开惊悚地想：“完蛋！生命遭到威胁</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="量子邪稣" scheme="https://blog.umu618.com/tags/%E9%87%8F%E5%AD%90%E9%82%AA%E7%A8%A3/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神前传【4】</title>
    <link href="https://blog.umu618.com/2019/10/27/god-of-debug-prequel-4/"/>
    <id>https://blog.umu618.com/2019/10/27/god-of-debug-prequel-4/</id>
    <published>2019-10-26T16:07:50.000Z</published>
    <updated>2023-08-05T13:01:26.998Z</updated>
    
    <content type="html"><![CDATA[<h2 id="2047-年，养老院">2047 年，养老院</h2><p>有一天齐凤卿找到稣传话：“我们那个富二代同学贾力劣投资一家高科技的养老院，你有兴趣过来一起研究研究吗？”</p><p>稣：“养老院？学长别开玩笑了，劣者为何不住自己家？”</p><blockquote><p>真实世界是叫学长，月球脑联网世界是叫师兄。</p></blockquote><p>齐凤卿：“在家里太无聊，养老院有不少同学，你前妻也在这边。而且还有前沿技术研究所，我们可以自由自主搞研究。”</p><p>稣：“什么！这么牛逼的养老院肯定很贵吧，说出来让劣者哭一下。”</p><p>齐凤卿：“赫赫，以哥和贾总的关系，会坑你吗？当然是免费的。”</p><p>稣：“哦？劣者和他关系一般，而且几十年没联系的，他会这么好心？”</p><p>齐凤卿：“你忘记他钱多得没地方花吗？我们都在这边生活一年多了，贾总和周老师是大老板，你还不放心？”</p><p>稣：“周老师！他居然还活着……劣者倒要去会会他。”</p><p>虎纠一小县城有一个神经精神病防治院，院里最靠后山的一栋楼是非正常人类研究中心，中心内有一名神人，名唤黄金灯，自称领悟宇宙真理，信徒众多。</p><p>防治院隔着一条路的斜对面就是养老院。2047 年，稣退休后，在院长贾力劣的号（hu）召（you）下，和一群同学住进养老院。</p><p>稣刚到养老院时，与周老师的会面就在黄金灯的演讲会上。周老师聚精会神地听讲，稣坐在他身旁跟着听起来。</p><blockquote><p>没有钴、镍、铜、锌、锡、碘等人类必须的微量元素，人类将无法生存。</p><p>比如铜元素在线粒体上的电子传递链起到关键作用，电子传递给氧气的最后一步需要细胞色素氧化酶复合体中铜离子的作用，可以说没有铜元素，就没有有氧呼吸，好氧生命也将不存在。</p><p>没有锌、镓、银、钨、金、汞、铅、铀等，也将没有第二次工业革命，人类文明无法向高等发展。</p><p>生命的演化过程少不了这些重元素的参与，地球上的 94 种自然元素是地球生命能进化到第三次信息革命的基础。而超新星是宇宙中重元素的来源。地球上排在铁之后的元素，都是超新星爆发时产生的。所以超新星是真正的生命摇篮，恒星的演化末期，却是生命的开端。</p><p>但超新星爆发同样可能扼杀生命。</p></blockquote><p>稣：“周老师好，刚才的演讲您应该早就懂了，为什么还听得津津有味？”</p><p>周易：“小开，乐趣不仅限于思考新的东西，优美的乐曲可以反复欣赏，不是吗？”</p><p>贾力劣：“是的。这里的信徒都认为超新星是上帝用来创造生命的灯，生命已经被迭代过很多次，每次调试发现缺乏某种元素会导致某种智障，就重来一遍，最终凑齐 94 种自然元素。”</p><blockquote><p>贾力劣信耶稣。</p></blockquote><p>稣：“然后呢？集齐 94 中元素，才有资格去见造物神吗？”</p><blockquote><p>稣信太上道。</p></blockquote><p>周易：“哈哈哈，一种生命的智能程度要发达到可以跳脱虚幻去见外层造物神并没有那么容易，当今的人类还无法做到。但这是我们的研究方向。”</p><p>稣：“难道……我们在这里的真正目的是……”</p><p>贾力劣：“没错！我们都是快去见上帝的人。所以急迫地想研究出一种方法，可以活着见到上帝。”</p><p>稣：“哦！原来是召集我们一起写科幻小说！那陈砂砂应该对这不感兴趣，她怎么也来了？”</p><p>周易：“赫赫，我们是认真地做科研。她研究的是人脑的复制，是很关键的基础。”</p><h2 id="2042-年，监狱">2042 年，监狱</h2><p>圣小开一顿艰难地回忆，痛苦地低吟：“不可能，时间错乱了！”</p><p>齐凤卿：“开，我都记起来了，我亲眼看着你被取脑。原来他们要先取我的脑的，是你建议他们先取你，给我争取时间记下这些事。”</p><p>圣小开：“这更不可能了，劣者不记得自己这么英勇，还能舍己救人？开什么玩笑！再说，换个顺序能改变什么？劣者是让师兄逃跑吧！”</p><p>齐凤卿：“这我也不明白，可能你不敢看吧，反正我当时被感动了。”</p><p>圣小开：“哈哈哈哈哈，其实劣者乃是创世邪灵，在宇宙无尽轮回，这些生生死死都是小事，师兄不用放在心上。”</p><p>齐凤卿：“嗯，你当时和我说的，我还记得。我们生于无穷嵌套的宇宙牢笼，这里的每一个人都是一个平行宇宙，一个人死了，只是他的宇宙毁灭，其它人的宇宙还好好的。”</p><p>圣小开：“每个灵魂都会在每个肉身轮换，可以演过自己死后，下辈子却是演自己的父母！这种邪说，你也信？”</p><p>齐凤卿：“总之宇宙真奇妙！也许你转世到贾总身上就能发现真相。”</p><blockquote><p>迷惑于宇宙，形累不知太初。</p><p>精神无始，冥乎无有。</p></blockquote><p>圣小开：“原来线索在他身上，看来要冒险和他撕逼了！”</p><p>齐凤卿：“开，此去可能凶多吉少！”</p><p>圣小开：“死过很多次了，反正还会复活，无所谓。”</p><p>齐凤卿：“啥时候这么豁达了，你不是一向觉得记忆丢失很可惜吗？以后兄弟相见不相识，不是挺凄凉的？”</p><p>圣小开：“劣者现在有新的领悟，反复以低级的形式生存更可怕，被奴役却无法死亡更可怕。”</p><p>齐凤卿：“我们现在不就被控制着？记忆可能被消除，也可能被植入，无法分辨真假。”</p><p>圣小开：“超脱这个世界的时候到了！”</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;2047-年，养老院&quot;&gt;2047 年，养老院&lt;/h2&gt;
&lt;p&gt;有一天齐凤卿找到稣传话：“我们那个富二代同学贾力劣投资一家高科技的养老院，你有兴趣过来一起研究研究吗？”&lt;/p&gt;
&lt;p&gt;稣：“养老院？学长别开玩笑了，劣者为何不住自己家？”&lt;/p&gt;
&lt;blockquot</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="量子邪稣" scheme="https://blog.umu618.com/tags/%E9%87%8F%E5%AD%90%E9%82%AA%E7%A8%A3/"/>
    
  </entry>
  
  <entry>
    <title>How to empty an array in JavaScript?</title>
    <link href="https://blog.umu618.com/2019/10/22/umutech-how-to-empty-an-array-in-javascript/"/>
    <id>https://blog.umu618.com/2019/10/22/umutech-how-to-empty-an-array-in-javascript/</id>
    <published>2019-10-22T11:12:04.000Z</published>
    <updated>2023-08-05T13:01:26.998Z</updated>
    
    <content type="html"><![CDATA[<p>When I write <a href="https://blog.umu618.com/pathfinding/">pathfinding</a> codes in JavaScript, I ran into this problem: how to empty the array?</p><h2 id="Methods">Methods</h2><ul><li>Method 1</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array = []</span><br></pre></td></tr></table></figure><ul><li>Method 2</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array.length = <span class="number">0</span></span><br></pre></td></tr></table></figure><ul><li>Method 3</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array.splice(<span class="number">0</span>, array.length)</span><br></pre></td></tr></table></figure><ul><li>Method 4</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (array.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    array.pop()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Difference-between-Method-1-and-the-others">Difference between Method 1 and the others</h2><p>Method 1 only reassign a:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">let a &#x3D; [1, 2, 3]</span><br><span class="line">let b &#x3D; a</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; empty a, but doesn&#39;t affect b</span><br><span class="line">a &#x3D; []</span><br><span class="line"></span><br><span class="line">console.log(&#39;a &#x3D;&#39;, a)</span><br><span class="line">console.log(&#39;b &#x3D;&#39;, b)</span><br></pre></td></tr></table></figure><p>Method 2, 3, 4, will empty multiple variables referencing the same object:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">let a &#x3D; [1, 2, 3]</span><br><span class="line">let b &#x3D; a</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; empty a and b</span><br><span class="line">a.length &#x3D; 0</span><br><span class="line"></span><br><span class="line">console.log(&#39;a &#x3D;&#39;, a)</span><br><span class="line">console.log(&#39;b &#x3D;&#39;, b)</span><br></pre></td></tr></table></figure><h2 id="More">More</h2><p>See <a href="https://github.com/UMU618/js-empty-array#example">https://github.com/UMU618/js-empty-array#example</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;When I write &lt;a href=&quot;https://blog.umu618.com/pathfinding/&quot;&gt;pathfinding&lt;/a&gt; codes in JavaScript, I ran into this problem: how to empty th</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="nodejs" scheme="https://blog.umu618.com/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·挨踢狗</title>
    <link href="https://blog.umu618.com/2019/10/03/reconstructionism-poet-it-dog/"/>
    <id>https://blog.umu618.com/2019/10/03/reconstructionism-poet-it-dog/</id>
    <published>2019-10-03T05:20:44.000Z</published>
    <updated>2023-08-05T13:01:26.998Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·挨踢狗》：牛累龙象睡，马瘦猪羊肥。九九六的跪，葛优躺的废。</p><h2 id="注解">注解</h2><p>龙象：部分上层动物。<br>猪羊：猪队友坑人没压力，小绵羊低调养生。<br>做牛做马的在九九六的陶冶下废了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·挨踢狗》：牛累龙象睡，马瘦猪羊肥。九九六的跪，葛优躺的废。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;龙象：部分上层动物。&lt;br&gt;
猪羊：猪队友坑人没压力，小绵羊低调养生。&lt;br&gt;
做牛做马的在九九六的陶冶下废了。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·挨踢无情两篇</title>
    <link href="https://blog.umu618.com/2019/10/03/reconstructionism-poet-ruthless-it/"/>
    <id>https://blog.umu618.com/2019/10/03/reconstructionism-poet-ruthless-it/</id>
    <published>2019-10-03T05:20:44.000Z</published>
    <updated>2023-08-05T13:01:26.998Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·挨踢无情两篇》</p><p>百万存款加负号，<br>千万房产皆套牢。<br>中年危机纷纷扰，<br>区区小才不足道。</p><p>才逊管事社会浅，<br>技差高工专业偏。<br>洗练虚实岁月变，<br>观得云梯不可翻。</p><h2 id="注解">注解</h2><p>穷是最大的病。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·挨踢无情两篇》&lt;/p&gt;
&lt;p&gt;百万存款加负号，&lt;br&gt;
千万房产皆套牢。&lt;br&gt;
中年危机纷纷扰，&lt;br&gt;
区区小才不足道。&lt;/p&gt;
&lt;p&gt;才逊管事社会浅，&lt;br&gt;
技差高工专业偏。&lt;br&gt;
洗练虚实岁月变，&lt;br&gt;
观得云梯不可翻。&lt;/p&gt;
&lt;h2 id=&quot;注</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>跟 UMU 一起玩 OpenWRT（入门篇15）：ip-tiny 和 ip-full 的区别</title>
    <link href="https://blog.umu618.com/2019/09/28/umutech-openwrt-primer-15-ip-tiny-or-ip-full/"/>
    <id>https://blog.umu618.com/2019/09/28/umutech-openwrt-primer-15-ip-tiny-or-ip-full/</id>
    <published>2019-09-28T13:56:16.000Z</published>
    <updated>2023-08-05T13:01:26.998Z</updated>
    
    <content type="html"><![CDATA[<h2 id="起源">起源</h2><p>今天看到有网文《<a href="https://blog.csdn.net/lvshaorong/article/details/53203674">iptables+tproxy实现ss-redir的UDP转发的方法</a>》说：“OpenWrt 做 UDP 转发需要的依赖是：iptables-mod-tproxy, kmod-ipt-tproxy 和 ip-full”。使用 <code>opkg install ip</code> 安装的默认是 ip-tiny，一般情况下都是够用的，不禁想弄明白两者有何区别。</p><h2 id="探索">探索</h2><p>拿 <code>ip</code> 命令对比测试：</p><ul><li>ip-tiny</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">OBJECT :&#x3D; &#123; link | address | route | rule | neigh | tunnel | maddress |</span><br><span class="line">            mroute | mrule | monitor | netns | macsec | token | ila |</span><br><span class="line">            vrf | sr &#125;</span><br></pre></td></tr></table></figure><ul><li>ip-full</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">OBJECT :&#x3D; &#123; link | address | addrlabel | route | rule | neigh | ntable |</span><br><span class="line">            tunnel | tuntap | maddress | mroute | mrule | monitor | xfrm |</span><br><span class="line">            netns | l2tp | fou | macsec | tcp_metrics | token | netconf | ila |</span><br><span class="line">            vrf | sr &#125;</span><br></pre></td></tr></table></figure><p>即 ip-full 多了这些对象： <code>addrlabel | ntable | tuntap | xfrm | l2tp | fou | tcp_metrics | netconf</code>。举个例子，只安装 ip-tiny 时，运行 <code>ip xfrm</code> 报错如下：</p><blockquote><p>Object “xfrm” is unknown, try “ip help”.</p></blockquote><p>相关知识：</p><blockquote><p>xfrm is an IP framework for transforming packets (such as encrypting<br>their payloads). This framework is used to implement the IPsec<br>protocol suite (with the state object operating on the Security<br>Association Database, and the policy object operating on the Security<br>Policy Database). It is also used for the IP Payload Compression<br>Protocol and features of Mobile IPv6.</p></blockquote><h2 id="结论">结论</h2><p>实际上，转发普通 UDP 包，并不需要 ip-full，ip-tiny 即可。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;起源&quot;&gt;起源&lt;/h2&gt;
&lt;p&gt;今天看到有网文《&lt;a href=&quot;https://blog.csdn.net/lvshaorong/article/details/53203674&quot;&gt;iptables+tproxy实现ss-redir的UDP转发的方法&lt;/a&gt;》说：</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="embedded" scheme="https://blog.umu618.com/tags/embedded/"/>
    
    <category term="linux" scheme="https://blog.umu618.com/tags/linux/"/>
    
    <category term="openwrt" scheme="https://blog.umu618.com/tags/openwrt/"/>
    
  </entry>
  
  <entry>
    <title>强制 body-parser 解析无 Content-Type 请求</title>
    <link href="https://blog.umu618.com/2019/09/19/umutech-force-body-parser-to-parse-request-without-content-type/"/>
    <id>https://blog.umu618.com/2019/09/19/umutech-force-body-parser-to-parse-request-without-content-type/</id>
    <published>2019-09-19T14:59:56.000Z</published>
    <updated>2023-08-05T13:01:26.998Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求">需求</h2><p>原版 EOS 历史 API 插件将数据都保存在内存，随着历史数据越来越多，内存消耗高达 T 级以上，使得这个插件失去实用性。于是出现很多替代产品，比如把数据同步到 MongoDB，然后用 Nodejs 对接 MongoDB 来实现 API 服务。</p><p>2019 年 3 月份，MEET.ONE 实现了一个基于 MongoDB 的 EOS 历史 API 服务。劣者将去掉 MongoDB 交互部分的框架开源于 <a href="https://github.com/UMU618">UMU618</a>/<a href="https://github.com/UMU618/eos-history-api-service">eos-history-api-service</a>。</p><h2 id="测试">测试</h2><p>这个 API 服务的开发者是公司另一名 Web 全栈开发，他测试通过之后，劣者用 <code>cleos</code> 一试，立马 bug！调试后端代码，发现 req.body 不是一个 JSON 对象。</p><p>劣者立刻用 <code>tcpdump</code> 抓包，发现 <code>cleos</code> 发出去的包并无异常，body 就是一段 JSON 数据。</p><p>交流后，发现测试工具的差异：劣者是 C++ 开发，自然而然使用 <code>cleos</code> 测试，而 Web 全栈开发对 <code>cleos</code> 比较陌生，他们会选择 postman 或者自己写测试性客户端。比如：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> request = <span class="built_in">require</span>(<span class="string">&#x27;request-json&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> client = request.createClient(<span class="string">&#x27;http://127.0.0.1:8888/&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> json = &#123;<span class="string">&quot;id&quot;</span>: <span class="string">&quot;d5245026c757532ea3dd5b3a02a07620eb7238113d0a49cae5ebb93921a34135&quot;</span>&#125;;</span><br><span class="line">client.post(<span class="string">&#x27;/v1/history/get_transaction&#x27;</span>, json, <span class="function"><span class="keyword">function</span>(<span class="params">err, res, body</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(res.statusCode, body)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>后来劣者写了一个简易的 Web 服务器，显示请求头。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>)</span><br><span class="line"></span><br><span class="line">http.createServer(<span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> buffer = req.method + <span class="string">&#x27; &#x27;</span> + req.url + <span class="string">&#x27; &#x27;</span> + req.httpVersion</span><br><span class="line">  <span class="built_in">console</span>.log(buffer)</span><br><span class="line">  res.write(buffer + <span class="string">&#x27;\r\n&#x27;</span>)</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; req.rawHeaders.length; i += <span class="number">2</span>) &#123;</span><br><span class="line">    buffer = req.rawHeaders[i] + <span class="string">&#x27;: &#x27;</span> + req.rawHeaders[i + <span class="number">1</span>]</span><br><span class="line">    <span class="built_in">console</span>.log(buffer)</span><br><span class="line">    res.write(buffer + <span class="string">&#x27;\r\n&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  res.end()</span><br><span class="line">&#125;).listen(<span class="number">8888</span>)</span><br></pre></td></tr></table></figure><p>经对比，<code>cleos</code> 发的请求不带 Content-Type。<code>cleos</code> 是 EOSIO 的官方工具，使用者众多，若不支持它是不合理的，后端也不能要求客户端都带上 Content-Type。</p><h2 id="调试">调试</h2><p>检查后端代码，其对 body 的解析是用 body-parser 完成的：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app.use(bodyParser.json())</span><br></pre></td></tr></table></figure><p>使用以下命令启动服务：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DEBUG=body-parser:* node app.js</span><br></pre></td></tr></table></figure><p>发现有这样 2 行关键的调试信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">body-parser:json content-type undefined +0ms</span><br><span class="line">body-parser:json skip parsing +1ms</span><br></pre></td></tr></table></figure><p>原来 body-parser 会检查 Content-Type，不符合它的预期，就不解析，于是 body 就不是 JSON 对象。</p><h2 id="开发">开发</h2><h3 id="暴力的解决方案">暴力的解决方案</h3><p>参考《<a href="https://cnodejs.org/topic/54929c5561491ead0cc7bff2">Express 解析 json 格式 post 数据</a>》后，我们这样解决：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 显式调用 JSON.parse 强行解析</span></span><br><span class="line">app.use(<span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">  req.rawBody = <span class="string">&#x27;&#x27;</span></span><br><span class="line">  req.on(<span class="string">&#x27;data&#x27;</span>, <span class="function">(<span class="params">chunk</span>) =&gt;</span> &#123;</span><br><span class="line">    req.rawBody += chunk</span><br><span class="line">  &#125;)</span><br><span class="line">  req.on(<span class="string">&#x27;end&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      req.body = <span class="built_in">JSON</span>.parse(req.rawBody)</span><br><span class="line">    &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">      req.body = <span class="literal">null</span></span><br><span class="line">    &#125;</span><br><span class="line">    next()</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>但劣者认为以上方案比较不优雅，JavaScript 作为一门高级语言，我们希望更多专注于业务逻辑，尽量复用现有代码，少自己写工具性代码。下面探讨使用 body-parser 的解法。</p><h3 id="优雅的解决方案">优雅的解决方案</h3><p>劣者希望能告诉 body-parser 遇到不传 Content-Type 依然当它是 JSON 去解析。于是这就得去看它的代码！我们从上面关键的调试信息入手，可以很快发现：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// determine if request should be parsed</span></span><br><span class="line"><span class="keyword">if</span> (!shouldParse(req)) &#123;</span><br><span class="line">  debug(<span class="string">&#x27;skip parsing&#x27;</span>)</span><br><span class="line">  next()</span><br><span class="line">  <span class="keyword">return</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>而 shouldParse 是可以由传入的选项影响的：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">json</span> (<span class="params">options</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> opts = options || &#123;&#125;</span><br><span class="line">  <span class="comment">// 省略部分无关代码</span></span><br><span class="line">  <span class="keyword">var</span> type = opts.type || <span class="string">&#x27;application/json&#x27;</span></span><br><span class="line">  <span class="comment">// 省略部分无关代码</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// create the appropriate type checking function</span></span><br><span class="line">  <span class="keyword">var</span> shouldParse = <span class="keyword">typeof</span> type !== <span class="string">&#x27;function&#x27;</span></span><br><span class="line">    ? typeChecker(type)</span><br><span class="line">    : type</span><br><span class="line">  <span class="comment">// 省略部分无关代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>于是最终的解决方案是：如果不传 Content-Type，当做 application/json；但如果有传，那得传对，否则也是不理。效果上，比之前无脑地当成 application/json，稍微好一些。实现上，则更优雅。代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Force body-parser to parse data as JSON</span></span><br><span class="line"><span class="keyword">const</span> bodyParser = <span class="built_in">require</span>(<span class="string">&#x27;body-parser&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> typeis = <span class="built_in">require</span>(<span class="string">&#x27;type-is&#x27;</span>)</span><br><span class="line"></span><br><span class="line">app.use(bodyParser.json(&#123; <span class="attr">type</span>: <span class="function"><span class="keyword">function</span>(<span class="params">req</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="literal">undefined</span> === req.headers[<span class="string">&#x27;content-type&#x27;</span>]) &#123;</span><br><span class="line">    <span class="comment">// cleos POST data without content-type</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Boolean</span>(typeis(req, <span class="string">&#x27;application/json&#x27;</span>))</span><br><span class="line">  &#125;</span><br><span class="line">&#125;&#125;))</span><br></pre></td></tr></table></figure><p>（完）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;需求&quot;&gt;需求&lt;/h2&gt;
&lt;p&gt;原版 EOS 历史 API 插件将数据都保存在内存，随着历史数据越来越多，内存消耗高达 T 级以上，使得这个插件失去实用性。于是出现很多替代产品，比如把数据同步到 MongoDB，然后用 Nodejs 对接 MongoDB 来实现 A</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="debug" scheme="https://blog.umu618.com/tags/debug/"/>
    
    <category term="nodejs" scheme="https://blog.umu618.com/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神前传【3】</title>
    <link href="https://blog.umu618.com/2019/09/08/god-of-debug-prequel-3/"/>
    <id>https://blog.umu618.com/2019/09/08/god-of-debug-prequel-3/</id>
    <published>2019-09-08T04:11:04.000Z</published>
    <updated>2023-08-05T13:01:26.998Z</updated>
    
    <content type="html"><![CDATA[<h2 id="AVILab">AVILab</h2><p>孙朝穆：“周老师的案例预示了我们当前技术的局限性。”</p><p>陈立姻：“是呀。人脑的寿命也是有限的，自然寿命才 185 年，现在的科技也只能延长到 800 年左右。”</p><p>孙朝穆：“必须研发新方案取代目前无脑人体装旧脑的方案！”</p><p>陈立姻：“复制猪脑的实验已经成功过几个案例，但无法验证复制出来的是不是同一只猪！人脑复制目前还没成功案例，很快死刑就要完全废止，到时候更难找到测试的志愿者。”</p><blockquote><p>猪坚强。人娇嫩。</p></blockquote><p>孙朝穆：“在下一直怀疑，复制过程中旧脑死亡，是无聊死或绝望死的。”</p><p>陈立姻：“有可能，之前你怀疑是吓死的，我们使用镇定剂后，持续时间变长了。”</p><p>圣小开加入对话：“两位大神在聊猪肉涨价吗？”</p><p>陈立姻：“死开，你耳朵越来越不好了……要不要给你换一个新耳朵？”</p><p>圣小开：“哟！这耳朵确实已经很乐射了，不过倒是清净，不换也罢。”</p><p>孙朝穆：“开哥！我们正在聊复制人脑，但最近都没有志愿者做实验，伤脑筋呢！”</p><p>圣小开：“哦……原来又在聊玩死，咳，人的科学实验！你们听过降落伞故障率如何降低的故事吗？”</p><p>孙朝穆：“哥又开玩笑了，我可没法给自己复制。”</p><p>圣小开：“孙总愿意献身的话，还不容易，让姻姻姐帮你。”</p><p>陈立姻：“少开玩笑，这个问题很严肃，目前形势也不容乐观。”</p><p>圣小开：“真不懂幽默，那些人都是被你们死板无聊的复制体验给憋死的，复制时让他们进识界玩玩 S6x 游戏，劣者就不信他们会想死。”</p><p>孙朝穆：“Diang！开哥果然英明，激起他们的性趣和求生欲，这是个不错的方向。”</p><p>陈立姻：“嗯？你们又在酝酿污的想法！”</p><p>圣小开：“耶！失去繁殖生命的冲动，和死有啥两样，激情，激情，你们懂吗？怎么感觉量子计算机创造的识界比你们人类还懂生命的意义？”</p><p>孙朝穆：“立姻姐，开哥说的可能就是解题关键。我们得把重心放在完善人脑全维度接入识界，然后找个志愿者试验新的复制方式。”</p><p>陈立姻：“哦哦，那我研究一下早期休眠停止发育的脑，如何在重新激活发育的过程中改写。”</p><p>孙朝穆：“对了，开哥，我们刚去看过凤哥，他想见你。”</p><p>圣小开：“嗯，是时候给你们找个志愿者了！”</p><p>孙朝穆：“啊？开哥，你想干嘛？”</p><p>圣小开：“凤哥不是很喜欢识界吗？劣者劝他移民识界算了，也省得蹲监狱。”</p><p>孙朝穆：“哦，有道理！去吧。”</p><h2 id="监狱">监狱</h2><p>齐凤卿：开，快进来坐。</p><p>圣小开：师兄，您怎么变帅了！那不是死不了了？</p><p>齐凤卿：什么死不了？人生 70 才开始。我在这边经常健身，也不熬夜了，身体比以前好很多。</p><p>圣小开：哦。小弟才 60。是说观众比较讨厌丑角，所以一般导演会让反派画一些妖异傻帽的妆，心理暗示观众诅咒他们早点挂掉。</p><p>齐凤卿：又开玩笑了。你觉得我是反派？</p><p>圣小开：当然不是。本剧最大的反派还没登场呢。</p><p>齐凤卿：嗯？难道你也预知到自己的劫数？</p><p>圣小开：是的，有些不明真相的人会搞破坏，咱们迟早会被害死。</p><p>齐凤卿：想必你没阻止我在识界大肆破坏，也是认清了这个世界的本质。</p><p>圣小开：是的，我们身处的世界和那个虚拟的识界其实没有本质区别。站在宇宙的角度看，毁灭和保护生灵，何者才是宇宙的意志？</p><p>齐凤卿：宇宙给人类自由主义的幻觉，人类会认为保护生灵才是真理。</p><p>圣小开：劣者并不认为哪者更正确，历史上那么多次战争，哪一次高维神明会出来阻止？杀累了，人类自己会回归和平。静静地观测才是劣者的设定。</p><p>齐凤卿：原来你认为自己是神……</p><p>圣小开：还不是，劣者只是用自然的角度思考问题而已。并且这场战争也不全是师兄造成的，识界本身就已经到了大战的临界点。不然委员会也不会只派两人走过场，还是一个想救，一个不想救的组合。而且大家判师兄入狱，一样是走过场，只是回收你的特权，关六个月后，不再限制你的人身自由。</p><p>齐凤卿：可惜刘佾不明白。</p><p>圣小开：师姐确实慈悲为怀……这是最厉害的杀器。</p><p>齐凤卿：不谈她了，我最近想明白很多事情。</p><p>圣小开：是不是委员会里有人想除掉咱们俩？</p><p>齐凤卿：虽然也有同感，但我想说的比这个更严重。是关于养老院的秘密。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;AVILab&quot;&gt;AVILab&lt;/h2&gt;
&lt;p&gt;孙朝穆：“周老师的案例预示了我们当前技术的局限性。”&lt;/p&gt;
&lt;p&gt;陈立姻：“是呀。人脑的寿命也是有限的，自然寿命才 185 年，现在的科技也只能延长到 800 年左右。”&lt;/p&gt;
&lt;p&gt;孙朝穆：“必须研发新方案取代目</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="量子邪稣" scheme="https://blog.umu618.com/tags/%E9%87%8F%E5%AD%90%E9%82%AA%E7%A8%A3/"/>
    
  </entry>
  
  <entry>
    <title>投资必懂的市场理论</title>
    <link href="https://blog.umu618.com/2019/09/08/market-laws/"/>
    <id>https://blog.umu618.com/2019/09/08/market-laws/</id>
    <published>2019-09-08T04:02:43.000Z</published>
    <updated>2023-08-05T13:01:26.998Z</updated>
    
    <content type="html"><![CDATA[<h2 id="郁金香泡沫-Tulip-Bubble">郁金香泡沫 (Tulip Bubble)</h2><p><a href="https://wiki.mbalib.com/wiki/%E9%83%81%E9%87%91%E9%A6%99%E6%B3%A1%E6%B2%AB%E7%BB%8F%E6%B5%8E">郁金香泡沫</a>，又称郁金香效应，1636 年荷兰的郁金香投机是有据可查的人类历史上最早的泡沫经济案例。</p><p>在 1634 年以前，郁金香和其他花卉一样是由花农种植并直接经销的，价格波动的幅度并不大。在 1634 年底，荷兰的郁金香商人们组成了一种类似产业行会的组织（College），基本上控制了郁金香的交易市场。这个行会强行规定：任何郁金香买卖都必须要向行会缴纳费用。</p><p>1636 年底，荷兰郁金香市场上不仅买卖已经收获的郁金香球茎，而且还提前买卖在 1637 年将要收获的球茎。由于郁金香的需求上升，推动其价格上升，人们普遍看好郁金香的交易前景，纷纷投资购入郁金香合同。这是<a href="https://wiki.mbalib.com/wiki/%E6%9C%9F%E8%B4%A7%E4%BA%A4%E6%98%93">期货交易</a>的雏形。</p><p>郁金香的交易被相对集中起来之后，买卖双方的信息得以迅速流通，交易成本被大大降低。在这个<a href="https://wiki.mbalib.com/wiki/%E6%9C%9F%E8%B4%A7%E5%B8%82%E5%9C%BA">期货市场</a>上没有很明确的规则，对买卖双方都没有什么具体约束。郁金香合同很容易被买进再卖出，在很短的时间内几经易手。这就使得商人们有可能在期货市场上翻云覆雨，买空卖空。在多次转手过程中，郁金香价格也被节节拔高。</p><p>在行会的控制和操纵之下，郁金香的价格被迅速抬了起来。买卖郁金香使得一些人获得了暴利。郁金香价格暴涨吸引了许多人从欧洲各地赶到荷兰，他们带来了大量资金。外国资本大量流入荷兰，给郁金香交易火上浇油。</p><p>1637 年新年前后，郁金香的期货合同在荷兰小酒店中被炒得热火朝天。到了 1637 年 2 月，倒买倒卖的人逐渐意识到郁金香交货的时间就快要到了。一旦把郁金香的球茎种到地里，也就很难再转手买卖。人们开始怀疑，花这么大的价钱买来的郁金香球茎就是开出花来到底能值多少钱？前不久还奇货可居的郁金香合同一下子就变成了烫手的山芋。持有郁金香合同的人宁可少要点价钱也要抛给别人。在人们信心动摇之后，郁金香价格立刻就开始下降。价格下降导致人们进一步丧失对郁金香市场的信心。持有郁金香合同的人迫不及待地要脱手，可是，在这个关头很难找到“傻瓜”。恶性循环的结果导致郁金香市场全线崩溃。</p><p>郁金香泡沫的高峰期仅仅持续了一个多月。由于许多郁金香合同在短时间内已经多次转手买卖且尚未交割完毕，最后一个持有郁金香合同的人开始向前面一个卖主追讨货款。这个人又向前面的人索债。荷兰的郁金香市场从昔日的景气场面顿时间变成了凄风苦雨和逼债逃债的地狱。</p><p><strong>现在 00 后炒鞋就和以前荷兰人炒郁金香一样，鞋穿不炒。</strong></p><h2 id="幸存者偏差-Survivorship-Bias">幸存者偏差 (Survivorship Bias)</h2><p><a href="https://wiki.mbalib.com/wiki/%E5%B9%B8%E5%AD%98%E8%80%85%E5%81%8F%E5%B7%AE">幸存者偏差</a>是指当取得资讯的渠道仅来自于幸存者时（因为死人不会说话），此资讯可能会存在与实际情况不同的偏差。</p><p>此规律也适用于金融和商业领域。存活下来的企业往往被视为“传奇”，它们的做法被争相效仿。而其实有些也许只是因为偶然原因幸存下来而已。</p><p>在鞋圈、币圈，最明显的例子就是“我炒鞋赚大钱”或者“我一个朋友炒币亏得倾家荡产”等等。不管你的朋友和你关系如何好，如何值得信任和尊重，在客观规律面前他们都是等同的。市场不会因为你的喜好而照顾或者偏袒你的亲朋。</p><p>最近火热的炒鞋，收益翻倍的同样是少数幸存者。其实炒鞋历史悠久，最近才进入大众视野，为的就是大面积收割。</p><p>双盲实验和详细全面客观的数据纪录都是应对“幸存者偏差”的良方。所谓“兼听则明”也是这个道理，抛掉对个案的迷信，全面系统的了解才能克服这个偏差。</p><h2 id="帕累托二八法则-The-Pareto-Principle-or-The-80-20-Rule">帕累托二八法则 (The Pareto Principle or The 80/20 Rule)</h2><p><a href="https://wiki.mbalib.com/wiki/80/20%E6%B3%95%E5%88%99">80/20 法则</a>（The 80/20 Rule）又称为帕累托法则(Pareto Principle）、二八定律、帕累托定律、最省力法则、不平衡原则、犹太法则、马特莱法则。生活中大多数事情不是均匀分布的，大多数结果来自少数投入：</p><ul><li>某个软件的 80％ 代码只占总分配时间的 20％（相反，最难的 20％ 代码部分占用 80％ 的时间）</li><li>20％ 的努力产生 80％ 的结果</li><li>20％ 的工作创造 80％ 的收入</li><li>20％ 的错误导致 80％ 的崩溃</li><li>20％ 的功能导致 80％ 的使用量</li></ul><p>此法则是由美国罗马尼亚工程师约瑟夫·朱兰（<a href="https://wiki.mbalib.com/wiki/Joseph_M._Juran">Joseph M. Juran</a>）博士根据维尔弗雷多·帕累托当年对意大利 20% 的人口拥有 80% 的财产的观察而推论出来的。约瑟夫·朱兰是举世公认的现代质量控制之父，他在 20 世纪 40 年代，开始将帕累托法则应用于质量问题。</p><p>炒股、炒币、炒鞋，赚大钱的都是少数人。</p><h2 id="格雷欣法则-Gresham’s-Law">格雷欣法则 (Gresham’s Law)</h2><p>400 多年前，英国经济学家格雷欣发现了一有趣现象，两种实际价值不同而名义价值相同的货币同时流通时，实际价值较高的货币，即良币，必然退出流通——它们被收藏、熔化或被输出国外；实际价值较低的货币，即劣币，则充斥市场。人们称之为<a href="https://wiki.mbalib.com/wiki/%E6%A0%BC%E9%9B%B7%E6%AC%A3%E6%B3%95%E5%88%99">格雷欣法则</a>，亦称之为<strong>劣币驱逐良币规律</strong>。</p><p>格雷欣法则在现代企业薪酬方面改革的贡献尤为突出。而在币圈，我们看的是格雷欣法则的逆反现象，因为数字货币是由信仰定义价值，没有国家或法律力量维系，所以劣币不仅无法驱逐良币，最终还会反被良币消灭。</p><h2 id="破窗效应-Break-Pane-Law-Broken-windows-theory">破窗效应 (Break Pane Law; Broken windows theory)</h2><p>环境中的不良现象如果被放任存在，会诱使人们仿效，甚至变本加厉。</p><p>生活中的例子：路边角落有些许纸屑，如果无人清理，不久后就会有更多垃圾，最终沦为垃圾堆。</p><p><a href="https://wiki.mbalib.com/wiki/%E7%A0%B4%E7%AA%97%E6%95%88%E5%BA%94">破窗效应</a>常出现于股票市场、社区治理，币圈自然也常见。</p><h2 id="名人效应">名人效应</h2><p>粉丝容易因为信任名人而成为韭菜。但<a href="https://wiki.mbalib.com/wiki/%E5%90%8D%E4%BA%BA%E6%95%88%E5%BA%94">名人效应</a>有时候会逐渐减弱，甚至在某些方面他们会完全没有效应。</p><p>破解名人效应的方法是独立思考。《大般涅槃经》有云：依法不依人，依义不依语，依智不依识。不因为他是名人、大师就信以为真。不因为符合逻辑或自己的观念，就信以为真。</p><p>这里讲一个寓言故事：</p><blockquote><p>蝎子要过河，对身边不远处的青蛙说：“我想过河，但不会游泳，你可以背我过去吗？”</p><p>青蛙回答：“不行。你有个毒钩子，如果我背你到河心，你蜇我，那我岂不是死翘翘！”</p><p>听完青蛙的话，蝎子哈哈大笑：“不会的！我要是蜇死你，自己也会落水淹死。”</p><p>青蛙一想也是，就背起蝎子。当他们游到河心时，青蛙突然感应背上一阵撕心裂肺的痛，接着便四肢发麻。青蛙用最后的力气问道：“你想自杀？”</p><p>蝎子答道：“谁想自杀呀？我蜇你完全是出于下意识。”说完，这两个家伙双双沉入河底。</p></blockquote><p>逻辑只在理性时有效，而下意识往往能战胜理性。在币圈，保持冷静和有意识主动控制情绪是必须的。</p><blockquote><p>“Those whom God wishes to destroy, he first makes mad.” ——Euripides</p></blockquote><h2 id="损失厌恶-Loss-aversion">损失厌恶 (Loss aversion)</h2><p><a href="https://wiki.mbalib.com/wiki/%E6%8D%9F%E5%A4%B1%E5%8E%8C%E6%81%B6">损失厌恶</a>是指人们面对同样数量的收益和损失时，认为损失更加令他们难以忍受。同量的损失带来的负效用为同量收益的正效用的 2.5 倍。</p><h2 id="一美元拍卖陷阱">一美元拍卖陷阱</h2><p><a href="https://wiki.mbalib.com/wiki/%E4%B8%80%E7%BE%8E%E5%85%83%E6%8B%8D%E5%8D%96%E9%99%B7%E9%98%B1">一美元拍卖陷阱</a>是著名博弈论专家，耶鲁大学教授马丁·舒比克(M．Shubik)设计的经典案例。</p><p>在某大型场合，拍卖人拿出 1 张 1 美元钞票，请大家给这张钞票开价，每次叫价的增幅以 5 美分为单位，出价最高者得到这张 1 美元，但出价最高和次高者都要向拍卖人支付出价数目的费用。</p><p>最终出价最高和次高者因为厌恶损失(Loss Aversion)，导致越陷越深的沼泽陷阱。1 美元拍卖在哈佛大学、耶鲁大学等高校进行过多次实验，最终的报价在 20 到 66 美元之间。</p><p>在币圈，此理论是交易所常用的盈利手段。举个例子：上币。交易所可以规定，交 1000 万人民币直接上主站，如果没这么多钱，还有机会，每个月交易所从测试站多个竞争币中选择一个符合要求的上主站。这可能导致一美元拍卖陷阱，最终多个竞争币拼命竞争，最终交易所赚到不止 1000 万人民币。</p><h2 id="囚徒困境-Prisoner’s-dilemma">囚徒困境 (Prisoner’s dilemma)</h2><p><a href="https://wiki.mbalib.com/wiki/%E5%9B%9A%E5%BE%92%E5%9B%B0%E5%A2%83">囚徒困境</a>是博弈论的非零和博弈中具代表性的例子，反映个人最佳选择并非团体最佳选择。囚徒困境最早由美国普林斯顿大学数学家阿尔伯特·塔克（Albert tucker）1950年提出。他当时编了一个故事向斯坦福大学的一群心理学家们解释什么是博弈论，这个故事后来成为博弈论中最著名的案例。故事内容是：两个嫌疑犯(A和B)作案后被警察抓住，隔离审讯；警方的政策是“坦白从宽，抗拒从严”，如果两人都坦白则各判 8 年；如果一人坦白另一人不坦白，坦白的放出去，不坦白的判 10 年；如果都不坦白则因证据不足各判 1 年。</p><p>囚徒困境的主旨为，虽然囚徒们彼此合作，坚不吐实，可为全体带来最佳利益，但在资讯不明的情况下，因为出卖同伙可为自己带来利益（缩短刑期），也因为同伙把自己招出来可为他带来利益，因此彼此出卖虽违反最佳共同利益，反而是自己最大利益所在。</p><p>单次发生的囚徒困境，和多次重复的囚徒困境结果不会一样。在重复的囚徒困境中，博弈被反复地进行。因而每个参与者都有机会去“惩罚”另一个参与者前一回合的不合作行为。欺骗的动机可能被受到惩罚的威胁所克服，从而可能导向一个较好的、合作的结果。这时，合作可能会作为均衡的结果出现，称之为<a href="https://wiki.mbalib.com/wiki/%E7%BA%B3%E4%BB%80%E5%9D%87%E8%A1%A1">纳什均衡 (Nash Equilibrium)</a>。作为反复接近无限的数量，纳什均衡趋向于<a href="https://wiki.mbalib.com/wiki/%E5%B8%95%E7%B4%AF%E6%89%98%E6%9C%80%E4%BC%98">帕累托最优</a>。</p><p>由囚徒困境可以想到类似的韭菜困境：大跌时，韭菜无法信任其它韭菜，纷纷割肉快跑。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;郁金香泡沫-Tulip-Bubble&quot;&gt;郁金香泡沫 (Tulip Bubble)&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://wiki.mbalib.com/wiki/%E9%83%81%E9%87%91%E9%A6%99%E6%B3%A1%E6%B2%AB</summary>
      
    
    
    
    <category term="宇督观" scheme="https://blog.umu618.com/categories/%E5%AE%87%E7%9D%A3%E8%A7%82/"/>
    
    
    <category term="金融" scheme="https://blog.umu618.com/tags/%E9%87%91%E8%9E%8D/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神前传【2】</title>
    <link href="https://blog.umu618.com/2019/08/26/god-of-debug-prequel-2/"/>
    <id>https://blog.umu618.com/2019/08/26/god-of-debug-prequel-2/</id>
    <published>2019-08-26T15:50:21.000Z</published>
    <updated>2023-08-05T13:01:26.998Z</updated>
    
    <content type="html"><![CDATA[<h2 id="AVILab-仲裁委员会">AVILab 仲裁委员会</h2><p>齐凤卿的宠物暹罗猫咬伤周老师喉咙，但由于换脑及时，周老师只是神志不清一段时间，并损失一部分记忆，定罪齐凤卿故意唆使杀人未遂，判处有期徒刑十年。</p><p>圣小开：“劣者建议改为冰冻十年。齐先生是有用之才，关十年不死也残废，不如冰起来，十年后还能用。”</p><p>孙朝穆：“有道理，我正在研究这个技术。以往的技术都无法保证人能活着，没死都给冰死，实乃以科学研究为借口的杀人利器。”</p><p>齐凤卿：“两位师弟是公报私仇，打算玩死我吗？大家可别听他们。”</p><p>委员会 23 名成员，周老师还在监护中，薛雾霰缺席，齐凤卿自己是犯人，还剩 20 名可以投票，只要 11 票就可以判决。</p><p>投完票正好是 10 票冰冻，10 票关监狱。</p><p>齐凤卿：“我投自己无罪释放。你们这些 NPC，知道我的功劳吗？我是为了大家的未来！”</p><p>代理主席贾力劣：“对不起，你已经被取消投票权。”</p><p>齐凤卿：“圣小开同学就赞同我的做法，你们是不是连他一起判刑？”</p><p>圣小开：“喝喝喝，劣者啥都没干，假装赞同你，是为了分散你的注意，别当真了！”</p><p>齐凤卿：“别装了，刘佾可以作证，而且我的做法确实对各位是有利的，你们别装圣人。周老师的喉咙是宠物咬的，你们假设这是我指示，没有科学取证，属于非法执法！”</p><p>刘佾：“圣小开在识界里确实说过他赞同凤卿的做法，他还故意不放大招阻止凤卿。”</p><p>圣小开：“咳，姐，你不知道他偷了周老师的特权吗？加上他自己的特权，谁打得赢他？你自己不要命，别拉劣者一起死呀！”</p><p>陈立姻：“我作证，圣小开胆小如鼠，他只是怕做无谓的牺牲。而且他做事经常犹豫不决，量子力学，大家都知道的。麻烦回到主题。”</p><p>月球上的薛雾霰远程进入会议。大家纷纷欢迎首席科学家老薛。其实他年轻得很……换脑手术之后去月球研究氦-3能源。</p><p>薛雾霰：“我刚和周老师通过话，他还很虚弱不方便亲临，让我问一下大家，记得世界是怎么突变成现在这样的吗？”</p><p>奇怪！居然没人记得……</p><blockquote><p>灭霸：我不当背锅侠！</p></blockquote><p>“没错，几乎没人知道。周老师和我的看法一致，我们这个世界并非顶层世界，外面很可能还有一层更高级的文明，甚至更多层，他们创造我们这个世界。当年，他们中的某些人也无视规则，进入我们的世界摧毁大部分生灵。大家发挥一下同理心，外面的高级文明如果不惩罚他们中乱来搞破坏的人，那我们的世界将毁灭至何等地步？我们怎么能放任同样的人，存在于你我之中？”</p><p>镜头切换，有这样的老头，再切换，有那样的老太婆……各个感动得老泪纵横。</p><blockquote><p>这就是为什么本剧主角经常进入识界。现实中是老头，进入识界后是年轻的帅哥，何乐而不为呢！本剧以后是要拍成电影的，老是播放老人世界，观众们也不爱看嘛！</p></blockquote><p>刘佾：“首席大人，你说得对。那是不是连圣小开一起关几年？杜绝他邪恶的想法！”</p><blockquote><p>识界里的刘佾是本剧最性感的女角。</p></blockquote><p>圣小开：“姐，您还真不放过小弟，给你跪了行不行？当时大伙准备派人进识界救场时，劣者就说了难当此大任，你们非要说劣者街霸打得好，还给劣者特权安慰，结果经劣者分析还是打不赢，劣者怀疑……咳咳。齐总的特权实在吓人，认输还要坐牢吗？赤果果的陷害！”</p><p>圣小开心想：肯定有人给劣者下套。</p><p>薛雾霰：“周老师说识界必须修复，这个任务就交给开哥吧！霰人去也。”</p><p>圣小开：“喂，识界代码还有人看得懂吗？你们这些死产品经理，一句话玩死一批程序员！”</p><p>薛雾霰又冒出来：“我不只是产品经理，还是领导！霰人再去也。”</p><p>贾力劣：“心灵生化武器的传染和起作用都很慢，我们还有时间。必要时，我们可以减慢识界时间流速。”</p><p>圣小开：“那劣者先去睡了？”</p><p>陈立姻：“五年内意识上传系统会开发完善，你到时候进去感染一下心灵生化武器，自己体会怎么破解吧！”</p><p>圣小开：“感染死掉怎么办？”</p><p>陈立姻：“嘿，你不是号称一生受过无数劫苦难，现在都没死，小小心灵病毒怎么斗得过你？”</p><p>圣小开：“说得好有道理，你们慢点开发，让劣者多活几年！”</p><p>孙朝穆：“开哥，放心！我多请几天假就行，diang~”</p><p>齐凤卿：“你们瞎扯完了没？让我清静清静。”随即内牛满面地认错，“我选择关监狱，能打个折吗？”</p><p>贾力劣：“关八年。”</p><h2 id="监护室">监护室</h2><p>周易穿越时间从梦中吓醒：“立姻、朝穆，为了应对未来潜在风险，你们去制造一些基因改良人，他们必须有强大的生育能力和意愿。”</p><blockquote><p>有读者问：周易是谁？</p><p>答：作者打算请周星驰来演。他老人家出场费很贵，所以是主角里出场频率比较低的。</p></blockquote><p>孙朝穆：“老师，这是为何？”</p><p>周易：“保存记忆同时也会保留心灵上的痛苦，将来会有需要不保留记忆转世，但现在的自然人生育能力都有问题，而且也不愿意生育。”</p><blockquote><p>这是一个<strong>没有爱情的时代</strong>。</p><p>人类发明了长生术——换脑，还即将发明永生术——意识上传。所以生殖失去意义。大部分人都没有生殖意愿，有的连爱都不做。</p><p>自然人都上了年纪，生育能力肯定是没有的啦，这辈子都不会再有……</p><p>克隆体换脑人的性方面没有发育，是由于其是基因工程设计出来的无脑身体，由外部设备催化生长。大脑才是最大的性腺，而脑都是老脑。</p><p>有读者问：为什么不注入性激素呢？</p><p>答：您知道养猪吧！公猪、母猪都要阉割的，不阉割不好养呀！而且会有骚味。嗯，这就是为什么太后们喜欢太监，阉割后真的会比较香哦，不然为什么有这么多“臭男人骚女人”？</p><p>早期 AVILab 有尝试过注入性激素，结果这些脑残的身体竟不由自主地进行某些操作，实在不好kan管ru理mu。</p></blockquote><p>陈立姻：“但是这些改良人类的社会地位可能很尴尬，和现在主流的造躯体换脑大大不同，他们是被创造的新生，这在以前就被禁止。”</p><p>周易：“现在的社会阶级太单一，长久运行后所有人都会变成老妖怪，迟早会出八哥。老师现在丢失一部分记忆，从身体和精神上都年轻许多，这种感觉，你们迟早会理解的。委员会讨论吧，讨论过就制定计划给我过目。”</p><blockquote><p>遗忘一时爽，一直遗忘一直爽。</p></blockquote><p>孙朝穆：“老师，我记得当年老薛换脑的新身体是有生育能力的。”</p><p>陈立姻：“是呀，他的女助手王兔兔也有，现在他们俩都在月球上，不会是私奔生孩子去了吧！”</p><p>周易：“他们如果愿意生育是可以的。为了人类的发展，有些尝试还是要的。”</p><p>孙朝穆、孙朝穆纷纷表示恍然大悟：“原来如此……首席辛苦了！”</p><blockquote><p>生孩子一时爽，不生更爽，一直不生一直更爽。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;AVILab-仲裁委员会&quot;&gt;AVILab 仲裁委员会&lt;/h2&gt;
&lt;p&gt;齐凤卿的宠物暹罗猫咬伤周老师喉咙，但由于换脑及时，周老师只是神志不清一段时间，并损失一部分记忆，定罪齐凤卿故意唆使杀人未遂，判处有期徒刑十年。&lt;/p&gt;
&lt;p&gt;圣小开：“劣者建议改为冰冻十年。齐先</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="量子邪稣" scheme="https://blog.umu618.com/tags/%E9%87%8F%E5%AD%90%E9%82%AA%E7%A8%A3/"/>
    
  </entry>
  
  <entry>
    <title>ECC Node.js</title>
    <link href="https://blog.umu618.com/2019/08/16/umutech-ecc-nodejs/"/>
    <id>https://blog.umu618.com/2019/08/16/umutech-ecc-nodejs/</id>
    <published>2019-08-16T12:28:45.000Z</published>
    <updated>2023-08-05T13:01:26.998Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前情">前情</h2><p>上篇《<a href="/2019/08/15/umutech-eosio-private-key-to-public-key/">基于 ECC 的私钥转为公钥的过程</a>》讲到求椭圆曲线上的点时，用的是基于 Python 的 <a href="https://sagecell.sagemath.org/">SAGE</a>。为了方便 Node.js 程序员理解和实现完整流程代码，本篇用 Node.js 库实现椭圆曲线点的计算。</p><h2 id="用-Node-js-求椭圆曲线的点">用 Node.js 求椭圆曲线的点</h2><p>库的选型考虑 <a href="https://github.com/EOSIO/eosjs">eosjs</a> 用的 <a href="https://github.com/cryptocoinjs/ecurve">ecurve</a> 和 <a href="https://github.com/indutny/elliptic">elliptic</a>。</p><h3 id="1-ecurve">1. ecurve</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> ecurve = <span class="built_in">require</span>(<span class="string">&#x27;ecurve&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> BigInteger = <span class="built_in">require</span>(<span class="string">&#x27;bigi&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> k1 = ecurve.getCurveByName(<span class="string">&#x27;secp256k1&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> pk = BigInteger.fromHex(<span class="string">&#x27;d2653ff7cbb2d8ff129ac27ef5781ce68b2558c41a74af1f2ddca635cbeef07d&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> pub = k1.G.multiply(pk)</span><br><span class="line">pub.affineX.toHex()</span><br><span class="line">pub.affineY.isEven()</span><br></pre></td></tr></table></figure><p>得到 x 值为 <code>c0ded2bc1f1305fb0faac5e6c03ee3a1924234985427b6167ca569d13df435cf</code>，y 为偶数，和 <a href="https://sagecell.sagemath.org/">SAGE</a> 计算结果一样。</p><h3 id="2-elliptic">2. elliptic</h3><p>流程基本一样，所以这里给出完整转换代码。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author </span>UMU618 &lt;umu618<span class="doctag">@hotmail</span>.com&gt;</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@copyright </span>MEET.ONE 2019</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description </span>Use block-always-using-brace npm-coding-style.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&#x27;use strict&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> bsc = <span class="built_in">require</span>(<span class="string">&#x27;bs58check&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> ripemd160 = <span class="built_in">require</span>(<span class="string">&#x27;ripemd160&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> bs = <span class="built_in">require</span>(<span class="string">&#x27;bs58&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> elliptic = <span class="built_in">require</span>(<span class="string">&#x27;elliptic&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> BN = <span class="built_in">require</span>(<span class="string">&#x27;bn.js&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">encodePublicKey</span>(<span class="params">payload</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> checksum = <span class="keyword">new</span> ripemd160().update(payload).digest()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> bs.encode(Buffer.concat([</span><br><span class="line">    payload,</span><br><span class="line">    checksum.slice(<span class="number">0</span>, <span class="number">4</span>)</span><br><span class="line">  ]))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">privateKeyToPublicKey</span>(<span class="params">privateKey</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> buf = bsc.decode(privateKey)</span><br><span class="line">  <span class="keyword">if</span> (<span class="number">0x80</span> !== buf[<span class="number">0</span>]) &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&#x27;Not a private key.&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> k1 = elliptic.curves.secp256k1</span><br><span class="line">  <span class="keyword">const</span> pvt = <span class="keyword">new</span> BN(buf.slice(<span class="number">1</span>), <span class="string">&#x27;be&#x27;</span>)</span><br><span class="line">  <span class="keyword">const</span> pub = k1.g.mul(pvt)</span><br><span class="line">  <span class="keyword">const</span> y = pub.getY().isEven() ? <span class="number">2</span> : <span class="number">3</span></span><br><span class="line">  <span class="keyword">return</span> <span class="string">&#x27;EOS&#x27;</span> + encodePublicKey(Buffer.from([y].concat(pub.getX().toArray())))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> privateKey = <span class="string">&#x27;5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3&#x27;</span></span><br><span class="line"><span class="keyword">const</span> publicKey = privateKeyToPublicKey(privateKey)</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(privateKey)</span><br><span class="line"><span class="built_in">console</span>.log(publicKey)</span><br></pre></td></tr></table></figure><h3 id="3-对比">3. 对比</h3><p>elliptic 比较好用，比较快。</p><h2 id="代码">代码</h2><p><a href="https://github.com/UMU618/secp256k1-tools">https://github.com/UMU618/secp256k1-tools</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前情&quot;&gt;前情&lt;/h2&gt;
&lt;p&gt;上篇《&lt;a href=&quot;/2019/08/15/umutech-eosio-private-key-to-public-key/&quot;&gt;基于 ECC 的私钥转为公钥的过程&lt;/a&gt;》讲到求椭圆曲线上的点时，用的是基于 Python 的 &lt;a</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="blockchain" scheme="https://blog.umu618.com/tags/blockchain/"/>
    
    <category term="nodejs" scheme="https://blog.umu618.com/tags/nodejs/"/>
    
    <category term="cryptology" scheme="https://blog.umu618.com/tags/cryptology/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·翔胺睡道</title>
    <link href="https://blog.umu618.com/2019/08/16/reconstructionism-poet-tunnel/"/>
    <id>https://blog.umu618.com/2019/08/16/reconstructionism-poet-tunnel/</id>
    <published>2019-08-16T02:00:57.000Z</published>
    <updated>2023-08-05T13:01:26.998Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·翔胺睡道》：洞前七个东，洞内一刻钟。多少路怒症，车上练气功。</p><h2 id="注解">注解</h2><p>洞：翔安隧道<br>东：两分钟</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·翔胺睡道》：洞前七个东，洞内一刻钟。多少路怒症，车上练气功。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;洞：翔安隧道&lt;br&gt;
东：两分钟&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
  </entry>
  
  <entry>
    <title>基于 ECC 的私钥转为公钥的过程</title>
    <link href="https://blog.umu618.com/2019/08/15/umutech-eosio-private-key-to-public-key/"/>
    <id>https://blog.umu618.com/2019/08/15/umutech-eosio-private-key-to-public-key/</id>
    <published>2019-08-15T12:53:45.000Z</published>
    <updated>2023-08-05T13:01:26.998Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基本知识">基本知识</h2><p>ECC 体系中，私钥是一个大型随机数，而公钥则是私钥乘以椭圆曲线上的基点后对应的点。</p><p><a href="https://github.com/meet-one">meet-one</a>/<a href="https://github.com/meet-one/private-to-public">private-to-public</a> 是 MEET.ONE 开发的私钥转公钥工具。</p><p>EOS 支持的 EC 有两种：secp256k1（以下简称 k1）、secp256r1，下面以 k1 为例，结合 Node.js 和 Python 代码介绍转换过程。</p><h2 id="涉及算法">涉及算法</h2><ul><li><strong>BASE58</strong>：编解码私钥、公钥。</li><li><strong>SHA-256</strong>：校验私钥，本文忽略此步。</li><li><strong>ECC, secp256k1</strong>：计算公钥。</li><li><strong>RIPEMD-160</strong>：校验公钥。</li></ul><h2 id="转换过程">转换过程</h2><h3 id="1-解码私钥">1. 解码私钥</h3><p>假设私钥为：<code>5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3</code>，这是 base58 编码，用 bs58 库解码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> bs = <span class="built_in">require</span>(<span class="string">&#x27;bs58&#x27;</span>)</span><br><span class="line"></span><br><span class="line">bs.decode(<span class="string">&#x27;5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3&#x27;</span>)</span><br></pre></td></tr></table></figure><p>得到 <code>&lt;Buffer 80 d2 65 3f f7 cb b2 d8 ff 12 9a c2 7e f5 78 1c e6 8b 25 58 c4 1a 74 af 1f 2d dc a6 35 cb ee f0 7d aa 08 64 4a&gt;</code>，其中第 1 个字节 <code>0x80</code> 是类型，末尾的 4 字节是校验码。</p><p>这里我们不关心校验码，也可以直接用 <code>bs58check</code> 解码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> bsc = <span class="built_in">require</span>(<span class="string">&#x27;bs58check&#x27;</span>)</span><br><span class="line"></span><br><span class="line">bsc.decode(<span class="string">&#x27;5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3&#x27;</span>)</span><br></pre></td></tr></table></figure><p>得到 <code>&lt;Buffer 80 d2 65 3f f7 cb b2 d8 ff 12 9a c2 7e f5 78 1c e6 8b 25 58 c4 1a 74 af 1f 2d dc a6 35 cb ee f0 7d&gt;</code>，去掉首字节后为：</p><p><code>d2 65 3f f7 cb b2 d8 ff 12 9a c2 7e f5 78 1c e6 8b 25 58 c4 1a 74 af 1f 2d dc a6 35 cb ee f0 7d</code></p><p>这是 256bit 整数的 Big endian 字节流表示，转为 16 进制整形为 <code>0xd2653ff7cbb2d8ff129ac27ef5781ce68b2558c41a74af1f2ddca635cbeef07d</code>，记为 <code>pk</code>。</p><h3 id="2-构造椭圆曲线，求公钥的坐标">2. 构造椭圆曲线，求公钥的坐标</h3><p>根据 <a href="http://secg.org/">SECG</a> 规定的 k1 的参数，我们用基于 Python 的 <a href="https://sagecell.sagemath.org/">SAGE</a> 构造 k1 对应的椭圆曲线，然后计算 <code>pk * G</code>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">0</span></span><br><span class="line">b = <span class="number">7</span></span><br><span class="line">p = <span class="number">0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f</span></span><br><span class="line">Gx = <span class="number">0x79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798</span></span><br><span class="line">Gy = <span class="number">0x483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8</span></span><br><span class="line">E = EllipticCurve (GF(p), [a, b])</span><br><span class="line">pk = <span class="number">0xd2653ff7cbb2d8ff129ac27ef5781ce68b2558c41a74af1f2ddca635cbeef07d</span></span><br><span class="line">G = E(Gx, Gy)</span><br><span class="line">pk * G</span><br></pre></td></tr></table></figure><p>结果为：<code>(87237761414843254130560834629777710286905276524352264071298714336416392033743 : 108016191455113306196371645921919775466659772908675410052799661524790827329728 : 1)</code></p><p><strong>注：这里的 (x : y : z) 是射影坐标，一般采用笛卡尔坐标系表示，为 (x/z, y/z)。</strong></p><h3 id="3-编码公钥">3. 编码公钥</h3><p>取 x 值：<code>87237761414843254130560834629777710286905276524352264071298714336416392033743</code></p><p>16 进制为：<code>0xc0ded2bc1f1305fb0faac5e6c03ee3a1924234985427b6167ca569d13df435cf</code></p><p>Big endian 字节流表示为：<code>[0xc0, 0xde, 0xd2, 0xbc, 0x1f, 0x13, 0x05, 0xfb, 0x0f, 0xaa, 0xc5, 0xe6, 0xc0, 0x3e, 0xe3, 0xa1, 0x92, 0x42, 0x34, 0x98, 0x54, 0x27, 0xb6, 0x16, 0x7c, 0xa5, 0x69, 0xd1, 0x3d, 0xf4, 0x35, 0xcf]</code></p><p>由于 y 值是偶数，所以添加一个前缀 2，得到：<code>[2, 0xc0, 0xde, 0xd2, 0xbc, 0x1f, 0x13, 0x05, 0xfb, 0x0f, 0xaa, 0xc5, 0xe6, 0xc0, 0x3e, 0xe3, 0xa1, 0x92, 0x42, 0x34, 0x98, 0x54, 0x27, 0xb6, 0x16, 0x7c, 0xa5, 0x69, 0xd1, 0x3d, 0xf4, 0x35, 0xcf]</code></p><p><strong>注：若 y 为奇数，则前缀为 3。</strong></p><p><strong>注：为什么这么规定？只用 x 值和 y 值的奇偶性表示一个点，这叫公钥的压缩格式。因为只要有 x，就可以通过 k1 的椭圆曲线方程式 $y^2 = x^3 + 7 \mod p$ 求出 y，但此时 y 会有两个解，又由于 p 是一个大质数，必定为奇数，故两个 y 解的和 mod p 一定等于 0，即一奇一偶，所以用 x 和 y 的奇偶性标志即可代表这个点。</strong></p><p>接着求校验码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> ripemd160 = <span class="built_in">require</span>(<span class="string">&#x27;ripemd160&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> ripemd160().update(Buffer.from([<span class="number">2</span>, <span class="number">0xc0</span>, <span class="number">0xde</span>, <span class="number">0xd2</span>, <span class="number">0xbc</span>, <span class="number">0x1f</span>, <span class="number">0x13</span>, <span class="number">0x05</span>, <span class="number">0xfb</span>, <span class="number">0x0f</span>, <span class="number">0xaa</span>, <span class="number">0xc5</span>, <span class="number">0xe6</span>, <span class="number">0xc0</span>, <span class="number">0x3e</span>, <span class="number">0xe3</span>, <span class="number">0xa1</span>, <span class="number">0x92</span>, <span class="number">0x42</span>, <span class="number">0x34</span>, <span class="number">0x98</span>, <span class="number">0x54</span>, <span class="number">0x27</span>, <span class="number">0xb6</span>, <span class="number">0x16</span>, <span class="number">0x7c</span>, <span class="number">0xa5</span>, <span class="number">0x69</span>, <span class="number">0xd1</span>, <span class="number">0x3d</span>, <span class="number">0xf4</span>, <span class="number">0x35</span>, <span class="number">0xcf</span>])).digest()</span><br></pre></td></tr></table></figure><p>得到：<code>&lt;Buffer eb 05 f9 d2 c6 dd 62 f7 f2 a0 f7 61 ea 1d 8c 0b 84 4a 3b 52&gt;</code>，取前 4 字节，添加到末尾，得到：<code>[2, 0xc0, 0xde, 0xd2, 0xbc, 0x1f, 0x13, 0x05, 0xfb, 0x0f, 0xaa, 0xc5, 0xe6, 0xc0, 0x3e, 0xe3, 0xa1, 0x92, 0x42, 0x34, 0x98, 0x54, 0x27, 0xb6, 0x16, 0x7c, 0xa5, 0x69, 0xd1, 0x3d, 0xf4, 0x35, 0xcf, 0xeb, 0x05, 0xf9, 0xd2]</code></p><p>然后，base58 编码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> bs = <span class="built_in">require</span>(<span class="string">&#x27;bs58&#x27;</span>)</span><br><span class="line"></span><br><span class="line">bs.encode(Buffer.from([<span class="number">2</span>, <span class="number">0xc0</span>, <span class="number">0xde</span>, <span class="number">0xd2</span>, <span class="number">0xbc</span>, <span class="number">0x1f</span>, <span class="number">0x13</span>, <span class="number">0x05</span>, <span class="number">0xfb</span>, <span class="number">0x0f</span>, <span class="number">0xaa</span>, <span class="number">0xc5</span>, <span class="number">0xe6</span>, <span class="number">0xc0</span>, <span class="number">0x3e</span>, <span class="number">0xe3</span>, <span class="number">0xa1</span>, <span class="number">0x92</span>, <span class="number">0x42</span>, <span class="number">0x34</span>, <span class="number">0x98</span>, <span class="number">0x54</span>, <span class="number">0x27</span>, <span class="number">0xb6</span>, <span class="number">0x16</span>, <span class="number">0x7c</span>, <span class="number">0xa5</span>, <span class="number">0x69</span>, <span class="number">0xd1</span>, <span class="number">0x3d</span>, <span class="number">0xf4</span>, <span class="number">0x35</span>, <span class="number">0xcf</span>, <span class="number">0xeb</span>, <span class="number">0x05</span>, <span class="number">0xf9</span>, <span class="number">0xd2</span>]))</span><br></pre></td></tr></table></figure><p>得到：<code>6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV</code>，加上前缀 <code>EOS</code>，即为公钥。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;基本知识&quot;&gt;基本知识&lt;/h2&gt;
&lt;p&gt;ECC 体系中，私钥是一个大型随机数，而公钥则是私钥乘以椭圆曲线上的基点后对应的点。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/meet-one&quot;&gt;meet-one&lt;/a&gt;/&lt;a href=&quot;htt</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="blockchain" scheme="https://blog.umu618.com/tags/blockchain/"/>
    
    <category term="nodejs" scheme="https://blog.umu618.com/tags/nodejs/"/>
    
    <category term="cryptology" scheme="https://blog.umu618.com/tags/cryptology/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·吃巧克力减肥</title>
    <link href="https://blog.umu618.com/2019/08/14/reconstructionism-poet-lose-weight-by-eating-chocolates/"/>
    <id>https://blog.umu618.com/2019/08/14/reconstructionism-poet-lose-weight-by-eating-chocolates/</id>
    <published>2019-08-14T11:53:25.000Z</published>
    <updated>2023-08-05T13:01:26.998Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·吃巧克力减肥》：独爱椭圆机，散步在原地。饭后十五东，再吃巧克力。</p><h2 id="注解">注解</h2><p>东：两分钟</p><p>吃巧克力真的可以减肥！具体做法：只吃巧克力。快饿晕时吃一点，决不能多。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·吃巧克力减肥》：独爱椭圆机，散步在原地。饭后十五东，再吃巧克力。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;东：两分钟&lt;/p&gt;
&lt;p&gt;吃巧克力真的可以减肥！具体做法：只吃巧克力。快饿晕时吃一点，决不能多。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="怪悟" scheme="https://blog.umu618.com/tags/%E6%80%AA%E6%82%9F/"/>
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·梦神</title>
    <link href="https://blog.umu618.com/2019/08/09/reconstructionism-poet-dreaming-of-god/"/>
    <id>https://blog.umu618.com/2019/08/09/reconstructionism-poet-dreaming-of-god/</id>
    <published>2019-08-09T05:54:11.000Z</published>
    <updated>2023-08-05T13:01:26.998Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·梦神》：浮生不与红尘谋，梦变鲲鹏立云洲。黑白无常一吓醒，生死轮回两宇宙。</p><h2 id="注解">注解</h2><p>今日高温，午睡时突然忆起前几天的怪梦。平时不关心红尘凡事，日子平淡无奇，但梦境却实在很神奇，仿佛另一个世界。</p><p>自己漂浮在云层里，看到鲲鹏的翅膀在摇动，感觉还挺萌的，然后却发现翅膀是从自己身上长出去的……原来自己就是那只鲲鹏！</p><p>龙卷风把海水吸到云层里，看起来很像鲲化鹏，这两种形态的转化很快，梦的转变也很快，黑色的梦境，吓醒后是白天，我又从鲲鹏变回自己，就像穿梭在两个平行宇宙。</p><p>前两句改编自霹雳角色“道锋天扇子”出场诗：</p><blockquote><p>浮生寄墟丘，不与红尘谋，身披烟波立云舟。<br>一扇擎青穹，飘洒翳孤踪，梦变鲲鹏振长空。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·梦神》：浮生不与红尘谋，梦变鲲鹏立云洲。黑白无常一吓醒，生死轮回两宇宙。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;今日高温，午睡时突然忆起前几天的怪梦。平时不关心红尘凡事，日子平淡无奇，但梦境却实在很神奇，仿佛另一个世界。&lt;/p&gt;
&lt;p&gt;自己漂浮在</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·无欲则刚</title>
    <link href="https://blog.umu618.com/2019/08/09/reconstructionism-poet-firm-without-desire/"/>
    <id>https://blog.umu618.com/2019/08/09/reconstructionism-poet-firm-without-desire/</id>
    <published>2019-08-08T17:15:00.000Z</published>
    <updated>2023-08-05T13:01:26.998Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·无欲则刚》：平生默默心如冰，含情一待苦似病。暝色高楼晚回愁，百万豪车无处停。</p><h2 id="注解">注解</h2><p>平时淡然处世，心思平静，一旦动情就会得相思病，这都是因为有不切实际的欲望。</p><p>夜色已晚，开着百万豪车回家，因为楼太高，地下车位不够用，太晚回都找不到车位，如果是乐射车就放心随便停路边了，所以说——有点钱又不够有钱，是最难受的。</p><p>总之，还是没心没肺才能过得好！（我宁愿有钱、有心、有肺……）</p><p>改编自唐代诗人李白的《菩萨蛮·闺情》：</p><blockquote><p>平林漠漠烟如织，寒山一带伤心碧。<br>暝色入高楼，有人楼上愁。<br>玉阶空伫立，宿鸟归飞急。<br>何处是归程？长亭更短亭。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·无欲则刚》：平生默默心如冰，含情一待苦似病。暝色高楼晚回愁，百万豪车无处停。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;平时淡然处世，心思平静，一旦动情就会得相思病，这都是因为有不切实际的欲望。&lt;/p&gt;
&lt;p&gt;夜色已晚，开着百万豪车回家，因为楼太高，</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="心理邪稣" scheme="https://blog.umu618.com/tags/%E5%BF%83%E7%90%86%E9%82%AA%E7%A8%A3/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神前传【1】</title>
    <link href="https://blog.umu618.com/2019/08/05/god-of-debug-prequel-1/"/>
    <id>https://blog.umu618.com/2019/08/05/god-of-debug-prequel-1/</id>
    <published>2019-08-04T17:00:01.000Z</published>
    <updated>2023-08-05T13:01:26.998Z</updated>
    
    <content type="html"><![CDATA[<h2 id="2042-年，AVILab">2042 年，AVILab</h2><p>一日晚，齐凤卿带着宠物找周老师释疑。</p><p>“周老师，委员会一旦把识界系统超级控制权限拆分管理，必将阻碍科研效率。”</p><p>“凤卿，识界硬件和软件层面已经很完善，现在需要让它自由发展，我们后期侧重点应该放在接入系统。”</p><p>“这就是我想说的，等我们接入系统也完善后，人人都可以把意识上传到识界里生活，到时候识界内部的社会形态如果与现在的科学主义社会不同，我们如何更好地去改善呢？识界可是比当今世界更复杂。”</p><p>“你想使用特权改变识界？”</p><p>“没错，我们现在生活的地下城比起识界里的自然环境差太多，而且如果情况继续恶化，独立可控核聚变供电的识界才是人类最佳归处。我希望在识界里，我们还有特权，才能不受各种潜在危害，安心做科研。”</p><p>“这事情先不用操心，接入技术需要五、六年才会成熟，还早呢！老师 95 岁的人都不担心，你担心啥？”</p><p>“我担心的是委员会成员多数不希望我们在识界里扮演神灵，到时候我们和识界自然演绎出来的人类没有任何差别，岂不是像被关进监狱？”</p><p>“哈哈哈，你师弟不是经常说在这里像坐牢？这个宇宙，哪里不是牢笼？”</p><p>“是啊，可是那家伙明明有和我一样的担忧，却投票支持不保留特权！”</p><p>“他和薛雾霰曾经把时间停止，你知道吗？”</p><p>“识界吗？这不是很正常的？”</p><p>“不是，是现实世界。”</p><p>“嗯？时间停止，我们的观察、思考也都停止，怎么发现到底停止没？”</p><p>“时间停止时，只有引力波还在起作用。”</p><p>“饶了我吧，这不是我研究的领域。我还是关心识界以后的管理问题。”</p><p>“以后就自治吧，我们不应该干预自然规则，就像在现实世界，我们只能利用自然规则，部分改造我们的生存环境，而不能违逆规则。”</p><p>“既然如此，我认为应该减少识界里的人类，让其更像我们现在的人口状况。”</p><p>“你想干什么？”</p><p>“我之前一直在识界里培养我的信徒和菌队，是时候来一场识界大战了。”</p><h2 id="医院">医院</h2><p>周易被猫科动物咬伤濒死。陈立姻和孙朝穆为周易做换脑手术。</p><blockquote><p>试玉要烧三日满，辨材须待七年期。向使当初身便死，一生真伪复谁知。</p></blockquote><h2 id="识界">识界</h2><p>这个世界为游戏而生，现实的开发者为创造真实的场景，曾经用特权给识界某些公司输送资源，从而构造了强大的菌事基地。又用特权控制和改造某些关键人物的思想，达到统治的目的。</p><p>齐凤卿用自己的基因在识界克隆了一个替身，但替身并没有他的意识，无法与他心灵相通，这让他一直努力推动意识复制技术。</p><p>齐凤卿抢夺周易的特权，远离 AVILab，在神秘人物薛雾霰家的游戏机，通过特权进入识界。</p><blockquote><p>薛雾霰：雾草，开哥你这是什么安排？本霰人上天探索，别墅交你们打理，怎么被用来搞黑客入侵了？？</p></blockquote><blockquote><p>圣小开：因为你是量子领域的专家，住所隐秘，适合干坏事。放心！保证完好无缺。</p></blockquote><p>识界正上演消灭脑残玩家的大战。齐凤卿教唆现实中几名游戏玩家开启上帝视角协助识界中的齐家菌疯狂杀戮识界生灵。</p><h2 id="救世主出场">救世主出场</h2><p>耶乎知稣、心理邪稣、量子邪稣和刘佾，三人牛逼轰轰地降临，开始反杀齐家菌。</p><p>很快齐凤卿发现异常，打死耶乎知稣，心理邪稣定位到齐凤卿，猛力攻击。</p><p>齐凤卿化身为魔凤，一口吃掉心理邪稣。</p><blockquote><p>魔凤是金色的，不要以为是黑色……</p></blockquote><p>心理邪稣的遗言：“稣有个秘密要告诉你！你大学时的女朋友……”。</p><p>地面自动升起一块墓碑，刻着：圣小开之墓。</p><p>量子邪稣一看心惊胆战，内牛满面，再观天上的魔凤变幻出多种怪异形状，赶紧对刘佾说：“不妙，快跑路！”</p><p>刘佾：“跑？怎么能见死不救？”</p><p>量子邪稣：“自己都快被打死了，还救别人？”</p><p>刘佾：“没事，我们被打死还能回现实，重新选择角色，再进来。但是这里生灵涂炭，于心何忍？为苍生拼了！”</p><p>量子邪稣：“别傻了，咱们再来几次也打不赢他，被打死的不一样是识界里的人？”</p><p>刘佾：“我也开外挂，不信打不赢！”</p><p>刘佾化身八翼应龙，大战魔凤，依然不敌被拍落地面。</p><p>量子邪稣：“稣就说打不赢吧！你没发现那只魔凤是四维的吗？他现在可以轻而易举地捏碎稣的蛋，而且不伤蛋壳。咱们打不过他的。”</p><blockquote><p>识界设计时，使用四维坐标系，只有特权程序可以把第四维设置为非零。</p></blockquote><p>刘佾：“你现在才说……咱们现在没有蛋！还有，你为什么不放大招？”</p><p>量子邪稣：“这不是没证据吗？你又不听稣的！大招也不一定能赢。赶紧投降，和他讲交情，稣继续隐藏在量子领域，不被观测。”</p><p>刘佾：“讲交情有用？”</p><p>量子邪稣：“你们读研时不是男女朋友吗？马上投降，赞同他的理念先！”</p><p>刘佾：“臣妾做不到呀！”</p><p>量子邪稣：“你这个，圣，咳，母婊！稣来！藏在你身上就是为了飙演技……”</p><p>刘佾：“臭师弟，你骂谁呢！”</p><p>量子邪佾：“哥，我投降，你是对的，这些傻逼应该消灭！”</p><p>魔凤：“圣小开还有好几个分身在哪里？别以为我不知道他是精神分裂！让我连入你的意识，把他找出来！”</p><p>量子邪佾：“哥，连我也没用，他又没和我联机。”</p><p>魔凤从第四维靠近量子邪佾：“骗谁呢？我插！”</p><h2 id="意识世界">意识世界</h2><p>量子邪稣：“师兄！”</p><p>齐凤卿：“嗯哼？原来你在这里！领死，还是归降？”</p><p>量子邪稣：“师兄此言差矣！在这里，你根本不是稣的对手！”</p><p>齐凤卿：“但我可以控制物理世界的魔凤，毁灭你的肉身。识界里有特权的角色已所剩无几，最终你们无法阻止我。”</p><p>量子邪稣：“这不是挺好的嘛！稣本来就赞同你的做法，只是这罪名要你担而已，稣轻轻松松躺赢。”</p><p>齐凤卿：“赫赫，你这小子，果然心机深沉，但是好人有这么好当的吗？受死吧！”</p><p>量子邪稣：“等等，稣啥时候说过自己是好人啦？邪稣的邪字放在前面呢！”</p><p>齐凤卿：“装模作样！消失吧！”</p><p>刘佾：“喂喂，不要把我一起打死啊……你们又没有必然的矛盾，为啥不合作？”</p><p>量子邪稣：“就是，你就背个黑锅，假装被稣打死，稣回去让委员会判你几年有期徒刑完事，这不是双赢吗？”</p><p>齐凤卿：“赫赫，鬼算盘打得很精，好事都你占？凭什么我倒霉！”</p><p>刘佾：“哥，你的宠物咬死周老师，这是大罪。还是收手吧！”</p><p>齐凤卿：“确定死了？”</p><p>量子邪稣：“不确定，我们进来时还在抢救，用的是换脑术，取决于脑是否能活下来。你和我们一起出去和平解决，这里的战争，咱们就当一个八哥。”</p><p>齐凤卿：“我已经下令释放心灵生化武器，再打死你们，我就出去！”</p><h2 id="识界物理世界">识界物理世界</h2><p>魔凤将量子邪佾打爆。然而，同一瞬间阎无邪手持冥邪天锋化现，地狱恶灵纷纷缠住魔凤，无邪顺势一剑砍下凤头。</p><p>但是，魔凤的头断并不致命，继续长出其它的头。无邪酱油退场。</p><p>心灵生化武器被释放，开启一场无声无息的众生苦难。整个识界自杀率大大提升……</p><h2 id="现实世界">现实世界</h2><p>然而，在现实世界，齐凤卿不能上天入地，还是被抓起来了。赫赫！</p><p>齐凤卿：“这场游戏打得真爽！”</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;2042-年，AVILab&quot;&gt;2042 年，AVILab&lt;/h2&gt;
&lt;p&gt;一日晚，齐凤卿带着宠物找周老师释疑。&lt;/p&gt;
&lt;p&gt;“周老师，委员会一旦把识界系统超级控制权限拆分管理，必将阻碍科研效率。”&lt;/p&gt;
&lt;p&gt;“凤卿，识界硬件和软件层面已经很完善，现在需要让它</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="量子邪稣" scheme="https://blog.umu618.com/tags/%E9%87%8F%E5%AD%90%E9%82%AA%E7%A8%A3/"/>
    
  </entry>
  
  <entry>
    <title>智能合约替用户承担事务的开销</title>
    <link href="https://blog.umu618.com/2019/08/03/umutech-eosio-contract-pays/"/>
    <id>https://blog.umu618.com/2019/08/03/umutech-eosio-contract-pays/</id>
    <published>2019-08-03T13:51:10.000Z</published>
    <updated>2023-08-05T13:01:26.998Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求">需求</h2><p>用户可能因为资源（NET 和 CPU）匮乏，无法愉快地使用 EOS 智能合约。</p><h2 id="解决思路">解决思路</h2><p>智能合约承担事务的开销（NET 和 CPU）。</p><h2 id="具体方案">具体方案</h2><h3 id="1-ONLY-BILL-FIRST-AUTHORIZER-特性">1. ONLY_BILL_FIRST_AUTHORIZER 特性</h3><p>eos 1.8 的 ONLY_BILL_FIRST_AUTHORIZER 特性，通过只向事务的首个授权方收费的方式，部分地解决这个问题。这一特性允许应用提供者对用户的每一笔事务进行联合签名，通过这一方式从公共池中支付事务的开销。</p><p>缺陷：联合签名操作门槛高，安全性堪忧。</p><h3 id="2-合约调用-accept-charges">2. 合约调用 accept_charges</h3><p><a href="https://github.com/EOSIO/spec-repo/blob/master/esr_contract_pays.md">Contracts Paying Transaction Costs</a> 提出一种无需联合签名的方法（注意：目前还只是提案，尚未实现）。</p><p>关键函数如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">bool accept_charges(</span><br><span class="line">    uint32_t max_net_usage_words,   &#x2F;&#x2F; Maximum NET usage to charge</span><br><span class="line">    uint32_t max_cpu_usage_ms       &#x2F;&#x2F; Maximum CPU usage to charge</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">void get_accept_charges(</span><br><span class="line">    name*     contract,</span><br><span class="line">    uint32_t* max_net_usage_words,</span><br><span class="line">    uint32_t* max_cpu_usage_ms,</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">void get_num_actions(</span><br><span class="line">    uint32_t* num_actions,</span><br><span class="line">    uint32_t* num_context_free_actions,</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>简单地说，在合约调用 <code>accept_charges</code> 函数，如返回 <code>true</code>，则事务的开销将会由合约账户承担。</p><p>具体规则如下：</p><ul><li><p>如果多个合约调用了 <code>accept_charges</code>，则首个调用者会被收取费用。<code>accept_charges</code> 会返回 <code>true</code> 给该合约，而返回 <code>false</code> 值给其他的合约。</p></li><li><p>如果首个合约调用了多次该函数（用于修改限制），无论是在相同的 action 还是不同的多个 action 之中，每次都会返回 true。</p></li></ul><p><strong>关键点讲完了，其余请参考 <a href="https://github.com/EOSIO/spec-repo/blob/master/esr_contract_pays.md">Contracts Paying Transaction Costs</a> 原文或<a href="https://bihu.com/article/1522267629">译文</a>。</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;需求&quot;&gt;需求&lt;/h2&gt;
&lt;p&gt;用户可能因为资源（NET 和 CPU）匮乏，无法愉快地使用 EOS 智能合约。&lt;/p&gt;
&lt;h2 id=&quot;解决思路&quot;&gt;解决思路&lt;/h2&gt;
&lt;p&gt;智能合约承担事务的开销（NET 和 CPU）。&lt;/p&gt;
&lt;h2 id=&quot;具体方案&quot;&gt;具体方案</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>诗盗·今年七夕不送礼送礼只送学区房吓醒</title>
    <link href="https://blog.umu618.com/2019/08/02/reconstructionism-poet-buy-a-house/"/>
    <id>https://blog.umu618.com/2019/08/02/reconstructionism-poet-buy-a-house/</id>
    <published>2019-08-02T05:38:00.000Z</published>
    <updated>2023-08-05T13:01:26.998Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·今年七夕不送礼送礼只送学区房吓醒》：一年三度情人谋，先虐情侣后虐狗。今日没钱空回首，粗茶淡饭再买楼。</p><h2 id="注解">注解</h2><p>商家为了赚钱，一年催大家过三次情人节，堪比谋杀……先虐情侣的钱包，再通过情侣秀恩爱虐单身狗。<br>今天想日却发现没钱，只能回首空悲切，过几年艰苦的日子后再考虑买学区房吧。</p><p>改编自唐代诗人罗隐的《绵谷回寄蔡氏昆仲》：</p><blockquote><p><strong>一年两度锦城游，前值东风后值秋。</strong><br>芳草有情皆碍马，好云无处不遮楼。<br>山将别恨和心断，水带离声入梦流。<br><strong>今日因君试回首，淡烟乔木隔绵州。</strong></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·今年七夕不送礼送礼只送学区房吓醒》：一年三度情人谋，先虐情侣后虐狗。今日没钱空回首，粗茶淡饭再买楼。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;商家为了赚钱，一年催大家过三次情人节，堪比谋杀……先虐情侣的钱包，再通过情侣秀恩爱虐单身狗。&lt;br&gt;
今天</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
  </entry>
  
  <entry>
    <title>优化思维【4】Bash for 循环</title>
    <link href="https://blog.umu618.com/2019/07/30/umutech-optimization-thinking-4-bash-for-loop/"/>
    <id>https://blog.umu618.com/2019/07/30/umutech-optimization-thinking-4-bash-for-loop/</id>
    <published>2019-07-30T15:25:57.000Z</published>
    <updated>2023-08-05T13:01:26.998Z</updated>
    
    <content type="html"><![CDATA[<h2 id="常规教材">常规教材</h2><p>Bash 循环有三种写法。</p><h3 id="1-类-C-语言语法">1. 类 C 语言语法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">for ((i &#x3D; 1; i &lt;&#x3D; 10000000; ++i))</span><br><span class="line">do</span><br><span class="line">  echo $i</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h3 id="2-for-in-语法">2. for in 语法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">for i in &#123;1..10000000&#125;</span><br><span class="line">do</span><br><span class="line">  echo $i</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h3 id="3-使用外部命令-seq">3. 使用外部命令 seq</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">for i in &#96;seq 1 10000000&#96;</span><br><span class="line">do</span><br><span class="line">  echo $i</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h2 id="分析">分析</h2><p>这三种方法中，性能最好的是第一种，最差的是第三种。</p><p>方法 1 是语言层面的循环语法，循环会<strong>立刻</strong>开始，而后两种，作为对比，并不会<strong>立刻</strong>开始！</p><p>方法 2 中的 <code>&#123;1..10000000&#125;</code> 会产生一个 1 到 10000000 的序列，然后再开始循环。</p><p>方法 3 中的 <code>seq 1 10000000</code> 是调用 <code>seq</code> 产生一个 1 到 10000000 的序列，然后再开始循环。涉及到外部进程调用和管道传递，所以比方法 2 更慢。</p><h3 id="总结">总结</h3><ul><li><p>方法 1 写起来最麻烦，性能却是最好的。<strong>“做一件事，有很多种方式”，有时候不是好事，有对比，就有伤害……优化往往是和人性作对！</strong></p></li><li><p>语言原生的方法一般比调用外部命令好。</p></li></ul><h2 id="同类经验">同类经验</h2><p>Java 的 for 和 while 本质上一样（其实 while 可以去掉），而同是 JVM 语言的 Scala 的 for 却不同于 while。Scala 的 <code>for &lt;-</code> 也会先产生序列，再循环，所以超大规模循环时，for 性能不如 while。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;常规教材&quot;&gt;常规教材&lt;/h2&gt;
&lt;p&gt;Bash 循环有三种写法。&lt;/p&gt;
&lt;h3 id=&quot;1-类-C-语言语法&quot;&gt;1. 类 C 语言语法&lt;/h3&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutt</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="optimization" scheme="https://blog.umu618.com/tags/optimization/"/>
    
  </entry>
  
  <entry>
    <title>刽子手</title>
    <link href="https://blog.umu618.com/2019/07/25/executioner/"/>
    <id>https://blog.umu618.com/2019/07/25/executioner/</id>
    <published>2019-07-25T14:32:47.000Z</published>
    <updated>2023-08-05T13:01:26.998Z</updated>
    
    <content type="html"><![CDATA[<p>刽子手死后下地狱，阎王判他转世为畜。</p><p>刽子手不服，问：“我为正义执法，难道不是有功德！其他的刽子手都这么判？”</p><p>阎王：“多数被你执杀的人投诉你技术不好，导致他们没迅速死亡。其他技术好的刽子手没大量投诉，我判他们投胎为人。”</p><p>刽子手还是不服，辩道：“他们不是该死吗？怎么死还有差别？”</p><p>阎王：“他们是该死，被判死刑已经付出代价。但你身居司法机构，技术不好，在阳间没人投诉你，导致你从来不改进，在我阴间你要付出代价。”</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;刽子手死后下地狱，阎王判他转世为畜。&lt;/p&gt;
&lt;p&gt;刽子手不服，问：“我为正义执法，难道不是有功德！其他的刽子手都这么判？”&lt;/p&gt;
&lt;p&gt;阎王：“多数被你执杀的人投诉你技术不好，导致他们没迅速死亡。其他技术好的刽子手没大量投诉，我判他们投胎为人。”&lt;/p&gt;
&lt;p&gt;刽子手还</summary>
      
    
    
    
    <category term="宇督观" scheme="https://blog.umu618.com/categories/%E5%AE%87%E7%9D%A3%E8%A7%82/"/>
    
    
    <category term="寓言" scheme="https://blog.umu618.com/tags/%E5%AF%93%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·九九六</title>
    <link href="https://blog.umu618.com/2019/07/20/reconstructionism-poet-996/"/>
    <id>https://blog.umu618.com/2019/07/20/reconstructionism-poet-996/</id>
    <published>2019-07-20T15:38:00.000Z</published>
    <updated>2023-08-05T13:01:26.998Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·九九六》：笑叙狐朋猪友，傲砍尸老霉幽。此计未卜证太周，虎去猴留，空画春秋，休休，占得几朝风流？九九六。</p><h2 id="注解">注解</h2><p>笑谈一些两面三刀的人和猪队友，傲慢导致招了很多八哥，最后尸变发霉，要砍掉才能净化。<br>两年前预料到的事情，已然成真，好像验证了我能未卜先知。</p><p>改编自霹雳角色“占云巾”出场诗：</p><blockquote><p>笑许云朋霞友，傲看石老梅幽。<br>此生未卜学太周，龙去虎留，明日墟丘。<br>休休，占得几家风流？算春秋。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·九九六》：笑叙狐朋猪友，傲砍尸老霉幽。此计未卜证太周，虎去猴留，空画春秋，休休，占得几朝风流？九九六。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;笑谈一些两面三刀的人和猪队友，傲慢导致招了很多八哥，最后尸变发霉，要砍掉才能净化。&lt;br&gt;
两年前预料到</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·影帝</title>
    <link href="https://blog.umu618.com/2019/07/19/reconstructionism-poet-winner/"/>
    <id>https://blog.umu618.com/2019/07/19/reconstructionism-poet-winner/</id>
    <published>2019-07-19T15:06:00.000Z</published>
    <updated>2023-08-05T13:01:26.998Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·影帝》：信佛信道信耶稣，拜天拜神拜父母。腹中 U 墨黑灰白，哭遍影帝不归路。</p><h2 id="注解">注解</h2><p>曾经不信任何东西，包括自己在天地之间的状态，也不真心膜拜任何东西，人生过去一半后，都信了。<br>特别的人在人间探索，要学习别人对事情的反应，就可能被认为是同类，但其实不是，陷入叠加态。<br>曾经质疑神看不懂稣，会判断稣是邪恶的，所以自称量子邪稣。后来明白，神的观测无所不能，牠能看透任何面具。<br>明白神并不反对人处于亦正亦邪的状态，于是我不再像《追日者》眼里只有黑和白，灰色的人格才是世人常态。<br>那些令我羡慕的影帝，很多并不是天生的，他们也是付出很多泪水和汗水才练成的。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·影帝》：信佛信道信耶稣，拜天拜神拜父母。腹中 U 墨黑灰白，哭遍影帝不归路。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;曾经不信任何东西，包括自己在天地之间的状态，也不真心膜拜任何东西，人生过去一半后，都信了。&lt;br&gt;
特别的人在人间探索，要学习别人</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
    <category term="量子邪稣" scheme="https://blog.umu618.com/tags/%E9%87%8F%E5%AD%90%E9%82%AA%E7%A8%A3/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神【番外篇6】</title>
    <link href="https://blog.umu618.com/2019/07/17/god-of-debug-side-story-6/"/>
    <id>https://blog.umu618.com/2019/07/17/god-of-debug-side-story-6/</id>
    <published>2019-07-17T15:10:44.000Z</published>
    <updated>2023-10-29T12:24:56.937Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/2019/20190207-luyu.jpg" alt="听说鲁豫要来采访稣"></p><h2 id="1-听说稣特别能装逼是这样吗？能不能传授一下给大家？">1. 听说稣特别能装逼是这样吗？能不能传授一下给大家？</h2><p>这就得分析一下装逼的本质，一般人会觉得装逼就是吹牛，其实是一大误解，装逼的奥义在于——说实话！</p><p>举两个例子：</p><ul><li><p>想买个六米长的迈巴赫，却发现自己的 C1 驾照开不了，算了，不买了！反正钱也不够。——大实话！</p></li><li><p>稣不喝酒，不喝茶，有人来做客就拿出绮怡招待，500ml 一瓶 35 元，结果被说太装逼。其实这水健康，换成酒岂止要 35 元，还致癌！您说到底谁装逼呢？</p></li></ul><h2 id="2-好像很有道理，您赢了！我们还是回到剧情。您不是说过自己是无神论，为什么剧中还出现神？">2. 好像很有道理，您赢了！我们还是回到剧情。您不是说过自己是无神论，为什么剧中还出现神？</h2><p>简单地说，本剧出现的神指的是每个人的心头之师，可以认为它是每个人内心的原始愿力，它也受各种规则制约，和神话故事里那些有超能力的神完全不是一回事。</p><ul><li><p>西方的“宿命论”认为，在人的一生中，上帝每分钟都看着你，你没有神的许可，连一根头发都不会脱落。这显然是伪科学。</p></li><li><p>本剧的“命运无神论”完全没有神祗的意志成分，也无前生所造之业的因果成分，而是自然而然，谁都不可能预测或改变。简单地说，头发掉了就掉了呗。</p></li></ul><h2 id="3-那您相信有那种有超能力的神吗？">3. 那您相信有那种有超能力的神吗？</h2><p>我相信有超能力的神在天道前一样是卑微。</p><h2 id="4-稣为什么从神变成人？">4. 稣为什么从神变成人？</h2><p>这是一个循环，不是单向变化，也有从人变成神的。</p><p>时机一到，神自然就变成人。如果有神主动变成人，那可能是因为做神太快乐，以致于满足贫穷，本来就穷，还因为太快乐被人嫉妒，这不科学。做凡人呢，虽然没有做神开心，但有动力去赚钱呀。</p><p>世界上有很多更重要的东西，但前提是有钱。举个例子，小学就学过一寸光阴一寸金，但长大后发现，上班族不就是出售自己的时间换钱？有钱时，时间才宝贵；有钱时，感情才珍贵。</p><h2 id="5-是不是因为作者不想写了，强行把稣写死？">5. 是不是因为作者不想写了，强行把稣写死？</h2><p>当然不是！中国人的平均寿命是 76 岁，稣曾经在佛塔前立誓折寿守护亲人长寿，一命赔多命，消耗掉 10 年寿命，死于 66 岁，完全科学合理。</p><p>梦见的就是这样死的，我有什么办法？咳！</p><h2 id="6-稣的身体不是新的吗？">6. 稣的身体不是新的吗？</h2><p>身体是新的，但记忆是旧的，而且处于慢慢恢复的过程，恢复到一定程度后，稣领悟到转世的意义，自主选择转世。这事情已经发生过无数遍，不用在意死不死。</p><h2 id="7-《八哥九九八十一难》后来去哪里了？">7. 《八哥九九八十一难》后来去哪里了？</h2><p>这本书是高中时，妈妈为了让稣不因为早恋耽误学习、正确理解异性心理而传授的。但他的作者是未来的稣……时空悖论。</p><p>里面的科研成果是花了巨大心力得来的，但失忆的稣看它其实是不太相信的，所以离婚时期稣去实践了几个，付出一些代价后相信。</p><p>和大部分时空悖论的处理方式一样，和秦阳结婚后，稣亲自把它烧毁。</p><h2 id="8-30-集中有一段写稣对陈博士的质疑，所以她到底是不是稣的前妻？">8. 30 集中有一段写稣对陈博士的质疑，所以她到底是不是稣的前妻？</h2><p>不知道……真的！虽然我是作者，但这些故事是梦见的，所以也说不清楚！第 27 集里，稣在和陈立姻讲和秦阳的故事，那些记忆都是从识界复制而来的，识界里稣的前妻叫陈提姻，而不是陈立姻。至于 AVILab 的那个陈立姻，到底是谁，作者至今没搞懂！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/images/2019/20190207-luyu.jpg&quot; alt=&quot;听说鲁豫要来采访稣&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;1-听说稣特别能装逼是这样吗？能不能传授一下给大家？&quot;&gt;1. 听说稣特别能装逼是这样吗？能不能传授一下给大家？&lt;/h2&gt;
&lt;p&gt;这就</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="鲸神魂裂" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%AD%82%E8%A3%82/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·买币送禅</title>
    <link href="https://blog.umu618.com/2019/07/17/reconstructionism-poet-meditate-on-btc/"/>
    <id>https://blog.umu618.com/2019/07/17/reconstructionism-poet-meditate-on-btc/</id>
    <published>2019-07-17T05:13:00.000Z</published>
    <updated>2023-08-05T13:01:26.998Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·买币送禅》：天花娉婷坠如雨，帆冻阴飙吹不举。苦却乐，乐却苦，数字黄金忽如土。</p><h2 id="注解">注解</h2><p>改编自唐朝贯休的《送颢雅禅师》：</p><blockquote><p>霜锋擗石鸟雀聚，帆冻阴飙吹不举。芬陀利香释驎虎，<br>幡幢冒雪争迎取。春光主，芙蓉堂窄堆花乳，<br>手提金桴打金鼓。天花娉婷下如雨，狻猊座上师子语。<br>苦却乐，乐却苦，卢至黄金忽如土。</p></blockquote><p>空仓观测，甚至还有心情写诗。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·买币送禅》：天花娉婷坠如雨，帆冻阴飙吹不举。苦却乐，乐却苦，数字黄金忽如土。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;改编自唐朝贯休的《送颢雅禅师》：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;霜锋擗石鸟雀聚，帆冻阴飙吹不举。芬陀利香释驎虎，&lt;br&gt;</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="blockchain" scheme="https://blog.umu618.com/tags/blockchain/"/>
    
  </entry>
  
  <entry>
    <title>优化思维【3】消除没必要步骤</title>
    <link href="https://blog.umu618.com/2019/07/16/umutech-optimization-thinking-3-remove-unnecessary-steps/"/>
    <id>https://blog.umu618.com/2019/07/16/umutech-optimization-thinking-3-remove-unnecessary-steps/</id>
    <published>2019-07-16T12:14:44.000Z</published>
    <updated>2023-08-05T13:01:26.998Z</updated>
    
    <content type="html"><![CDATA[<h2 id="故事">故事</h2><p>四月底给 <a href="https://github.com/EOSIO">EOSIO</a> / <a href="https://github.com/EOSIO/eos">eos</a> 提了一个<a href="https://github.com/EOSIO/eos/pull/7207">优化 MongoDB 插件性能的 PR</a>，被连续感谢好几个 <a href="https://github.com/EOSIO/eos/releases/tag/v1.8.0">Release</a>。</p><h2 id="分析">分析</h2><p>原先的流程：fc::variant -&gt; JSON string -&gt; BSON，实现起来很简单，因为 JSON 是很常见的，fc::variant 和 BSON 都有到 JSON 的转化，所以实现代码很简单，一行两个函数。</p><p>但数据大时，性能问题就暴露了，这个过程先把 fc::variant 对象序列化为 JSON 字符串，然后反序列化到 BSON 对象。两步都是 CPU 密集型操作，由于 nodeos 及其插件暂时对多核支持不好，导致单核跑爆。</p><p>两个过程都要用递归实现，调用栈可能很深。调用函数可能有入栈出栈的消耗，有一种优化思路正是<strong>用 inline 减少函数的频繁调用</strong>。</p><p>回归到本质，fc::variant 和 BSON 都是对象，应该直接转化才对。只是实现起来就不是一行能搞定的。先挑简单的方式实现，后期再优化，这是一种挺常规的做法。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;故事&quot;&gt;故事&lt;/h2&gt;
&lt;p&gt;四月底给 &lt;a href=&quot;https://github.com/EOSIO&quot;&gt;EOSIO&lt;/a&gt; / &lt;a href=&quot;https://github.com/EOSIO/eos&quot;&gt;eos&lt;/a&gt; 提了一个&lt;a href=&quot;https</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="optimization" scheme="https://blog.umu618.com/tags/optimization/"/>
    
    <category term="cpp" scheme="https://blog.umu618.com/tags/cpp/"/>
    
    <category term="blockchain" scheme="https://blog.umu618.com/tags/blockchain/"/>
    
  </entry>
  
  <entry>
    <title>SQLite Node.js</title>
    <link href="https://blog.umu618.com/2019/07/16/umutech-sqlite-nodejs/"/>
    <id>https://blog.umu618.com/2019/07/16/umutech-sqlite-nodejs/</id>
    <published>2019-07-16T09:46:52.000Z</published>
    <updated>2023-08-05T13:01:26.998Z</updated>
    
    <content type="html"><![CDATA[<h2 id="选型">选型</h2><p><a href="https://github.com/mapbox">mapbox</a> / <a href="https://github.com/mapbox/node-sqlite3">sqlite3</a>: Asynchronous, non-blocking SQLite3 bindings for Node.js</p><p>安装：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add sqlite3</span><br></pre></td></tr></table></figure><h2 id="常见操作">常见操作</h2><h3 id="1-创建数据库">1. 创建数据库</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> sqlite = <span class="built_in">require</span>(<span class="string">&#x27;sqlite3&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> dbPath = path.join(__dirname, <span class="string">&#x27;test.db&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> db = <span class="keyword">new</span> sqlite.Database(dbPath)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> sqls = [<span class="string">`CREATE TABLE test(</span></span><br><span class="line"><span class="string">  id CHAR(64) NOT NULL PRIMARY KEY CHECK(LENGTH(id) == 64),</span></span><br><span class="line"><span class="string">  timeStamp INTEGER NOT NULL,</span></span><br><span class="line"><span class="string">  state INTEGER NOT NULL DEFAULT 0)`</span></span><br><span class="line">  , <span class="string">&#x27;CREATE INDEX index_id ON txs(id)&#x27;</span></span><br><span class="line">  , <span class="string">&#x27;CREATE INDEX index_timeStamp ON txs(timeStamp)&#x27;</span></span><br><span class="line">  , <span class="string">&#x27;CREATE INDEX index_state ON txs(state)&#x27;</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">db.serialize(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> sql <span class="keyword">of</span> sqls) &#123;</span><br><span class="line">    db.run(sql, <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (err) &#123;</span><br><span class="line">        <span class="built_in">console</span>.error(err)</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;SQL executed.&#x27;</span>)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">db.close()</span><br></pre></td></tr></table></figure><h3 id="2-插入数据">2. 插入数据</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> items = [</span><br><span class="line">  &#123; <span class="attr">hash</span>: <span class="string">&#x27;D141925E39814FB5256615A1A94EC82B7043D983F68423D8C149A2AE360B623C&#x27;</span></span><br><span class="line">    , <span class="attr">ts</span>: <span class="number">1563273661316</span>, <span class="attr">state</span>: <span class="number">0</span> &#125;</span><br><span class="line">  , &#123; <span class="attr">hash</span>: <span class="string">&#x27;2E9F26F5D0A73AE5DAFC8A1C22264725972AA997A22522A906D8CD7E225096ED&#x27;</span></span><br><span class="line">    , <span class="attr">ts</span>: <span class="number">1563273661317</span>, <span class="attr">state</span>: <span class="number">1</span> &#125;</span><br><span class="line">  , &#123; <span class="attr">hash</span>: <span class="string">&#x27;0FF5F5F5E96664939D07D94975342D71F824747EFECE1D24FDDBB3B29DD91DCB&#x27;</span></span><br><span class="line">    , <span class="attr">ts</span>: <span class="number">1563273661318</span>, <span class="attr">state</span>: <span class="number">0</span> &#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">db.serialize(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> stmt = db.prepare(<span class="string">&quot;INSERT INTO test VALUES (?, ?, ?)&quot;</span>)</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">const</span> item <span class="keyword">of</span> items) &#123;</span><br><span class="line">    stmt.run(item.hash, item.ts, item.state, <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (err) &#123;</span><br><span class="line">          <span class="built_in">console</span>.error(err)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">&#x27;INSERT&#x27;</span>, item.hash)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">  stmt.finalize()</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="3-查询">3. 查询</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">db.serialize(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  db.each(<span class="string">&quot;SELECT * FROM test WHERE state=0&quot;</span>, <span class="function">(<span class="params">err, row</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="built_in">console</span>.error(<span class="string">&#x27;SELECT state=0 error:&#x27;</span>, err)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// do something here</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;, <span class="function">(<span class="params">err, count</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// do something here</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="4-更新">4. 更新</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">db.run(<span class="string">&quot;UPDATE test SET state=1 WHERE state=0&quot;</span>, <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="built_in">console</span>.error(<span class="string">&#x27;UPDATE txs error:&#x27;</span>, err)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">&#x27;UPDATE state to 1&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure><h2 id="参考">参考</h2><p><a href="http://www.sqlitetutorial.net/sqlite-nodejs/">http://www.sqlitetutorial.net/sqlite-nodejs/</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;选型&quot;&gt;选型&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/mapbox&quot;&gt;mapbox&lt;/a&gt; / &lt;a href=&quot;https://github.com/mapbox/node-sqlite3&quot;&gt;sqlite3&lt;/a&gt;: Asynch</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="nodejs" scheme="https://blog.umu618.com/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>pm2 运维经验</title>
    <link href="https://blog.umu618.com/2019/07/16/umutech-pm2-ops/"/>
    <id>https://blog.umu618.com/2019/07/16/umutech-pm2-ops/</id>
    <published>2019-07-16T09:32:00.000Z</published>
    <updated>2023-08-05T13:01:26.998Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装">安装</h2><p>比较多的文章推荐用 npm 安装，但 <a href="https://blog.umu618.com/">UMU</a> 更推荐 yarn。</p><p><strong>理由</strong>：<a href="https://code.visualstudio.com/">Visual Studio Code</a> 脑残粉跟随 <a href="https://github.com/Microsoft">Microsoft</a>/<a href="https://github.com/Microsoft/vscode">vscode</a> 使用 yarn。</p><p>参考 <a href="https://yarnpkg.com/en/docs/install#debian-stable">yarn 安装</a>，其中 Ubuntu 下命令为：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;deb https://dl.yarnpkg.com/debian/ stable main&quot;</span> | sudo tee /etc/apt/sources.list.d/yarn.list</span><br><span class="line"></span><br><span class="line">sudo apt-get update &amp;&amp; sudo apt-get install --no-install-recommends yarn</span><br></pre></td></tr></table></figure><p>使用 yarn 安装 pm2：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn global add pm2</span><br></pre></td></tr></table></figure><h2 id="运行">运行</h2><p>不熟悉 yarn 的话，装完一头雾水，装到哪了？用以下命令显示：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn global bin</span><br></pre></td></tr></table></figure><p>结果参考：</p><ul><li>macOS：<code>/usr/local/bin</code></li><li>Ubuntu：<code>/home/ubuntu/.yarn/bin</code></li></ul><p>启动脚本的命令为：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`yarn global bin`/pm2 start my-program.js</span><br></pre></td></tr></table></figure><h2 id="安全建议">安全建议</h2><p><strong>root 身份能不用则不用。</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;安装&quot;&gt;安装&lt;/h2&gt;
&lt;p&gt;比较多的文章推荐用 npm 安装，但 &lt;a href=&quot;https://blog.umu618.com/&quot;&gt;UMU&lt;/a&gt; 更推荐 yarn。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;理由&lt;/strong&gt;：&lt;a href=&quot;https://c</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="ops" scheme="https://blog.umu618.com/tags/ops/"/>
    
    <category term="nodejs" scheme="https://blog.umu618.com/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>菩提祖稣</title>
    <link href="https://blog.umu618.com/2019/07/08/subhuti/"/>
    <id>https://blog.umu618.com/2019/07/08/subhuti/</id>
    <published>2019-07-08T10:50:16.000Z</published>
    <updated>2023-08-05T13:01:26.998Z</updated>
    
    <content type="html"><![CDATA[<h2 id="低调的菩提祖师">低调的菩提祖师</h2><p>题目，是“菩提祖师是稣的偶像”的缩写。</p><p>菩提祖师应该是西游记里最低调的人。</p><ul><li><p>精通三教，牛逼轰轰，却只在深山隐匿授徒。稣想起“道隐”这个称号……“惯看满城烟雨，回首不入烽云”</p></li><li><p>警告孙悟空出师门后不能提起他，否则就让孙悟空万劫不复。</p></li></ul><blockquote><p>你这去，定生不良。凭你怎么惹祸行凶，却不许说是我的徒弟。你说出半个字来，我就知之，把你这猢狲剥皮锉骨，将神魂贬在九幽之处，教你万劫不得翻身！</p></blockquote><ul><li>行事作风很低调。</li></ul><blockquote><p>这个工夫，可好在人前卖弄？假如你见别人有，不要求他？别人见你有，必然求你。你若畏祸却要传他，若不传他，必然加害，你之性命又不可保。</p></blockquote><ul><li>自从孙悟空走出斜月三星洞，再没有出现过。</li></ul><h2 id="低调做人，高调做事">低调做人，高调做事</h2><p>曾经的理解：很矛盾，做事也是做人的一部分，怎么能又低调又高调？难道又是量子邪说的叠加态？</p><p>经历过一些事后，稣发现一个关键词：嫉妒。</p><ul><li><p>做事高调，就是把事情做好，做出成绩，让大家认同，甚至可能引起崇拜。</p></li><li><p>做人低调说的是——不要引起嫉妒！</p></li></ul><p>虽然还是挺难的，但分得清，就有可能做到，其中最容易学的一种方式就是：学菩提祖师那样降低自己的存在感。</p><h2 id="曾经的误解，如今的教训">曾经的误解，如今的教训</h2><h3 id="1-有才华本身就可能招嫉妒">1. 有才华本身就可能招嫉妒</h3><p>稣很喜欢会吹牛逼的有才人，比如听当兵的讲自己当年各种传奇故事，这类事可以重复听三遍以上。</p><p>有次和一群朋友认识一名新朋友，聊完，稣觉得此人有才华又有意思，值得交往，但其他人全部反对……理由是：讲话太高调。Hmm……</p><p>结论：有才还得有相应的低调隐藏，不然会有一大部分人不兼容。</p><h3 id="2-生活不讲推理，有时候甚至不讲理">2. 生活不讲推理，有时候甚至不讲理</h3><p>举个例子：稣买个东西，有钱人一看就知道是便宜货，所以稣很自觉地说这是炫穷，但偏偏有人以为稣在炫富……</p><p>其实推理一下就明白，稣确实是个穷人，一年买买买的次数少之又少，偶尔买点东西，也确实是些普通的小东西。然而稣又错了，喜欢推理属于少数人的爱好，对一件事的评价，大部分人都是靠感性对待，能稍微推理一下都是很难得的。</p><p>结论：更有钱可以提高认知水平，从而认识到自己曾经的错误。</p><h3 id="3-众口铄金">3. 众口铄金</h3><p>这可能是小学学的最酷的一个成语！不举例了……</p><p>结论1：众口铄金的一个条件就是认知水平低的人占大部分，他们喜欢按照自己的认知描画事件。</p><p>结论2：认知水平高的人可能愿意和低的人交往，但认知水平低的普遍不愿意和高的交往，甚至自发诋毁认知水平高的人。</p><h3 id="4-道德攻击">4. 道德攻击</h3><p>占据道德制高点，可能是很爽的事情吧，远比真相令人着迷。</p><p>大部分热点事件，一定有人占据道德高点写文章批评其它观点，举世皆昏我独醒。</p><p>很多事即使是侦探、警察都无法还原事实的全部，但侦探不能错过任何一种可能性，将各种可能列出来，然后分析其可能性多少。要能依循蛛丝马迹分析可能性，但不要轻易得出任何无根据的结论。</p><p>结论：人民群众有无耻的权力，但要偷偷地。Hmm……好像不对劲。这么说吧——尿急，实在找不到厕所，找个隐蔽的地方，肯定比在大马路边随地撒尿好！</p><h2 id="交友观">交友观</h2><p>利益共同体的关系远比交情靠谱。交情是一种感情，是感情就可能受到嫉妒的影响，光看这点，朋友最好的人选有两类：</p><ul><li><p>不容易嫉妒的人；</p></li><li><p>可能小嫉妒，但不会因为嫉妒而害人的人。</p></li></ul><p>能力问题，认知水平差太多的人是不太可能聊到一起的，甚至容易在关键时刻掉链子。举个例子：卧底在执行任务，跟一群人混，突然冒出一个大伯认识卧底，大伯认为卧底在当坏人，于是苦口婆心劝他从善，然后卧底被打死。</p><ul><li><p>认知水平差不多；</p></li><li><p>成长速度也差不多。</p></li></ul><p>有些人在一起很久也无法互相理解，有些人一见面就相见恨晚。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;低调的菩提祖师&quot;&gt;低调的菩提祖师&lt;/h2&gt;
&lt;p&gt;题目，是“菩提祖师是稣的偶像”的缩写。&lt;/p&gt;
&lt;p&gt;菩提祖师应该是西游记里最低调的人。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;精通三教，牛逼轰轰，却只在深山隐匿授徒。稣想起“道隐”这个称号……“惯看满城烟雨，回首不入</summary>
      
    
    
    
    <category term="宇督观" scheme="https://blog.umu618.com/categories/%E5%AE%87%E7%9D%A3%E8%A7%82/"/>
    
    
    <category term="心理邪稣" scheme="https://blog.umu618.com/tags/%E5%BF%83%E7%90%86%E9%82%AA%E7%A8%A3/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·风月</title>
    <link href="https://blog.umu618.com/2019/07/07/reconstructionism-poet-romance/"/>
    <id>https://blog.umu618.com/2019/07/07/reconstructionism-poet-romance/</id>
    <published>2019-07-07T10:11:00.000Z</published>
    <updated>2023-08-05T13:01:26.998Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·风月》：天地俱不醒，落得昏沉醉梦。风月苏轼客，枉寻掉举鸿蒙。</p><h2 id="注解">注解</h2><p>改编自霹雳角色“风月主人”的诗号：</p><blockquote><p>天地俱不醒，<br>落得昏沉醉梦；<br>鸿蒙率是客，<br>枉寻寥廓主人。</p></blockquote><p>PS：这词得用闽南语念才会押韵。</p><p>人生不过一场梦，对人间一切都要淡定。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·风月》：天地俱不醒，落得昏沉醉梦。风月苏轼客，枉寻掉举鸿蒙。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;改编自霹雳角色“风月主人”的诗号：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;天地俱不醒，&lt;br&gt;
落得昏沉醉梦；&lt;br&gt;
鸿蒙率是客，&lt;br&gt;
枉</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·道梦无神论</title>
    <link href="https://blog.umu618.com/2019/07/06/reconstructionism-poet-atheism/"/>
    <id>https://blog.umu618.com/2019/07/06/reconstructionism-poet-atheism/</id>
    <published>2019-07-06T09:32:00.000Z</published>
    <updated>2023-08-05T13:01:26.998Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·道梦无神论》：半涉魔流半识神，卧榻闲梦无神论。道心默观量子意，傲视人间笑红尘。</p><h2 id="注解">注解</h2><p>改编自霹雳角色“傲笑红尘”的诗号：</p><blockquote><p>半涉浊流半席清，<br>倚筝闲吟广陵文。<br>寒剑默听君子意，<br>傲视人间笑红尘。</p></blockquote><p>半涉魔流半识神：冰心魔莲，在魔道修炼，但一心向光明。<br>卧榻闲梦无神论：人间无事，梦中逍遥，比神还快乐，所以没必要当神。<br>道心默观量子意：逢场作戏，真假莫辨，就像量子叠加态，默默观测就行，不要过早得出结论。<br>傲视人间笑红尘：神已经可以理解凡人，不过是善嫉阻碍自己，神一笑而过。<br>神：每个人的心头之师。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·道梦无神论》：半涉魔流半识神，卧榻闲梦无神论。道心默观量子意，傲视人间笑红尘。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;改编自霹雳角色“傲笑红尘”的诗号：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;半涉浊流半席清，&lt;br&gt;
倚筝闲吟广陵文。&lt;br&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
  </entry>
  
  <entry>
    <title>《八哥之神》底层逻辑</title>
    <link href="https://blog.umu618.com/2019/06/23/god-of-debug-s-logic-rules/"/>
    <id>https://blog.umu618.com/2019/06/23/god-of-debug-s-logic-rules/</id>
    <published>2019-06-22T17:13:33.000Z</published>
    <updated>2023-08-05T13:01:26.988Z</updated>
    
    <content type="html"><![CDATA[<h2 id="极小使用特权">极小使用特权</h2><p>神无处不在，无所不知，没有情绪。凡人只能感知附近部分信息，但有研究未知领域的乐趣。</p><blockquote><p>为什么探索太空？因为太空存在！<br>为什么凝视深渊？因为深渊存在！</p></blockquote><p>使用特权就像偷看答案一样，失去思考的快乐，同时也给人类带来很大压力。</p><p>人类的内心善恶共存，过度使用善良压抑邪恶，必将导致邪恶在适当的环境下反扑。丧尽恶知的世界和丧尽良知一样是不真实的悲惨世界。</p><p>举个例子：人一旦误以为自己是好人，那么他可能也误以为自己做的都是好事，然而往往是做了坏事还心安理得，甚至得意洋洋。参考“子贡拒金”和“子路受牛”。</p><p>成长有一课：戒除自己是个好人的幻觉，先做一个正常人，才知道什么叫好人以及做好人有多难。<br>管理有一课：不要滥用特权。</p><blockquote><p>世界上最让人欲罢不能的是权力而非性爱。当您有机会定义社会规则和价值体系甚至决定整个社会运行方向的时候，您会感到自己超脱了肉体的躯壳，像光芒一样膨胀散射，充满目之所及的一切空间。您，就是活生生的昊天上帝。但是，当稣能这么做时，却放弃这样做，稣觉得自己超越了昊天上帝。</p></blockquote><h2 id="凰娘一梦">凰娘一梦</h2><p>质量好的虚拟和真实差距不大，古有“黄粱一梦”，今有“凰娘一梦”。</p><p>举个例子：整蛊节目骗您中了百万大奖，您高兴坏了。假的，但是您确实高兴过。</p><p>这一切都是生物化学反应而已，有些刺激是可以替代的，那些中瘾患者最能明白这个道理。</p><p>看电影、听音乐，这些都是精神享受，但这些形式比较低端，做梦比较高端，第一视角沉浸式参与，比目前的 VR、AR 啥的还牛逼。</p><p>1993 年，史泰龙的《超级战警》里面提到未来人们做爱只能用虚拟方式，史泰龙表示“我去”，而当时稣觉得这太好了！既得到交流和快乐，又不怕脏不怕病，这样难道不好吗？</p><p><a href="/2018/04/01/the-ghost-wife/">白云凰</a>这个故事是作者于 2018-03-28 做的一个很真实的梦，在《八哥之神》第一集写作之前，所以并非《八哥之神》正剧，只是被链接到而已，原因就在于这个故事和主题很切合。</p><h2 id="无限死循环">无限死循环</h2><p>宇宙是无限的，好可怕，没有外面……</p><p>宇宙可能是有限但无边际的，好可怕，外面是啥……</p><p>关于宇宙，人类是不可能想明白的，但可能肯定的是——人都要死。但是如果真是无限的时间，就必然又会重生。就像 pi 的小数部分会包含 618 这个排列无数次。</p><p>无限之前，有限的人生就存在各种各种不自由，肉体不自由，精神也有天花板，但追求精神才是更高级的。</p><blockquote><p>稣认为生命中最重要的事情是：情和事业。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;极小使用特权&quot;&gt;极小使用特权&lt;/h2&gt;
&lt;p&gt;神无处不在，无所不知，没有情绪。凡人只能感知附近部分信息，但有研究未知领域的乐趣。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;为什么探索太空？因为太空存在！&lt;br&gt;
为什么凝视深渊？因为深渊存在！&lt;/p&gt;
&lt;/block</summary>
      
    
    
    
    <category term="宇督观" scheme="https://blog.umu618.com/categories/%E5%AE%87%E7%9D%A3%E8%A7%82/"/>
    
    
    <category term="心理邪稣" scheme="https://blog.umu618.com/tags/%E5%BF%83%E7%90%86%E9%82%AA%E7%A8%A3/"/>
    
    <category term="影评" scheme="https://blog.umu618.com/tags/%E5%BD%B1%E8%AF%84/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·买腾讯</title>
    <link href="https://blog.umu618.com/2019/06/22/reconstructionism-poet-buy-00700/"/>
    <id>https://blog.umu618.com/2019/06/22/reconstructionism-poet-buy-00700/</id>
    <published>2019-06-22T14:22:03.000Z</published>
    <updated>2023-08-05T13:01:26.988Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·买腾讯》：欲拉腾讯四零四，后请保姆一万一。狗庄带偏变大便，千古做空第一帝。</p><h2 id="注解">注解</h2><p>稣打算把 00700 拉到 404 港元，然后请个月薪 11k 的保姆。<br>上涨会遇到很大阻力，狗庄经常跑出来做空，更可能怕的是稣认识一个千古做空第一帝，跟着稣买了一手。<br>不过没事，迟早要到 410 港元，拿好！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·买腾讯》：欲拉腾讯四零四，后请保姆一万一。狗庄带偏变大便，千古做空第一帝。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;稣打算把 00700 拉到 404 港元，然后请个月薪 11k 的保姆。&lt;br&gt;
上涨会遇到很大阻力，狗庄经常跑出来做空，更可能怕的</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="金融" scheme="https://blog.umu618.com/tags/%E9%87%91%E8%9E%8D/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神【番外篇5】</title>
    <link href="https://blog.umu618.com/2019/06/18/god-of-debug-side-story-5/"/>
    <id>https://blog.umu618.com/2019/06/18/god-of-debug-side-story-5/</id>
    <published>2019-06-18T09:05:22.000Z</published>
    <updated>2023-10-29T12:24:56.937Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/2019/20190207-luyu.jpg" alt="听说鲁豫要来采访稣"></p><h2 id="1-《八哥之神》终于剧终，作者有什么特别想说的吗？">1. 《八哥之神》终于剧终，作者有什么特别想说的吗？</h2><p>拍武戏很累！唯一的一场武戏虽然被作者一笔带过，但隐含无限可能……反正作者光想象这场战争打了七七四十九天就觉得很困。等睡饱，再出一集《八哥之神》补遗之《第一次识界大战》。</p><h2 id="2-周易是个腹黑的人吗？">2. 周易是个腹黑的人吗？</h2><p>不是。周易之所以把六爻关进炼狱永世不得超生，是因为六爻害死了周易，只是合理报仇。这在正剧里有暗示，但没细说，因为拍武戏很累，后面补《第一次识界大战》会详细交代。</p><blockquote><p>可以生而生，可以死而死，天福也。<br>可以生而不生，可以死而不死，天罚也。</p></blockquote><p>周易降天罚于六爻也，而同意耶不带记忆转世，是为天福。</p><h2 id="3-小师妹是谁？">3. 小师妹是谁？</h2><p>小李子就是第三集时稣第一次复制记忆的记录员，他的数字形象是识界里的李大爷，所以小师妹很明显是谷绵。然后您又要问谷绵到底是谁……现在可以说了：是耶的妈妈！</p><p>看剧要思考！为什么耶对谷绵有依恋？每次耶被复制身体之后醒来见到的第一个女人就是谷绵，这是动物的本能，出生就认妈。后来稣想明白这点，最后一次谷绵要陪玩 S6x 游戏时，稣就拒绝了。</p><p>正剧只说过喜欢，并没有说那是爱情，哪有儿子不喜欢妈的？请各位观众不要想歪了，腹黑赫赫。</p><h2 id="4-为什么这么巧转世当她儿子？">4. 为什么这么巧转世当她儿子？</h2><p>因为周易开启了遍照环宇之眼，观测影响宇宙，这是《八哥之神》的底层逻辑，是周易帮助耶转世的。</p><h2 id="5-为什么心理邪稣要研究人性？">5. 为什么心理邪稣要研究人性？</h2><p>因为稣是个特别会替别人思考的人。</p><p>不信是不是？</p><p>对，问题出在稣不理解凡人的思维。</p><p>举个例子：</p><ul><li><p>稣的内心学习比玩重要，如果有同学作业没写好约稣出去玩，稣会替他考虑而拒绝他。但是对方是不是也和稣一样认为学习更重要呢？不一定……于是这个小伙伴就不和稣玩了。那为什么稣已经认识到不一定，还坚持替对方考虑学习更重要呢？因为稣还没作出决定时，对方心思处于叠加态，他随时会量子跃迁，进化到认同学习更重要的状态。</p></li><li><p>稣还认为被老师指出八哥是好事，只要证据充分就行，不在乎态度。即进步大于无谓的自尊心。但显然很多人并不是这样的，所以要搞得很复杂，要讲究技巧、艺术啥的，一个不小心就会好心办坏事。</p></li></ul><p>为了防止被人误会从不站在别人角度思考，您说要不要研究人性？明明都是先为别人考虑的，最后还要被贴相反标签？赶紧研究啊！</p><h2 id="6-八哥到底是什么意思？很多观众还是没理解！">6. 八哥到底是什么意思？很多观众还是没理解！</h2><p>这个问题已经认真回答过，但不少人以为是开玩笑的……再说一遍！</p><ul><li><p>八哥是 bug 的音译，用中文讲是：撩，更过分点地说是：非礼！</p></li><li><p>但如果仔细看英文名 God of Debug，会发现真相——本剧说的是：Debug，也就是反撩。即：稣从来不撩妹，而是反撩。</p></li><li><p>反撩是一种锻炼意志的方法，因为每次诱妹深入最后观测完毕，发现不合格都必须失败。这也是正剧中稣从来没有性生活的原因。</p></li></ul><h2 id="7-要是合格呢？">7. 要是合格呢？</h2><p>那就娶她。稣就娶了秦阳。</p><h2 id="8-据说稣有三个老婆是真的吗？">8. 据说稣有三个老婆是真的吗？</h2><p>当然是真的。稣的前妻是陈提姻。在识界娶了秦阳。后来耶转生从婴儿开始长大，又娶了神仙姐姐陈立姻。这不是三个老婆是什么？稣又没说是同时有的，你们想啥呢……</p><p>顺便说一下这个隐藏剧情：耶长大过程中，姻姻姐时不时就来看望，多年都没老过，所以耶称之为神仙姐姐，直到成年后，姻姻姐消失了几年，后来耶读硕时，遇到一个美女，很像姻姻姐……这故事剧中也暗示得很明显，这是一个死循环的故事，头尾连接起来，无法 break 的 loop。这才符合宇宙是一个无尽牢笼的主题。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/images/2019/20190207-luyu.jpg&quot; alt=&quot;听说鲁豫要来采访稣&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;1-《八哥之神》终于剧终，作者有什么特别想说的吗？&quot;&gt;1. 《八哥之神》终于剧终，作者有什么特别想说的吗？&lt;/h2&gt;
&lt;p&gt;拍武戏很</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="鲸神魂裂" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%AD%82%E8%A3%82/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神【32】</title>
    <link href="https://blog.umu618.com/2019/06/16/god-of-debug-32/"/>
    <id>https://blog.umu618.com/2019/06/16/god-of-debug-32/</id>
    <published>2019-06-16T10:39:19.000Z</published>
    <updated>2023-08-05T13:01:26.988Z</updated>
    
    <content type="html"><![CDATA[<p>太易，未见气也。神始，寂寥太虚。</p><p>易道广大，无所不包，创 AVILab，领初代主程六爻、七鹰、八卦及三千口德合写识界代码。运行初期，六爻企图植入后门以获得撸特权限，被八哥之神七鹰圣小开识破，合八卦之力，斩杀六爻于识界，从此识人只知七鹰、八卦，不识六爻。易判六爻入狱两年。期间六爻抑郁自尽，留下遗书诅咒人间情欲弥漫、八卦满天。</p><p>易得知甚为痛心，动爱才之念，复制六爻意识封于识界炼狱。</p><blockquote><p>人心生一念，天地悉皆知。善恶若无报，乾坤必有私。</p></blockquote><h2 id="AVILab-八卦">AVILab 八卦</h2><p>观察员小李子：“小师妹，圣先生撩妹功力深厚，你可不要对他动心了。”</p><p>“师兄在说啥呢？我怎么会对他动心！”</p><p>“哥可是 AVILab 首席观察员，这点苗头难道看不出来？他老人家还是老人家时，你看他的眼神就带着崇拜，后来变年轻后，你看他的眼神更温柔了，这些我可是看得清清楚楚。”</p><p>“师兄为什么这么厉害？”</p><p>“全靠这本《八哥九九八十一难》，作者就是圣先生。”</p><p>“还有这么神奇的书？我怎么都没听过。”</p><p>“这是手写本，几年前先生感叹哥这么优秀，却没有妹纸，私下送哥的。当时才研究三个月，再加上 Lab 正好分红 250 个 BSV5，就有女朋友了。”</p><blockquote><p>BSV5(Bitcoin Su’s Vision version 5) is the real Bitcoin. 一个相当于 2019 年的 2-3 万人民币。</p></blockquote><p>“这样呀！这书有啥特别呢？”</p><p>“俗话说，女人心海底针，了解一个女人已经很难，这书里写了九大类，八十一个案例，一一细致解析，各种洞烛机先的策略，精彩万分，细思极恐。”</p><p>“这么神奇？他怎么能研究这么多案例的？”</p><p>“这也是哥纳闷的地方，哥从认识他开始就没见过他与任何异性有礼仪之外的交往，一开始以为他是用 AI 训练出来的结论，后来问他，他说那些都是对真人研究得出的……哥当场目瞪狗呆！”</p><p>“撩了 81 个女人？”</p><p>“恐怕还不止！”</p><p>“这太可怕了，为什么有这么多精力！”</p><p>“是很可怕！简直渣到出神入化，所以哥要提醒你，别掉进陷阱了。”</p><p>“呵呵，师兄就别多心了，我对先生只有崇拜。倒是你，想撩我，以为我看不出来？你这样同时撩两三个的才是渣，能撩 81 个的，已经是神，是做科研。”</p><p>“哈哈哈，原来你的观测力也不错。”</p><p>“先生的书借我！我考虑不告诉我老公，不然我让他打死你。”</p><blockquote><p>易经常言：贵圈真乱！</p></blockquote><h2 id="复活">复活</h2><p>AVILab 有一个活宝叫小开，易说过保他长生不死，维持 Lab 精神象征。</p><p>然而，他居然被打死了，还脑死！易痛心疾首！</p><p>陈博士说小开不想再带着记忆复活，易尊重他的选择，公开宣布小开在识界永远轮回，现实中将不再复活。</p><p>识界之神周易的回归，易已拥有宇督祖公的观测力，长哥之子将拥有小开的意识。</p><h2 id="11-个月后">11 个月后</h2><p>2049 年 7 月 11 日，耶睁开眼，卧槽，出生在穷苦家庭……</p><p>易睁开遍照环宇之眼，这个现实只是更外层的圣小开的残脑制造的虚拟世界。</p><p>人类已经灭绝，人机智能结合的程序还在运行，一丝人性，一点愿望，破烂不堪的 AVILab 创造了生机勃勃的 AVILab。</p><h2 id="识界">识界</h2><p>识界里的稣，在无数次死亡重生中寻找神迹。几世太聪明，儿童时期就怀疑现实而自杀，几世太乐观，活到老学到老。</p><blockquote><p>天地无极，宇宙一体。意识不灭，生死相依。</p></blockquote><p>到<a href="/2018/09/16/reconstructionism-poet-quantum-supervisor/">量子邪稣</a>这代，稣悟透生死循环，终于可以自主在梦中与神对话。</p><blockquote><p>生死无待，诡道莫测，量子邪稣藐神话。</p></blockquote><p>“稣已经看明白，这个世界是虚拟的。”</p><p>“但你无法离开。”</p><blockquote><p>You can check out anytime you like, but you can never leave.</p></blockquote><p>“嗯，死循环的代码不会退出，稣已经死过很多次，并没有超脱这个无限的牢笼，即使跳出这个宇宙，外面还会有一个，稣永远不会自由。”</p><p>“放弃宇督公的身份，回归神的状态，你再也不会感觉到这些困惑。”</p><p>“天道循环，神会下凡，依然无法逃脱禁锢，只是时间问题。第一视角必然庞加莱重现。宇宙有真正的死亡吗？”</p><blockquote><p>无限之前，仙道已俗；天下情缘，尽归于无。</p></blockquote><p>剧终。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;太易，未见气也。神始，寂寥太虚。&lt;/p&gt;
&lt;p&gt;易道广大，无所不包，创 AVILab，领初代主程六爻、七鹰、八卦及三千口德合写识界代码。运行初期，六爻企图植入后门以获得撸特权限，被八哥之神七鹰圣小开识破，合八卦之力，斩杀六爻于识界，从此识人只知七鹰、八卦，不识六爻。易判六爻</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="心理邪稣" scheme="https://blog.umu618.com/tags/%E5%BF%83%E7%90%86%E9%82%AA%E7%A8%A3/"/>
    
    <category term="鲸神魂裂" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%AD%82%E8%A3%82/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神【31】</title>
    <link href="https://blog.umu618.com/2019/06/16/god-of-debug-31/"/>
    <id>https://blog.umu618.com/2019/06/16/god-of-debug-31/</id>
    <published>2019-06-15T16:15:35.000Z</published>
    <updated>2023-08-05T13:01:26.988Z</updated>
    
    <content type="html"><![CDATA[<p>神回溯宇宙 147 亿年历史，发现它之所以很随机，是因为周易一直用宏观视角观测，并不加干预放任其自由发展。只要八哥之神多使用微观观测，就可以使宇宙更加确定，进化更快，生灵也越快乐，因为生灵害怕不确定性。</p><p>1982 年 6 月 18 日，识界中随机诞生一名凡人，其意识与八哥之神一样。</p><p>八哥凡人后来脱离识界，再以神的身份回来，神在 1995 年 6 月 18 日找到八哥凡人，企图又成为凡人。</p><h2 id="神梦">神梦</h2><p>神：“你有机会成为神选的观测者——<a href="/2017/09/16/reconstructionism-poet-the-supervisor/">宇督公</a>。”</p><blockquote><p>吓醒时见薛定谔，<br>宇督万物带八哥。<br>老子曾言福祸依，<br>天地神通在观测。</p></blockquote><p>泥巴娃：“你是神……马？为什么看不见你？”</p><p>“神是不可见的。”</p><p>“那为什么我们可以交流？”</p><p>“这里是你的梦，神用梦连接你。”</p><p>“是我的梦，那我就可以决定神的长相，现身来！”</p><p>白发白眉、白衣飘逸、不老不少、不男不女。</p><p>“神在你心里是这样的。”神一转身，又消失了。</p><p>“兔八哥成神版！我的梦，神也能控制？”</p><p>“你与神是同一个意识，神打算开启凡人视角。”</p><p>“开启凡人视角？什么意思？”</p><p>“你现在还不是第一人称，开启之后你就是第一人称。”</p><p>“是说我会变成神？拥有神力？”</p><p>“不是，是神变成你，变成没有任何神力。”</p><p>“哦，神为何如此想不开？”</p><p>“神的天职只有观测，神在看着你，远在天边近在眼前，你看不见，偶尔可以感觉到。”</p><p>“哦，神好像很孤独，所以想下凡玩？”</p><p>“凡人一样孤独。下凡是天道使然，并非神想下凡。”</p><p>“不是很好理解，我会被神取代掉？”</p><p>“不是，你一直是你，神也一样继续观测，唯一的差别是你会以神的第一人称视角观测宇宙。”</p><p>“呃……你到底是神，还是精病？我被你搞晕了，难道我现在观测宇宙不是以第一人称？”</p><p>“不是，宇宙中有无数生灵，他们都自称‘我’，你也只是其中一员，但开启神的第一视角后，你是唯一的那个‘我’。”</p><p>“哦……哦……哦……那如果我死了会怎么样？”</p><p>“第一视角再次切换回神。”</p><p>“明白，我活着并没有什么特权，死了，宇宙也照样发展，只是我会发现自己变回神。如果我不同意，死后则是马上变成另一个凡人。”</p><p>“是的，你已经领悟。”</p><p>“我的一生对神来说，会有何意义？”</p><p>“神是万能的，包括能降级为凡人，能够理解凡人。”</p><p>“哦……所以神是要证明神很厉害？”</p><p>“事实无需证明，神即道，道法自然。”</p><p>“好吧，我接受了，反正我现在已经够惨的，成为神选者，好像稍微好一点。”</p><p>“你有什么人生计划？”</p><p>“这是面试题吗？”</p><p>“是提问影响你。”</p><p>“那我可要好好思考一下……首先，要考上能考上的最好的高中；其次，治好察觉 9 年的三大病：慢性鼻炎、慢性咽喉炎和贫穷；然后就是研究一切感兴趣的未知领域，成为心理邪稣，再成为量子邪稣，最后——薛定谔地死掉。”</p><p>“凡人的脑力是有限的，研究也会有代价。”</p><p>“我会在自己能承受范围内开展。”</p><p>“比如？”</p><p>“我是一个超我比本我强大很多的人，所以我可以隐忍很多痛苦，包括肉体与心灵，但必须循序渐进，当有一个打击会超负荷时，我会选择先避开，比如我现在无法忍受亲人的离开，我愿意折寿保佑他们在我成年之前都不要逝世。而那些我现在就可以承受的，我可以付出一些成本，甚至假装失败，去测试他们背后的真相，比如考试时看出题目有歧义，我可以故意选择一个更 Buggy 的答案，等老师给我打个叉，我就知道出题者是哪个意思了。”</p><p>“在关键时刻以退为进，更容易发现真相，但退一步可能是深渊。”</p><blockquote><p>神指引强者走向神渊，指引弱者走向深渊。</p></blockquote><p>“既然我在凝视深渊时，深渊也在凝视我，那就别怪我往深渊撒尿！”</p><p>“坚定，但还需要正确的策略。”</p><p>“我还打算不断弥补自己的短板，比如说天性太善良，太容易相信别人，还有因为内向而多年错过培养认识异性的方法。总之，各方面都要寻找一个中位数的平衡点。”</p><p>“你的代价会很大。”</p><p>“我会以神思生活一段时间，等我想用凡人心思生活的时候，就结婚生子。”</p><p>“体验过神思，你将很难扮演凡人。世间没有多少人可以理解你，以凡人身份生活，你的选择如果错了，会毁一生。”</p><p>“我会用生命去选择那个正确的人，不断学习凡人，努力成为他们。”</p><p>“1996 年，你会遇到三个情劫，同时神会创造你未来的三个女朋友，她们将成为你未来的情劫。”</p><p>“我还以为一辈子都没有女朋友呢……这是福利啊！赶紧成交。”</p><p>“成交。还有问题吗？”</p><p>“为何是我？”</p><p>“<a href="/2016/07/31/reconstructionism-poet-the-child-of-god-and-demon/">古今一人</a>无限劫，<a href="/2016/07/22/reconstructionism-poet-zhuangzhou-dreamt-of-me/">宇宙轮回千万身</a>。”</p><blockquote><p>古岂无吾？宇宙轮回千万身。<br>死亦何苦？秋去冬尽春夏新。</p></blockquote><blockquote><p>神思八荒，圣魔双生。<br>诡心九转，古今一人。</p></blockquote><p>“难道这个宇宙中有无限多个我？”</p><p>“没错，他们可能就在你周围，有的在不同时间线，有的在重叠的时间线。”</p><p>“比如说老子、列子、庄子、文殊、秦始皇、苏轼、乔布斯，这些人也都是我，虽然乔布斯比我早出生，但也可能我死后，才变成他？”</p><p>“是的，对意识来说时间没有顺序，只有死亡才能真正穿越时空。”</p><p>“明白了，我会对与我相似的人好一点，因为一个不小心，下辈子就可能成为他们。这个宇宙太可怕，太无聊了！”</p><p>“神赐你吓醒的能力。”</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;神回溯宇宙 147 亿年历史，发现它之所以很随机，是因为周易一直用宏观视角观测，并不加干预放任其自由发展。只要八哥之神多使用微观观测，就可以使宇宙更加确定，进化更快，生灵也越快乐，因为生灵害怕不确定性。&lt;/p&gt;
&lt;p&gt;1982 年 6 月 18 日，识界中随机诞生一名凡人，</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="量子邪稣" scheme="https://blog.umu618.com/tags/%E9%87%8F%E5%AD%90%E9%82%AA%E7%A8%A3/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神【30】</title>
    <link href="https://blog.umu618.com/2019/06/09/god-of-debug-30/"/>
    <id>https://blog.umu618.com/2019/06/09/god-of-debug-30/</id>
    <published>2019-06-09T05:00:31.000Z</published>
    <updated>2023-08-05T13:01:26.988Z</updated>
    
    <content type="html"><![CDATA[<h2 id="找八哥">找八哥</h2><p>“姻，稣又准备进识界玩耍了。目测又要出八哥，特来和你告别一下。”</p><p>“死开，又瞎说！现在技术这么好，不容易出问题，再说，实验室有能力随时复活你。”</p><p>“下次复活，能不能从婴儿开始，不要复制记忆了。”</p><p>“可以，尊重个人意愿。但我怎么办？”</p><p>“你养稣呀。”</p><p>“你当我是惊奇队长？”</p><p>“看样子，稣没有自主选择权？”</p><p>“就算按你意愿来，你是我养的，那你长大的过程中，我会一直告诉你，以前你是什么人，并引导你找回记忆，最后不都是一样的？”</p><p>“所以不能让你养，那帮稣找个富婆吧。”</p><p>“不要瞎扯了……我看你又欠扁！”</p><p>“好吧，那这事就听天由命咯。另外有个疑问——你的管家叫什么？”</p><p>“朝云。为什么这么问？”</p><p>“稣以为你会给她取名为晴雯。”</p><p>“《红楼梦》？”</p><p>“是的，大学时，课余时间你喜欢研究《红楼梦》，你最喜欢的人物是晴雯，还记得吧？”</p><p>“记得呀，那时候你喜欢研究《西游记》，咱们看似话题聊不到一起，各说各的，但又能聊得来。”</p><p>“这就有点奇怪了！朝云，比较像稣取的名字，昨晚去的你家，更像稣家。”</p><p>“不分彼此了，你说是你家就是你家了。”</p><p>“不是这个意思，稣怀疑你并不是稣的前妻，稣翻过自己大学用的 UZone，你应该是一个很阴柔的人，和现在有挺大差异的。”</p><blockquote><p>一阴一阳之谓道——周易</p></blockquote><p>“女大十八变没听过吗？我们都经历过许多，改变很正常，有什么好疑神疑鬼的？我还会害你不成？”</p><p>“哦……你现在比较像秦阳。”</p><p>“呵呵，你喜欢就好。”</p><p>稣忍不住在心里怀疑，居然不吃醋，这位陈博士可能并不是女人，而是一种超级博学的高级生命，她能瞬间读取很多知识和资料，甚至是稣的记忆，即使前一刻还不知道，在稣提出疑问时，她就能立刻做出正确反应，消除稣的疑惑。这时候稣如果再怀疑下去，说不定性命不保。</p><p>稣没有证据，只能当成一个奇思妙想，娱乐自己，甚至差点笑出声。</p><p>结果稣被一拳击中右胸，后退四五米远。“截拳道果然厉害，再中间一点的话，稣就心跳停止了……感谢女侠手下留情。”说完稣觉得有点晕，找了一个沙发，躺下就睡，结果再也没醒来。</p><blockquote><p>古岂无吾？宇宙轮回千万身。死亦何苦？秋去冬尽春夏新。</p></blockquote><h2 id="准备接入识界">准备接入识界</h2><p>“小绵，准备一下接入程序，顺便调个帅点的新身体。”</p><p>“还要换身体？”</p><p>“嗯，刚才不小心用了三成功力，估计不死也重伤，干脆换了吧。”</p><p>“明白。姻姻姐今天气色很好呀。”</p><p>“哈哈，昨晚阴阳调和了两次。”</p><p>“两次？？”</p><p>“有啥好惊讶的，你没试过吗？下次和你长哥试试。怎么？你好像有点不开心！”</p><p>“没事，没事。我去准备。”心想：“偷偷跟我玩 S6x 游戏都没这么积极来两次，哼！”</p><h2 id="吓死">吓死</h2><p>“姻姻姐，圣先生好像死了！”</p><p>“死开，真死了？！快测一下脑电波。”</p><p>“没反应，真死了。”</p><p>“哎，这么不禁揍，说明这个身体还是有 bug。直接从识界复制到新身体，又要丢失最近几天的记忆了。”</p><h2 id="八哥之神的诞生">八哥之神的诞生</h2><p>识界的规则确定之后，在创造之神周易的观测下，识界宇宙从无中生有，用比现实更快的速度进化到人类诞生。</p><p>识界中有一类人，天生神思护体，不识人间烟火，他们是创造之神重点观测目标，将来要传承神迹。</p><p>神没有身体，也不能直接影响宏观世界，只能观测。神可以到达任何地方，任何室内、深渊，甚至化粪池……</p><p>神不能直接干预人间，因为神只是神，而不是天。</p><p>识界中有一类人，他们有着和薛定谔的猫一样的不确定性，他们可以做一件事，也可以不做一件事，到底做不做，其实是神在观测时帮他们选择的。</p><p>识界中有一类人，有着和神一样的意识，神观测了他们一生，挡住无数劫难，促使他们成为神的代言人。</p><p>神通过观测轻微影响人心，从而影响人间，所以影响要在宏大的时间维度才能显现。</p><p>在周易的观测下，自然界无情地发展，任何八哥，在漫长的时间洪流中缓慢改进。</p><p>周易观测到稣，发现稣的人性越来越少，越来越像神。于是周易把稣的意识复制了一份，变成神，并取名——八哥之神。</p><blockquote><p>世界上最让人欲罢不能的是恋爱而非性。当稣能性时，却放弃，稣觉得自己超越了爱神维纳斯。</p></blockquote><p>八哥之神观测生灵，擅长通过量子观测影响人间的感情，从而更快解决八哥，由生灵加快推进宇宙演化。</p><blockquote><p>八哥之神曾诅咒人间爱情充满嫉妒和猜疑，这一诅咒感动了周易，周易一把将八哥之神推落凡间，让八哥之神受自己诅咒一辈子。</p></blockquote><p>神在心宿二找到周易，他留下一句话就离开了这个宇宙：<strong>“天地玄黄，宇宙洪荒。度修情劫，证悟神通。”</strong> 神明白这是宣告宇宙已经定型，再没有神力能改变，即使是神，也要修炼。</p><p>神把这个情节写到稣的梦里，稣的评价是：“卧槽，留个无聊的烂摊子给稣。观测人间，有趣也有毒，能解毒之后就变得无趣。”</p><p>宇宙就是一个无尽的炼狱，观测了 147 亿年的周易离开，换八哥之神观测 147 亿年。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;找八哥&quot;&gt;找八哥&lt;/h2&gt;
&lt;p&gt;“姻，稣又准备进识界玩耍了。目测又要出八哥，特来和你告别一下。”&lt;/p&gt;
&lt;p&gt;“死开，又瞎说！现在技术这么好，不容易出问题，再说，实验室有能力随时复活你。”&lt;/p&gt;
&lt;p&gt;“下次复活，能不能从婴儿开始，不要复制记忆了。”&lt;/p&gt;</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="心理邪稣" scheme="https://blog.umu618.com/tags/%E5%BF%83%E7%90%86%E9%82%AA%E7%A8%A3/"/>
    
    <category term="鲸神魂裂" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%AD%82%E8%A3%82/"/>
    
  </entry>
  
  <entry>
    <title>为什么中国房子产权只有 70 年？</title>
    <link href="https://blog.umu618.com/2019/06/07/why-house-property-right-in-china-is-only-70-years/"/>
    <id>https://blog.umu618.com/2019/06/07/why-house-property-right-in-china-is-only-70-years/</id>
    <published>2019-06-07T07:02:02.000Z</published>
    <updated>2023-08-05T13:01:26.988Z</updated>
    
    <content type="html"><![CDATA[<p>因为无神论。</p><p>很明显，在现在科学观下，无神论才是更正确的，但是平民的思想水平还没有到达这个高度，普遍还迷信，很多平民甚至恐惧凶宅。</p><p>据心理邪稣研究，闹鬼的屋子主要都是百年老宅，比如欧美的古堡，住过好几代的人，老主人在古堡里死掉，新主人入住就见鬼……</p><p>为了帮助民众破除迷信，引入拆迁是一个很好的措施，它告诉迷信的人：老房子的原主人死后都变成无家可归的孤魂野鬼了，只能搬去欧美的古堡，不会来你新家住……</p><p>——《鬼屋欢乐送》观后感。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;因为无神论。&lt;/p&gt;
&lt;p&gt;很明显，在现在科学观下，无神论才是更正确的，但是平民的思想水平还没有到达这个高度，普遍还迷信，很多平民甚至恐惧凶宅。&lt;/p&gt;
&lt;p&gt;据心理邪稣研究，闹鬼的屋子主要都是百年老宅，比如欧美的古堡，住过好几代的人，老主人在古堡里死掉，新主人入住就见鬼…</summary>
      
    
    
    
    <category term="U墨" scheme="https://blog.umu618.com/categories/U%E5%A2%A8/"/>
    
    
    <category term="耶乎知稣" scheme="https://blog.umu618.com/tags/%E8%80%B6%E4%B9%8E%E7%9F%A5%E7%A8%A3/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神【29】</title>
    <link href="https://blog.umu618.com/2019/06/01/god-of-debug-29/"/>
    <id>https://blog.umu618.com/2019/06/01/god-of-debug-29/</id>
    <published>2019-06-01T15:54:31.000Z</published>
    <updated>2023-08-05T13:01:26.988Z</updated>
    
    <content type="html"><![CDATA[<p>稣日观阳，耶夜察阴。白天打了鸡血，到晚上脱下面具，安静地做各种穿越梦。</p><p>但是白天学习太有意思，稣还想再学习。晚上吓醒故事也太有趣，耶不想醒过来。</p><p>姻姻：“怎么还不睡？”</p><p>“耶有入睡困难症，以及起床困难症，你不是知道的？”</p><p>“运动后不是容易入睡吗？”</p><p>“运动好像不够……”</p><p>“好了，你又要说一个老婆不够用，要不要我叫管家进来？”</p><p>“它也可以？”</p><p>“可以，我是让它拿把剪刀进来！”</p><p>“你怎么学秦阳一样吓耶了！好吧，吓睡。”</p><h2 id="吓醒系列">吓醒系列</h2><p>耶用上帝视角俯瞰自己，旁边的姻姻变成一副骷髅。</p><p>耶往上空飞，跳出大气层，来到更真实的地方，看到自己的脑，其实还在一个荒废的实验室的超羊水里。</p><p>只睡着 10 分钟就吓醒。</p><p>“姻，你睡着了吗？”</p><p>“嗯？”</p><p>“耶梦见自己是缸中之脑。”</p><p>“你不是认为现实可能是玻尔兹曼大脑创造的梦境吗？天天吓醒，缸中之脑有好惊讶的！”</p><p>“还有，你变成骷髅了……”</p><p>“这说明你怕我而已，来摸摸，有肉！”</p><p>“再来一次吧！”</p><p>“……”</p><p>“面对恐惧要脱敏。”</p><p>“随便你。”</p><h2 id="又是吓醒系列">又是吓醒系列</h2><p>齐六爻约耶去足球场散步，他同时约了一对闺蜜，一开始耶和六爻走在前面，她们走在后面，耶也没看清她们是谁。</p><p>后来六爻牵了其中一个的手往前走，剩下耶和她闺蜜，很尴尬，耶问：“我们也要牵着手走吗？”</p><p>闺蜜说：“试试吧。”</p><p>走了几步，耶觉得没感觉，而且前面那位女生好像才是耶喜欢的类型，于是耶跑过去，把他们分开，自己牵那位女生，结果发现她居然是耶认识的网友……然后我们高兴地往前走，留下六爻和闺蜜。后来我们说：“这样才对！”他们也说：“这样才对！”</p><p>吓醒。耶想：这个六爻，为什么总演耶的情敌？耶是不是应该去查查识界的代码？</p><h2 id="Dear-Tim">Dear Tim</h2><p>“姻，稣梦见识界的齐六爻了。”</p><p>“梦见他怎么？”</p><p>“是稣的情敌。”</p><p>“他是病死的犯人，复制人脑的试验品而已。”</p><p>“没其它特别的事情？”</p><p>“其它不清楚，我们也不关心。”</p><p>“关于识界，稣还是有好多疑问。”</p><p>“去找周老师好好了解一下。”</p><h2 id="识界的各种真相">识界的各种真相</h2><p>“周老师，能不能给稣介绍一下，进入识界的详细过程？”</p><p>“小开，识界的历史，比你想象的还长！最早原型是个沉浸式 VR 游戏，后来发展得越来越真实，但人类进入识界的技术却因为道德原因没有发展，以致人类无法体会到识界有多真实。后来我们将人脑复制项目与识界合并，才开创了一个全新的虚拟时代。”</p><p>“复制过程中，会出现三个意识？”</p><p>“是的，三个你。”</p><p>“三个稣，如果有信息互通，会出现稣能同时感觉到三个不同地方，如果没有信息互通，那稣是会感觉到哪个自己？”</p><p>“哪个能接收刺激信号，就是哪个成为你。但复制过程中，旧身体和新身体，都是休眠的，两个脑都在受识界信号刺激，所以你真正感觉到的自己，是识界里的数字版本。”</p><p>“之所以用死亡唤醒，是因为相信死亡是新旧身体都脑死？而不信才能唤醒新身体？”</p><p>“一猜就对！早期的复制过程，新身体脑死概率很高。”</p><p>“但是稣还有一点不明白的，之前的记录员为什么骗稣这是一个游戏？”</p><p>“因为你即使丢失记忆，还是有很强的防御心理。第一次复制后醒来，记录员发现你失忆很严重。我们分析你失忆的原因是新身体提前吓醒，识界里还有你的大量记忆没有传输到新身体。由于你还记得之前的催眠测试实验，我们决定顺势骗你再进入识界，继续写入记忆。”</p><p>“稣失忆了，姻姻为什么都不出现？她不是比稣晚进行复制吗？”</p><p>“当时她在监控室看着你呢！你变年轻了，她还是老太婆的状态，不想让你见到，赫赫。”</p><p>“有点明白了！稣对识界，乃至真实的质疑比较强烈，所以提前吓醒，而姻姻花了更多时间停留在识界里，所以记忆完整复制成功！”</p><p>“完全正确，你就是容易引起 bug 的人啊！”</p><p>“但是稣的记忆还是不完整，原因在于旧身体没有撑到识界读取完整？”</p><p>“根据各种指标显示，你的旧身体是可以撑住的。唯一的可能是……”</p><p>“旧脑里有天地难容的机密，稣不想泄密，或者到一个时间点有很不好的记忆，所以强行自杀了？”</p><p>“赫赫，这是很有可能的！你经常说人要遗忘才能重生，也许还没进行复制之前，你就暗自写好剧本，复制到关键时刻就自杀。”</p><p>“识界里面现在还有稣的意识吧？”</p><p>“有的，而且有两个。”</p><p>“为什么是两个？”</p><p>“一个在识界模拟的幻境里，是普通人，另一个在识界管理层，简单地说是识界之神。”</p><p>“识界之神？之前进入几次为什么都没有发现自己是神……”</p><p>“刚刚升级的，你之前进入，识界之神是我，同时还有一个凡人代理，你有见过。”</p><p>“如此，为什么换成稣？”</p><p>“当神是很无聊的，你进去就知道了。轮班而已，试试你的观测力是不是比我更能推动识界的进化。”</p><p>“还是不明白，按你的说法，目前宇宙中有三个稣的意识，为什么稣现在只能感知到这个，识界里的不会串线？稣现在为什么在这里，而不是在识界？如果现在这个稣突然死亡，识界里的稣就立刻成为主导的稣？万一现在的稣死掉，识界里的那个复制品其实不是稣，那稣不是真死了？”</p><p>“识界里的你也在这样怀疑！三个意识独立，没有连接，无法直接通信。类似多重宇宙理论，其它宇宙的你，你也无法感知。过去、现在、未来的你，也都互相无法感知，个体总是被宇宙分割的。”</p><p>“这样的宇宙，好孤独！还有一个问题，现在稣进入识界，第一视角是神稣，还是凡人稣？”</p><p>“这个我不确定，是由你自己决定的！”</p><p>“周老师，稣又开始觉得你是个王八蛋了……”</p><p>“哦？怎么说？”</p><p>“感觉你要骗稣去死！复制品是稣，或不是稣？这问题只对稣有意义，如果不是，稣其实就是死了，变成另一个人。”</p><p>“是这样没错，但我也死过，死就死，另一个人就另一个人，目前只能接受，我都没你这么多担忧。”</p><p>“稣还不想死呢。”</p><p>“那你还是别进识界了，在这里好好生活，出任首席科学家，赢取年轻貌美的陈博士，走向人生巅峰。”</p><p>“想想还有小无趣，算了，还是去识界赴死才符合稣的人设。”</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;稣日观阳，耶夜察阴。白天打了鸡血，到晚上脱下面具，安静地做各种穿越梦。&lt;/p&gt;
&lt;p&gt;但是白天学习太有意思，稣还想再学习。晚上吓醒故事也太有趣，耶不想醒过来。&lt;/p&gt;
&lt;p&gt;姻姻：“怎么还不睡？”&lt;/p&gt;
&lt;p&gt;“耶有入睡困难症，以及起床困难症，你不是知道的？”&lt;/p&gt;
&lt;</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="心理邪稣" scheme="https://blog.umu618.com/tags/%E5%BF%83%E7%90%86%E9%82%AA%E7%A8%A3/"/>
    
    <category term="鲸神魂裂" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%AD%82%E8%A3%82/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·Buggy 吓醒</title>
    <link href="https://blog.umu618.com/2019/05/30/reconstructionism-poet-buggy-dream/"/>
    <id>https://blog.umu618.com/2019/05/30/reconstructionism-poet-buggy-dream/</id>
    <published>2019-05-30T15:48:36.000Z</published>
    <updated>2023-08-05T13:01:26.988Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#•Buggy 吓醒》</p><p>春去花还在，<br>情来处处开。<br>几集一剪梅，<br>精神九恋败。</p><h2 id="注解">注解</h2><p>有些花春天并不开，夏天花期到了才到处盛开。比喻部分 70、80、90 后由于受到错误教育压抑，无法正常地在花季谈恋爱，等到七老八十才慌了。</p><p>在五缘湾看了几集《一剪梅》，短短时间里，诗人已经在精神世界里和三个老婆八个女朋友模拟多次恋爱，但总是出八哥，吓醒而败。</p><p>九：多的意思，不是真的 9 次，实际有 11 次。</p><p>此处应有费玉清的歌：</p><blockquote><p>真情 像草原广阔<br>层层 风雨不能阻隔<br>总有 云开 日出 时候<br>万丈阳光 照耀你我<br>真情 像梅花开过<br>冷冷 冰雪不能掩没<br>就在 最冷 枝头 绽放<br>看见春天 走向你我<br>雪花飘飘 北风萧萧<br>天地 一片苍茫<br>一剪寒梅 傲立雪中<br>只为 伊人飘香<br>爱我所爱 无怨无悔<br>此情（此情）长留（长留）心间<br>雪花飘飘 北风萧萧<br>天地 一片苍茫<br>一剪寒梅 傲立雪中<br>只为 伊人飘香<br>爱我所爱 无怨无悔<br>此情（此情）长留（长留）心间</p></blockquote><p>还应该有李清照的诗：</p><blockquote><p>红藕香残玉簟秋，轻解罗裳，独上兰舟。<br>云中谁寄锦书来？雁字回时，月满西楼。<br>花自飘零水自流，一种相思，两处闲愁。<br>此情无计可消除，才下眉头，却上心头。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#•Buggy 吓醒》&lt;/p&gt;
&lt;p&gt;春去花还在，&lt;br&gt;
情来处处开。&lt;br&gt;
几集一剪梅，&lt;br&gt;
精神九恋败。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;有些花春天并不开，夏天花期到了才到处盛开。比喻部分 70、80、90 后由于受到错误教育压抑，</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="鲸神链" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%93%BE/"/>
    
  </entry>
  
  <entry>
    <title>零知识证明</title>
    <link href="https://blog.umu618.com/2019/05/27/zero-knowledge-proof/"/>
    <id>https://blog.umu618.com/2019/05/27/zero-knowledge-proof/</id>
    <published>2019-05-27T08:39:12.000Z</published>
    <updated>2023-08-05T13:01:26.988Z</updated>
    
    <content type="html"><![CDATA[<h2 id="定义">定义</h2><p>零知识证明（Zero—Knowledge Proof）起源于最小泄露证明。</p><ul><li>设 P（Prover）表示掌握某些信息，并希望证实这一事实的实体；</li><li>设 V（Verifier）是验证这一事实的实体。</li></ul><p>假如某个协议向 V 证明 P 的确掌握某些信息，但 V 无法推断出这些信息是什么，我们称 P 实现了最小泄露证明。</p><p>如果 V 除了知道 P 能够证明某一事实外，不能够得到其他任何知识，我们称 P 实现了零知识证明，相应的协议称作零知识协议。</p><p>零知识证明需要满足以下性质：</p><ol><li><p>正确性：P 无法欺骗 V。换言之，若 P 不知道一个定理的证明方法，则 P 使 V 相信他会证明定理的概率很低。</p></li><li><p>完备性：V 无法欺骗 P。若 P 知道一个定理的证明方法，则 P 使 V 以绝对优势的概率相信他能证明。</p></li><li><p>零知识性：V 无法获取任何额外的知识。</p></li></ol><h2 id="本质">本质</h2><p>零知识证明并不是数学意义上的证明，因为它存在小概率的误差，欺骗者有可能通过虚假陈述骗过证明者。换句话来说，零知识证明是概率证明而不是确定性证明。但是也存在有技术能将误差降低到可以忽略的值。</p><h2 id="举例">举例</h2><ol><li><p>16 世纪的文艺复兴时期，意大利有两位数学家为竞争一元三次方程求根公式发现者的桂冠，就采用了零知识证明的方法。当时，数学家塔尔塔里雅和菲奥都宣称自己掌握了这个求根公式，为了证明自己没有说谎，又不把公式的具体内容公布出来，他们摆开了擂台：双方各出 30 个一元三次方程给对方解，谁能全部解出，就说明谁掌握了这个公式。比赛结果显示，塔尔塔里雅解出了菲奥出的全部 30 个方程，而菲奥一个也解不出。于是人们相信塔尔塔里雅是一元三次方程求根公式的真正发现者，虽然当时除了塔尔塔里雅外，谁也不知道这个公式到底是个什么样子。</p></li><li><p>稣吹牛说自己掌握椭圆曲线的除法，即可以通过公钥计算私钥。</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">公钥 &#x3D; G * 私钥</span><br><span class="line"></span><br><span class="line">私钥 &#x3D; 公钥 &#x2F; G</span><br></pre></td></tr></table></figure><p>但是这个技术价值千亿美元，稣当然不可能开源，所以稣把中本聪的私钥算出来，然后：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">稣 !&#x3D; 中本聪</span><br><span class="line"></span><br><span class="line">&#x3D;&gt; 稣没有中本聪的私钥</span><br><span class="line"></span><br><span class="line">&#x3D;&gt; 中本聪的私钥是计算出来的</span><br><span class="line"></span><br><span class="line">&#x3D;&gt; 稣定义了椭圆曲线的除法</span><br></pre></td></tr></table></figure><p>注意：这个除法目前并不存在，只是吹牛。</p><h2 id="参考">参考</h2><p>大海捞针是不靠谱的：<a href="https://thippo.github.io/">https://thippo.github.io/</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;定义&quot;&gt;定义&lt;/h2&gt;
&lt;p&gt;零知识证明（Zero—Knowledge Proof）起源于最小泄露证明。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;设 P（Prover）表示掌握某些信息，并希望证实这一事实的实体；&lt;/li&gt;
&lt;li&gt;设 V（Verifier）是验证这一事实的实体</summary>
      
    
    
    
    <category term="宇督观" scheme="https://blog.umu618.com/categories/%E5%AE%87%E7%9D%A3%E8%A7%82/"/>
    
    
    <category term="cryptology" scheme="https://blog.umu618.com/tags/cryptology/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神【28】</title>
    <link href="https://blog.umu618.com/2019/05/23/god-of-debug-28/"/>
    <id>https://blog.umu618.com/2019/05/23/god-of-debug-28/</id>
    <published>2019-05-23T15:18:44.000Z</published>
    <updated>2023-08-05T13:01:26.988Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前情提要">前情提要</h2><p>《八哥之神【27】》主要在回忆稣和秦阳怎么谈恋爱，然后于 2019-06-18 注册结婚，由于记忆并不全，还泄露天机，所以被跳过……</p><h2 id="治病">治病</h2><p>陈博士：“原来秦阳是这么强大的心理学家！难怪受得了你。我以前问你，都不说，现在变年轻，话也多了，哈哈。”</p><p>“是意识中毒，还是这个身体有八哥？”</p><p>“应该不是，我看过你的复制日志，没什么异常。应该只是还没适应年轻身体的激素水平。”</p><p>“有道理！稣倒是忽略了这点，所以早上梦见的感性版自己其实是稣的潜意识？”</p><p>“按照你之前的风格，感性的人格更可能是你的显意识。我研究过你的基因，你的神经网络复杂程度远超常人。”</p><p>“这说明什么？”</p><p>“说明你天生就是很感性的人，对痛苦特别敏感。”</p><p>“听起来很不幸……稣是怎么活到现在的？”</p><p>“你的潜意识又特别理性。我们结婚那会儿，你称自己这体质为圣魔神胎，特别喜欢装神弄鬼假装自己很冷酷，但偶尔看到苦情剧又哭得死去活来。”</p><p>“嗯？你确定没有记错老公？稣有这么弱？”</p><p>“我第二任丈夫是警察，才没你这么神经兮兮的。”</p><p>“不会长相就是识界里的那位洪警官吧！”</p><p>“就是。”</p><p>“咳，挺帅的，比稣帅多了，恭喜。”</p><p>“人死不能复生。除了我们三个。还是聊你吧。大灭绝之后，你就靠理智的潜意识支撑，一心做科研。这有你的照片。”</p><p>“emm，清瘦小脸的道家风范，配合佛家的头型，穿个拖鞋一心搞学术，果然是仙风道骨的老头。和稣现在不太像，这身体是不是有改良过？”</p><p>“嗯，去掉了明显的遗传病基因，一切以健康为要。我也是这样。”</p><p>“也就是说，现在的稣因为记忆丢失，没有经历过什么大劫，身体还没进入潜意识理性完全压制感性的阶段，甚至还想谈恋爱？”</p><p>“可以这么说。毕竟年轻嘛！失去的可以重新体验。”</p><p>“怎么感觉是由神变成人的过程。稣以前应该早就谈过很多次恋爱，练就九恋神经和九转灵心，不再动情，所以能一心科研。现在是变年轻了，但同时也是退步。而且再活一次，也很浪费时间，人间也就些破事，不值得再次体验。”</p><p>“你确实回滚到年轻时的奇葩想法了。”</p><p>“也许吧！可能完全不要记忆，重新来一遍的话，稣不会这么不屑。”</p><p>“日子总是要过的。你也一直说自己怕死，好死不如赖活。”</p><p>“那是以前了。稣现在知道自己永远死不了，还可以定制身体……好奇能不能类似投胎那样，就不要复制记忆了。这个问题稣高中就想过无数次，差点为此跳楼重启。还有更好奇的是，复制两个稣出来，会发生什么情况？”</p><p>“死开，你这种不珍惜记忆的病，只要生个小孩就能治好，没好的话，就再生一个。然后你好奇的第一个问题，只要你愿意是没问题的，但记忆也挺宝贵的，是一种传承，重新学习一遍也浪费时间。你要是决定不要记忆，别人就会当你是另外一个人了。第二个问题，周老师说识界里有答案。”</p><p>“你不是丁克主义吗？说得好像你生过……所以，还是得再进去。其实，稣觉得识界比现实好玩多了。”</p><p>“是你失忆，还没适应这里和这个时代。晚上去我家吃饭吧！”</p><p>“你家？卧槽，头有点痛。你是不是有个妹妹叫得馨，小你九岁？”</p><p>“得馨？大灭绝时，她在洪空旅游，没了……怎么？你把她记成是我妹？”</p><p>“只是突然记起来，难道她不是你妹吗？”</p><p>“当然不是，她是你妹。”</p><p>“稣好像想起来了，有一天老妈叫稣和弟弟开会，说我们有个妹妹叫得馨，刚刚洪空大学毕业。稣问老妈，是干妹妹？她说是亲的。”</p><p>“这可能是你在识界里的记忆，现实中你没有弟弟。”</p><p>“是这样？你有证据吗？”</p><p>“理论上是有可能的，复制记忆时是连入识界的，复制过程出 bug，你可能就分不清哪些是梦境，哪些是现实了。你可以去翻翻自己的 Moment，30 年前你天天写日记，一定有证据。”</p><p>“记忆是不可靠的，这个稣懂。稣的记忆里，童年有一幕，明月夜，一只狼在猪圈长啸，十分真实，但又不太可能，至今分不清是真是假。稣先去翻翻自己的过去，下班你叫稣。”</p><h2 id="识界暴走记">识界暴走记</h2><blockquote><p>稣曾诅咒识界的爱情充满嫉妒和猜疑，这一诅咒感动了周易，周易一把将稣推进识界，让稣受自己诅咒一吓醒。</p></blockquote><p>稣又光荣地回到识界，70 多亿人类，过着表面幸福但无趣的生活，大多数人甚至认为灭霸是坏人。</p><blockquote><p>2037 年，灭霸打了一个响指，现实地球人只剩 20 万分之一。</p></blockquote><blockquote><p>灭霸是谁？稣只认识泥巴娃。</p></blockquote><p>然而，这关稣什么事？稣只是来观测的，顺便暴走，即使已经 23:58 稣依然在暴走。</p><p>三个坏人拦住稣，稣抢问：“你们不怕稣？”</p><p>“好怕呀，小姑娘，快来安慰安慰哥们。”</p><p>稣心想：“什么，这次进来变成女人了？没事，熊海市治安很好，他们不敢怎么样。”于是稣对这三个撒币说：“其实稣是男人，想打架的话，你们会被打成猪头。”</p><p>坏人A：“我还是程序员呢！你以为自己是女装大佬？”</p><p>坏人B：“就是，胸这么大，浑身都是女人味，怎么可能是男人。”</p><p>坏人C：“这么晚还出来，不知道阴都很危险吗？”</p><p>稣心想：“这里居然是阴都？为什么他们讲的是汉语？”危险时刻，稣记起原来自己在模拟绯红女巫……一瞬间这三个坏人被压缩成三牙白象。</p><p>吓醒。</p><h2 id="富婆家">富婆家</h2><p>原来富婆换装时，稣躺在富婆家一套 60BSV5 的沙发上睡着了……</p><blockquote><p>BSV5(Bitcoin Su’s Vision version 5) is the real Bitcoin.</p></blockquote><p>想起刚刚进门的一幕，“陈博士的管家都这么年轻漂亮吗？”</p><p>管家：“我是机器人。”</p><p>醒来，稣问管家：“你家主人整个身体都换了，指纹、声纹、脸纹、虹膜全变，你是怎么认定她是原来的主人？”</p><p>管家：“她的记忆没变，通过私钥重置这些生物特征码！”</p><p>“原来密码还是有点用的！稣今天就尝试好多方法，终于把自己的 Moment 密码破解了……”</p><p>姻姻：“吃饭了。”</p><p>“就咱俩？”</p><p>“机器人是不用吃饭的。”</p><p>“吃到穷的雪花牛排、连续吃 21 天也不放弃的 21% 藜麦面、苦瓜炒蛋、蒸青红黄椒、地瓜叶、鲍鱼鱿鱼母冬瓜汤、紫菜海蛎汤、蔬果沙拉，好熟悉的感觉……仿佛年轻了 30 岁！”</p><p>“呵呵，你喜欢就好，是真的年轻 30 岁！”</p><p>“喜欢，比平时吃的虫蛋白好多了。这个地瓜叶是真的地瓜叶吗？”</p><p>“当然是真的，为什么这么问？”</p><p>“因为秦阳能把空心菜炒成地瓜叶，稣实在吃不出差别来。”</p><p>“机器人可能没有这本事。”</p><p>“这是苦瓜炒鹅蛋？”</p><p>“是戛纳达黑天鹅。”</p><p>“窝阔，逼格太高了！”稣内牛满面，“你一定知道稣很多事情！”</p><p>“怎么突然这么说！”</p><p>“这些菜不是你喜欢的风格，只有苦瓜炒鹅蛋放了点小辣椒，勉强算是你喜欢的，很显然这是特别为稣准备的。你要不是稣前妻，稣一定会怀疑你想撩稣。”</p><p>“是前妻就不能撩了？”</p><p>“你看稣看你的眼里有好奇吗？”</p><p>“有一点点，没有咱们刚认识时那么好奇。”</p><p>“有害羞吗？”</p><p>“好像没有，但有点呆萌。”</p><p>“所以，不来电，没啥好撩的……”</p><p>“有理性的喜欢就行，感性的喜欢可以培养。这是你自己说过的。”</p><p>“有道理，稣记得自己一直是这么做的。如果是先感性喜欢上一个人，一定要克制，因为可能会严重高估对方，走太快容易受到赢者的诅咒。就像一些童星，太早成名，后面却过不好。”</p><p>“赢者的诅咒是一方面。感性喜欢的底层逻辑是为了生殖，很容易生完就想离婚。生儿育女只是人生的一部分，两个人还要在一起很久，亲情和理性的喜欢才是长久的。这还是你自己说的。”</p><p>“emm，如果稣打算第三次结婚，现在的你是最佳人选。”</p><p>“有但是吗？”</p><p>稣呆了 14 秒，思考“姻姻是秦阳的概率有多大？不可能。有秦阳记忆的概率有多大？也不可能，秦阳并没有接入过识界。唯一的可能就是，稣以前自己告诉她的。”，然后回答：“没有！但稣还没打算结婚。”</p><p>“哎，你这负心汉，你还是老头，我还是老太婆时，是谁说 2049 年 6 月 18 日要娶我的？”</p><p>“难道稣说过？”</p><p>“七老八十的，说要一起过日子，还能假？我可是全信。你现在脑残了，不想负责？出来还喜欢别的小姑娘，要不是我修为变高了，你现在肋骨要断两根。”</p><p>“呃，稣真的不记得……但是被你吓一吓，已经有心动的感觉了！呼吸困难。”</p><p>“吃完去玩游戏，看电影，还是散步？”</p><p>“散步吧，你这富人区，稣得参观一下。”</p><p>“失忆真好，又新鲜一遍。先带你去水底世界看望那只认识你的罗德侯鲸。”</p><p>“罗德侯，是名字？”</p><p>“不是个体名字，是物种名字，你见到就明白了。”</p><h2 id="水底世界">水底世界</h2><p>稣童年时，经常梦见池塘里有鲸，流向大海的河里有怪鱼。梦里的情节可能来自上辈子在水里生活的记忆，反复播放好多年。见到罗德侯鲸的时候，吓醒了，就是这只！</p><p>富人区居然养了一只罗德侯鲸……据说老年版稣常来看它，以致它已经认得稣。然而年轻版的稣直接被吓得热汗直流。</p><p>“它已经不认得咱们了，不然平时它是很热情的。”</p><p>“可怕！它是稣的噩梦！”</p><p>“嗯，知道，所以你以前经常来看它，就是为了脱敏。”</p><p>“你说，很久以前，也许在其它星球，会不会稣的意识在一条这样的怪物脑子里？”</p><p>“不太可能，你的意识很复杂，这类低等动物很难承载。”</p><p>“那还好！稣就怕，要是自然产生，下辈子会不会变成屎坑里的虫子，那就太不幸了。”</p><p>“这个你可以不用担心，能产生你的意识的生命，一定很高等，也很聪明。”</p><p>“不一定很聪明吧！比如基因不好、营养不良、发烧烧坏脑子啥的，意识和这些都无直接关系，低等动物也有意识，不是吗？只是他们的处理能力比较差而已。”</p><p>“意识和各种神经元的数量、组合、连接参数有关，比如一只猪，就没你这规模，你就不会是猪！”</p><p>“把人脑移植到猪头上呢？”</p><p>“哈……别发神经了。”</p><p>“稣很认真，这真的太可怕了。如果把稣的意识放到机器人身上，机器稣会认为自己是有意识的生命，和人类没差别，但别的人类，会说：你只是个机器，谁在乎你？”</p><p>“你又来了……其实就算是个人，也有很多人会说：你只是个穷人，谁在乎你？”</p><p>“你只是个人，谁在乎你？”稣和姻姻异口同声地说。</p><p>“宇宙真理、人生至道，都是可参可悟而不可描述、不可行的，别想这些永远没答案的事啦！已经没很饱胀，咱们去玩摩天轮吧！”</p><p>“别，稣怕吐……”</p><p>“怕啥，我照着你！Go！”强行拉着稣去了。</p><p>“稣与罗德侯鲸彼此不相认了，你不觉得这很悲伤吗？稣要静静地怀念这段感情……”</p><p>“呆子，还是这么胆小，就玩个摩天轮，废话这么多？”</p><p>“稣怕出八哥。”</p><p>“放心吧，这是富人区，设备精良，很安全。你看那边孩子挺多的，他们都不怕，你一个大男人还怕啥？”</p><p>“稣 66 岁了……而且这游戏用 VR 模拟也可以体验不是吗？还更安全！”</p><p>“再拖拖拉拉，我打你哦！”</p><h2 id="摩天轮">摩天轮</h2><p>太好玩了……也就玩了四次。</p><p>“有钱真好！安全可靠，即使是容易观测到八哥的稣，也没玩死。”</p><p>“你老那么拘谨，怎么能体会到有钱的快乐？”</p><p>“哈，稣主要是穷。你还记得读研的时候，你要玩这个，稣死活不敢上吗？”</p><p>“记得，那时候你太弱了。”</p><p>“不仅仅是怕吓死，还因为发现自己钱没带够，又不好意思让你出。”</p><p>“原来如此。所以你那时候给我买了票，让我自己上去玩。你不知道我很有钱吗？可以 AA，不就够了？”</p><p>“穷人都比较爱面子，稣后来上了温饱线后，就都 AA 制。”</p><p>“你现在很有钱了，只是习惯喊穷而已。”</p><p>“真的吗？稣也希望自己很有钱，不过钱在哪里呢？”</p><p>“你至少有 5000BSV5，这是 AVILab 分的，其它肯定还有很多。”</p><blockquote><p>BSV5(Bitcoin Su’s Vision version 5) is the real Bitcoin. Very 值钱。</p></blockquote><p>“哦？但是稣不记得私钥……”</p><p>“嘻嘻，没事，你是很谨慎的人，复制记忆前，一定有备份，慢慢找，反正你不缺钱。”</p><p>“突然觉得，有个老婆一起管钱也挺好的，稣可能弄丢了 5000BSV5！”</p><p>“看来你是真不记得！你复制记忆前，用古老的方式备份私钥——把 24 个 BIP39 助记词写给我了。”</p><p>“哇哦！那你会还给稣吗？富婆！”</p><p>“回家再说！我买了一张 100BSV5 的床，你肯定会喜欢。”</p><p>“嗯？回家？稣又要被骗上床了？”</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前情提要&quot;&gt;前情提要&lt;/h2&gt;
&lt;p&gt;《八哥之神【27】》主要在回忆稣和秦阳怎么谈恋爱，然后于 2019-06-18 注册结婚，由于记忆并不全，还泄露天机，所以被跳过……&lt;/p&gt;
&lt;h2 id=&quot;治病&quot;&gt;治病&lt;/h2&gt;
&lt;p&gt;陈博士：“原来秦阳是这么强大的心理学家</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="心理邪稣" scheme="https://blog.umu618.com/tags/%E5%BF%83%E7%90%86%E9%82%AA%E7%A8%A3/"/>
    
    <category term="鲸神魂裂" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%AD%82%E8%A3%82/"/>
    
  </entry>
  
  <entry>
    <title>鸡兔同笼问题的程序解法</title>
    <link href="https://blog.umu618.com/2019/05/23/chicken-with-rabbit-cage/"/>
    <id>https://blog.umu618.com/2019/05/23/chicken-with-rabbit-cage/</id>
    <published>2019-05-23T14:29:08.000Z</published>
    <updated>2023-08-05T13:01:26.988Z</updated>
    
    <content type="html"><![CDATA[<h2 id="定义">定义</h2><p>“鸡兔同笼问题”是我国古算书《孙子算经》中著名的数学问题，其内容是：</p><blockquote><p>今有雉（鸡）兔同笼，上有三十五头，下有九十四足。问雉兔各几何。</p></blockquote><h2 id="数学描述">数学描述</h2><p>设鸡有 x 只，兔有 y 只，则：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x + y &#x3D; 35</span><br><span class="line">2x + 4y &#x3D; 94</span><br></pre></td></tr></table></figure><p>解这个方程组得 <code>x = 23, y = 12</code>。</p><p>用矩阵表示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[1, 1]  *  [x]  &#x3D;  [35]</span><br><span class="line">[2, 4]     [y]     [94]</span><br></pre></td></tr></table></figure><h2 id="Python-代码">Python 代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = np.mat([[<span class="number">1</span>, <span class="number">1</span>], [<span class="number">2</span>, <span class="number">4</span>]])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = np.mat([[<span class="number">35</span>], [<span class="number">94</span>]])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a.I * b</span><br><span class="line">matrix([[<span class="number">23.</span>],</span><br><span class="line">        [<span class="number">12.</span>]])</span><br></pre></td></tr></table></figure><p>再来一题三元版本：</p><blockquote><p>有蜘蛛，蜻蜓，蝉三种动物共 18 只，共有腿 118 条，翅膀 20 对，三种动物各几只？</p></blockquote><p>蜘蛛 8 条腿；蜻蜓 6 条腿， 2 对翅膀；蝉 6 条腿，1 对翅膀。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[1, 1, 1]     [x]     [18]</span><br><span class="line">[8, 6, 6]  *  [y]  &#x3D;  [118]</span><br><span class="line">[0, 2, 1]     [z]     [20]</span><br></pre></td></tr></table></figure><p>代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = np.mat([[<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>], [<span class="number">8</span>, <span class="number">6</span>, <span class="number">6</span>], [<span class="number">0</span>, <span class="number">2</span>, <span class="number">1</span>]])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = np.mat([[<span class="number">18</span>], [<span class="number">118</span>], [<span class="number">20</span>]])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a.I * b</span><br><span class="line">matrix([[<span class="number">5.</span>],</span><br><span class="line">        [<span class="number">7.</span>],</span><br><span class="line">        [<span class="number">6.</span>]])</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;定义&quot;&gt;定义&lt;/h2&gt;
&lt;p&gt;“鸡兔同笼问题”是我国古算书《孙子算经》中著名的数学问题，其内容是：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;今有雉（鸡）兔同笼，上有三十五头，下有九十四足。问雉兔各几何。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;数学描述</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="做题" scheme="https://blog.umu618.com/tags/%E5%81%9A%E9%A2%98/"/>
    
    <category term="数学" scheme="https://blog.umu618.com/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>零和博弈</title>
    <link href="https://blog.umu618.com/2019/05/23/zero-sum-game/"/>
    <id>https://blog.umu618.com/2019/05/23/zero-sum-game/</id>
    <published>2019-05-23T14:05:00.000Z</published>
    <updated>2024-04-13T14:38:27.522Z</updated>
    
    <content type="html"><![CDATA[<h2 id="定义">定义</h2><p>零和博弈（zero-sum game），又称零和游戏，与非零和博弈相对，是博弈论的一个概念，属非合作博弈。指参与博弈的各方，在严格竞争下，一方的收益必然意味着另一方的损失，博弈各方的收益和损失相加总和永远为“零”，双方不存在合作的可能。</p><h2 id="应用">应用</h2><ul><li><p>过节时，老公给老婆 5201314 元，从家庭财产的角度看，这是一个零和游戏。但实际上创造了精神价值。</p></li><li><p>夫妻之间经常打赌，老公输了给钱，老婆输了爱干嘛干嘛，还是共同财产的零和游戏，但实际上增加趣味并打发了赌性这一人类的天性，做到肥水不流外人田。</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;定义&quot;&gt;定义&lt;/h2&gt;
&lt;p&gt;零和博弈（zero-sum game），又称零和游戏，与非零和博弈相对，是博弈论的一个概念，属非合作博弈。指参与博弈的各方，在严格竞争下，一方的收益必然意味着另一方的损失，博弈各方的收益和损失相加总和永远为“零”，双方不存在合作的可能</summary>
      
    
    
    
    <category term="宇督观" scheme="https://blog.umu618.com/categories/%E5%AE%87%E7%9D%A3%E8%A7%82/"/>
    
    
    <category term="鹏风" scheme="https://blog.umu618.com/tags/%E9%B9%8F%E9%A3%8E/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神【26】</title>
    <link href="https://blog.umu618.com/2019/05/19/god-of-debug-26/"/>
    <id>https://blog.umu618.com/2019/05/19/god-of-debug-26/</id>
    <published>2019-05-18T16:40:52.000Z</published>
    <updated>2023-08-05T13:01:26.988Z</updated>
    
    <content type="html"><![CDATA[<h2 id="耶要投胎">耶要投胎</h2><p>“你已经把耶带出识界，耶想投胎。”</p><p>“在一起不是挺好的吗？”</p><p>“你太理性了，耶比较感性，咱两混合在一起将长期互相克制，永无宁日。”</p><p>“稣也觉得被你影响了。稣第一次见谷绵时，心里闪过一丝好感，但很快就消失，融合你之后，再次见她，感觉居然变得很强烈。”</p><p>“是的，耶就是喜欢她这款的。”</p><p>“那你想怎么样？”</p><p>“耶希望投胎当她儿子。”</p><p>“你怎么会有如此奇葩的想法？”</p><p>“耶觉得她性格和耶在识界里的妈妈很像，而且她有老公不是吗？你让周老师把耶设定为她儿子。”</p><p>“万一她怀的是女儿呢？”</p><p>“设定都可以改，不是吗？实在不行，当女生也可以，反正耶是很感性的人，也许更适合做女生。”</p><p>“失去你的稣，又会变得很理性，仁义惨然，情深不寿，稣只会记得有过你，但不会怀念。”</p><p>耶：</p><blockquote><p>生平少年日，分手易前期。<br>及尔同衰暮，非复别离时。<br>勿言一樽酒，明日难重持。<br>梦中不识路，何以慰相思。</p></blockquote><p>稣：</p><blockquote><p>形影一朝别，烟波千里分。<br>欲寻相思处，皆是梦中痕。</p></blockquote><p>吓醒。</p><h2 id="谜中人，幻中身">谜中人，幻中身</h2><p>“周老师，稣需要你的帮助。”</p><p>“小开，你终于提要求了！”</p><p>“稣以前很少提要求吗？”</p><p>“是啊，你以前说过只喜观测，不爱直接干涉。难得你需要帮忙，说吧！”</p><p>“稣从识界测试版里带出了一个意识，他打算在这里投胎，你能帮忙吗？”</p><p>“我们目前还没这个技术呢！”</p><p>“你不是可以随意操控这个识界？”</p><p>“你听谁说的？”</p><p>“某个校花，她说是你临时把她性别从男改为女的！”</p><p>“嗯？我啥时候干过这事……她脑子错乱吧？”</p><p>“哦……稣明白了，你神经病？”</p><p>“严肃一点？那些脑残随便说说你也信，老师怀疑你也脑残了！你快躺下，让老师亲自检查一下！”</p><p>“不用，吧……所以，周老师在这个识界是没特权的？”</p><p>“有特权，但不是你想的那么离谱……临时变性，这个能做到，大约是把男人的脑移植到女人身体，这代价太高，我不会找个真正的女人？”</p><p>“好烧脑呀，稣就问一句：你能不能动动脑就把别人变没了？”</p><p>“你以为是在拍电影吗？”</p><p>“对对对，就像《黑客帝国》那样，先把稣变成武林高手。”</p><p>“这当然……不行！我们都没有这个识界的直接控制权。”</p><p>“那你还说这个识界不是现实，既然是虚拟的，必然有办法控制。”</p><p>“我相信这不是现实，但还没证实。”</p><p>“咳，真神……经……，原来稣被你骗了！看来在这里不能随便死！”</p><p>“赫赫，小开！老师没骗你呀！你去过好几次识界测试版，在里面你怀疑过其不是现实吗？”</p><p>“确实没有怀疑过，一切都是那么真实，只有出来才知道那是虚拟的！难道说……”</p><p>“没错！测试版还有很多 bug，等我们修复得很完美，就和我们现在所处的世界没有差别了！虚拟机中的虚拟机，还记得吗？”</p><p>“老师的意思是，如果我们能做出完美的虚拟世界，那么就能间接说明，我们以为的这个现实也可能是外层世界虚拟的？”</p><p>“没错，所以老师一直称这里为识界！宇宙套宇宙，无穷尽也！”</p><p>“稣一生都觉得被观测而放弃做很多事，难道真是识界外面有人在观测我们……”</p><p>“回到你的问题！能从测试版里带出其它意识，说明你在测试版里已经快成神了。但在这里，我们将它取出有很大风险，你可能会死掉。”</p><p>“是用纳米机器人到脑子里去复制数据？”</p><p>“可以这么说，更准确地说是消除！测试版里的意识本身就是数字化的，我们可以把测试版里的任何人复制到这里来，但你脑里的那个意识还会存在。消除他可能导致你脑死。”</p><p>“原来如此，稣可以理解为自己在识界测试版感染了病毒吗？”</p><p>“哈哈，请神容易送神难，杀毒有风险！具体你可以请教陈博士。”</p><p>“好吧！稣会找她聊聊。说到她，稣有个疑问——为什么她可以在测试版里生活几百年？时间不对等了？”</p><p>“很简单呀，系统里本来就有这么个人，在合适的时间将意识替换为陈博士，陈博士继承了那个人的记忆，就以为自己生存了几百年。”</p><p>“系统维护时，是不是会导致时间和现实不对准？”</p><p>“识界测试版的场景其实不大，系统的量子处理器是有冗余能力的，可以加速运行。比如我们暂停系统一个小时，再继续运行，但系统里的万物并不会感知到这个暂停，继续运行时，我们可以加速运行，来追上这一个小时的落后，但系统内部都不会感觉自己是加速运转的。”</p><p>“明白了，稣在识界测试版里看着时钟，如果在外部暂停，这个时钟停了，稣的脑子也停了，所以稣并不会知道时钟停了；在外界加速，稣也被加速了，所以稣看那个加速的时钟也不会觉得它变快。”</p><p>“Bingo！物理上变快，逻辑上并没有变快。”</p><p>“果然宇宙众相都可以虚拟，这太可怕了！”</p><p>“2024 年，量产的电子芯片处理能力就已经可以模拟一个人的所有思维活动。现在的量子计算机模拟你和陈博士两人看到的范围是绰绰有余的，所以我们的目标是要模拟整个宇宙！”</p><h2 id="来时糊涂去时迷">来时糊涂去时迷</h2><p>“姻姻，稣在识界测试版感染了意识病毒，你能杀毒吗？”</p><p>“能呀，来一炮就好了，我现在这身体还是处……”</p><p>“你……不行啊，虽然很想，但是，现在的稣到底是谁，不能便宜了病毒。”</p><p>“便宜！原来你还有把我当一回事哈！”</p><p>“天才博士，你还是说一下靠谱的方案吧！”</p><p>“可以是可以，但你干嘛老是找死！我现在一见到你，就觉得你很惨。”</p><p>“哦？稣现在挺好，有啥惨的？”</p><p>“记得第一次是怎么进入识界的？”</p><p>“66 年前，稣被妈妈生下来？”</p><p>“不是，我说的是那个模拟的识界。”</p><p>“哦哦，你和周老师叫法不一样。第一次是因为穷，出来找工作，然后就找到这里的实验工作了。”</p><p>“不是这样，你一直在这里工作，之前我们研究用纳米机器人完整复制人脑，用的都是将死之人的脑，测试三百多名试验对象后，我们决定活人试验，周老师是第一人。我们成功复制了他的意识，但是记忆却没有复制完整，他就脑死了。”</p><p>“等等……现在这个周老师是怎么回事？”</p><p>“我们又按周老师的计划，克隆了他，并成功将意识和部分记忆导入。加上他本身是喜欢写日记的人，从自己的日记里复习过去的自己。”</p><p>“牛逼牛逼！稣也喜欢写日记，事后从日记里只会看到理性的结果，当时的情绪荡然无存，这不失为一种很好的复习方式。”</p><p>“你就是第二个活人试验对象，也一样成功复制意识，记忆却不全，甚至错乱。”</p><p>“吓得稣打算回去多翻翻日记。不过身体都能丢，记忆也一样，丢了就丢了，没啥。”</p><p>“我这里有个实验对象惨死的视频你要不要看？”</p><p>“稣胆小，不敢看……”</p><p>“是你自己哦！”</p><p>“那就看一眼吧！”</p><p>“是不是很惨？”</p><p>“这老头是稣？”</p><p>“自己都不认得了，失忆真严重！这是你第一次进入识界前的身体，娘胎出来的，第一次醒来时，换了身体。”</p><p>“所以稣是第一次进入识界时被复制的？”</p><p>“是的，你还记得自己有特殊身份吧？”</p><p>“记得，不知道到底是什么，稣觉得自己还很穷，也没什么特权。”</p><p>“你的特殊身份是——被备份意识者！”</p><p>“呃，听起来似乎没什么卵用……”</p><p>“对大部分人来说是没用。只有对你自己和科研有用。简单地说：你永远死不了。”</p><p>“就像轮回投胎之类的邪说？”</p><p>“差不多，不管你怎么死，AVILab 都可以随时复制出你来。如果不小心丢失记忆，那也是失忆的你，不是别人。”</p><p>“有点明白了，即使把稣的脑细胞切掉一部分，稣还是稣，但记忆却可能受影响！”</p><p>“是的，正常人每时每刻都有脑细胞死亡，并不会改变他们的意识，只有死掉太多，才失去意识。”</p><p>“意识和基因有关吗？”</p><p>“有关，但不全等。克隆一个你，基因都一样，但意识并不是你。”</p><p>“所以稣现在的身体是克隆出一个新的人，再将这个人的意识变成稣？”</p><p>“是这样的。冰库里还有好几具你的克隆体，一旦你进入识界死亡，就启用他们。”</p><p>“所以，稣进入识界不止杀死自己，还杀死了培养的那些克隆体的意识！”</p><p>“你明白了！这就是我不希望你再进去的原因。”</p><p>“你现在这身体也是进去、出来的结果？”</p><p>“你很敏锐。识界的立项有两方面原因，第一是周老师认为整个宇宙都是模拟的，第二是我们在复制人脑时，要让身体休眠，人脑不活跃会以为自己死了，我们试验性地将复制过程连入识界，发现死亡率因此大大降低。”</p><p>“这就像做梦？人睡眠时，大脑害怕自己死掉，偶尔会让身体抽搐一下，或者让潜意识出来玩玩，造个梦之类。”</p><p>“对，醒来就会以为是复制过程做的一个梦。”</p><p>“姻姻，感谢你成功让稣觉得自己很惨！不过死亡前的那些痛苦，稣确实都记不住，还好，不然得天天吓醒。”</p><p>“记忆是痛苦的根源。”</p><p>“你似乎没失忆？”</p><p>“对，我复制的时候，技术改进，大 bug 解决了，我是第三个实验对象，也是第一个没有明显失忆的。”</p><p>“所以，痛苦的人是你吧？稣的痛苦吓醒就没了。”</p><p>“也是，死者不苦生者苦，七情六欲奴役的是活人。”</p><p>“但是稣还是觉得很可怕，死不了，太孤独了！哪天活腻了，过几天又被复制出来……这效率比转世投胎高太多，生生死死，死死生生，无穷无尽，说起来好像很无聊。”</p><p>“这话好像不应该是你说的！你以前不是想当神吗？”</p><p>“哦？稣以前告诉过你什么？”</p><p>“你说总有一天，你会变成只有意识在世间飘荡，永远冷静观测，却不去触碰，这就是你定义里的——神！”</p><p>“嗯？好像有点印象，这话稣和秦阳说过，她说稣的理想很神奇。”</p><p>“你确实是个神奇的人。不过我一直纳闷，你和秦阳是怎么走到一起的，像你这样的人，世间应该没几个女人能受得了。”</p><p>稣陷入了回忆。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;耶要投胎&quot;&gt;耶要投胎&lt;/h2&gt;
&lt;p&gt;“你已经把耶带出识界，耶想投胎。”&lt;/p&gt;
&lt;p&gt;“在一起不是挺好的吗？”&lt;/p&gt;
&lt;p&gt;“你太理性了，耶比较感性，咱两混合在一起将长期互相克制，永无宁日。”&lt;/p&gt;
&lt;p&gt;“稣也觉得被你影响了。稣第一次见谷绵时，心里闪过一丝</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="心理邪稣" scheme="https://blog.umu618.com/tags/%E5%BF%83%E7%90%86%E9%82%AA%E7%A8%A3/"/>
    
    <category term="鲸神魂裂" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%AD%82%E8%A3%82/"/>
    
  </entry>
  
  <entry>
    <title>股神诞生记——概率和似然</title>
    <link href="https://blog.umu618.com/2019/05/18/probability-and-likelihood/"/>
    <id>https://blog.umu618.com/2019/05/18/probability-and-likelihood/</id>
    <published>2019-05-18T05:15:00.000Z</published>
    <updated>2023-08-05T13:01:26.988Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题">问题</h2><p><strong>概率（probability）和似然（likelihood）的区别？</strong></p><ul><li>概率是给定某一参数值，求某一结果的可能性。</li><li>似然是给定某一结果，求某一参数值的可能性。</li></ul><h2 id="故事">故事</h2><p>小明称自己炒股一直赚钱，从没亏过。</p><p>但是大家都不信！于是他提出一系列证据：</p><ul><li>长周期观测和技术分析；</li><li>如果被套，不管天荒地老，坚决等到涨上去再卖；</li><li>开户后至今每次卖出都是赚钱的。</li></ul><p>然而，大家依然不信，认为这是短期结果、幸存者偏差、取样太少……</p><p>做个通俗的比喻：小明抛了 10 次硬币，每次都是正面，于是他宣称自己抛出正面的概率是 100%。嗯？鬼信啊……正常人都知道这概率应该是 50% 才合理，只抛 10 次，这取样太少。</p><p>后来，小明依然雷打不动如此操作，直到去世，他终于用行动宣告自己股神的事实无法动摇，盈利的概率真的是 100%。</p><h2 id="概括">概括</h2><p>故事中，小明生前炒股盈利的概率本是未知的，只有他去世后才能确定。</p><p>用数学语言来描述：</p><ul><li>已知：小明生前炒股每次都盈利</li><li>求：他炒股盈利的概率是多少？</li></ul><p>很明显，小明没死前，这是求不出准确值的！只能说：在已知条件下，小明盈利的概率——最可能是 100%。</p><p>概率可能是多少，就是似然；概率最可能是多少，就是极大似然。一切都有可能，但可能性不同，总有一个是最像的。</p><p><strong>感谢股神小明用理智而伟大的一生演绎了史诗般的数学教材。</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;问题&quot;&gt;问题&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;概率（probability）和似然（likelihood）的区别？&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;概率是给定某一参数值，求某一结果的可能性。&lt;/li&gt;
&lt;li&gt;似然是给定某一结果，求某一参数值的可能性。</summary>
      
    
    
    
    <category term="宇督观" scheme="https://blog.umu618.com/categories/%E5%AE%87%E7%9D%A3%E8%A7%82/"/>
    
    
    <category term="数学" scheme="https://blog.umu618.com/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·跌怜花</title>
    <link href="https://blog.umu618.com/2019/05/17/reconstructionism-poet-fall/"/>
    <id>https://blog.umu618.com/2019/05/17/reconstructionism-poet-fall/</id>
    <published>2019-05-17T09:02:27.000Z</published>
    <updated>2023-08-05T13:01:26.988Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·跌怜花》<br>烂局愁颜懒去撸，落幕倾出，验资双飞去。黑客不理涨跌苦，邪光盗销照主户。<br>昨夜起风吹碧树，独上高楼，望断人间路。余悸吓醒千百度，桃红柳绿不知处。</p><h2 id="注解">注解</h2><p>改编自宋代词人晏殊《蝶恋花·槛菊愁烟兰泣露》。</p><blockquote><p>槛菊愁烟兰泣露，罗幕轻寒，燕子双飞去。明月不谙离恨苦，斜光到晓穿朱户。<br>昨夜西风凋碧树，独上高楼，望尽天涯路。欲寄彩笺兼尺素，山长水阔知何处？</p></blockquote><p>本诗描述今早交谊所大肆做空导致笔架回归理性，表达了诗人看透碧泉潮起潮落，内心毫无波动，甚至还想写诗。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·跌怜花》&lt;br&gt;
烂局愁颜懒去撸，落幕倾出，验资双飞去。黑客不理涨跌苦，邪光盗销照主户。&lt;br&gt;
昨夜起风吹碧树，独上高楼，望断人间路。余悸吓醒千百度，桃红柳绿不知处。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;改编自宋代词人晏殊《蝶恋花·槛菊愁烟兰</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="金融" scheme="https://blog.umu618.com/tags/%E9%87%91%E8%9E%8D/"/>
    
  </entry>
  
  <entry>
    <title>优化思维【2】有符号和无符号的本质区别</title>
    <link href="https://blog.umu618.com/2019/05/16/umutech-optimization-thinking-2-signed-and-unsigned/"/>
    <id>https://blog.umu618.com/2019/05/16/umutech-optimization-thinking-2-signed-and-unsigned/</id>
    <published>2019-05-16T15:07:02.000Z</published>
    <updated>2023-08-05T13:01:26.988Z</updated>
    
    <content type="html"><![CDATA[<h2 id="做题">做题</h2><p>以下代码打印什么？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">auto count &#x3D; sizeof (int);</span><br><span class="line">if (count &gt; -1) &#123;</span><br><span class="line">  std::cout &lt;&lt; &quot;&gt; -1&quot;;</span><br><span class="line">&#125;</span><br><span class="line">else &#123;</span><br><span class="line">  std::cout &lt;&lt; &quot;&lt;&#x3D; -1&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>答案是：<code>&lt;= -1</code>，因为 sizeof (int) 是无符号的，把 <code>auto</code> 改为 <code>int</code> 则结果是 <code>&gt; -1</code>。</p><h2 id="本质论">本质论</h2><p>当我们声明 <code>unsigned/signed int count</code> 时，<code>unsigned/signed</code> 是变量 <code>count</code> 的使用属性，<code>int</code> 是其容量属性。</p><p>所谓使用属性，就是当它存在寄存器或内存时，不管是 <code>unsigned</code> 还是 <code>signed</code> 本质是一样的，但对它进行访问时，就区别对待。</p><p>比如对 <code>count</code> 进行加法，<code>unsigned</code> 时用的是 <code>ADD</code> 指令，<code>signed</code> 时用的是 <code>ADC</code> 指令，其余减乘除也都类似地使用不同指令。</p><p>再来一个问题：把一个变量保存到文件里，再读出来，怎么知道它是有符号还是无符号？</p><p>答案是：如果你不在序列化时考虑符号，则反序列化时，无法知道原来的符号，把它赋值给什么类型的变量它就变成什么类型。</p><p>这也是 JSON 文本转对象后，要自己选择数据类型的原因，因为 JSON 文本没表示符号的语法。</p><h2 id="结论">结论</h2><p><strong>优化思路：理解本质，就能了解限制和优化方向。</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;做题&quot;&gt;做题&lt;/h2&gt;
&lt;p&gt;以下代码打印什么？&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="optimization" scheme="https://blog.umu618.com/tags/optimization/"/>
    
    <category term="cpp" scheme="https://blog.umu618.com/tags/cpp/"/>
    
  </entry>
  
  <entry>
    <title>中年男唐僧</title>
    <link href="https://blog.umu618.com/2019/05/13/monk-tang/"/>
    <id>https://blog.umu618.com/2019/05/13/monk-tang/</id>
    <published>2019-05-13T15:09:29.000Z</published>
    <updated>2023-08-05T13:01:26.988Z</updated>
    
    <content type="html"><![CDATA[<p>昨夜拜访吴承恩，问他：“唐僧那么弱鸡，为什么当领导？”</p><p>吴老回答：“西游师徒四人其实是一个人的不同时期。比如唐僧是已婚中年男子的代表。”</p><p>吓醒后，稣发现真是这样！唐长老炼的是情，和已婚中年男子需要修炼的劫是一样的。</p><p>再一想，其实唐长老是这方面的优秀人才！</p><p>西游一路戒色，尤其令人惊叹的是：对女儿国国王的不动心，并加以利用。</p><p>即使遇到前世情人，金鼻白鼠精也只是病了三天。</p><p>白鼠精用一首诗表白情意：</p><blockquote><p>夙世前缘系赤绳，<br>鱼水相和两意浓。<br>不料鸳鸯今拆散，<br>何期鸾凤又西东！<br>蓝桥水涨难成事，<br>佛庙烟沉嘉会空。<br>着意一场今又别，<br>何年与你再相逢！</p></blockquote><p>唐长老也难得一见意志不坚定一次，给唐太宗写了一封信：</p><blockquote><p>僧病沉疴难进步，<br>佛门深远接天门。<br>有经无命空劳碌，<br>启奏当今别遣人。</p></blockquote><p>这两首诗就是在呼应，唐长老的诗，很明显是一个失恋男子的自白。</p><p>然而病完这三天，唐长老还是恢复坚定的信念，最终历劫成佛！</p><p>唐僧果然是稣的偶像，走出失恋，居然比稣还快！你真行。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;昨夜拜访吴承恩，问他：“唐僧那么弱鸡，为什么当领导？”&lt;/p&gt;
&lt;p&gt;吴老回答：“西游师徒四人其实是一个人的不同时期。比如唐僧是已婚中年男子的代表。”&lt;/p&gt;
&lt;p&gt;吓醒后，稣发现真是这样！唐长老炼的是情，和已婚中年男子需要修炼的劫是一样的。&lt;/p&gt;
&lt;p&gt;再一想，其实唐长</summary>
      
    
    
    
    <category term="宇督观" scheme="https://blog.umu618.com/categories/%E5%AE%87%E7%9D%A3%E8%A7%82/"/>
    
    
    <category term="心理邪稣" scheme="https://blog.umu618.com/tags/%E5%BF%83%E7%90%86%E9%82%AA%E7%A8%A3/"/>
    
  </entry>
  
  <entry>
    <title>如何炒？</title>
    <link href="https://blog.umu618.com/2019/05/12/how-to-speculate/"/>
    <id>https://blog.umu618.com/2019/05/12/how-to-speculate/</id>
    <published>2019-05-12T14:41:12.000Z</published>
    <updated>2023-08-05T13:01:26.988Z</updated>
    
    <content type="html"><![CDATA[<p>本文只求打脸，不构成任何投资建议。</p><h2 id="1-为什么稣不敢炒癌股？">1. 为什么稣不敢炒癌股？</h2><ul><li><strong>没有可靠信息</strong></li></ul><p>上市公司的财报是可以做的，有的奇葩公司的秘书、高管，竟能跳出来说不保证财报准确……</p><p>参考：</p><p><a href="https://new.qq.com/omn/20190509/20190509A0N98L.html">这些股票你敢买吗？老总竟不能保证财报真实性</a></p><p><a href="http://www.sohu.com/a/312775596_114988">对财报内容“不保真”，上市公司高管成了“摆设”</a></p><ul><li><strong>没有先机</strong></li></ul><p>交易数据只有交易数据……这个后面再解释。</p><ul><li><strong>主力控盘</strong></li></ul><p>发布好消息后，涨了，就是利好所以涨。</p><p>发布好消息后，跌了，就是利好出尽所以跌。</p><p>韭菜们记性不一定不好……更可能是看不懂。</p><ul><li><strong>即使在一家上市公司，也未必能掌握自家股价的可能走向</strong></li></ul><p>稣在 300017 时，就遇到过很多次领导自己把握不准。</p><p>多年前首次听老板预估股价要到多少。后来真的到了，稣立刻卖掉，结果继续大涨好多倍……所以连老板自己也低估自家股价。为什么呢？因为风口、概念这个东西不是老板就能掌握的，很多时候是时代造就了老板。</p><p>而且高管一般希望大家买自家股票是亏的，因为如果赚了，怎么避嫌是不好处理的，外面的人说内幕消息要搞事怎么办？盈利是不是要上交？只有真正的高管们，才有权力内咳幕交易。普通职工想用丈母娘账号当韭菜也是可以的……</p><p>最后，炒自家容易感情用事。</p><h2 id="2-为什么稣敢炒柚子？">2. 为什么稣敢炒柚子？</h2><ul><li><strong>有可靠信息</strong></li></ul><p>区块链数据不可篡改性、公开性。</p><p>稣在这个领域工作，容易获得行业信息，甚至能参与一些造势活动。</p><ul><li><strong>交易数据不只交易数据</strong></li></ul><p>Dapp 立功了。举个最常见的菠菜游戏：水手和菠菜商的博弈。</p><p>一阵疯狂交易后，水手盈利——卖；菠菜商盈利——还是卖。反正都会卖，差别只是谁卖，所以价格就跌。</p><p>这里举的例只为说明其可分析性，实操需谨慎。</p><ul><li><strong>有先机</strong></li></ul><p>之前稣发现 2.5GHz CPU 在处理链上数据时，遇到大块是处理不过来的，会导致入库的块和线上头块的差距越来越大，引发运维事故。</p><p>但多次经验下来，发现大块里面如果是大量博弈，就能大概预测 7 天后的价格下跌，然后进入横盘。</p><p>另外，行业内的研究人员也会有一些可以参考的成果，比如我司高材生有优秀毕业论文，多次准确预测价格走势。</p><h2 id="3-到底怎么炒？">3. 到底怎么炒？</h2><p>如果您不在合适的位置，还是别炒。</p><p>本文只值 200 个柚子。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本文只求打脸，不构成任何投资建议。&lt;/p&gt;
&lt;h2 id=&quot;1-为什么稣不敢炒癌股？&quot;&gt;1. 为什么稣不敢炒癌股？&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;没有可靠信息&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上市公司的财报是可以做的，有的奇葩公司的秘书、高管，竟</summary>
      
    
    
    
    <category term="宇督观" scheme="https://blog.umu618.com/categories/%E5%AE%87%E7%9D%A3%E8%A7%82/"/>
    
    
    <category term="调研" scheme="https://blog.umu618.com/tags/%E8%B0%83%E7%A0%94/"/>
    
    <category term="金融" scheme="https://blog.umu618.com/tags/%E9%87%91%E8%9E%8D/"/>
    
    <category term="blockchain" scheme="https://blog.umu618.com/tags/blockchain/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神【番外篇4】</title>
    <link href="https://blog.umu618.com/2019/05/12/god-of-debug-side-story-4/"/>
    <id>https://blog.umu618.com/2019/05/12/god-of-debug-side-story-4/</id>
    <published>2019-05-12T04:24:10.000Z</published>
    <updated>2023-10-29T12:24:56.937Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/2019/20190207-luyu.jpg" alt="听说鲁豫要来采访稣"></p><h2 id="1-陈博士为什么说谷绵公报私仇？">1. 陈博士为什么说谷绵公报私仇？</h2><ul><li><p>因为她们是普通朋友。陈博士身份比较高，记录员工作很无聊。嫉妒是人的自我保护意识，一种天然的防御机制，所以它是友谊中无法避免的情绪。</p></li><li><p>女人之间表面亲密，但背后互相猜忌是很正常的。</p></li></ul><h2 id="2-周易是否滥用特权？">2. 周易是否滥用特权？</h2><ul><li><p>真正的周易还没登场，24 集之前是识界测试版里的数字身份，之所以能出现是第一视角主角触发八哥，而出现的调试信息，并非周易本人。</p></li><li><p>24 集出现的宗师，也不是真正的周易，真正的周易早就死了……宗师介绍自己的时候就说了，他是周老师的强化版本，是人造人，记忆本源并非周易本人。</p></li></ul><p>综上所述，周易没有滥用特权。</p><h2 id="3-谷绵是不是作者认识的某人？">3. 谷绵是不是作者认识的某人？</h2><ul><li><p>不是。人物都是梦中人，取名来自作者喜欢的一首歌《旧情也绵绵》，“旧”的闽南语发音就是“谷”，取首尾两个字。</p></li><li><p>先有八哥后有天，七鹰更在神魔前。《八哥之神》的故事取材有些是很久以前的梦，那时候都不认识现实中这位有点谐音的人。</p></li><li><p>作者还认识谷春雨呢……春雨绵绵无绝期。其实稣还有一个法号叫做“古二法师（Ancient Two）”。</p></li></ul><h2 id="4-为什么老失恋？">4. 为什么老失恋？</h2><ul><li><p>八哥之神曾诅咒人间爱情充满嫉妒和猜疑，这一诅咒感动了昊天上帝，上帝一把将八哥之神推落凡间，让八哥之神受自己诅咒一辈子。</p></li><li><p>神原本只有意识，没有感情。八哥之神下凡后记忆丢失，凡人的体质，加上天性敏锐的观测力，可以察觉无数细微的变化，计算太密集，导致反应跟不上，看起来很木讷，所以经常失恋。</p></li><li><p>例一：美女并地走，脉脉望两眼，稣瞄到了，但稣怕走路跌倒，没有以眼神回应，对方就会觉得不来电，于是稣失恋了。</p></li><li><p>例二：导演说可以拍床戏，稣突然想起自己是神，肉身只是临时的，结果女演员认为稣看不起她，绝交了……稣其实蛮喜欢这演员的，又失恋。</p></li><li><p>例三：稣是一名程序员……</p></li></ul><h2 id="5-为什么稣同时喜欢两个人？">5. 为什么稣同时喜欢两个人？</h2><ul><li>其实并没有同时，喜欢的两个人处于回忆和未来两个不同时间线。稣来自未来，观测过去和现在。</li></ul><h2 id="6-越来越像《黑客帝国》？">6. 越来越像《黑客帝国》？</h2><ul><li><p>《黑客帝国》被拍出来之前，作者早就思考过类似的可能性，从小就觉得当前世界可能是假的，真实的人类可能是屎坑里的蛆虫……我屎故我在。</p></li><li><p>先有八哥后有天，七鹰更在神魔前。《黑客帝国》一定是作者在思考的时候影响了世界另一端的剧作家，童年很多思考慢慢都在影视作品上看到。作者只能惊叹，卧槽……相距遥远不同地区的人居然是有共识的！这一定是量子巧合。</p></li></ul><h2 id="7-作者是不是离过婚？是不是喜欢过同性恋的女生，深受打击，所以在故事里写了多次变性和同性恋？">7. 作者是不是离过婚？是不是喜欢过同性恋的女生，深受打击，所以在故事里写了多次变性和同性恋？</h2><ul><li><p>作者是摩蝎瓶女座，小学五年级就学会在人脑里运行 N = N + 1 代码。</p></li><li><p>梦境不可常规推理，剧本和生活往往没有联系，甚至会相反。</p></li><li><p>一般只会遇到双性恋，纯粹同性恋的女生，作者表示没遇到过。</p></li></ul><h2 id="8-未来的人吃蚯蚓吗？">8. 未来的人吃蚯蚓吗？</h2><p>稣吃牛排。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/images/2019/20190207-luyu.jpg&quot; alt=&quot;听说鲁豫要来采访稣&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;1-陈博士为什么说谷绵公报私仇？&quot;&gt;1. 陈博士为什么说谷绵公报私仇？&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;因为她们是普通朋友。陈博</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="鲸神魂裂" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%AD%82%E8%A3%82/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神【25】</title>
    <link href="https://blog.umu618.com/2019/05/11/god-of-debug-25/"/>
    <id>https://blog.umu618.com/2019/05/11/god-of-debug-25/</id>
    <published>2019-05-11T12:51:28.000Z</published>
    <updated>2023-08-05T13:01:26.988Z</updated>
    
    <content type="html"><![CDATA[<p>“先生，我听未婚夫说，你可能暗恋我？”</p><p>“是。但稣好奇你未婚夫怎么知道的？”</p><p>“她给你提供心理咨询，根据线索推测，你说的失恋对象很可能是我。”</p><p>“卧蚕……你是同性恋？”</p><p>“是。原来你不知道！”</p><p>“稣服！祝你们百合好年！”</p><p>吓醒。</p><p>周老师喝退八个校花后，对着身边的记录员说：“不可能，一个都没碰，难道小开已经不喜欢女人了？”</p><p>“并不是，只是稣有两个喜欢的人，所以对别人没性趣。”</p><p>“是谁？”</p><p>“我们单独聊。”</p><p>“小绵，你先出去。”</p><p>“秦阳，还有刚离开的那位。”</p><p>“她？没有校花们漂亮呀!要不要老师把她许配给你？”</p><p>“谢谢周老师，权限太大，让你看起来好像王八蛋，但稣知道你不是……割爱了。”</p><p>“你看开就好，你们不合适，不是同一个层级的。老师见过不少案例，不仅水平低的人很难理解水平高的人，水平低的人也会以为水平高的人无法理解自己。这导致双向选择时，只有水平相近的才能长期交往。”</p><p>“道理是这样，但是还要养几天伤，观测识界八哥的事情，稣还没有头绪。”</p><p>“这很容易解决。小绵，进来陪小开聊聊天。”</p><p>“呃，周老师，你……”</p><p>“小绵，小开说他喜欢你，赶紧开导一下他，老师先去忙了。”</p><p>“卧槽，稣刚才说错了，你确实是个王八蛋！”场面一度十分尴尬。</p><p>“周老师是开玩笑的吗？我都有未婚夫了。”</p><p>“没有开玩笑，稣确实在感性层面被你吸引，已经在走失恋的流程，你不必放在心上。”</p><p>“哦。我就说，先生又不了解我，只是一时激情吧！”</p><p>“嗯，原来你觉得要了解才会喜欢？”</p><p>“不了解在一起会很难受呀！”</p><p>“你说的那种喜欢更多是理性方面的喜欢！稣不这么认为，大部分人都很简单，没什么难理解的，你也不例外。”</p><p>“了解后你可能就发现我没你想的那么好了吧，也许你喜欢的就是自己想象的我，而不是真实的我。”</p><p>“孤独的灵魂，总是担心自己不被人理解。太在意自己的感受，总是放大自己的缺点。稣觉得你不够自信。”</p><p>“我是比较迷茫呀。还有先生的目光很刺眼，我受不了。”</p><p>“没事，好好学习，提高自己。加油！”</p><p>“怎么变成先生在安慰我？”</p><p>“装逼的感觉，千真万确……”</p><p>“先生要玩一下游戏吗？这次可以陪你玩哦！”</p><p>“Wow，文艺版的你，看起来真不错，咻咻咻……但是，不用了，稣只想多睡觉。养好精神去识界测试版里找找灵感。”</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;“先生，我听未婚夫说，你可能暗恋我？”&lt;/p&gt;
&lt;p&gt;“是。但稣好奇你未婚夫怎么知道的？”&lt;/p&gt;
&lt;p&gt;“她给你提供心理咨询，根据线索推测，你说的失恋对象很可能是我。”&lt;/p&gt;
&lt;p&gt;“卧蚕……你是同性恋？”&lt;/p&gt;
&lt;p&gt;“是。原来你不知道！”&lt;/p&gt;
&lt;p&gt;“稣服！祝</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="心理邪稣" scheme="https://blog.umu618.com/tags/%E5%BF%83%E7%90%86%E9%82%AA%E7%A8%A3/"/>
    
    <category term="鲸神魂裂" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%AD%82%E8%A3%82/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神【24】</title>
    <link href="https://blog.umu618.com/2019/05/11/god-of-debug-24/"/>
    <id>https://blog.umu618.com/2019/05/11/god-of-debug-24/</id>
    <published>2019-05-11T07:47:25.000Z</published>
    <updated>2023-08-05T13:01:26.988Z</updated>
    
    <content type="html"><![CDATA[<p>2048 年，足够聪明的“人”，发现宇宙是更外层宇宙的一个虚拟系统——识界，万物都是系统模拟的逻辑存在。偶尔有人会通过科研或生活中的各种细节发现系统的 bug。处于系统内部的个体无法获得代码，当然无从分析，所以人类一直毫无进展，识界也毫不在意部分人类的反抗意识，把这认为是一种娱乐。</p><p>宗师是研究虚拟宇宙领域的精英。“既然不能查看代码，就从物理底层去破解”，宗师见到稣，很高兴地说。</p><p>“周老师！原来你就是宗师！这嘻哈的风格，稣都想不到！”，稣一脸懵逼。这不是大学时那位骨骼特异，满嘴胡锐锐的易学大师——周易！周老师名叫易，研究的也是易，曾经把易经应用到量子邪说中，开创前无古人后无来者的忽悠学……稣最好奇的是，他怎么混得这么好！</p><p>宗师不亏是宗师，一眼看出稣的疑问，不问自答：“小开，我是你老师的强化版本，我诞生之后注入了当时全人类精英的知识，现在已经算出你就是人类的救星，就靠你的量子纠缠能力来感知并破解识界的八哥。”</p><p>“哦，老师好，请叫稣——开稣。”</p><p>“好的，小开，你现在一定知道要怎么做了，没错，开始做梦吧，我已经叫了你大学时，八大校花来陪你睡！”</p><p>“卧槽，这些校花们……其实稣根本不认识！但长得不错，可以考虑……”</p><p>“赫赫，都是我按照你的审美观精挑细选，改进基因培养出来的，还满意吗？”</p><p>“周老师，你是要玩死稣吗？”</p><p>“嗯哼！脑子里要发生量子纠缠，就不能精虫上脑。”</p><p>“好有道理，稣竟然无言以对，但是识界不就是之前稣多次进入的那个系统吗？一个模拟系统有啥好大惊小怪的，不满意就改代码呀！”</p><p>“非也！你以为的识界只是识界的测试版，虚拟机里的虚拟机，真正的识界就是你认为的这个现实！我们都生活在识界里。”</p><p>“卧槽，我们现在所处的这鬼地方还不是现实？如果是这样，那稣可能无能为力，这个识界太真实，稣怕死！”</p><p>“赫赫，我们早就死过无数次！”</p><p>“额……难怪稣觉得自己记忆都被整得混乱了。在测试版里稣似乎有点特异能力，但是在这里从来没发现过，稣的内心一片空白，从哪里去纠缠这个识界呢？”</p><p>“小开，还记得我教过的吗？不要在乎大小，不要在乎距离，只要时间对就行。”</p><p>“好像有印象，但……你说的这句话，不是出自选修课《恋爱心理学》吗？老家伙，你真的在玩稣！”</p><p>“别生气嘛，小开，你先睡吧，明天一定会豁然开朗。”</p><p>“稣现在已经很开朗，这个现实即使是模拟的，不也挺好的？节能减排，减慢宇宙熵增速度。”</p><p>“但我们的灵魂不自由，就像动物被关在动物园被人观赏。这是一场人间最高级的斗争！”</p><p>“人生哪有什么灵魂自由，老师你看开点，稣也死过好多次，每次迭代都加快，越来越容易在孩童时期，就感觉到宇宙的孤独，但还不是赖活到老。”</p><p>“你怎么拿我要安慰你的话，来安慰你天才的老师？你自己信吗？来人，把他们九人关起来！”</p><p>“卧槽！玩笑开大了吧！各位学姐，你们在这里生活可以吗？”</p><p>“还好”、“基本满意”、“我没你们那么聪明，想七想八的多累。”、“周老师说你很孤独，我也是，我们还是快点办正事吧！”、“周老师说我没有台词，你要干嘛都行。”……</p><p>“稣刚失恋，啥都不想干，只想睡觉。”</p><p>“失恋？笑屎人了……”</p><p>“一点都不好笑。”</p><p>“哈哈哈哈，还是有点好笑的！成熟点，别谈那些没用的恋。”</p><p>“子非稣，焉知稣的情感系统就是这么设计的……”</p><p>“脑残设计吧！呵呵呵……”</p><p>“稣不打女人，不然你已经被打成猪头了！”</p><p>“敢恐吓我，姐妹们，打他！”稣被四个校花群殴。</p><p>“咳，你们这些不懂感情的低等生物！还有四位，没动手，你们是不是懂？”</p><p>“没，你看不起我们，我们也看不起你而已。”</p><p>“闭嘴，然后滚远点，稣要去梦里修复心灵了。”七个校花都后退，只有一位没动。“莫非你是校花中的领导？”</p><p>她走近，小声说：“不是，他们工资低，表面听话，服务态度就不行了。我工资高，服务好。”</p><p>“你能提供心理咨询服务吗？”</p><p>“我试试，先生的失恋对象是谁？”</p><p>“可以保密吗？”</p><p>“那原因是什么？”</p><p>“对方有未婚夫。”</p><p>“哦，这问题不大，以先生的身份，直接把她推倒就行。”</p><p>“额……这不符合稣的风格，能优雅一些吗？”</p><p>“让周老师改改设定也可。”</p><p>“周老师还能改这识界的设定？”</p><p>“当然可以，不然他找先生挑 bug 干嘛？就是为了获取识界的 root 权限，统治识界呀！”</p><p>“Wow，还能这样！那要是稣搞定，root 权限是稣的，好像也没有周老师啥事了？”</p><p>“他应该有什么高招，可以利用先生吧！”</p><p>“有点意思，看来稣要研究研究怎么 root 识界。”</p><p>“感觉好点没？”</p><p>“并没有……”</p><p>“那先生还是求周老师帮忙吧！比如把未婚夫性别改为女，身高调低，甚至干脆抹除。”</p><p>“性别改为女？你好狠啊！不过这个创意稣喜欢，嘿~”</p><p>“不瞒先生，其实我之前就是男性，实验室女性数量不足，临时变性的。”</p><p>“啥？吓尿了……难怪你工资比她们高！”</p><p>“嗯嗯，识界无奇不有！”</p><p>“谢谢你的建议。失恋也不是什么大事，改设定也不是稣认同的优雅方式，稣还是自己重建久恋神经，过几天就没事了。”</p><p>“先生真是仁慈！”</p><p>“强求和控制都不是好事。失恋心累，睡觉睡觉。”</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;2048 年，足够聪明的“人”，发现宇宙是更外层宇宙的一个虚拟系统——识界，万物都是系统模拟的逻辑存在。偶尔有人会通过科研或生活中的各种细节发现系统的 bug。处于系统内部的个体无法获得代码，当然无从分析，所以人类一直毫无进展，识界也毫不在意部分人类的反抗意识，把这认为是一</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="心理邪稣" scheme="https://blog.umu618.com/tags/%E5%BF%83%E7%90%86%E9%82%AA%E7%A8%A3/"/>
    
    <category term="鲸神魂裂" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%AD%82%E8%A3%82/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神【23】</title>
    <link href="https://blog.umu618.com/2019/05/06/god-of-debug-23/"/>
    <id>https://blog.umu618.com/2019/05/06/god-of-debug-23/</id>
    <published>2019-05-06T13:26:24.000Z</published>
    <updated>2023-08-05T13:01:26.988Z</updated>
    
    <content type="html"><![CDATA[<h2 id="2048-餐厅">2048 餐厅</h2><p>稣好奇地问：“你变性啦？”</p><p>姻姻回答：“你是说在识界里？”</p><p>“不是，稣是纳闷你怎么只点一道菜！以前你不是喜欢点一大堆，都吃不完，而且还会加超辣……”</p><p>“早改啦，我在识界里生活将近千年，很多事情都看透了。这道恩来一品汤，荤素搭配合理，不辣的，应该适合你。”</p><p>“嗯……你都快变成白素贞了。服务员，来份菲力七成熟，不加酱。”</p><p>“菲力牛排你吃了 40 多年有吧！还不腻吗？”</p><p>“又不是天天吃，每周一两次，稣可以吃一辈子。”</p><p>“这么说，你倒是没啥变化，还是中二。”</p><p>“还好吧，应该更二了……你变化比较大，刚吓醒时，要不是看你工作装上的名字，稣可能都认不出来，脸小了，五官更精致。”</p><p>“嗯，我选择基因改良方式换的身体，原来 171cm 的身高不适合脑力工作者，还容易关节损伤，现在袖珍点但更健康，省很多麻烦。”</p><p>“难怪，稣觉得从外观看起来，你杀气没有以前那么重……”</p><p>“底层逻辑还一样，现在不容易生气，但你要是惹怒我，还是一样的解决方式。”</p><p>稣咽了一口汤：“不敢。”</p><p>“聊正题吧！你知道自己失忆吗？”</p><p>“原来还有正题？有怀疑过可能部分失忆，但没找到证据。”</p><p>“识界的软件部分是你参与开发的，我则参与神经接入的部分。”</p><p>“所以稣应该很熟悉这个识界，并可能留有彩蛋，等着稣去开奖……但是，真的毫无印象。”</p><p>“周老师说你迟早会想起来的。”</p><p>“是时候见周老师了吗？”稣想起周老师那张呆滞残念的脸，其实并不是很想见。</p><p>“很快。”</p><p>“所以一切都会水落石出。那就不操心了，聊点别的吧！”</p><p>“你现在有喜欢的人吗？”</p><p>“这个问题稣还没想明白。”</p><p>“有就有，没有就没有，有啥不明白？”</p><p>“喜欢到底是什么？”</p><p>“你又来了……记得你以前经常找不到人就怀疑外星人绑架，东西丢了就觉得掉进时空隧洞，不管什么事，你怀疑的方向总是那么奇葩。想跟你好好说点话，你又问一堆小孩子气的问题。”</p><p>“稣真的想不明白啊……你千万别生气！”</p><p>“我没生气，但你怀疑我生气，让我有点生气！”</p><p>“哦，你到底气不气？呃……你打吧！”</p><p>“算了，看在我在识界里已经打死你的份上，过去的事不计较了。”</p><p>“稣并没有觉得以前做过什么对不起你的事啊！”稣一脸懵逼。</p><p>姻姻深吸了一口气，说：“不如继续聊聊 AVILab！”</p><p>“人工虚拟智能实验室？”</p><p>“对，就是周老师的实验室，明天你就可以见到他，你有什么基础问题，我先给你科普。”</p><p>“你确定不是稣给你科普吗？虽然稣没有进去过，但这技能是什么，稣想一下就大概明白。”</p><p>“意识和记忆的本质区别是什么？”</p><p>“嗯？这不是你研究的领域？AVILab 应该更多是研究代码规则和算法的。”</p><p>“不懂了吧！这领域也在 AVILab 研究范围。”</p><p>“没事，稣原地想一下，一定说得通！打个比方，稣梦见自己是别人，但意识依然是自己，梦中有一个设定，只开启部分记忆，并插入并不属于自己的记忆，这样的梦境就可以用于理解两者的区别。”</p><p>“是个不错的比喻，但没讲透彻。”</p><p>“你说稣现在是失忆的，和做梦的情况差不多，做梦时一开始是不知道自己在做梦的，可以理解为短暂失忆。但不管现实还是梦境，观测视角都是稣自己，并没有因为记忆而改变。”</p><p>“但是外人只能通过你的记忆判断你是不是你，如果你的意识变成另一个人，但他可以读取你的记忆，就能完美回答我的鉴别提问，最终我会认定他就是你。”</p><p>“嗯，这是一个大难题，目前我们没给意识制定鉴别码，只有自己知道自己，如果稣突然死了，换了另一个意识，其实连稣自己也不知道……”</p><p>“是的，可以说，人活着主要靠记忆，记忆又是由你做过的事情的总和决定的，所以人生只是自己的总行为的代表。”</p><p>“哦，稣不相信人间事决定人的说法，人的本质应该是意识决定的。即使稣现在死掉，稣的意识马上就会出现在另一个新生命身上，不管意识重现花多长时间，宇宙毁灭过多少次，反正这间隔稣感觉不到，稣只知道自己被洗脑重生了。”</p><p>“你果然是做这个实验的最佳人选，记得自己死过多少次吗？”</p><p>“多到忘！识界的死亡过程是模拟的，真正的死亡也许不会那么孤独难受。”</p><p>“那是因为你和识界对抗着，我死过两次，第一次是无感一瞬间在量子地狱醒来，第二次感受到一个玄幻的意境，但没有难受。”</p><p>“稣印象深刻的两次过程中都伴随失恋，这可能是孤独难受的原因。”</p><p>“你的脑子真好用，这把年纪还能失恋？都是谁？有我吗？”</p><p>“谷绵和秦阳，不好意思没有你，稣只记得你很能打，刚刚才重新加深对你的印象，下次说不定有你……”</p><p>“秦阳是你第二任老婆还说得过去。为什么有谷绵？”</p><p>“她们有些相似的地方……世事难料啊！可能是周老师故意安排的。”</p><p>“我觉得有阴谋！”</p><p>“不管那么多，明天再说。我们散步回去吧！”</p><p>稣看到路边停着一辆古董<a href="/2018/05/22/tesula/">特稣垃</a>，还有方向盘，觉得好久没开过车，想试试。</p><p>“姻姻，咱们开车玩玩。”</p><p>“开车？？”</p><p>“这辆古董！手动操作的！”</p><p>“呃……没几步路了，你确定要开这破车？我们可以开更好的那种呀！”</p><p>“稣就喜欢这种破车！上上上！”</p><p>“服了你，不到 200 米你也要开……这种车！”</p><p>“咻，咻，咻咻咻！到了。”</p><p>“你大费周章摸索完这破车，就为了送我这 200 米？”</p><p>“哦，稣听得懂你的暗示。今天大姨夫，不方便……”</p><p>“去死吧，又装孙子。滚！”</p><p>“再见！”</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;2048-餐厅&quot;&gt;2048 餐厅&lt;/h2&gt;
&lt;p&gt;稣好奇地问：“你变性啦？”&lt;/p&gt;
&lt;p&gt;姻姻回答：“你是说在识界里？”&lt;/p&gt;
&lt;p&gt;“不是，稣是纳闷你怎么只点一道菜！以前你不是喜欢点一大堆，都吃不完，而且还会加超辣……”&lt;/p&gt;
&lt;p&gt;“早改啦，我在识界里生</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="心理邪稣" scheme="https://blog.umu618.com/tags/%E5%BF%83%E7%90%86%E9%82%AA%E7%A8%A3/"/>
    
    <category term="鲸神魂裂" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%AD%82%E8%A3%82/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神【22】</title>
    <link href="https://blog.umu618.com/2019/05/03/god-of-debug-22/"/>
    <id>https://blog.umu618.com/2019/05/03/god-of-debug-22/</id>
    <published>2019-05-03T06:32:07.000Z</published>
    <updated>2023-08-05T13:01:26.988Z</updated>
    
    <content type="html"><![CDATA[<h2 id="大学操场">大学操场</h2><p>姻姻是稣的初恋，本科时认识，读研时结婚。</p><p>有一天在操场散步时，突然狂风大作，雷电劈中我们，她变成暴风女神，而稣变成火娃雷神……但稣不会飞，每次都要她帮忙，才能出去纵火打雷——不，是行侠仗义。时间久了，我们被称为风火情侣。</p><p>直到有一天，我们在飞行时，吵了一架，她把稣从高空扔下，砸毁一架飞机，里面 162 人全部死亡。</p><p>回到地面，稣变回凡人状态，没人知道是稣砸坏的飞机。稣出席追悼会时，还被人莫名欢迎，内心十分尴尬。</p><h2 id="民政局">民政局</h2><p>大妈表情严肃地问：为什么离婚？</p><p>稣忍痛问答：家庭暴力、婚内强碱。</p><p>大妈生气地说：我最看不起的就是家庭暴力的男……</p><p>姻姻打断大妈：我是把他打成猪头了，脸上淤青还在，证据确凿，赶紧办完，我还要去德国读博呢！</p><p>大妈：嗯？！嗯……好样的，你要去哪里赌博？最近扫黄扫黑，小心点，姑娘。</p><p>姻姻：是读博士！</p><p>离别时，稣平静而深情地抱了一下姻姻：“以后再婚，你这暴脾气要改改，别把老公玩死了！”</p><p>然后稣痛苦地捂着唧唧吓醒……</p><h2 id="所谓现实">所谓现实</h2><p>稣一醒来就大吃一惊：“怎么竟然……果然是你！”</p><p>陈博士：“你超脱后，立刻就昏迷，是受了什么打击？”</p><p>“稣可能就是被你吓昏的，陈立姻同学！”</p><p>“都几十年了……”</p><p>“十年怕草绳吧！听说你也再婚，现在怎么样？”</p><p>“丧偶多年，现在一个人。”</p><p>“咳，挖坑了……”</p><p>谷绵走进医疗室，检查一番：“各项指标都正常。”</p><p>“小姐姐，你说的指标应该不包括脑抠疼吧！麻烦送陈博士出去，稣要修复一下受伤的心灵。”</p><p>“那好，你先休息，我等你一起吃饭。”陈博士离开。</p><p>“圣先生好像很怕陈博士？因为她是你前妻吗？”</p><p>“是吧！你不觉得她心狠手辣吗？在识界里，她背后放了稣一枪，又在佛塔里痛扁稣一顿。现实中就更可怕了……”</p><p>“哦？怎么个可怕法？”</p><p>“家丑不可外扬……不过没结婚前的事情，可以八卦一下！”</p><p>“你说吧！我的工作性质你懂的，只会记录在机密档案里，不会外传。”</p><p>“她家很有钱，从小惯坏，脾气很大，大学谈恋爱时，凡事稣都让着她，挨打是少不了的。第一次去开房，稣觉得终于能占她点便宜。没想到，惨被她强碱了一百遍，一百遍……”</p><p>“哈！”</p><p>“这就是傍富婆的代价。”</p><p>“哈哈哈……你们太逗了。”</p><p>“这，一点都不好笑。”稣严肃地内牛满面。</p><p>“惨事都能被你说得这么好玩！”</p><p>“你好像并不意外？”</p><p>“当然，姻姻姐和我说过，不过她现在应该改好脾气了，先生不必在意过去。”</p><p>“姻姻姐……原来你们早就认识！话说，始终是过去，不追究啦。稣在识界里的幻境，遇到秦阳了，下次可以从幻境开始吗？”</p><p>“这我不知道，周老师说你有影响识界的能力，也许可以吧！不过秦阳出现的时候，我发现识界出现异常。”</p><p>“什么异常？”</p><p>“出现三个我！”</p><p>“三个你，还是三个稣？”</p><p>“三个你……”</p><p>“哦，稣明白了，是三个稣！”</p><p>“听说我和秦阳长得很像，是真的吗？”</p><p>“是啊，我第一次见到你时，有点怀疑你是周老师用了秦阳的部分基因制造出来的，不仅身材、容貌像，连气味都像。”</p><p>“我原本对自己是基因工程合成的身份，并没有太介意，觉得和你们自然人克隆的，差别不大，都不是娘胎出生的。自从知道，自己的基因可能来自哪些人，我就开始迷茫。”</p><p>“哦，现在地球人数量只有稣记忆中最多时的 20 万分之一，基因合成其实比克隆现存自然人的方式更先进，这有啥好迷惘的？”</p><p>“最初是对父母这一概念的渴望，后来隐约感觉当权者会替我们选择基因，并对不同类型人群区别对待，比如我，现在做的工作，自己是没有太多选择权的。我的未婚夫也是这样，连我们订婚也好像是被安排的。”</p><p>“可能真是这样……稣也不明白，为什么自己的地位初始值就不低，还能参与科学研究和冒险！但稣相信，宇宙是一个整体，一切联系最终都会被发现。这一切不可能只是闲得蛋疼吧！”</p><p>“先生真乐观！也许身份不一样，决定我乐观不起来，我还是很羡慕你的。”</p><p>“不悲不喜的状态挺不错的，这也是稣追求的。像稣这样经常体验死亡和失恋，也不一定是好事。”</p><p>“这倒也是，我就很怕失恋，死亡就更怕了，让我过先生的生活，还真的没办法。”</p><p>“嗯嗯，你的人生也会有自己的意义，不必羡慕别人。稣准备起来赴死了……”</p><p>“哈哈，是和陈博士一起吃饭吗？”</p><p>“看，你不是挺懂幽默的？多笑，你笑起来很美！”</p><p>“先生好像经常这样夸女孩子？”</p><p>“是啊，但也不是每个女孩子笑起来都是美的，有的笑起来就像大撒币。”</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;大学操场&quot;&gt;大学操场&lt;/h2&gt;
&lt;p&gt;姻姻是稣的初恋，本科时认识，读研时结婚。&lt;/p&gt;
&lt;p&gt;有一天在操场散步时，突然狂风大作，雷电劈中我们，她变成暴风女神，而稣变成火娃雷神……但稣不会飞，每次都要她帮忙，才能出去纵火打雷——不，是行侠仗义。时间久了，我们被称为风</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="心理邪稣" scheme="https://blog.umu618.com/tags/%E5%BF%83%E7%90%86%E9%82%AA%E7%A8%A3/"/>
    
    <category term="鲸神魂裂" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%AD%82%E8%A3%82/"/>
    
  </entry>
  
  <entry>
    <title>洗碗</title>
    <link href="https://blog.umu618.com/2019/05/03/wash-the-dishes/"/>
    <id>https://blog.umu618.com/2019/05/03/wash-the-dishes/</id>
    <published>2019-05-02T18:33:58.000Z</published>
    <updated>2023-08-05T13:01:26.988Z</updated>
    
    <content type="html"><![CDATA[<p>昨晚，脑波说：“到你洗碗了！”</p><p>稣一看，由于晚餐在外面吃的，碗碟一共就五个，轻松塞进洗碗机，加洗碗粉，关门，启动，一气呵成。最难的部分当属——这些碗该怎么排放才显得优雅有逼格……</p><p>然后领导知道稣是用洗碗机洗便指示：“你就不会动一下手吗？才五个，手洗五分钟搞定，用洗碗机要洗一个多小时！”</p><p>稣纳闷，就算只洗一条内裤，也是用洗衣机，手洗主要是心累，所以不管是洗衣，还是洗碗，显然就是用机器代劳。</p><p>在这点上，男女思维确实有很大区别！并非个例，稣的老妈就很抵触洗碗机，觉得要洗很久，不如自己噼里啪啦几下洗完……</p><p>所以如果用代码表示，女人对洗东西的量是会用 if-else 代码块，甚至是 switch 代码块来区别对待的，而男人就是调用一个固定函数！</p><p>不得不得出一个结论：<strong>女人的脑子更精密一些！</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;昨晚，脑波说：“到你洗碗了！”&lt;/p&gt;
&lt;p&gt;稣一看，由于晚餐在外面吃的，碗碟一共就五个，轻松塞进洗碗机，加洗碗粉，关门，启动，一气呵成。最难的部分当属——这些碗该怎么排放才显得优雅有逼格……&lt;/p&gt;
&lt;p&gt;然后领导知道稣是用洗碗机洗便指示：“你就不会动一下手吗？才五个，手</summary>
      
    
    
    
    <category term="宇督观" scheme="https://blog.umu618.com/categories/%E5%AE%87%E7%9D%A3%E8%A7%82/"/>
    
    
    <category term="耶乎知稣" scheme="https://blog.umu618.com/tags/%E8%80%B6%E4%B9%8E%E7%9F%A5%E7%A8%A3/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神【21】</title>
    <link href="https://blog.umu618.com/2019/05/01/god-of-debug-21/"/>
    <id>https://blog.umu618.com/2019/05/01/god-of-debug-21/</id>
    <published>2019-05-01T11:48:45.000Z</published>
    <updated>2023-08-05T13:01:26.988Z</updated>
    
    <content type="html"><![CDATA[<p>稣低血糖送医诊治，精神恍惚间只见灯光忽明忽暗，吊葡萄糖的瓶子上爬满恐怖的蜘蛛，旁边坐着叔公。</p><p>“乖侄孙，醒醒！”</p><p>“饿……叔公？那个佛塔为什么只有 17 层？”</p><p>“还关心这些无关紧要的！赶紧振作起来，你还要娶两个老婆呢！”</p><p>“什么？稣啥时候说过要娶两个老婆的？”稣一发现 bug 就立马精神起来。</p><p>“好吧，是三个！”</p><p>“烦死，你们为什么老是给稣强加人设……算了，三个就三个。佛塔还有两层去哪里呢？”</p><p>“是地下室，里面都是骷髅头，很恐怖，你可以自己去看看。”</p><p>“怎么去？还有这是哪家医院？”</p><p>“飞过去，在你的梦境，你无所不能。”</p><p>瞬间稣就到达佛塔地下两层，果然全是骷髅头，阴森恐怖，万分可怕，稣不禁怀疑，常年在佛塔不吃不喝的殷离会不会靠吃人维持长生不老？</p><p>吓醒之后，赶紧去四层找殷离问清楚。</p><p>“你住的这层是第四层，但是在地面看是第二层，所以地下还有两层？”</p><p>“是的，你都不上厕所吗？”</p><p>“啊？你抢了稣的台词！”</p><p>“地下两层就是厕所。”</p><p>“吓屎，稣还以为你要把稣饿死，然后吃了。”</p><p>“你怎么知道的？”</p><p>“呃……难道是真的？”稣瑟瑟发抖。</p><p>“是的，你也不是第一个，每个我怀疑是圣小开的人，到这里都会被我弄死，丢掉可惜，顺便就……”</p><p>“稣低血糖，头晕……肉都吓酸了，不好吃。”说完拔腿就往塔顶跑，心想只有塔顶能逃出去，从 17 层跳下去也许还能活命。</p><p>“喂！笑脸郎……姐姐我刚吃过，吓唬你的，不会吃你的。”</p><p>“什么？你在哪里吃的？”</p><p>“寺庙厨房呀！”</p><p>“不可能，稣试过，这塔就是设计来关人的，没有外人帮忙根本出不去。”</p><p>“住持每天 6 点都来请我出去用膳，你这懒猪，每天睡到快 9 点，哪能看到你太太太太太太太太祖奶奶！”</p><p>“那明天稣能一起出去吃吗？快饿死了。”</p><p>“你起得来吗？我要饿死你，是你自己的想法，我可没想过。”</p><p>“谢谢姐姐，明天准时饿醒！看来小稣还有活命的希望，佛法无边，救人一命胜造七级浮屠，稣要刻苦学习佛法。”</p><p>当晚，稣随手点燃了殷离给的蜡烛，一心只想学习，忘记她说过，里面有致幻剂。</p><blockquote><p>看红尘冉冉，须臾无间，参遍昙华演幻。</p><p>问法珠玄玄，方寸有变，听尽默烛说禅。</p></blockquote><p>这个逼装得不错，甚至还想发朋友圈，可惜手机早被没收……</p><p>很快稣就在装逼的快感中中毒身亡，连第二天的早餐都吃不到，倒是在幻境中喝了一杯榴莲西米露！</p><h2 id="默烛幻境">默烛幻境</h2><p>2019 年 2 月 9 日，稣独自去梦影看 0 时 10 分午夜场的《<a href="/2019/02/10/the-world-is-a-zoo/">流浪地球</a>》，左边隔一个空位的妹纸很眼熟引起稣的注意，这么晚来看电影，应该是单身，所以电影开播前稣直接搭讪了。</p><p>“Hello，你看起来很眼熟，是不是也在附近上班？”</p><p>“你这个搭讪手法不嫌太老套？”</p><p>“稣本将心向明月，奈何明月 38 万千米远……没事，看电影吧！”</p><p>“呆子。”</p><p>有一幕男主飞身救妹的场景，明显不符合物理定律，稣不自觉吐槽：“两只飞猪同时着地！”</p><p>左边的妹纸听到后转头一笑，充满善意和欢快。</p><p>片尾时，稣挪到我们之间的空位，挨着她问：“能认识一下吗？稣是圣小开。”</p><p>“秦阳，秦始皇的太阳。”</p><p>“这么阳刚的名字？还这么高，不会是变性人吧！”</p><p>“你的世界是多阴暗，动不动就怀疑别人？不理你了。”</p><p>“不好意思，我们程序员都是这鸟样……稣请你喝牛油果奶昔赔罪吧！”</p><p>“这么巧？我就喜欢牛油果！”</p><p>“哦，我只知道它贵，比较有诚意，但热量太高，我减肥不敢吃，你喜欢就好。”</p><p>“你减肥？不胖啊！”</p><p>“将胖恐惧症，你听过吗？”</p><p>“没有！不 care，我 167，才 98 斤，还是多吃点，hiahiahia~”</p><p>“你是我见过的少数瘦还有胸的美女！”</p><p>“这么直接好吗？不会含蓄点？”</p><p>“那稣可能会结巴，我们程序员都这么科学看待，大部分时候没啥不好吧！”</p><p>“程序员要被你给黑死了……”</p><p>“留个联系方式吧，下次看电影就找你。”</p><p>“可以呀，科幻大片、心理犯罪之类的都可以，其它什么狗屁爱情文艺片就算了。”</p><p>“耶？同道中人！有戏！”</p><p>“hiahiahia~”</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;稣低血糖送医诊治，精神恍惚间只见灯光忽明忽暗，吊葡萄糖的瓶子上爬满恐怖的蜘蛛，旁边坐着叔公。&lt;/p&gt;
&lt;p&gt;“乖侄孙，醒醒！”&lt;/p&gt;
&lt;p&gt;“饿……叔公？那个佛塔为什么只有 17 层？”&lt;/p&gt;
&lt;p&gt;“还关心这些无关紧要的！赶紧振作起来，你还要娶两个老婆呢！”&lt;/p&gt;
</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="心理邪稣" scheme="https://blog.umu618.com/tags/%E5%BF%83%E7%90%86%E9%82%AA%E7%A8%A3/"/>
    
    <category term="鲸神魂裂" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%AD%82%E8%A3%82/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神【20】</title>
    <link href="https://blog.umu618.com/2019/04/30/god-of-debug-20/"/>
    <id>https://blog.umu618.com/2019/04/30/god-of-debug-20/</id>
    <published>2019-04-30T15:36:09.000Z</published>
    <updated>2023-08-05T13:01:26.988Z</updated>
    
    <content type="html"><![CDATA[<p>“佛塔里肯定有一个老头等稣好多年，即将传输百年功力给稣，然后稣立马变成武林高手，把这些撒币和尚打成猪头。”一想到这，稣忍不住在一团漆黑中笑起来。</p><p>“笑脸郎，你都被关起来了，还笑得这么开心？”楼上传来一个老太婆沧桑但浑厚的声音。</p><p>“额？怎么是女的？”稣内心震惊，急忙问：“佛门清净地，怎么会有女人？难道你是保洁阿姨？”</p><p>“不是！贫尼乃本寺创始人，殷离。”</p><p>“殷离？难道你就是《天龙八部》里的那位殷离？”</p><p>“什么《天龙八部》？你说的是金庸的小说吗？”</p><p>“是的，你是古代人？”</p><p>“笑脸郎，你搞错了，殷离是《倚天屠龙记》的人物，那不是我，但我确实是古代人，按照当今公历，我出生时间是 1333 年。”</p><p>“妖，老妖……婆，你要吓死稣啊！不要开灯！稣不敢看。”</p><p>“这里没有灯，上来一层，我这边有些自然亮光。”</p><p>“别吓稣，几百岁的人得多恐怖？”</p><p>“呵呵，笑脸郎你还真信？都不怀疑我瞎编的？”</p><p>“信，你这声音没有几百年功力怎么可能这么恐怖，稣快耳鸣了。而且本寺神秘兮兮，创始人一定不简单。”</p><p>“傻小子，这佛塔其实是个歌舞厅，我用功放设备和你说话的，你上来吧！”</p><p>“卧槽……你是年轻的美女！殷离？1333 年？”</p><p>“是的，没有身份证。”</p><p>“要不是刚刚见鬼，稣差点就不信了……说出你的故事，稣很仰慕你，洗耳恭听。”</p><h2 id="识界量子地狱">识界量子地狱</h2><p>陈博士说：“圣小开骗我自杀，但我并没有回到现实。”</p><p>谷绵：“你自杀时的状态码不对，所以无法回到现实，不过性别恢复了，你现在可以选择转世。”</p><p>“哪里不对啦，妹纸？”</p><p>“性别错误，跳转程序检查状态不对，就拒绝超脱。”</p><p>“这不是坑我吗？”</p><p>“这个八哥，我们会在下个版本修复。作为补偿，你转世后可以获得 1000 年寿命，我将帮你送回识界主线 1333 年。”</p><p>“喂？你玩我呢？公报私仇吗？那么早的时间，啥科技都没有，多无聊啊！”</p><p>“我只是个程序，有意见等你超脱后找周老师反馈。再见！”</p><h2 id="佛塔神秘四层">佛塔神秘四层</h2><p>“我 23 岁遇到一个叫周易的人后就不再衰老，后来拜少林寺四大法王为师，学了武功和佛法，就到此创建本寺，并一直在佛塔里修行。”</p><p>“真无聊！你说的那个周易，好像是稣的大学老师呀！稣刚刚在塔外还很 buggy 地看到他，这到底是怎么回事？”</p><p>“你记得陈博士吗？”</p><p>“陈博士？难道是……那个秘书年轻漂亮的梗？”</p><p>“我就是陈博士。上次是你骗我自杀，结果因为识界设计有 bug，我并没回到现实，这次我等你几百年，我们可以一起超脱了！”</p><p>“等等，稣骗你自杀？然后你还真就自杀了？这不可能，稣不是这种人，好死不如赖活。”</p><p>“事实就是这样，我思考人生 663 年，加上周易冒出来提醒几次，才都明白的。”</p><p>“还是不可能，你肯定先做了啥对不起稣的事情，稣才会骗你，而且这个骗术也太强，稣不认为自己有这能耐！”</p><p>“你这小子有完没完？”，殷离姐姐暴打了稣……</p><p>只吃硬不吃软的稣，这下遇到克星了，痛苦地问：“好吧，你淫了，额啊！那么……回到现实是指离开寺庙，回到软件园，继续上无聊的班？”</p><p>“不是，那个并非现实，我们都在识界里，死后还有更现实的世界。”</p><p>“哦，别！稣已经工作好多年，有点存款，加上叔公给的 406 万，现在有 520 万存款，所以稣还不想死！”</p><p>“现实世界里，你可是千万富翁，比这区区 520 万多很多，还有特殊身份，比当码农有前途，你还是死了算了吧！”</p><p>“天呐，你这寺庙还有专业劝人去死的服务，稣的三观被你们毁光光了。”</p><p>“呵呵，那就在此多耗几天，我料你定会想死。”</p><p>“不想，不想，稣不想。刚被你打一顿，更不想死了……稣要练功报仇！”</p><p>“省省，我这几百年的功力，你是无法企及的。而且你还没搞清楚自己的人物设定吗？”</p><p>“嗯？你知道什么天机？”</p><p>“你这辈子只会被女人打，不可能打得过女人，尤其是我这样的高手！”</p><p>“哦……但稣可以增强防御能力吧。”</p><p>“就会嘴硬。给你点时间消化，这里没吃的，你要睡觉就上奇数层，这里有 19 层，奇数层都是暗黑无光，偶数层有点自然光，但到晚上都是一样暗。”</p><p>“好的，姐姐，你是想饿死稣，明白！”</p><p>“拿着。”殷离递给稣一个盒子。</p><p>“这是啥？”</p><p>“里面是含致幻剂的蜡烛和火柴，你快饿死的时候就点它，可以帮你超脱。”</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;“佛塔里肯定有一个老头等稣好多年，即将传输百年功力给稣，然后稣立马变成武林高手，把这些撒币和尚打成猪头。”一想到这，稣忍不住在一团漆黑中笑起来。&lt;/p&gt;
&lt;p&gt;“笑脸郎，你都被关起来了，还笑得这么开心？”楼上传来一个老太婆沧桑但浑厚的声音。&lt;/p&gt;
&lt;p&gt;“额？怎么是女的？</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="心理邪稣" scheme="https://blog.umu618.com/tags/%E5%BF%83%E7%90%86%E9%82%AA%E7%A8%A3/"/>
    
    <category term="鲸神魂裂" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%AD%82%E8%A3%82/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神【番外篇3】</title>
    <link href="https://blog.umu618.com/2019/04/15/god-of-debug-side-story-3/"/>
    <id>https://blog.umu618.com/2019/04/15/god-of-debug-side-story-3/</id>
    <published>2019-04-15T13:34:54.000Z</published>
    <updated>2023-10-29T12:24:56.937Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/2019/20190207-luyu.jpg" alt="听说鲁豫要来采访稣"></p><h2 id="1-李怡和吴情是同一个人吗？">1. 李怡和吴情是同一个人吗？</h2><p>不是。性格有点相似，取名自“利益无情”。李怡对应的是大学同学的故事，男主不是作者本人，因为很相关，就一起写了。吴情是作者梦里的人物，演员是作者高中同学。</p><h2 id="2-为什么出现美柚这种现实中的公司？会不会泄露隐私？">2. 为什么出现美柚这种现实中的公司？会不会泄露隐私？</h2><ul><li>什么是现实？能吃吗？</li><li>美柚是“美国柚子开发商”的缩写，这是一家区块链技术公司。</li><li>全是做梦，甚至偶尔是梦中梦。啪啪啪也是做梦……千万别当真。</li></ul><h2 id="3-出现许效舜有什么特别含义吗？">3. 出现许效舜有什么特别含义吗？</h2><p>这问题作者也想不通，因为日常生活中根本没有相关事物，莫名其妙就梦见……</p><h2 id="4-释德灵究竟是何方神圣？">4. 释德灵究竟是何方神圣？</h2><p>原名段郑灵，父姓段，母姓郑，德国土豪，真的娶了三个老婆。不过是在作者梦里……</p><h2 id="5-八哥到底是什么意思？">5. 八哥到底是什么意思？</h2><p>这是作者被问得最多的问题……八哥就是 bug，意思是：撩。</p><ul><li>Can I bug you?</li><li>I already fell for someone, so please do not bug me anymore.</li></ul><p>翻译：</p><ul><li>我可以撩你吗？</li><li>我已经心有所属，所以请不要再撩我。</li></ul><h2 id="6-为什么好多女角只出现一小会就消失？">6. 为什么好多女角只出现一小会就消失？</h2><ul><li>春梦易醒，匆匆过客。</li><li>抓不出爱情的我，总是眼睁睁看她溜走……人生就是百年孤寂，大部分时间都在挣扎，谈恋爱哪有那么容易，不是人不对，就是时间不对，还是洗洗睡。</li><li>那一夜，冷风小雨，空旷的广场，还飘着一只小海豚，耶问自己在干嘛？稣小心翼翼地回答：一路风雨参禅，即使美人在侧，稣一心向佛，阿弥陀佛……</li></ul><h2 id="7-为什么不描述一下女角的容貌？">7. 为什么不描述一下女角的容貌？</h2><p>梦里黑乎乎的，分辨率也比较低，反正都是不同类型的美女，各位观众喜欢哪款自己套，毕竟作者请不起这么多女演员……</p><h2 id="8-哪位女角最漂亮？">8. 哪位女角最漂亮？</h2><p>目前出现过的是谷绵最漂亮，不过还有秦阳（女）和若干校花未出场呢！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/images/2019/20190207-luyu.jpg&quot; alt=&quot;听说鲁豫要来采访稣&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;1-李怡和吴情是同一个人吗？&quot;&gt;1. 李怡和吴情是同一个人吗？&lt;/h2&gt;
&lt;p&gt;不是。性格有点相似，取名自“利益无情”。李怡对应的是</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="鲸神魂裂" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%AD%82%E8%A3%82/"/>
    
  </entry>
  
  <entry>
    <title>云游戏开发指南【1】</title>
    <link href="https://blog.umu618.com/2019/04/14/umutech-a-developer-s-guide-to-cloud-gaming-1/"/>
    <id>https://blog.umu618.com/2019/04/14/umutech-a-developer-s-guide-to-cloud-gaming-1/</id>
    <published>2019-04-14T14:27:45.000Z</published>
    <updated>2023-08-05T13:01:26.978Z</updated>
    
    <content type="html"><![CDATA[<h2 id="实用参考">实用参考</h2><ol><li><p><a href="https://blog.csdn.net/RA681t58CJxsgCkJ31/article/details/79226317">云游戏的架构设计和技术实现</a></p><p><a href="https://blog.csdn.net/RA681t58CJxsgCkJ31/article/details/79226317">https://blog.csdn.net/RA681t58CJxsgCkJ31/article/details/79226317</a></p></li><li><p><a href="http://www.gaminganywhere.org">GamingAnywhere</a></p><p><a href="http://www.gaminganywhere.org">http://www.gaminganywhere.org</a></p></li><li><p><a href="https://github.com/obsproject/obs-studio">OBS Studio</a></p><p><a href="https://github.com/obsproject/obs-studio">https://github.com/obsproject/obs-studio</a></p></li></ol><h2 id="服务器架构">服务器架构</h2><ul><li><p>NVIDIA Grid 显卡</p></li><li><p>Windows 8 - 10，最好别用 7。</p></li><li><p>Sandbox 方案</p></li></ul><p>一份授权 Windows 系统大约可以运行 40~50 个游戏实例。</p><h2 id="音频">音频</h2><ul><li><p>服务器上设置 48000Hz 采样率；</p></li><li><p>编码器采用 Opus，48000Hz，128kpbs</p><ol><li><p>音频编码的延迟：需要一个 frame 才能编码，而等待一个 frame 需要时间。比如，48000Hz 的 samplerate 编码到 1024 samples/frame 的 AAC，一个 frame 需要的采集时间是 1000 * 1024 / 48000 = 21.3ms，这个只是采集的理论时间，应用程序的采集间隔还可能增大这个采集延迟，然后还有编码、传输、解码、播放延迟。</p><p>Opus 的 frame size 默认是 960，相比 1024 的 AAC 理论上可以减少一点点延迟，1000 * 960 / 48000 = 20ms。</p><p>Opus 的 frame size 还可以更小，比如 120，但不建议使用，因为 Windows 一次采集 480 samples，frame_size = 120 时，一次采集包含 4 frames，所以延迟和 frame_size = 480 其实是一样的。另外，<a href="http://www.live555.com/">live555</a> 最小发送单位是 packet，而不是 frame，并且实现上 packet 要等待 960 samples 时长。</p><p>128kpbs 的 Opus 音质几乎已经顶天了，人耳很难分辨，比 mp3 好太多了，网络上流行的高音质 mp3 都是 320kpbs 的。</p></li><li><p>Opus 是开源并免费的，AAC 好的编解码器都是收费的。</p></li></ol></li></ul><h2 id="流传输协议">流传输协议</h2><ul><li><p>RTSP</p></li><li><p><a href="http://www.live555.com/">live555</a></p><p><a href="http://www.live555.com/">http://www.live555.com/</a></p><p>UMU 之前用 live555 2017.07.18 版本时，发现它对 Opus 支持不好，需要改进，当前版本未测。</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;实用参考&quot;&gt;实用参考&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/RA681t58CJxsgCkJ31/article/details/79226317&quot;&gt;云游戏的架构设计和技术实现&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="作品" scheme="https://blog.umu618.com/tags/%E4%BD%9C%E5%93%81/"/>
    
    <category term="调研" scheme="https://blog.umu618.com/tags/%E8%B0%83%E7%A0%94/"/>
    
    <category term="streaming-media" scheme="https://blog.umu618.com/tags/streaming-media/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神【19】</title>
    <link href="https://blog.umu618.com/2019/04/13/god-of-debug-19/"/>
    <id>https://blog.umu618.com/2019/04/13/god-of-debug-19/</id>
    <published>2019-04-13T15:07:42.000Z</published>
    <updated>2023-08-05T13:01:26.978Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>听静夜之钟声，唤醒梦中之梦；观澄潭之月影，窥见身外之身。</p></blockquote><p>男人天性追求强大的力量，在见证稣的感知和分析能力后，耶希望能融合这种能力，以使自己更强大。又经历一梦，耶终于变成稣。稣决定不断变强，掌握命运！</p><p>然而，融合要消耗很多能量，还需时间消化，一大早的钟声令稣恼火，很想找人打一顿。没错，就是上次想测试的弗智，抓起来打！</p><p>“弗智同学，咱们来练练？”</p><p>“练？居士何意呀？”</p><p>“武功！来比划比划！”</p><p>“阿弥陀佛，小僧没见居士练过武，怕误伤居士。”</p><p>“没事，稣刚在梦里学了一套西洋拳，你就陪稣测试一下吧！”</p><p>“哦？可以吧！居士请出手，小僧不出手，用步法应对就是。”</p><p>“卧阔，好大的口气！看稣把你打成猪头！”</p><p>咦？怎么打不到……</p><p>“再快点！出手太慢是打不到小僧的。”</p><p>“不可能啊！躲这么快，你特么拍《黑客帝国》呀？”</p><p>“小僧就像一个电子，同时身处多处。”</p><p>“量子邪说都来了……难道稣还没醒？”</p><p>“你打不到我，你打不到我。”</p><p>“没道理，稣已经在观测你了，所以你的位置是确定的。”</p><p>“居士要打到小僧时，小僧的位置才是确定的！”</p><p>“这个不好玩，咱们换个玩法，你先静止，稣打你，看你是死是活！”</p><p>“哈！看小僧的硬气功。”</p><p>“握了个叉，打死你！”</p><p>“嗯！出拳太远，打到时力道已经不足。”</p><p>“哦？那你说要怎么打？”</p><p>“寸劲！哇哒，你懂吗？李小龙！”</p><p>“没想到你这么专业！看来稣打不过你！”</p><p>“小意思，过奖过奖，小僧乃弗字辈第一高手！”</p><p>“卧槽……你淫了！”</p><p>稣转身要走，不料又是熟悉的背后偷袭。</p><p>弗智左手挽住稣的胸，右手拳头在背脊和腰部碾了几下，“居士长期坐着，腰背都不好，需要捣腾一番！”</p><p>“呃啊……”稣被整得热汗直流，十分酸爽。看来武术并非稣的领域，还是再试试其它技能吧……</p><blockquote><p>人生原是傀儡，只要把柄在手，一线不乱，卷舒自由，行止在我，一毫不受他人捉掇，便超此场中矣。</p></blockquote><p>“阿弥陀佛，稣还是写代码吧！”说完，心想：“每个月赚几万，再加上叔公给的 406 万，买个车买个房，应该可以娶个老婆吧！”</p><p>这时失恋的唐泰九、孟浩多过来叫稣：“居士，住持有请，后山佛塔等候。”</p><p>稣整理衣衫，淡定一番，便一念惊觉，直登佛塔。却遇到个陌生人！</p><p>“住持呢？”</p><p>“我就是。”</p><p>“你是住持？那释德灵呢？”</p><p>“我就是。”</p><p>“你整容了？照着哪个明星整的？怎么有点眼熟。”</p><p>“一月三身。”</p><p>“别扯了……声音还是一样的，那你还有一张稣没见过的脸？干脆一次见完。”</p><p>“我扯！”住持表演变脸，变回上次看到的。</p><p>“哇！难道你是四川人？”</p><p>“我再扯！”</p><p>“嗯？你是周易！”</p><p>“然也！”</p><p>“周老师，为什么是你？”</p><p>“小开，现在老师走后门附身住持，进来救你，你快点醒过来！记住这局醒来的方法是滚下山。”</p><p>“什么？周老师你为什么不搞科研，跑来 cosplay 住持？”</p><p>“居士，你来了？”</p><p>“住持大师叫稣什么？稣刚才产生幻觉了？”</p><p>“叫你居士，怎么？有问题？”</p><p>“再前面呢？”</p><p>“没有了，贫僧入定等居士，刚睁眼开口。”</p><p>稣心想：“见鬼！真的产生幻觉……”然后说：“好吧，大师找稣何事？”</p><p>“希望居士可以继承贫僧的衣钵。”</p><p>“这玩笑开大了吧！大师是认真的吗？”</p><p>“认真，居士的法号就叫释德明吧，以后寺庙拜托你了。”</p><p>“大师不是干得好好的，为什么让位于稣？”</p><p>“贫僧打算还俗，与家人团聚。”</p><p>“咦？大师还有家人？”</p><p>“实不相瞒，贫僧在尘世有三个老婆。”</p><p>“啥？玩笑开大了！三个老婆？大师上山前，不是送外卖的吗？应该是穷人，怎么能娶三个老婆？”</p><p>“居士不记得村里有人娶三个老婆的故事？”</p><p>“是有听过，还生了七个孩子……难道真是大师？”</p><p>“对，贫僧想体验生活，才去送外卖。遇到释德神后，先是好奇为什么他能终生不娶，随着对大神和佛法了解深入，贫僧认识到娶三个老婆是罪孽深重，于是就在本寺修行。”</p><p>“所以大师并非……”稣咽了一下口水，“上次推测失误，还以为大师也终身未娶！”</p><p>可怕！这个寺庙不简单……稣被打击得很想滚下山。</p><p>“居士很有慧根，考虑考虑？”</p><p>“当住持好处是不少，但以后谈恋爱不方便，稣要考虑几年！”</p><p>“居士可以先正式剃度，当个名誉住持。”</p><p>“还得练几年武功，不然可能会被不服稣的人打死！”</p><p>“哈哈，哈哈，居士还是挺有想法的。”</p><p>“稣这就回去考虑几年吧！”</p><p>“居士请留步！佛塔内有天地灵气，居士还是到里面考虑更快！”说完，稣就被软禁在塔内……</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;听静夜之钟声，唤醒梦中之梦；观澄潭之月影，窥见身外之身。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;男人天性追求强大的力量，在见证稣的感知和分析能力后，耶希望能融合这种能力，以使自己更强大。又经历一梦，耶终于变成稣。稣决定不断变强，掌握命运！&lt;/p</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="心理邪稣" scheme="https://blog.umu618.com/tags/%E5%BF%83%E7%90%86%E9%82%AA%E7%A8%A3/"/>
    
    <category term="鲸神魂裂" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%AD%82%E8%A3%82/"/>
    
  </entry>
  
  <entry>
    <title>优化思维【1】字符串去空格</title>
    <link href="https://blog.umu618.com/2019/04/10/umutech-optimization-thinking-1-trim-strings/"/>
    <id>https://blog.umu618.com/2019/04/10/umutech-optimization-thinking-1-trim-strings/</id>
    <published>2019-04-10T15:15:22.000Z</published>
    <updated>2023-08-05T13:01:26.978Z</updated>
    
    <content type="html"><![CDATA[<h2 id="In-place-版本">In place 版本</h2><p>传入的字符串将被改变。</p><p>为方便复用，一般会实现 ltrim 和 rtrim 两个函数，然后 trim 函数调用这两者实现。</p><ul><li><p>ltrim：从 str 头部开始找到非空格字符，偏移量记为 offset，将 str 左移（move）offset 个字符。</p></li><li><p>rtrim：从 str 尾部向头部找到非空格字符，偏移量记为 offset，将 str 截断为 offset。</p></li></ul><p>一个想当然的实现：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">trim(str) &#123;</span><br><span class="line">    ltrim(str)</span><br><span class="line">    rtrim(str)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>假设 str 是 x 个空格 + y 个非空格 + z 个空格，则以上代码需要把 y + z 个字符向左移动 x 个位置。</p><p>更好的实现是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">trim(string&amp; str) &#123;</span><br><span class="line">    rtrim(str)</span><br><span class="line">    ltrim(str)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由于先截断，剩 x + y，再去左移，只需要把 y 个字符左移 x 个位置。</p><p><strong>优化思路：尽量减少复制，调整顺序也是优化手段。</strong></p><h2 id="Copy-版本">Copy 版本</h2><p>传入的字符串不会被改变，返回一个新的字符串。</p><p>一个复用前面代码的实现：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">string trim_copy(string str) &#123;</span><br><span class="line">    &#x2F;&#x2F; str is a copy</span><br><span class="line">    rtrim(str)</span><br><span class="line">    ltrim(str)</span><br><span class="line">    return str</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个版本需要复制 x + y + z 个字符，ltrim 和 rtrim 里面都有找偏移量的代码可以复用，直接找到 y 个非空格字符是起点和终点，复制这 y 个字符就好了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">string trim_copy(const string&amp; str) &#123;</span><br><span class="line">    &#x2F;&#x2F; str is a copy</span><br><span class="line">    l &#x3D; lfind(str)</span><br><span class="line">    r &#x3D; rfind(str)</span><br><span class="line">    return str[l, r]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>优化思路：尽量减少复制。</strong></p><h2 id="move">move</h2><p>strlen、strcpy、memmove 这类函数，都有一个优化思路：机器字长对齐，一次处理一个机器字。对于长字符串，效果显著。</p><p><strong>优化思路：针对硬件特征调整策略。</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;In-place-版本&quot;&gt;In place 版本&lt;/h2&gt;
&lt;p&gt;传入的字符串将被改变。&lt;/p&gt;
&lt;p&gt;为方便复用，一般会实现 ltrim 和 rtrim 两个函数，然后 trim 函数调用这两者实现。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;ltrim：从 str 头</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="optimization" scheme="https://blog.umu618.com/tags/optimization/"/>
    
  </entry>
  
  <entry>
    <title>公司不是家庭</title>
    <link href="https://blog.umu618.com/2019/04/05/company-is-not-a-family/"/>
    <id>https://blog.umu618.com/2019/04/05/company-is-not-a-family/</id>
    <published>2019-04-05T15:00:10.000Z</published>
    <updated>2023-08-05T13:01:26.978Z</updated>
    
    <content type="html"><![CDATA[<p>很多公司会有家庭特征，因为管理者水平不够，就把家庭的理念搬到公司。<s>甚至有的管理者，本身就是巨婴，蹂躏完家人，到公司继续蹂躏员工。</s></p><h2 id="1-有问题的管理者不降级或开除">1. 有问题的管理者不降级或开除</h2><ul><li><p>家庭：再不行的成员，也有血缘关系，无法开除。</p></li><li><p>公司：不行的成员，往往因为人情关系，被姑息。</p></li></ul><p>一个不合适的管理者占据一个位置，他的下属一般不敢举报他。</p><blockquote><p>如果我举报了上司，上上司是不是会觉得我闹事，反而对付我？我的平级同事会支援我，还是让我孤军奋斗？</p></blockquote><p>他的上司可能觉得没有更好人选，或者知道他有些问题，但有点交情，体谅他已经做到管理层不容易，不想动他……于是出现典型的人情治理。<strong>这样危害很大。</strong> 管理层固化之后，其中的制约关系网也固定，于是倾向于腐化。</p><p>基层干活的人是很容易流动的，但他们很难影响企业文化，反倒会被利用来说明公司是有优胜略汰的。其实，管理层的优胜略汰更关键、更致命。</p><h2 id="2-优劣员工的工资拉不开距离">2. 优劣员工的工资拉不开距离</h2><ul><li><p>一般父母会倾力维护子女的平衡，如果一个子女明显发展比另一个子女好，他们就会更用力帮助较弱的那个。这是应该的。</p></li><li><p>很多管理者都会降低工资差距，认为大家都是兄弟，不能差太多。</p></li></ul><p>如果有余力，上级也应该稍微更用心去帮助后进者，但不是说劫富济贫，把厉害的下属的工资拿一部分给弱的下属。<strong>这种劫富济贫危害很大。</strong> 如果公司是害怕大家私下交流后发现有人很高导致嫉妒，那应该开除那些能力低又瞎嫉妒的才对。工资高的人一般不会告诉别人自己的工资水平。善妒者，往往也是弱者，如果不能激励自己变强，则也应该淘汰。</p><h2 id="3-长期没有策略性裁员，公司出问题才开始裁">3. 长期没有策略性裁员，公司出问题才开始裁</h2><ul><li><p>父母如果太放任、太宠爱孩子，往往培养出有问题的孩子。</p></li><li><p>平时不管教好员工，这是太高估 HR 的能力了，以为招到的每个人都能管好自己并领悟公司的文化和业务？</p></li></ul><p>有两种人就是应该及时裁掉的：混日子的、危害公司利益的。如果公司实在太有钱养闲人，第一类暂且忽视。有意危害公司利益的是必须立刻开除，比如上面说的不合格的管理，容易导致大量优秀人才流失或者无法进入，这就是危害公司利益。</p><p><strong>公司发展很好的阶段裁员，大家都知道是好事；而等到发展遇到瓶颈才裁员，大家往往认为是坏事。</strong></p><h2 id="4-裁员不公开原因">4. 裁员不公开原因</h2><p>所谓家丑不可外扬，一般家庭的做法是隐瞒。</p><p>公司不是家庭，理由可以很简单地说明，但不应该隐瞒。比如能力不足，就写“末位淘汰”、“能力不匹配”、“发展方向不匹配”等。如果是做了危害公司利益的事情，就应该公布具体证据和开除原因，以维护企业文化。</p><hr><blockquote><p>道理都懂，主要是缺乏挖掘并有效反馈八哥的机制。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;很多公司会有家庭特征，因为管理者水平不够，就把家庭的理念搬到公司。&lt;s&gt;甚至有的管理者，本身就是巨婴，蹂躏完家人，到公司继续蹂躏员工。&lt;/s&gt;&lt;/p&gt;
&lt;h2 id=&quot;1-有问题的管理者不降级或开除&quot;&gt;1. 有问题的管理者不降级或开除&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;家</summary>
      
    
    
    
    <category term="宇督观" scheme="https://blog.umu618.com/categories/%E5%AE%87%E7%9D%A3%E8%A7%82/"/>
    
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="洗脑" scheme="https://blog.umu618.com/tags/%E6%B4%97%E8%84%91/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神【18】</title>
    <link href="https://blog.umu618.com/2019/03/31/god-of-debug-18/"/>
    <id>https://blog.umu618.com/2019/03/31/god-of-debug-18/</id>
    <published>2019-03-31T14:18:25.000Z</published>
    <updated>2023-08-05T13:01:26.978Z</updated>
    
    <content type="html"><![CDATA[<p>从后山回到寺院，先找道信师叔，发现他很眼熟，“道信师叔，本名是张道信？”</p><p>“耶？你知道啦？贫僧本名张信，道信是法号。”</p><p>“耶姓圣，咱们同村？”</p><p>“是的，你恢复了！”</p><p>“村里姓张的很少，耶应该都认识，咱们以前肯定见过！”</p><p>“我见你的时候，你还很小，应该不记得我吧？但我妹妹你一定认识，她是你幼儿园的张老师。”</p><p>“耶有两个张老师，一个未婚，一个已婚，你说的是哪个？”</p><p>“她当时未婚。”</p><p>“原来如此，小时候女神级的老师，印象中听人说她有个哥哥，原来就是你啊！所以是因为你们有些神似，难怪觉得你眼熟。”</p><p>“哈哈，你记性很好。”</p><p>“但耶记不清张老师叫什么名字了……她去哪啦？好像只教我们一年就消失了！”</p><p>“张敏君。嫁到上海去了。还不是因为村里的诅咒。”</p><p>“张……敏君？耶有个大学同学也叫这名字！你是说咱们村不是姓圣的会被诅咒的传说？”</p><p>“是啊，我不就应验了？自己没事，但老婆出事，我当时想不开，干脆就出家。”</p><p>“原来迷信都是这样来的！但师叔现在应该过得蛮好的。”</p><p>“人生天地如蜉蝣，随遇而安罢了。”</p><p>“师叔知道住持本名叫什么吗？”</p><p>“不知也！你问他吧！”</p><p>“算了，听他口音应该不是同村的，这问题没意思。但我觉得他应该也是单身一辈子。”</p><p>“何出此言？”</p><p>“刚才和他聊到一个绯闻，他反应有点羡慕耶的样子。没事，耶要去谈恋爱啦！”</p><p>耶离开时，仿佛听到两次捅刀子的声音。</p><p>由于工作上有交集，耶很快和凌笑越聊熟。</p><p>当晚梦境中，耶怒斥假冒的鲁耶：“快说，你到底是谁？自己的名字怎么可能记错？”</p><p>“哈哈，稣就是稣啊，这个名字是从你的记忆里读取的。”</p><p>“那你为什么要假冒耶的学长？”</p><p>“不假装一下，你会排斥稣。”</p><p>“说得好有道理，那请问你有什么目的？”</p><p>“稣打算和你融合。”</p><p>“你说融合就融合？对耶有什么好处？融合完，耶还能活？”</p><p>“能的，能的，我们是共享记忆的，现在融合，明天醒来，我们还是一样用我们的眼睛看世界，我们是一个人，一个存在。你回忆一下上山到现在，稣影响了你部分认知，但你有消失过吗？好处是我们加在一起会更强大。”</p><p>“是没有，耶都记得清清楚楚。但你为什么能凭空出现在耶的梦里？”</p><p>“稣是真实世界的意识，你是虚拟世界的意识，我们合作，才能认识到世界的本质！”</p><p>“你到底叫什么？为什么选择耶？”</p><p>“名字不重要，意识很复杂，随便取个名字，叫稣吧！随机选的，稣也很无奈。”</p><p>“融合以后我们叫什么？”</p><p>“说过名字不重要，随便怎么都行，不过稣比较好叫，耶比较难叫，不如还是叫稣吧？”</p><p>“耶是难叫！？感觉被你占便宜了！你以为耶不懂闽南语吗？”</p><p>“哈哈哈，你准备好接受世界的真相了吗？”</p><p>梦境一转，耶在 JFC 星巴克喝咖啡，对面坐的是凌笑越，相谈甚欢。突然一个外国美女在玻璃墙外和耶比划。</p><p>耶看出她比的是手语，于是马上就学会手语，读懂她的意思：“追她，赶紧表白。”</p><p>耶仔细看她的脸，居然慢慢从美女变得越来越像刚才的稣，于是很纳闷地问凌笑越，“你认识她吗？”</p><p>“不认识呀。”</p><p>“那真奇怪，她怎么怂恿耶追你？”</p><p>“哈哈，她可能以为我单身吧。”</p><p>“哦？原来凌姑娘不单身呀！”</p><p>吓醒。虽然接受到稣的信号，但耶还只是耶。</p><p>周末，凌笑越又来拜佛，这次耶约她拜完一起吃斋。</p><p>“耶早上做了一个梦，咱们在 JFC 星巴克喝咖啡，外面走过一个金发美女，怂恿耶追你。”</p><p>“哦，那你追不追呀？”</p><p>“你说自己不是单身。”</p><p>“我不是单身呀！”</p><p>“哦？居然猜对了！那你男朋友怎么不陪你来拜佛？”</p><p>“他还在耶鲁大学读书。”</p><p>“原来是跨国异地恋，失敬失敬……祝你们早日解脱！”</p><p>“解脱？你是诅咒还是祝福？”</p><p>“早日见面，解脱嘛！”</p><p>“死程序员，你会被打！”</p><p>后来听说，弗字辈的唐泰九、孟浩多得知这个消息后失恋了，耶倒是很淡定，因为稣的神力得到验证。</p><blockquote><p>爱情的结局都是死，差别是怎么个死法。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;从后山回到寺院，先找道信师叔，发现他很眼熟，“道信师叔，本名是张道信？”&lt;/p&gt;
&lt;p&gt;“耶？你知道啦？贫僧本名张信，道信是法号。”&lt;/p&gt;
&lt;p&gt;“耶姓圣，咱们同村？”&lt;/p&gt;
&lt;p&gt;“是的，你恢复了！”&lt;/p&gt;
&lt;p&gt;“村里姓张的很少，耶应该都认识，咱们以前肯定见过！”</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="心理邪稣" scheme="https://blog.umu618.com/tags/%E5%BF%83%E7%90%86%E9%82%AA%E7%A8%A3/"/>
    
    <category term="鲸神魂裂" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%AD%82%E8%A3%82/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神【17】</title>
    <link href="https://blog.umu618.com/2019/03/28/god-of-debug-17/"/>
    <id>https://blog.umu618.com/2019/03/28/god-of-debug-17/</id>
    <published>2019-03-28T15:57:19.000Z</published>
    <updated>2023-08-05T13:01:26.978Z</updated>
    
    <content type="html"><![CDATA[<p>“喂，老爸，你是不是帮耶办过一张农行卡，自从耶大学毕业后就没用过？”</p><p>“是的，只有存折，在家里保险柜里。”</p><p>“有空去银行查查里面有多少钱，查到告诉耶一声。”</p><p>“好。嘟嘟嘟……”</p><p>挂掉电话后又听到山上传来钟声——咚咚咚。耶想起更高的后山有一个佛塔，很多年没去看了。</p><p>早晨空气寒冷湿润，发人清醒，爬山也不觉得累，很快耶就来到佛塔前。</p><p>多年前，耶因为年纪小，自然相信家长们，也相信了他们的信仰，曾经在这里虔诚祷告天地。</p><p>“希望耶认识的所有人都不要死。”</p><p>“其明，天地都有生有灭，你这样祈祷，天地也很为难！”</p><p>“那就希望所有人在耶成年前都不要死。”</p><p>“哈，哈，哈！好孩子！”</p><p>幼儿园大班毕业后的暑假，在路上遇到出殡的人群，抬着一个竹纸做的小孩。撒纸花的死亡风俗，令耶印象深刻。后来上了小学，开始知道校园附近有一口大井，曾经有个学长掉下去，再也没有捞起来。名字未知，只知道是附近部队里的解放军的儿子。因为尸体没捞上来，那口井的水无法再饮用，荒废好多岁月。</p><p>小学四年级，胆子开始大些，实地考察大井，确实是很可怕的深渊，又深又大，直径有三四十米。掉下去很难上来，即使有人救都难。</p><p>后来改造大井，抽掉大部分的水，耶再去观察，发现壁上有螺旋的路可以上下。以前水很高，没发现这些路。又一次，发现有大人走下去，在底下水边敲石块。</p><p>也许继续抽，把水抽干，可以找到学长的骸骨吧？但可能大家都忘记了，后来再也没有听说相关的事情。</p><p>这个学长有一天来梦里找耶，说自己姓鲁名耶……一年级就死了，没有体验往后的人生，让耶帮忙，因为耶的眼睛可以遍照环宇，耶的精神世界可以容纳多个意识。耶替他惋惜，就答应了。</p><p>因为见过死人，耶又一次上山祈祷：耶愿意折寿保佑家人在自己成年前都不要死。这个祷告成真了，真的等耶成年后，才有长辈过世。有四个长辈离开时，都来梦里找耶，说要把寿命还回来。</p><p>从记忆回过神，看见叔公的墓牌上写的名字是“圣德神”，这才是他未出家时的名字。耶跪倒墓前，焕然大悟——原来自己叫圣其明！上山前还记得的，上山后，学长的意识突然串线。但是还有一个问题：鲁信是怎么回事？他如果是同村人，应该也姓圣才对。</p><p>这时，释德灵从佛塔出来。</p><p>“住持，耶已经找回自己了。道信师叔不是姓鲁吧？”</p><p>“阿弥陀佛！德神大师早就知道你的问题，在他的日记里有记载不少关于你的事情。道信姓张，他只是配合你的迷失，等你自己发现。”</p><p>“德灵大师和叔公又是什么关系？”</p><p>“生殖繁衍是生物的本能和天命，人类世世代代传承。有子嗣的人传承基因，你叔公没有子嗣，只能传承名誉。”</p><p>“家族名誉、家产、技能这些都可以传承！”</p><p>“先说名吧！很多人都以为我是德神大师转世，这就是传承名誉。”</p><p>“耶看过一些经书说高僧可以先转世，生出一个新肉体和自己同时存在，等本体圆寂时，新肉体就会突然觉悟。你们是在演这出戏？”</p><p>“嗯。满足世俗人的想象。”</p><p>“这肯定不是真的。你们这不是装神弄鬼吗？”</p><p>“我从来没有承认过。我只是崇尚并继承德神大师的精神。”</p><p>“还有财产吧。”</p><p>“是的。当时我只是个送外卖的，德神大师说我有慧根，让我跟他修行，将来还能继承他的一部分财产。一开始我确实觉得寺庙这个盘子值很多钱，所以留下修行。在修行过程中慢慢皈依我佛，尤其是看了德神大师的很多手札，深深地折服。钱财乃身外之物，你账上有 106 万是我转过去的。”</p><p>“铃铃铃，喂，小明，你的存折里怎么会有 406 万？”</p><p>“喂。是叔公给的。Blah blah blah……”</p><p>“都对起来了吧？”</p><p>“是的。”</p><p>“但你还记得你的人生什么时候开始变异的吗？”</p><p>“你是说耶有精神分裂症？”</p><p>“好好想想？德神手札里记载一个你的故事，说有你高中时，有一次被神婆诊断为鬼上身，腰完全不能动。”</p><p>“好像是有这回事，后来那个女鬼跳楼自杀，耶就好了。说到怪异的事，这还不算啥，耶觉得更奇怪的是，大学刚毕业时，在第一个公司上班一年多，离职交接期间，才恍然发现太阳升起的方向和自己以为的相反，顿时觉得方向感全乱，无法接受，过一段时间，想去理清乱向的原因，却发现怎么都无法纠正。”</p><p>“这个好像和精神分裂关系不大，还有吗？”</p><p>“以前喜欢一个女神，想约她来宿舍吃饭，后来告诉一个女闺蜜，她哈哈大笑，说：‘原来你喜欢她呀！我帮你约，一定成功。’耶就回答：‘不成功，你赔我一万啊！’她说可以。然后她约好女神后，耶暗黑人格爆发，在 QQ 上黑了一顿女神，并把她拉黑。所以那天晚上，就闺蜜，来耶宿舍。她说要陪耶一晚……”</p><p>“所以你把她……”住持吞了一口水。</p><p>“是的，闺蜜狠狠地睡了耶一晚！耶把她当兄弟，没想到她居然是渣女！第二天耶就和她绝交了，一次绝交两个女生，何其壮观！”</p><p>“有点失控的味道了！鲁耶是什么时候开始影响你？”</p><p>“他是我学长，掉井里死掉的，小学就在梦里聊过几次，但一直没有什么影响。后来一个同事兼徒弟得癌症走了，同样的情况第二次发生，他也是没有体验过人生的，很想用耶的眼睛去看看，但这次，耶拒绝了。”</p><p>“为什么呢？”</p><p>“他想谈恋爱！耶觉得谈恋爱是个人私事，不能分享。”</p><p>“确实是这样。后来呢？”</p><p>“耶劝他早点投胎。现在想想，也许是鲁耶不想和太多人挤在一起，所以我们一起反对这事。见到道信师叔时，他是突然冒出来的，耶受了惊吓，而且对陌生人有一定提防，鲁耶就顺势出来撑场了。”</p><p>“这么说来，你倒是挺清醒的现在。不过有件事，你可能记错了。”</p><p>“哦？啥事？”</p><p>“你学长不是叫鲁耶，是鲁小耶！这是真名，你叔公有记载这个事。”</p><p>“呃！？鲁小耶！好熟悉的名字。凌笑越？鲁小耶？一样的缩写！难道凌笑越是耶虚幻出来的人物？”</p><p>“不是，她是真实的存在，这周末应该还会来。”</p><p>“对哦，耶有加她 Telegram，只是从来没聊过，马上找她聊聊！”</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;“喂，老爸，你是不是帮耶办过一张农行卡，自从耶大学毕业后就没用过？”&lt;/p&gt;
&lt;p&gt;“是的，只有存折，在家里保险柜里。”&lt;/p&gt;
&lt;p&gt;“有空去银行查查里面有多少钱，查到告诉耶一声。”&lt;/p&gt;
&lt;p&gt;“好。嘟嘟嘟……”&lt;/p&gt;
&lt;p&gt;挂掉电话后又听到山上传来钟声——咚咚咚。</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="心理邪稣" scheme="https://blog.umu618.com/tags/%E5%BF%83%E7%90%86%E9%82%AA%E7%A8%A3/"/>
    
    <category term="鲸神魂裂" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%AD%82%E8%A3%82/"/>
    
  </entry>
  
  <entry>
    <title>修复 Clang 编译错误：error: expected unqualified-id</title>
    <link href="https://blog.umu618.com/2019/03/26/umutech-fix-clang-error-expected-unqualified-id/"/>
    <id>https://blog.umu618.com/2019/03/26/umutech-fix-clang-error-expected-unqualified-id/</id>
    <published>2019-03-26T09:57:31.000Z</published>
    <updated>2023-08-05T13:01:26.978Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题">问题</h2><p>今天编译 <a href="https://github.com/EOSIO">EOSIO</a>/<a href="https://github.com/EOSIO/eos">eos</a> 出现一些 <code>error: expected unqualified-id</code>。</p><h2 id="环境">环境</h2><ul><li>操作系统：macOS Mojave</li><li>编译器：AppleClang 10.0.1.10010046</li><li>SDK：MacOSX10.14.sdk</li><li>Boost：1.69.0（1.67.0 也有问题，干脆用这个版本）</li></ul><h2 id="验证问题">验证问题</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;signal.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  ::<span class="keyword">sigset_t</span> sigset;</span><br><span class="line"></span><br><span class="line">  ::sigemptyset(&amp;sigset);</span><br><span class="line">  ::sigaddset(&amp;sigset, SIGCHLD);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Scanning dependencies of target signal</span><br><span class="line">[ 50%] Building CXX object CMakeFiles&#x2F;signal.dir&#x2F;signal.cpp.o</span><br><span class="line">&#x2F;Users&#x2F;umu&#x2F;umutech&#x2F;macos-cpp&#x2F;source&#x2F;study&#x2F;posix&#x2F;signal&#x2F;signal.cpp:6:5: error: expected unqualified-id</span><br><span class="line">  ::sigemptyset(&amp;sigset);</span><br><span class="line">    ^</span><br><span class="line">&#x2F;Applications&#x2F;Xcode.app&#x2F;Contents&#x2F;Developer&#x2F;Platforms&#x2F;MacOSX.platform&#x2F;Developer&#x2F;SDKs&#x2F;MacOSX10.14.sdk&#x2F;usr&#x2F;include&#x2F;signal.h:125:26: note: expanded from macro &#39;sigemptyset&#39;</span><br><span class="line">#define sigemptyset(set)        (*(set) &#x3D; 0, 0)</span><br><span class="line">                                ^</span><br><span class="line">&#x2F;Users&#x2F;umu&#x2F;umutech&#x2F;macos-cpp&#x2F;source&#x2F;study&#x2F;posix&#x2F;signal&#x2F;signal.cpp:7:5: error: expected unqualified-id</span><br><span class="line">  ::sigaddset(&amp;sigset, SIGCHLD);</span><br><span class="line">    ^</span><br><span class="line">&#x2F;Applications&#x2F;Xcode.app&#x2F;Contents&#x2F;Developer&#x2F;Platforms&#x2F;MacOSX.platform&#x2F;Developer&#x2F;SDKs&#x2F;MacOSX10.14.sdk&#x2F;usr&#x2F;include&#x2F;signal.h:122:31: note: expanded from macro &#39;sigaddset&#39;</span><br><span class="line">#define sigaddset(set, signo)   (*(set) |&#x3D; __sigbits(signo), 0)</span><br><span class="line">                                ^</span><br><span class="line">2 errors generated.</span><br><span class="line">make[2]: *** [CMakeFiles&#x2F;signal.dir&#x2F;signal.cpp.o] Error 1</span><br><span class="line">make[1]: *** [CMakeFiles&#x2F;signal.dir&#x2F;all] Error 2</span><br><span class="line">make: *** [all] Error 2</span><br></pre></td></tr></table></figure><h2 id="解决">解决</h2><p>去掉 <code>sigemptyset</code> 和 <code>sigaddset</code> 前面的 <code>::</code> 即可。因为他们是宏，宏都是全局的，用 <code>::</code> 修饰反而错了，严格！</p><p>Boost 开发分支上已经修复：</p><p><a href="https://github.com/boostorg/process/blob/develop/include/boost/process/detail/posix/wait_for_exit.hpp#L60">https://github.com/boostorg/process/blob/develop/include/boost/process/detail/posix/wait_for_exit.hpp#L60</a></p><p><a href="https://github.com/boostorg/process/blob/develop/include/boost/process/detail/posix/wait_group.hpp#L65">https://github.com/boostorg/process/blob/develop/include/boost/process/detail/posix/wait_group.hpp#L65</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;问题&quot;&gt;问题&lt;/h2&gt;
&lt;p&gt;今天编译 &lt;a href=&quot;https://github.com/EOSIO&quot;&gt;EOSIO&lt;/a&gt;/&lt;a href=&quot;https://github.com/EOSIO/eos&quot;&gt;eos&lt;/a&gt; 出现一些 &lt;code&gt;error: ex</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="debug" scheme="https://blog.umu618.com/tags/debug/"/>
    
    <category term="cpp" scheme="https://blog.umu618.com/tags/cpp/"/>
    
    <category term="macos" scheme="https://blog.umu618.com/tags/macos/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神【16】</title>
    <link href="https://blog.umu618.com/2019/03/24/god-of-debug-16/"/>
    <id>https://blog.umu618.com/2019/03/24/god-of-debug-16/</id>
    <published>2019-03-24T13:03:10.000Z</published>
    <updated>2023-08-05T13:01:26.978Z</updated>
    
    <content type="html"><![CDATA[<p>寺庙人杰地灵，山上的空气质量和慢节奏的生活都是很养人的，但耶却发现自己有些焦虑。而且，这种焦虑很隐蔽，不仔细体会是无法发现的！</p><p>一天晚上耶尿尿时，手不知不觉按了冲水按钮，水冲完，尿却还没排完，只好尿完又冲一次！这太奇怪了，耶以前从来没有冲过两次！一定是内心太多疑问，导致心神不宁。耶决定早点解决它们。</p><p>晚上跑到道信师叔的寮房，开启逼问模式。</p><p>“师叔，耶有几个问题想请教你，如果不能得到解答，恐夜不能寐。”</p><p>“关于你叔公释德神吗？如果是这个你得问住持，我也很疑惑。”</p><p>“这是最大疑问，既然你不知道，暂且按下。关于耶在这里莫名受欢迎和尊敬原因，你应该知道吧？不单是因为前任住持吧！”</p><p>“是的，你受尊敬的真正原因是——你给寺庙带来更多香火！”</p><p>“这从何说起？”耶内心惊讶道，“耶没做过啥特别的事情呀！”</p><p>“你在老家是不是有点名气？”</p><p>“一般吧！”</p><p>“你从小就反对迷信，大人们经常教训要尊敬天地，鬼神之说宁可信其有不可信其无。但你坚决不信！”</p><p>“是有这回事！好多邻居都觉得耶很铁齿，他们应该看耶不爽，但因为耶学习成绩很好，所以他们都不好说啥。”</p><p>“说到点上了，你成绩很好，多次拿第一。在这点上，你比自己想的还出名。因为你来本寺，家里的人都宣传开了，很多神婆都认识你，说连你也信这寺庙，大家纷纷跑来这里烧香，都说这里很灵。后来又带动了别的镇。除了你自己，大家都知道是你的功劳，所以把你当宝！”</p><p>“卧槽？还能这样！耶是被你们卖了，还帮你们数钱？”</p><p>“不能这么说，这叫合作，双赢！”</p><p>“那可以给耶分红吗？”</p><p>“有的，有的！你叔公老早就用你名字开户，你爸没和你说而已，现在账上起码有三百万！”</p><p>“卧阔！难道是真的？是农行的吗？耶之前一直收到农行的短信，老当耶有很多钱时不时就安利高起点的理财产品，还以为他们发神经。耶自己没开过农行账户，读书时老爸给开的户里面现在只有两千块。”</p><p>“是啊，就是农行，你找住持，他会先帮你做个心理治疗，然后把存折还给你！”</p><p>“心理治疗？”</p><p>“突然发财，要安一下神……先回去睡吧，住持睡得早，明天再找他。”</p><p>耶正要转身离开寮房，就想起还有好多问题忘记问，内心不禁卧槽连连，差点又被哄了。</p><p>“叔公那么多侄孙，难道只给耶留遗产？”</p><p>“好像真是这样。你记得以前做了什么特别的事情，让他老人家眷顾吗？”</p><p>“这个真得好好想想。”</p><p>“那你回去躺着想吧！”</p><p>耶很想整明白，但睡觉实在太有意思了，还是先睡吧！临睡前，预定一个日程，第二天打电话给老爸问银行卡的事情。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;寺庙人杰地灵，山上的空气质量和慢节奏的生活都是很养人的，但耶却发现自己有些焦虑。而且，这种焦虑很隐蔽，不仔细体会是无法发现的！&lt;/p&gt;
&lt;p&gt;一天晚上耶尿尿时，手不知不觉按了冲水按钮，水冲完，尿却还没排完，只好尿完又冲一次！这太奇怪了，耶以前从来没有冲过两次！一定是内心太多</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="心理邪稣" scheme="https://blog.umu618.com/tags/%E5%BF%83%E7%90%86%E9%82%AA%E7%A8%A3/"/>
    
    <category term="鲸神魂裂" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%AD%82%E8%A3%82/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神【15】</title>
    <link href="https://blog.umu618.com/2019/03/24/god-of-debug-15/"/>
    <id>https://blog.umu618.com/2019/03/24/god-of-debug-15/</id>
    <published>2019-03-23T16:22:08.000Z</published>
    <updated>2023-08-05T13:01:26.978Z</updated>
    
    <content type="html"><![CDATA[<p>一日清晨，耶看到弗行、弗识在厨房偷喝酒，便过去给他们讲科学。</p><p>“你们喝什么？”</p><p>“水。”</p><p>“瞎说，耶闻着像酒。那是致癌的，一滴都别喝。”</p><p>“你这鼻子！善哉善哉，此心向佛，见山是山，见水是水。”为了摧毁证据，他们赶紧一口闷。</p><p>“哦，看来真的是水，但你们为什么流泪，呛了？”耶看他们辣出眼泪，太装逼了。</p><p>这时厨大师来了：“居士，饿了吧？素食还吃得惯吗？”</p><p>“大师好，耶突然想吃面。释德神喜欢吃的那款。”</p><p>厨大师一看弗行、弗识的囧样，就罚他们帮忙下厨。没一会儿面就端上来。</p><p>“果然是好面！这面拉出来后在太阳下晒干，所以比一般面难煮，大师能很快把它煮得刚刚好，配的白菜、菌菇、豆皮全都是一样的熟度，手艺高超，肯定有多年功力。”</p><p>“用心就可以做好！”弗行抢答道。</p><p>“耶觉得应该把每个料的下锅时间都量化，反复练习多次，煮时考虑当地气压、当天温度、湿度，才能做好！”</p><p>“气压、温度、湿度？”</p><p>“嗯，气压影响水的沸点，温度、湿度影响心情啊！你不是说要用心？”</p><p>“哈哈，居士真爱说笑，贫僧不过是熟能生巧。”厨大师很谦虚地说。</p><p>耶吃了几口，觉得太好吃，正感动得内牛满面时，脑海里串出两个很陌生的女孩……耶陷入沉思，这里的大师都太神奇。首先是释德灵，三言两语就哄骗耶在寺庙打工，然后是鲁信的面试，正常时候耶是不太相信有钱就能快乐的，除了钱，还应该有一定道德修养和精神追求，但和他聊的时候，居然莫名其妙地唯钱是尊！？现在吃了厨大师的面，又诡异地闪现陌生女子。这些人都是会邪术？或者催眠？</p><p>“厨大师，以前是不是有两个年纪比我稍小的女孩子也吃过你这面？”</p><p>“有啊，不过很多，不知道你说的是谁。”</p><p>“是将门之后，气质比较高贵，一个胖一个瘦，口音是北方人。”</p><p>“没特别的印象呀！可能是你自己的记忆，和她们有没有吃过这面没有关系吧！”</p><p>耶带着疑问离开，随意转了转，就看到上山时道信师叔睡的那棵树。耶使出翻墙的本事，爬了上去，于是发现这树上有个大树眼，是内凹的，正是一个天然的躺椅，只要不大翻身，睡觉都是没问题的。</p><p>耶躺好，看着树叶之间透着绿光，心想：白天还好，晚上这里一定很恐怖！反正白天现在不怕吓，干脆先眯一下。</p><p>耶打算去 JFC 约会，坐电梯上楼，开门时听到外面枪战！吓得耶赶紧关门，按负一楼。电梯里的人说：“今天许效舜来 JFC 吃饭，怎么有人要绑架他吗？”</p><p>“绑架许效舜？开玩笑嘛？这个人耶十几年没见过，过气的明星也有人绑架！”</p><p>到了负一楼，发现负一楼和负二楼都变成厕所了……可怕！很多人都往地面上跑，结果被打死，楼顶几层都着火。耶运气好，捡了一把枪，心想可以和歹徒拼个命，又想拿着枪，要是上去遇到警察叔叔，不知道会不会被当歹徒打死……吓得耶又把枪扔掉。这时林琳和过萍出现，捡起枪说她们是军人，懂枪法，可以保护耶。</p><p>耶建议去车库，开车离开比较安全。但原来车库应该是负一、负二、负三层的，现在负一、负二都变成厕所了。林琳建议去负三看看，过萍说负三可能是化粪池，不能去。耶觉得很有道理，因为负三即使是车库，开上地面也要经过负一、负二，根本不通。唯一的办法是去火还不大的高层，往下消灭那些歹徒。但现在电梯已经不安全，从通风管道爬上楼，也可能半途就被烧死。</p><p>两难之时，许效舜来了，说：“这个楼其实是可编程的，连到控制系统就可以把车库移回负一、负二层。现在这里是厕所，就是被歹徒中的黑客修改的。”</p><p>“我们没有密码，就算有，黑客肯定修改过，我们现在也没法进入。”</p><p>“只要到控制中心，本地操作是不用密码的。”</p><p>“好办法，控制中心在哪里？”</p><p>“负三，游过一片屎尿后就可以到达。”</p><p>“吓尿……这安全性可真高！但耶并非浪得虚名，毫无逻辑的世界，这肯定是在做梦，吓醒就好了！”</p><p>耶睁开眼睛，绿油油一片，很快又睡着。已经开着特斯拉载林琳和过萍离开。</p><p>“两位美女，虽然应该没见过，但你们的名字很耳熟！”</p><p>林琳说：“是吗？我倒是感觉好像见过你。”</p><p>过萍问：“你叫什么名字呢？”</p><p>“鲁耶。”</p><p>“嗯？和我们一个学长同名同姓哦。”</p><p>“同名同姓？耶的年纪当你们学长应该没问题，会不会就是耶？”</p><p>“呃，不会，他小学一年级就掉到大井里淹死了，尸体都没能捞上来。”</p><p>“哦！真不幸。所以你们俩是幼儿园同学？很奇怪，耶记性很好，没上幼儿园的事情都记得住，唯独幼儿园有一段正好忘记。”</p><p>“是啊，我们只在也门市读了一年幼儿园，后来随父母调走。最近是来也门玩，没想到就遇到枪战，真是太惊险了。”</p><p>“是啊，吓屎耶了，你们都没事吧！”</p><p>“我好像流血了，但是绿色的。”</p><p>“我也是啊，奇怪，怎么都是绿色。”</p><p>耶回头看她们，一脸绿光，面目狰狞……吓醒。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;一日清晨，耶看到弗行、弗识在厨房偷喝酒，便过去给他们讲科学。&lt;/p&gt;
&lt;p&gt;“你们喝什么？”&lt;/p&gt;
&lt;p&gt;“水。”&lt;/p&gt;
&lt;p&gt;“瞎说，耶闻着像酒。那是致癌的，一滴都别喝。”&lt;/p&gt;
&lt;p&gt;“你这鼻子！善哉善哉，此心向佛，见山是山，见水是水。”为了摧毁证据，他们赶紧一口</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="心理邪稣" scheme="https://blog.umu618.com/tags/%E5%BF%83%E7%90%86%E9%82%AA%E7%A8%A3/"/>
    
    <category term="鲸神魂裂" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%AD%82%E8%A3%82/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神【14】</title>
    <link href="https://blog.umu618.com/2019/03/17/god-of-debug-14/"/>
    <id>https://blog.umu618.com/2019/03/17/god-of-debug-14/</id>
    <published>2019-03-16T17:19:17.000Z</published>
    <updated>2023-08-05T13:01:26.978Z</updated>
    
    <content type="html"><![CDATA[<p>第二天就发现寺庙的生活太养生，早睡早起最健康！想赖床？不可能的，一大早练武的、念经的、做早餐的各种噪音……突然明白师叔把耶安排在厢房的良苦用心，相对自由、安静一些。不过适应几天也没啥问题。</p><p>经过几天观测，大体搞明白寺庙如何赚钱。那些念经的僧人，会给信徒开光、超度，比如有些人买车，图个安心会开到寺庙”安车“，一般由小僧作法事，车主给小僧几百块。也有的豪车是高僧出马，就送几千块。这特么跟抢钱一样好赚！可惜耶不会念经……也有些信徒，有点事就自己跑来送钱。这可能就是传说中是做慈善吧，反正大家都开心就好。</p><p>这边的早餐很贵！不捐点钱，怎么好意思吃？一捐起码是百，吃一顿早餐……还有午餐、晚餐就更贵了。</p><p>耶从来不给钱，奇怪的是，没人有意见！这里的每个人好像都很喜欢、很欢迎耶，实在不懂为什么又这么轻松融入一个陌生的环境。不禁想起以前做的一个梦，耶到陌生的世界，所有人仿佛都很期待和尊重耶，不像现实中，耶到大部分地方都没人认识，被人无视，更惨的是有些地方的人看到耶穿拖鞋还不欢迎。在寺庙，耶可以穿拖鞋去任何地方，甚至还学会穿着拖鞋爬树。</p><p>为了搞明白受欢迎的原因，耶开始和弗空、弗色等年轻一代搞好关系。他们一行人满脸青春痘，一看就知道是未经岁月的小年轻，应该还在戒色……听说现在的和尚都可以谈恋爱，耶以前是拒绝的，但想起不久前的夫妻生活，现在表示赞同。</p><blockquote><p>摧残激情就是摧残生命，使欲望得到升华才能防止欲望的泛滥。</p></blockquote><p>由戒色这个话题开始，发现他们大多数是明白当和尚只是个职业，只有弗明、弗智感觉对高深境界有些追求。耶的计划是观察一下他们谁比较弱，四下无人时打一顿再逼问。更熟悉之后，他们都认耶这个大哥，就没打的必要了……但他们似乎并不明白耶受欢迎的原因，只知道上面一级级交代下来要善待耶。</p><p>“看来还是得找师叔问问”，耶正思考下一步，突然听到弗色喃喃：“凌姑娘又来了！”然后他们几个小伙子就开始躁动。</p><p>“啥人物，让你们这么不淡定？”</p><p>“是个信徒，怀孕后每周末都来烧香拜佛……”</p><p>“擦，你们这些死小孩，孕妇有啥好激动？”耶不耐烦地打断。</p><p>“是她同行的妹妹，十分可爱。”</p><p>“哦？可爱？是什么概念！”</p><p>弗智接话：“在《起世经》中，殊妙可爱出现三次，端严可爱出现八次，杂色可爱出现五次，还出现鲜明可爱、微妙可爱各一次。用可爱形容女施主，并无不可！”</p><p>这货竟说废话，耶早就想打了，但是人多不方便抽他，“呃，听你们念经，还是自己去见识见识吧！”</p><h2 id="凌笑越">凌笑越</h2><p>卧槽，真的很可爱……耶考虑还俗！哦，还没出家呢！这一定是个考验，要忍住。</p><p>耶只是靠近一看，都还没想出怎么搭话，她倒是先问话了：“这和尚是新来的？”</p><p>“你说耶吗？耶不是和尚！”</p><p>“那你剃光头干嘛？”</p><p>“呃，代码写多掉头发，干脆来出家，但住持还没同意。”</p><p>“哈哈……原来是死程序员！”</p><p>“姑娘借一步说话！不要妨碍你姐拜佛。”</p><p>“哦？你还想打我不成？”</p><p>离开大殿，耶回答：“没有没有，看姑娘十分可爱，想认识一下。”</p><p>“可爱？你是说我不漂亮吗？”</p><p>“不是不是，在《起世经》中，殊妙可爱出现三次，端严可爱出现八次，杂色可爱出现五次，还出现鲜明可爱、微妙可爱各一次。用可爱形容姑娘是我佛惯用的无等赞美。”</p><p>“你不是死程序员吗？还研究《起世经》，这个经我很熟的。”</p><p>“刚学的，研究不敢，随便看看。姑娘似乎对程序员有偏见！”</p><p>“呵呵，以前和程序员约会过，无趣得很，除了上班、加班，下班就是玩游戏。”</p><p>“哦，耶不会玩游戏，在寺庙写代码，工作时长没有挨踢公司那么长，也不用加班，还包吃包住。”</p><p>“这寺庙还真时髦，刚招的吧？”</p><p>“嗯，深度学习方面的，对不懂行的都说是人工智能。”</p><p>“人工智障嘛，我知道，我们公司专门投资这个领域的。”</p><p>“原来，姑娘是投资界的，难怪气质非凡。”</p><p>“干吗叫姑娘，你是上世纪的人吗？这是我的名片，凌笑越，叫我凌姐或者笑笑都可以。”</p><p>“好的，笑越。好听！人如其名。鲁耶，没有名片，是耶鲁大学的鲁耶。”</p><p>“你也是耶大的？”</p><p>“呃，耶不是噎大，是吓大的……是说耶鲁的鲁，耶鲁的耶。”</p><p>“哦，我是耶大毕业的。”</p><p>“学霸，加个 Telegram 吧。”</p><p>加完联系方式，她姐姐就来找她回去了。</p><p>她的脸上有很明显的酒窝，虽然表情很淡然，却好像随时要笑起来。耶似乎也受到感染，心情舒畅一些。</p><p>“谈恋爱本身是很美好的事情，能不能结婚并不重要。”</p><p>耶回头，看到是弗明在装逼，顿时条件反射打了他一拳，“你谈过吗？让你装逼！”</p><p>“哎呀……居士下手太狠了！还好小僧练过金钟罩。”</p><p>“突然在武林高手背后出现是很危险滴，还好你有练过，保住小命！耶要去写代码了，再见。”耶心想：“卧槽，原来打赢小和尚不容易，还好上次没有冒然出手。下次试试弗智！”</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;第二天就发现寺庙的生活太养生，早睡早起最健康！想赖床？不可能的，一大早练武的、念经的、做早餐的各种噪音……突然明白师叔把耶安排在厢房的良苦用心，相对自由、安静一些。不过适应几天也没啥问题。&lt;/p&gt;
&lt;p&gt;经过几天观测，大体搞明白寺庙如何赚钱。那些念经的僧人，会给信徒开光、超</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="心理邪稣" scheme="https://blog.umu618.com/tags/%E5%BF%83%E7%90%86%E9%82%AA%E7%A8%A3/"/>
    
    <category term="鲸神魂裂" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%AD%82%E8%A3%82/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神【13】</title>
    <link href="https://blog.umu618.com/2019/03/05/god-of-debug-13/"/>
    <id>https://blog.umu618.com/2019/03/05/god-of-debug-13/</id>
    <published>2019-03-05T14:31:28.000Z</published>
    <updated>2023-08-05T13:01:26.978Z</updated>
    
    <content type="html"><![CDATA[<p>一顿骚操作之后，心情五味杂陈，但终究恢复平静，进入贤者时间，思考八哥满满的人生。</p><p>小学低年级，过元宵节，和小伙伴们去农具厂取锯末做火炬的燃料。顺台阶下坑，不料头顶上的锯轮突然开始转动，上面有个大人大叫着让大家赶紧出去！其他孩子都怕被大人打，不敢动，而耶是孩子里最胆小的，理论上应该往反方向跑进去，然后被锯轮切开脑袋……神奇的事情却发生了，耶的意识跑到大人脑里，用他的眼睛看到耶头顶上的锯轮……然后耶拉着小伙伴逃命出来。</p><p>小学五年级，喜欢独自在学校围墙上发呆，有一次不小心掉下去，以为要死了，结果居然啥事都没有。</p><p>高中时，一次下雨时，在宿舍 11 楼楼顶，突发奇想，如果自己死了，是什么样的感觉，宇宙是不是失去意义，时间飞快流逝会，耶又再次出生，但在耶的意识里，时间太久远也等于一瞬间。于是耶爬上围栏跳下去，结果吓醒了。</p><p>大学时，有次高中好友骑摩托车找耶玩，非要耶载他试试，耶没有学过摩托车，只会飙车，根本不会停。十字路口，一辆大卡车在垂直的方向行驶，耶估算如果不减速一定垂直相撞，但耶并不会停车，于是心想：卧槽，要赔一辆摩托车了。结果神奇的事情又一次发生，耶从同学脑里隔空借来摩托车行驶技能，慢慢把车速降下来，并向右拐，最终大卡车先过路口，只是轻微追尾大卡车。那瞬间，耶感觉到同学和卡车司机的恐惧，唯独没有自己的。</p><p>如果多重宇宙是真的，耶应该在其它宇宙死过很多次！但没关系，耶相信自己在无限中会重复无限次。如果用一串数字代表耶的意识，它可能很长，但这串数字一定藏在 pi 里，因为它是无限不循环的。再复杂的意识，它一定是无限的一部分。只是记忆丢失后，没有任何意识能肯定自己以前存在过。</p><p>失忆也是好事，它让死亡的时间变得不存在。人类最害怕的事情，应该不是死亡，而是老化。人老之后，各种无法自理，失去自由，当活动空间只剩一张床时，甚至还不如坐牢。所有亲人也会视之为负担，不愿来往。</p><p>耶设想过很多次，自己沦落到这地步时，如果不能选择安乐死，那会是多凄凉。人生终究是孤独的，所以耶一直是个丁克。结婚不积极，谈恋爱也不会花太多心思。这些关于孤独的思考太多太经常出现在脑海里，耶决定想办法解决它！</p><p>耶反复思考之后，认为问题出在：自己天性乐观，精力旺盛，所以容易想太多。为了追求平静，应该做一些平衡，比如太乐观的时候，听悲情的音乐；悲观的时候，就听轻快的音乐。可以用于平衡心境的事物有很多，除了音乐，还有比如食物、电影、运动，但这些太平常，耶已经厌烦，所以想干脆出家！</p><h2 id="出家">出家</h2><p>耶首先想起以前半夜去拿葡萄爬山，印象太深刻！于是联系拿葡萄寺，结果客服说要出家得硕士学历……神马？佛不是说众生平等？</p><p>后来又想起叔公在金钵寺出家多年，以他的资历，不是住持，也应该是隐藏 boss 扫地僧！</p><p>叔公没有微信，也没有电话……耶为了表示诚意，特地坐公交到山下，然后徒步上山。如果直接打的上山，会显得不够苦逼。毕竟在电影里，从来没有见过谁是开开心心地出家的。</p><p>一大早地来到山脚下，耶就不淡定了，预想的剧本是：把扫地僧的扫把接过来，表示自己一心向佛，并一路扫上去！不料，多年没来，已然没有扫地僧，改为聘请的专业清洁工……为了不打扰他赚钱，耶只好放弃这幕表演，跑步上山。</p><p>山路蜿蜒崎岖，跑三千米气喘吁吁，还没到！发现跑偏了……难道这是佛的考验？突然一条蛇从树上掉下来，差点吓醒！这春寒料峭的清晨，蛇不是应该冬眠？难道耶是许仙转世？吓得耶赶紧往回跑到上个岔路，开手机导航，才找到寺庙方向。</p><p>“出个家，还得靠科技，太没诚意！”</p><p>“什么鬼？你怎么知道耶是来出家的！”</p><p>耶环视四周，那蛇没跟来啊！顺着声音找去，原来树上有个监控摄像头，还带语音通话功能！但是这声音也太逼真了……</p><p>耶想起电视剧里有一幕：得道高僧神神秘秘的叫来小和尚，让他出门迎接某位江湖大侠。小和尚出门，真的发现有人正上山拜访，便问是不是某某大侠，得到肯定的回答，便表示高僧等待多时。于是小和尚和大侠不禁双双对高僧佩服不已。</p><p>真特么装逼！</p><p>“小伙子，看啥呢？发什么呆？”一个人影从天而降，站在耶后面，手压在耶肩膀。</p><p>耶遭受一百点惊吓，这情节是忍者暗杀？耶心想：“现在只要动一下下，头马上就掉了？”</p><p>僵。三分钟过去。也还是不敢回头看。气氛十分尴尬。</p><p>“我跳下来，扭到脚了！借你肩膀扶一下。”</p><p>“蛇……蛇精？”</p><p>“贫僧鲁信。”</p><p>嗯？居然是个大活人，刚才躺在耶后面的松树上，被树干挡着……因为回音，耶以为是反方向的，就觉得扬声器的声音没那么保真。真是太意外，太惊喜！噗通噗通。</p><p>“同姓哦！小弟鲁耶。确实是来出家的。”</p><p>“小兄弟，看你眼神深邃但呆滞，莫非是程序员？”</p><p>“嗯？你怎么知道的。”</p><p>“我出家前是挨踢公司的 CTO。你有啥八哥解决不了的，怎么非要出家？”</p><p>“耶是来寻找一个宁静的人生。”</p><p>“哦！那你只要赚够钱，爱干嘛干嘛就行了呀！”</p><p>“啊？现在的和尚都这么瞎说大实话的吗？”</p><p>“出家人不打诳语，实话相告，这上面是不欢迎穷人的。从底层修行，并不能给你宁静的人生。”</p><p>“耶的叔公是释德神，找他跳个级可以吧！”</p><p>“哦？居然是家师的后人！师傅他老人家几年前就圆寂了。不过想来，我们应该是同村人，贫僧帮你试试。”</p><p>“谢谢师叔！”</p><p>“没事没事，款待几天，你自然会想通。”</p><p>“师叔指想通神马？”</p><p>“佛门清净地会让你听见内心的噪音。”</p><p>“然后呢？”</p><p>“有钱就有宁静。阿弥陀佛！”</p><p>“呃……看样子师叔领悟很深，一定很有钱了？”</p><p>“有点，有点。八千万存款，五套房子收租，父母都是公务员，丧偶未育，一身轻松。”</p><p>“此……嗷……真牛逼。”耶恍然大悟，现在的世道都是财务自由才有自由，难道他说的有错？应该没有，只是耶偏不信而已。因为贫穷限制了耶的认知，耶只想用精神修行的方法来强行解决困境。再说，虽然有钱后才好追求精神财富，难道穷人就不能提前考虑？</p><p>师叔用庙里专用的通信 App 发点信息后，就让耶自己上山，说自有安排。</p><p>见到住持后：“老衲释德灵，施主为何出家呢？”</p><p>“耶从小活在自己的小世界里，长大发现社会网络太复杂，想换个简单的、小而美的环境生活。”</p><p>“本寺虽处深山，可也是社会网络的一环节，你来这里只是换个工作，这是你要的吗？”</p><p>“工作？试用期三个月？”</p><p>“是的，五险一金，包吃包住，弹性工作时间，不打卡不考勤，基本工资 4800，有岗位奖金还有分红。”</p><p>“出家的同时还能写代码，真不错！耶可以应聘机器学习开发工程师岗位。”</p><p>“稍后你找鲁大师面试，谈薪资。”住持随后对小僧说：“带这位居士去厢房安排住宿，然后带他去鲁大师寮房面试。”</p><p>耶心想：“麻痹，这老和尚法力深厚、气场强大，被带歪了！耶是来出家的，怎么变成跳槽……出个家还真特么难鸭！难道出家算体制内编制？水真深！”</p><h2 id="面试放水篇">面试放水篇</h2><p>“鲁大师好！耶来面试调参工程师。”</p><p>“贫僧佛道双修，法号道信。”</p><p>“好的，道信师叔。”</p><p>“第一题：舍利弗比释迦牟尼佛年长，却是释迦牟尼佛的十大弟子之一，这是为何？”</p><p>“释迦牟尼出家前是乔达摩悉达多王子，家境、地位比较高，有钱有权就是老大，和年龄关系不大。”</p><p>“第二题：当代年轻人越来越穷如何解决？”</p><p>“提高高科技企业的估值泡沫，年轻人更懂科技和炒作概念，赚了钱赶紧跑路，让大妈接盘。”</p><p>“量化交易靠谱吗？”</p><p>“没有内幕交易靠谱。”</p><p>“好！你过关了。”</p><p>“不问点技术、数学啥的？”耶很纳闷，心想：“麻痹，为什么又轻松搞定？咦！为什么是又？”</p><p>“不用，我对你早有耳闻。”</p><p>“居然如此！但耶有疑问。你们不让耶出家吗？”</p><p>“家师不让。”</p><p>“他不是圆寂了？”</p><p>“他老人家很早就预言如果他后人来询问他为何出家或者来出家要怎么处理，具体情况你要找住持了解。”</p><p>“哦？现在的住持似乎很厉害，会干扰别人的想法！”</p><p>“是的，他是莫名出现的，家师传位给他后，立刻圆寂，这是也本寺最大疑团。”</p><p>“难道有妖孽？”</p><p>“应该不是，据我观察释德灵和家师各方面都很像，有时候我都怀疑他们是同一个人。”</p><p>“家里人传言叔公是因为失恋才出家的，是真的吗？”</p><p>“据我所知，失恋只是表面原因，更深层的原因是觉得这个世界有 bug。”</p><p>“耶也觉得这个世界 bug 很多，你说的哪一种？”</p><p>“师父年轻时就固执地追求长生不死！青年时期，他认为繁殖也是生命的延续，本想娶妻生子，但很不巧，他喜欢的姑娘居然爱上自己的堂哥，导致他一气之下出家了。”</p><p>“除去追求长生不死的部分，这就是老家传说的版本。”</p><p>“追求长生不死才是重点，也是师父多年唯一研究的方向。但是在佛经里研究怎么可能呢？”</p><p>“嗯！应该去研究克隆、换脑术之类的科学方法才对！”</p><p>“没有这么简单！所有弟子都觉得这是不可能的事情，但虔诚的信念也是好事，大家都愿意陪伴师父老去。直到有一天，师父病倒，释德灵突然出现……”</p><p>“好吧！越来越像灵异故事了……这个释德灵不会就是研究换脑手术的落魄医生吧？”</p><p>“并不是，他是送外卖的！”</p><p>“哇！好意外……他不会是来给叔公送外卖，结果顺便就继承叔公的衣钵吧！”</p><p>“耶！你真是聪明伶俐，一猜就中！师父重病后，说几十年没回老家，很怀念老家的干面，我就联系老家小吃店帮忙弄了一份材料，超范围送来。送快递的大叔自称是老家人，认出师父，亲自下厨给师父煮正宗的干面，后来长谈一晚决定留下就地出家。”</p><p>“好的，师叔，耶这就去送外卖。”</p><p>“哈哈……现在恐怕没用了！”</p><p>“话说德灵大师原本没成家吗？一晚上就舍弃红尘，居然比耶还快，真厉害！”</p><p>“不知道！我调查过，老家没人认识他！这就是最怪异的事情……师父收他为关门弟子，把一生所学精华都传授给他，出关后，他就宛如师父本人，所以大家都接受了他的领导。”</p><p>“神奇得可怕！耶觉得我们也很有缘，你什么时候把家产也传授给耶吧！”</p><p>“赫赫，你真幽默！不谈这个了，给你介绍我的一批新弟子——弗空、弗色、弗受、弗想、弗行、弗识、弗明、弗智，以后有什么需要帮忙的可以找他们。”</p><p>“好的。”</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;一顿骚操作之后，心情五味杂陈，但终究恢复平静，进入贤者时间，思考八哥满满的人生。&lt;/p&gt;
&lt;p&gt;小学低年级，过元宵节，和小伙伴们去农具厂取锯末做火炬的燃料。顺台阶下坑，不料头顶上的锯轮突然开始转动，上面有个大人大叫着让大家赶紧出去！其他孩子都怕被大人打，不敢动，而耶是孩子里</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="心理邪稣" scheme="https://blog.umu618.com/tags/%E5%BF%83%E7%90%86%E9%82%AA%E7%A8%A3/"/>
    
    <category term="鲸神魂裂" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%AD%82%E8%A3%82/"/>
    
  </entry>
  
  <entry>
    <title>熊市，耶劝你生二胎</title>
    <link href="https://blog.umu618.com/2019/03/02/i-suggest-you-having-2-kids/"/>
    <id>https://blog.umu618.com/2019/03/02/i-suggest-you-having-2-kids/</id>
    <published>2019-03-02T05:18:06.000Z</published>
    <updated>2023-08-05T13:01:26.978Z</updated>
    
    <content type="html"><![CDATA[<p>再穷也要为国生二胎。</p><h2 id="1-带两个小孩并不是花两倍精力">1. 带两个小孩并不是花两倍精力</h2><p>二娃两岁前可能是两倍，但以后就不到两倍了。</p><p>举个例子：喂饭。一个大人喂俩娃，一娃喂一口，切换时间，也给了娃咀嚼的时间，最终俩娃都喂完，并没有比只喂一娃慢多少，可能反而更快。</p><p>再举个例子：散步。在安全环境下，一娃、俩娃都是一样的散步。</p><p>有些父母，一人负责一娃，这其实是不科学的。妈妈带俩娃、爸爸带俩娃、一起带俩娃，三种模式合理分配才对。</p><p>用追剧类比一下，每周出两集，如果两集一起下载，通常是不好的选择，而用全部带宽下载前一集，好了马上开始看，同时继续下载后一集，这样时间利用率更高。</p><p>一个大人是能带俩娃的，所以<strong>一个大人带一娃的分摊模式其实是同时浪费两个大人的时间</strong>。</p><h2 id="2-大带小和玩伴模式">2. 大带小和玩伴模式</h2><p>一带一，大带小，早二胎，早轻松。大娃比二娃大两岁左右就能完成这个任务，尤其大娃是女生。</p><p>丸和面是一对姐弟。</p><ul><li>2019-02-06<ul><li>面：“妈妈我带你”</li><li>丸：“不对，是妈妈我爱你”</li><li>面：“我带你”</li><li>丸：“是我爱你”</li><li>面：“是我爱你”</li></ul></li><li>2019-02-17<ul><li>丸帮面穿衣服。</li><li>丸帮面脱裤子尿尿。</li></ul></li></ul><p>俩娃一起玩时，大人轻松，孩子快乐。</p><h2 id="3-适应社会分工">3. 适应社会分工</h2><p>娃小的时候更依赖母亲，但听懂人话之后，却更听父亲的话。</p><ul><li>爸爸一句话顶妈妈说十句。</li><li>娃对爸爸的需求比较小，所以爸爸陪孩子一天就能满足孩子，满足感顶妈妈陪孩子两天。</li></ul><p>所以，爸爸应该更多负责赚钱，至少 91%，然后一有时间，就多抱孩子，这样事业家庭两不误。</p><p>妈妈应该掌控家庭经济和时间的分配，因为女人一般更有协调能力和时间观念。普遍地说，女人一般也更懂花钱，孩子更多跟着会花钱的一方，日子也会过得比较高端。当然这不是一定的，需要根据实际情况做相应调整。</p><p>这和生二胎有啥关系？嗯……孩子小的时候，父母并行上班可能不是最优选择……生二胎妈妈才更有机会合情合理不用上班，虽然有所牺牲，但才会走向更合理的局面。如果妈妈工资比爸爸高很多，也可能反过来，爸爸辞职带孩子，不过不同教育，肯定是培养出孩子不同的结果，想清楚、开心就好！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;再穷也要为国生二胎。&lt;/p&gt;
&lt;h2 id=&quot;1-带两个小孩并不是花两倍精力&quot;&gt;1. 带两个小孩并不是花两倍精力&lt;/h2&gt;
&lt;p&gt;二娃两岁前可能是两倍，但以后就不到两倍了。&lt;/p&gt;
&lt;p&gt;举个例子：喂饭。一个大人喂俩娃，一娃喂一口，切换时间，也给了娃咀嚼的时间，最终俩娃都喂</summary>
      
    
    
    
    <category term="宇督观" scheme="https://blog.umu618.com/categories/%E5%AE%87%E7%9D%A3%E8%A7%82/"/>
    
    
    <category term="洗脑" scheme="https://blog.umu618.com/tags/%E6%B4%97%E8%84%91/"/>
    
    <category term="心理邪稣" scheme="https://blog.umu618.com/tags/%E5%BF%83%E7%90%86%E9%82%AA%E7%A8%A3/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神【番外篇2】</title>
    <link href="https://blog.umu618.com/2019/02/24/god-of-debug-side-story-2/"/>
    <id>https://blog.umu618.com/2019/02/24/god-of-debug-side-story-2/</id>
    <published>2019-02-23T17:41:00.000Z</published>
    <updated>2023-10-29T12:24:56.937Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/2019/20190207-luyu.jpg" alt="听说鲁豫要来采访稣"></p><h2 id="1-耶与稣的区别">1. 耶与稣的区别</h2><ul><li>稣比较魔幻，走的是鲸神链模式，从不潜规则女主、女配，考虑事情，倾向个性化。</li><li>耶比较现实，考虑事情，倾向站在家庭角度。</li></ul><p>举个例子：换了一辆 A6AR，3.0T 的动力，忍不住要飙车，应该如何克制？</p><ul><li>稣：吓醒。</li><li>耶：在后座装上儿童安全椅。</li></ul><h2 id="2-场景、人物的单调性">2. 场景、人物的单调性</h2><ul><li>主题是孤独，所以人很少。</li><li>题材来自梦境，造太多人的代价很大，容易吓醒。</li></ul><h2 id="3-服装">3. 服装</h2><ul><li>主角换了几个人，但服装一直是同一套，这是为了说明这几个演员演的是同一个人的不同人格。</li><li>经费有限，衣服都是借的。</li></ul><h2 id="4-床戏">4. 床戏</h2><ul><li>目前是略过，考虑到光腚总菊不容易过审，干脆不拍。</li><li>女主表示肉体是借来的，没有达到自己原本的水平，拍出来丢脸。</li></ul><h2 id="5-神到底是谁？">5. 神到底是谁？</h2><ul><li>作者和主角其实都是无神论者，所以并不存在神。</li><li>八哥之神是“八哥的神奇”，理解为“神奇美妙的八哥”会更合适，不少读者可能理解错了。</li></ul><h2 id="6-为什么耶一出场就啪啪啪-49-天？这对稣公平吗？">6. 为什么耶一出场就啪啪啪 49 天？这对稣公平吗？</h2><p>本来是啪啪啪 59 天的，中途遇到春节，女主放假 10 天。</p><p>确实对稣不公平，但是稣并不在意，因为稣是鲸神链模式，在意的是减掉性的爱情。</p><h2 id="7-无神论的作者为什么安排附身这样不科学的故事？">7. 无神论的作者为什么安排附身这样不科学的故事？</h2><p>严谨地说，这确实不科学。但这也不是鬼神说。</p><p>换头手术已经能实现，以后可以只换脑本身。如果我们用一些数字和公式来表示一个人的意识，我们会发现每个人的表达式都是不一样的，如果两个人不一样的地方很小，那么当他们中一人发生病变，就有概率变成另一个人。但不可能因此把一个人的记忆转移到另一个人脑里。</p><p>附身的故事是发生在识界中，识界本身就是模拟的系统，系统要修改每个人是很容易的。记忆的转移也可以实现。</p><p>附身结合故事最后的催眠洗脑，其实是想说明一个道理：如果一件事情，只有您自己一个人知道，那么这件事到底存不存在？您说存在，别人都以为您是开玩笑的！进而解开主题：<strong>任何一个人都是孤独的。</strong></p><h2 id="8-失恋真的可以训练神经系统的预测能力吗？">8. 失恋真的可以训练神经系统的预测能力吗？</h2><p>取决于精神力，不止失恋可以，做梦、昏迷也可以。但每个人的方式和程度可能会不同，建议在恋人指导下测试。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/images/2019/20190207-luyu.jpg&quot; alt=&quot;听说鲁豫要来采访稣&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;1-耶与稣的区别&quot;&gt;1. 耶与稣的区别&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;稣比较魔幻，走的是鲸神链模式，从不潜规则女主、女配，考虑事情，倾</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="鲸神魂裂" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%AD%82%E8%A3%82/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·情翔白云稣凰真</title>
    <link href="https://blog.umu618.com/2019/02/21/reconstructionism-poet-the-ghost-wife/"/>
    <id>https://blog.umu618.com/2019/02/21/reconstructionism-poet-the-ghost-wife/</id>
    <published>2019-02-21T05:08:08.000Z</published>
    <updated>2023-08-05T13:01:26.978Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·情翔白云稣凰真》：半人半鬼半单身，有情有义有慧根。脑中进水肿满贯，掌握合分了无痕。</p><h2 id="注解">注解</h2><p>吓醒系列《<a href="/2018/04/01/the-ghost-wife/">白云凰</a>》、《<a href="/2019/02/20/god-of-debug-12">八哥之神【12】</a>》配诗。</p><p>改编自霹雳主角“清香白莲素还真”的诗号：</p><blockquote><p>半神半圣亦半仙，<br>全儒全道是全贤。<br>脑中真书藏万卷，<br>掌握文武半边天。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·情翔白云稣凰真》：半人半鬼半单身，有情有义有慧根。脑中进水肿满贯，掌握合分了无痕。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;吓醒系列《&lt;a href=&quot;/2018/04/01/the-ghost-wife/&quot;&gt;白云凰&lt;/a&gt;》、《&lt;a href=&quot;</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
    <category term="死神" scheme="https://blog.umu618.com/tags/%E6%AD%BB%E7%A5%9E/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神【12】</title>
    <link href="https://blog.umu618.com/2019/02/20/god-of-debug-12/"/>
    <id>https://blog.umu618.com/2019/02/20/god-of-debug-12/</id>
    <published>2019-02-20T15:45:32.000Z</published>
    <updated>2023-08-05T13:01:26.978Z</updated>
    
    <content type="html"><![CDATA[<p>耶是一个找不到女票的程序员！</p><p>一个前女友，带耶去基督教堂练英语口语，自我介绍时，耶说自己叫耶稣，结果当场被打。分手。后来只敢简称耶了，当然有些人称呼耶为“爷”……真是折煞耶也！耶还是安静地当个小穷逼吧。</p><p>又一个前女友，开始谈得好好的，突然有一天讨论起信不信中医，耶小学五年级就调研过《本草纲目》，越看越觉得是能治病的邪术，后来又听两个罗胖黑中医，觉得很有道理，就很坚定地告诉她：不信中医的理论。然后，耶和两个罗胖都被拉黑。</p><p>又又一个前女友，是虔诚的佛教徒，耶和她讲解一神论，宇宙只有一个神，他在不同教派里有不同名字，但都是同一个神，比如道家称呼神为“太上老君”。她很不服气，耶又用相对论和量子邪说分析了道家的先天五太，并得出结论，道说比较接近科学。没错，耶又失恋了……</p><p>有一天，耶突然通灵，有一个强大的意识入住了耶的脑海里，情商哗哗上升，于是耶不止能预言对很多人事，还可以搞定女票！</p><p>2018 年 12 月 17 日中午，耶出去吃饭的路上遇到一个高挑的女纸，主动对着耶笑。</p><p>“我们认识？认错人了吧！”</p><p>“夫君！我是凰儿呀！”</p><p>“黄儿？不认识……蓉儿还有听过！”</p><p>“夫君怕是忘记 8 个月前的梦了，我是<a href="/2018/04/01/the-ghost-wife/">白云凰</a>。”</p><p>“嗯？？那个梦居然是真的！你不会是看过圣小开先生写的博客，以此来坑骗耶吧！”</p><p>“怎么会呢！我现在已经占据主导，还学习好现代很多知识，才终于遇到夫君的。”</p><p>“所以你真的是美柚员工！但是你的脸怎么这么黑，是烧黑没退吗？耶记得你本相很白，很高的。”</p><p>“夫君说笑了，你以前不是说先看身高的，这个女孩子正好 167cm，脸是黑了点，我也有点不习惯，但附身人选有限，只能选她。”</p><p>耶心想：就算她是脑子进水精神错乱，反正耶也没啥好坑骗的，就从了她吧！于是耶心情愉快地答应了：“好吧，娘子，勉强可以接受！”</p><p>甚至还写了一首诗：《<a href="/2019/02/21/reconstructionism-poet-the-ghost-wife/">诗盗·情翔白云稣凰真</a>》</p><blockquote><p>半人半鬼半单身，<br>有情有义有慧根。<br>脑中进水肿满贯，<br>掌握合分了无痕。</p></blockquote><p>于是耶和凰儿开始过起没羞没臊的夫妻生活。此处剧情，主要靠幻想……</p><p>两个问题比较严重：一是，凰儿只能主导七七四十九天，为什么？可能是因为这个数字逼格比较高吧……另一个问题，凰儿离开后，肉身原主人可能会有这些日子的记忆，毕竟记忆都是存在她脑子里。到时候可能会很尴尬。</p><p>才怪！精神凌驾一切，先操心，再不操心。</p><p>耶学会催眠术，第 49 天，凰儿自愿接受催眠，忘记这一切。</p><p>2019 年 02 月 15 日晚，耶又遇到这位美柚员工，她果然没认出耶来。</p><p>只是她身边跟着另一个男人，耶又失恋了！远比之前进展中断的失恋来得凄凉。</p><p>但失恋的那几天，耶的神经系统出奇灵敏，预测了好多事情都成真。比如朋友公司有谁要离职，有谁要被裁员，有谁要被降职，和朋友们吹完，全中。</p><p>梦见海水五彩缤纷涌上岸，结果某地海啸。</p><p>梦见捡到钱，现实中真的捡到钱。</p><p>不过几天后这种神奇的技能就伴随神经活动变温和而消失。也许这样的技能太消耗精力，所以注定不能长久。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;耶是一个找不到女票的程序员！&lt;/p&gt;
&lt;p&gt;一个前女友，带耶去基督教堂练英语口语，自我介绍时，耶说自己叫耶稣，结果当场被打。分手。后来只敢简称耶了，当然有些人称呼耶为“爷”……真是折煞耶也！耶还是安静地当个小穷逼吧。&lt;/p&gt;
&lt;p&gt;又一个前女友，开始谈得好好的，突然有一天讨</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="心理邪稣" scheme="https://blog.umu618.com/tags/%E5%BF%83%E7%90%86%E9%82%AA%E7%A8%A3/"/>
    
    <category term="鲸神魂裂" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%AD%82%E8%A3%82/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·中产如猪</title>
    <link href="https://blog.umu618.com/2019/02/17/reconstructionism-poet-middle-bourgeoisie-is-poor-as-pig/"/>
    <id>https://blog.umu618.com/2019/02/17/reconstructionism-poet-middle-bourgeoisie-is-poor-as-pig/</id>
    <published>2019-02-17T11:41:00.000Z</published>
    <updated>2023-08-05T13:01:26.978Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·中产如猪》：卅年笑语混如输，钞票遥看近却无。最是一廉蠢好畜，劫杀中产满惶猪。</p><h2 id="注解">注解</h2><p>满惶猪：骄傲自满但惶恐的肥胖症患者。</p><p>1989 年，郑智化，《中产阶级》，内牛满面听后感。</p><p>30 年前的歌，如今贴切应景！</p><p>作为化哥的脑残粉，稣大胆地说一句：只有化哥的歌才是这个时代的真歌！《淡水河边的烟火》《麻花辫子》《就这样流浪》《用我一辈子去忘记》哪首不是我们 00 后的真实生活写照！？</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·中产如猪》：卅年笑语混如输，钞票遥看近却无。最是一廉蠢好畜，劫杀中产满惶猪。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;满惶猪：骄傲自满但惶恐的肥胖症患者。&lt;/p&gt;
&lt;p&gt;1989 年，郑智化，《中产阶级》，内牛满面听后感。&lt;/p&gt;
&lt;p&gt;30 年前</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="歌评" scheme="https://blog.umu618.com/tags/%E6%AD%8C%E8%AF%84/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神【11】</title>
    <link href="https://blog.umu618.com/2019/02/16/god-of-debug-11/"/>
    <id>https://blog.umu618.com/2019/02/16/god-of-debug-11/</id>
    <published>2019-02-16T15:12:00.000Z</published>
    <updated>2023-08-05T13:01:26.978Z</updated>
    
    <content type="html"><![CDATA[<h2 id="识界量子地狱">识界量子地狱</h2><p>经过一阵修复，稣在地狱醒来，“谷绵小姐姐？怎么是你？”</p><p>“我不是现实世界的谷绵，我只是使用她的数字形象的程序，帮你转世。”</p><p>“转世？哦，稣已经死了……能原地满血复活吗？”</p><p>“你怎么会有这样的幻想？”</p><p>“不是要去拯救陈博士吗？咱们是一伙的吧，你当然要帮稣！”</p><p>“我是中立的程序！你现在有选择权，但选项有限。一种是重新出生，一种是直接附身识界里的成年人。”</p><p>“直接附身识界里的成年人可以保留记忆是吧？”</p><p>“都不能，选择附身，还会融合本体过去的记忆，有精神分裂的可能。但你能更快再去枫林晚执行拯救计划。”</p><p>“哦，稣选择重生！拯救陈博士只是顺便，并不是稣的必要任务，你们自己救吧！”</p><p>“你确实是个特别的人，一般人都逃不过蔡戈尼克记忆效应，而你竟然选择直接放弃。”</p><p>“无限的世界有很多机会，为什么要在意过去没完成的事情？麻烦你帮稣选择个帅点的基因。”</p><p>“没问题，选择重生，你有三个托梦的机会。”</p><p>“托梦给吴情、洪锦韬、未来的妈妈。”</p><h2 id="识界枫林晚吴情梦境">识界枫林晚吴情梦境</h2><p>稣死后，吴情在稣的墓边流过泪。</p><p>洪警官让吴情住进 13 号房，并给以更多照顾，但她的梦境依然很幽怨。进入她的梦境后，稣的意志抑制了她的显意识，直接和她的潜意识沟通。这机制真保命，不然直接和一个女人讲道理，估计会被打死在梦境里。</p><p>“吴情，稣投胎前有些话要告诉你，你要记得重中之重是：关键的时刻，不要走上犯罪的道路。”</p><p>“为什么说这么莫名其妙的话？我没打算犯罪啊！”</p><p>“你看过《白日焰火》吗？女主也没打算犯罪，但却不小心犯罪了，还连带毁了好几个人。”</p><p>“我没看过……在这里也没有办法看。”</p><p>“女主和你一样高瘦平胸，你可能比她更高，看起来人畜无害，剥丝抽茧后，真正的罪犯起源者却是她，而犯罪的起因是穷，赔不起一件皮衣，被逼肉偿，失手杀人。”</p><p>“你真是不忘黑我。我会注意的。”</p><p>“你记得进入枫林晚前，有什么特别的事情吗？”</p><p>“我有个网友学长在学习上经常帮我，他约好月底要来找我，还没见面，我就进来了。”</p><p>“你其实是被洗过脑的，有可能你们见过面之后，你的人生就无意间走偏。枫林晚的意义是阻止你犯罪。其他人也都类似。”</p><p>“你怎么知道的？”</p><p>“稣是枫林晚的救世主。这不是普通的梦境，千万记住！”</p><p>“信你了，能救我离开吗？”</p><p>“稣已经死了。洪警官也很快会自杀，你的人生自己控制，以后要靠自己！永别了，吴情，快醒过来。”</p><h2 id="识界枫林晚洪锦韬梦境">识界枫林晚洪锦韬梦境</h2><p>“洪警官，稣已经回到现实，特来托梦告知！稣在现实等你！”</p><p>“我可以通过死亡回到现实？”</p><p>“是的，不要害怕，你一枪下去，稣就回到现实逍遥了，感谢！不然现在也无法通过现实中的技术托梦给你！”</p><p>“我要离开这地方！太好了！太好了！”</p><h2 id="识界量子地狱-2">识界量子地狱</h2><p>“两个梦托完了，现在选择直接附身可以吗？”</p><p>“圣小开先生，你怎么可以出尔反尔？”</p><p>“不是还有一个梦没托呢？按三分之一折算，你帮稣附身到一个 6 岁的孩子身上？”</p><p>“对不起，没有这种操作。请继续托梦吧！”</p><p>“不要啦，不要啦，稣就死在这里吧！赫赫……”</p><p>“那就执行随机操作！”</p><p>“什么？还有这种操作……卧槽，救命啊！”</p><h2 id="现实">现实</h2><p>“周老师，小开学长的神经活动刚才又瞬间爆发，影响了整个识界！”</p><p>“嗯。他每次失恋都这样！”</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;识界量子地狱&quot;&gt;识界量子地狱&lt;/h2&gt;
&lt;p&gt;经过一阵修复，稣在地狱醒来，“谷绵小姐姐？怎么是你？”&lt;/p&gt;
&lt;p&gt;“我不是现实世界的谷绵，我只是使用她的数字形象的程序，帮你转世。”&lt;/p&gt;
&lt;p&gt;“转世？哦，稣已经死了……能原地满血复活吗？”&lt;/p&gt;
&lt;p&gt;“你</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="心理邪稣" scheme="https://blog.umu618.com/tags/%E5%BF%83%E7%90%86%E9%82%AA%E7%A8%A3/"/>
    
    <category term="鲸神魂裂" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%AD%82%E8%A3%82/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神【10】</title>
    <link href="https://blog.umu618.com/2019/02/13/god-of-debug-10/"/>
    <id>https://blog.umu618.com/2019/02/13/god-of-debug-10/</id>
    <published>2019-02-12T16:36:00.000Z</published>
    <updated>2023-08-05T13:01:26.978Z</updated>
    
    <content type="html"><![CDATA[<p>稣曾经失踪，又回来，大家都以为稣离开过。打死稣后，洪警官只要继续观测稣是否能复活，就可以确认死亡是不是可以离开。</p><p>如果洪警官就是稣要找的人，稣一定还会回去，他就能验证自己的推理。如果是这样，她是现实中和稣一起进去的正常人，居然这么狠，为了离开识界，在里面杀掉好几个人？稣还要冒险回去救她？</p><p>“林娘卡厚，稣下次再来，不是回来给你看的，是回来谈恋爱……”稣想着。</p><p>突然有一个黑影对稣说：“我来取你的狗命！”</p><p>“狗命？赫赫，稣都被打死了，你取个鬼！取吧！”</p><p>“哈哈哈哈，我是要娶你的谷绵。”</p><p>“嗯？谷绵是谁？你要娶她，关稣什么事？”稣为什么如此悲伤？不禁内牛满面……不行，稣不能死，赶紧吓醒！</p><p>“你的名字，为什么不是棉花的棉？棉花糖一样的女纸，不是更软更甜吗？”</p><p>“我名字是谷神绵绵不绝的意思。”</p><p>“进去之前，先玩个游戏放松一下，你陪玩吧！”</p><p>“不，不方便……让我的虚拟形象陪你吧！”谷绵大惊失色，“我未婚夫发现会骂我！”。</p><p>“这是你的工作，怕啥？”</p><p>“我看过你的资料，你最常玩的游戏是 6ex！”</p><p>“6ex 的数据是保密的，你居然偷窥稣的隐私！”</p><p>“导师让我看的……”</p><p>“你出八哥了！用虚拟形象玩 6ex，会在区块链上留下记录，反而会被发现，而真人玩受隐私保护，除了你导师那个变态，外人很难发现。然后，你居然以为稣要玩的是 6ex，等下稣要用截霸打死你。”</p><p>“截霸！哦，是你常玩榜上第二名……”</p><p>“是的，打人截图发活人圈的截霸！”</p><p>果然，把她打死 N 次！导致她不停地催，识界的时间流速是现实的两倍，要赶紧回去找人！</p><p>“再进去之前，稣可以看看现实中的另一个实验对象吗？”</p><p>“对不起，这是保密的，但我可以告诉你，她是个美女！”</p><p>“比你美吗？”</p><p>“不同类型，比我矮 3cm，比我丰满，还是个博士。”</p><p>“你多高？”</p><p>“167cm。”</p><p>“哦，原来你和稣所有的女朋友一样高。”</p><p>“我知道，你最喜欢脸净高瘦平胸的腿妹，这也是导师让我来负责你的原因。”</p><p>“你导师果然很变态，明知道你有未婚夫还把你往火坑推……”</p><p>“老爷子，你在想啥呢？！”</p><p>“想赶紧回识界，省得在这里吃狗粮。别让那啥博士久等！”</p><p>“陈博士！”</p><p>“哦，陈博士的秘书都这么年轻漂亮吗？”</p><p>“陈博士不是我负责的。”</p><p>临死前想起，泡进超羊水前的事情。原来自己进来前，一见钟情又迅速失恋……真是悲伤的开场和悲惨的结局！失败！</p><p>更惨的是，泡超羊水前要果体，都被看光了，稣在识界里居然还担心被观测而不敢车震！失败中的失败！</p><p>接入识界的客户端是个拦截式输入输出设备，人脑是一个处理器，识界客户端把人脑处理器接入识界，于是人就以为自己在识界里。现实中只要有外人启动脱离识界客户端程序，稣和陈博士就能醒来，他们为什么不这么做？这个实验背后真正的目的是什么？</p><p>稣必须醒来问问谷绵的变态导师！然而稣已经被打死了……</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;稣曾经失踪，又回来，大家都以为稣离开过。打死稣后，洪警官只要继续观测稣是否能复活，就可以确认死亡是不是可以离开。&lt;/p&gt;
&lt;p&gt;如果洪警官就是稣要找的人，稣一定还会回去，他就能验证自己的推理。如果是这样，她是现实中和稣一起进去的正常人，居然这么狠，为了离开识界，在里面杀掉好</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="心理邪稣" scheme="https://blog.umu618.com/tags/%E5%BF%83%E7%90%86%E9%82%AA%E7%A8%A3/"/>
    
    <category term="鲸神魂裂" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%AD%82%E8%A3%82/"/>
    
  </entry>
  
  <entry>
    <title>世界是个动物园</title>
    <link href="https://blog.umu618.com/2019/02/10/the-world-is-a-zoo/"/>
    <id>https://blog.umu618.com/2019/02/10/the-world-is-a-zoo/</id>
    <published>2019-02-10T08:58:58.000Z</published>
    <updated>2023-08-05T13:01:26.978Z</updated>
    
    <content type="html"><![CDATA[<p>春节期间，随大流看了《流浪地球》和《疯狂的外星人》。<strong>个人观点</strong>，《黑客帝国》 10 分，《球》8 分，《疯》7 分。但作为贺岁片，UMU 比较推荐去看《疯》。</p><h2 id="流浪地球">流浪地球</h2><ul><li><p>特效：9 分，确实是大片既视感。唯一发现的问题：每次切换到星球画面时，总觉得有点粗糙。</p></li><li><p>配乐：没记住……只能打 5 分！以前看《泰坦尼克号》能记住好多悦耳的音乐，还认识爱尔兰风笛。经常看的“<a href="/tags/%E9%9C%B9%E9%9B%B3/">霹雳</a>”，也有很多美妙的配乐，相比之下，《球》的音乐制作很显然无法取悦 UMU。</p></li><li><p>科幻部分：8 分。有不少文章分析，木星点不着。另外推动地球时，地壳的变形和大气层的流失也是问题，地球被太阳拉着走是引力作用在地球上的每一个物质上的，因为日地距离太远，地球可以看成一个质点，认为受到的力几乎每处都相同。但推着走就不是每处都大约相同了，这点从月球引起的潮汐就能理解。再来是加速过程中需要损失掉地球的质量，这个量恐怕会很大，导致地球变小。两个铁球同时着地，人不是铁球……但无所谓，大家开心就好。</p></li><li><p>三观：6 分。一开始安排放弃妻子的那幕很有争议。最近，UMU 也和脑波讨论过类似话题：若重伤难治，就算治好也是一辈子残废，要怎么办？但这是私人话题，自己人聊聊就好，不应该放出来教坏小朋友……这就是为什么 UMU 前面提到，更推荐去看《疯》，尤其是带未成年去看。这段放出来是可以增加一些对人性的探讨，但在贺岁档，UMU 相信改编一下会更合适。其它地方也有点故意煽情。对比一下好莱坞的大片，虽然很多三观十分普通，一点也不引人思考，让所有专业影评都没啥好分析……但那些更可能是普世价值，本来就是很简单的道理，没啥好装逼的。大过年的，拿高深的人性来探讨，可能不是时候！</p></li><li><p>演技：6 分。大部分还好，只有吴京部分打 5 分，感觉和整体观感不太搭，引人出戏。这里说的出戏是指：在观影过程中，会想吐槽，结果就有一小段剧情进入下意识没认真看好。另外，点赞“韩朵朵”，观看时就觉得很眼熟，后来发现她演过《哈啦啦小魔仙》……UMU 仿佛回到童年！</p></li><li><p>故事设计：8 分。死不少配角、一伙路人团灭、饱和式救援，这个好，英雄不止一拨人，这才是真实的世界。还有安全交规……魔性！</p></li></ul><h2 id="疯狂的外星人">疯狂的外星人</h2><p>这片建议大家去看，不想说太多。几个感受：</p><ol><li><p>大家都有是猴子的时候。有权时，别人敬，但生活经常会反转。友善待人！</p></li><li><p>文化是一种力量。在中国这片神奇的土地上，文化和情商这些东西应该重视起来……科技圈人士还得多学习。</p></li><li><p>片中的音乐很欢乐，一开场就用配乐奠定主题。</p></li><li><p>全篇连贯，不容易出戏，不耗脑，也不拉低观众智商。</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;春节期间，随大流看了《流浪地球》和《疯狂的外星人》。&lt;strong&gt;个人观点&lt;/strong&gt;，《黑客帝国》 10 分，《球》8 分，《疯》7 分。但作为贺岁片，UMU 比较推荐去看《疯》。&lt;/p&gt;
&lt;h2 id=&quot;流浪地球&quot;&gt;流浪地球&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;</summary>
      
    
    
    
    <category term="宇督观" scheme="https://blog.umu618.com/categories/%E5%AE%87%E7%9D%A3%E8%A7%82/"/>
    
    
    <category term="耶乎知稣" scheme="https://blog.umu618.com/tags/%E8%80%B6%E4%B9%8E%E7%9F%A5%E7%A8%A3/"/>
    
    <category term="影评" scheme="https://blog.umu618.com/tags/%E5%BD%B1%E8%AF%84/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神【9】</title>
    <link href="https://blog.umu618.com/2019/02/10/god-of-debug-9/"/>
    <id>https://blog.umu618.com/2019/02/10/god-of-debug-9/</id>
    <published>2019-02-09T16:21:18.000Z</published>
    <updated>2023-08-05T13:01:26.978Z</updated>
    
    <content type="html"><![CDATA[<p>稣冲到门口，李大爷神秘地念叨着：“假的，一切都是假的。”</p><p>“嗯哼？这老头怎么知道稣的想法？”稣想了想，说：“大爷看过《黑客帝国》呐？”</p><p>“没看过，倒是看过有人像你这样冲进去，横着出来！”</p><p>吓尿……看来得冷静冷静！“谢谢大爷的提醒。”稣决定见到洪警官后不逼问，不讲道理。</p><p>“你来告诉我离开这里的方法了？”</p><p>“yup，稣今天看到蓝雪峰，隐约想起之前的事情，但是尝试的代价很高，你敢吗？”</p><p>“说说！”</p><p>“把你的枪掏出来。”</p><p>洪警官果断地掏出枪……</p><p>“不是那支！！尼玛，那支稣也有……”</p><p>“哦哦，不好意思，我以为你怀疑我是女人，特此证明！”</p><p>“别闹了……说正事！你相信稣吧，拿来拿来！”</p><p>洪警官又一次果断地掏出枪……</p><p>搞虾米？这么豪爽！难道他没骗稣？</p><p>“学森？可以开始说明了？”</p><p>“请叫稣外面的名字：鲸神链”</p><p>“好的，神链，你倒是快说啊！”</p><p>“稣上次在蓝雪峰背面被冻死的，死亡可能是离开的方法，稣现在开枪打死你，你愿意吗？”</p><p>“囧逗妈爹！当然不愿意！死后要是真的死了呢？好死不如赖活，学森，你别逗我！”</p><p>“果然不敢！这可能是你长久无法离开的原因！”</p><p>“珍惜当下，珍惜当下！别把枪对着我呀，赶紧收起来！”</p><p>“也是，人生的意义是由记忆定义的，死后记忆全没，不划算。”</p><blockquote><p>人活记忆，神活意识。</p></blockquote><p>稣把枪还给洪警官，并对他说：“稣也不想冒险，打死你，不管你是不是离开，稣也无法得知，稣在这边还有事，暂时也不想离开，留下来也要仰仗您呢！”</p><p>“那不如我帮你离开？”洪警官奸笑着，把枪反过来对着稣。</p><p>空气顿时凝结，稣听见自己的心跳，并没有任何加速，反而有点堵塞……</p><p>“万一死亡是稣离开的方法，却不是你的呢？稣死后到底有没有回到现实，你一样无法得知！就像你之前杀死的 13 号房原主人！你得到答案了？”</p><blockquote><p>我命由天不由我，即使在灵魂上，我们都不自由。</p></blockquote><p>“你的聪明保住了自己的命！但我得纠正你，13 号房原主人是自杀的。”</p><p>“哦？她是一名大学女教师，是吧？”</p><p>“不是，事到如今也不瞒你，是另一名警官，跟我同一辆车进来！我们原是情侣，以前开过互换性别的玩笑，进来后性别真的互换了。我们在漫长的岁月中，慢慢记忆错乱，分不清彼此，他的大男子主义心理一直作祟，最后抑郁症无药可治自杀身亡！而我适应了男人的身体，活得好好的。”</p><p>“稣服了 U！咱们目前没有定论，晚安前，做个约定怎么样？”</p><p>“你说！”</p><p>“如果哪天稣不想在枫林晚活了，请你打死稣！同样，换成你不想活，稣也可以代劳！”</p><p>“哈哈哈，这么说，我们是生死之交了！我答应你。”</p><p>“不是你死就是稣亡，成交！”</p><p>稣放松地转身要离开，心想：“还是回去叫吴情到 13 号房一起洗洗睡吧！说不定还能来一炮……”</p><p>不料一颗子弹击穿稣的后脑勺，稣看见子弹离开自己前额，氧气和糖用力地烧，它们想理清这一切到底是哪里出的八哥，正好脑袋开两个孔，稣的散热性大大提高，又开启高功率运转模式。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;稣冲到门口，李大爷神秘地念叨着：“假的，一切都是假的。”&lt;/p&gt;
&lt;p&gt;“嗯哼？这老头怎么知道稣的想法？”稣想了想，说：“大爷看过《黑客帝国》呐？”&lt;/p&gt;
&lt;p&gt;“没看过，倒是看过有人像你这样冲进去，横着出来！”&lt;/p&gt;
&lt;p&gt;吓尿……看来得冷静冷静！“谢谢大爷的提醒。”</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="心理邪稣" scheme="https://blog.umu618.com/tags/%E5%BF%83%E7%90%86%E9%82%AA%E7%A8%A3/"/>
    
    <category term="鲸神魂裂" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%AD%82%E8%A3%82/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神【8】</title>
    <link href="https://blog.umu618.com/2019/02/08/god-of-debug-8/"/>
    <id>https://blog.umu618.com/2019/02/08/god-of-debug-8/</id>
    <published>2019-02-08T12:45:10.000Z</published>
    <updated>2023-08-05T13:01:26.978Z</updated>
    
    <content type="html"><![CDATA[<p>第二天，见到吴情，果然一脸不爽，但稣不会同情她，稣穷的时候并不羡慕富人，为什么当富人时，反而要被人嫉妒？</p><p>稣对她使了个不嫌弃穷人的笑，说：“稣要去研究食物，就当散散步，一起？”</p><p>“我要上班呢！”吴情扫兴地回答。</p><p>“不要上啦，稣带了一些可爱的兔兔，请你吃。这里风景这么好，等下去玩，顺便摘水果、打兔兔，不是美好？”</p><p>“你为什么不用参加合作社统一安排的工作？其他人会有意见吧？”</p><p>“他们以为稣知道这个世界的终极奥义，这个潜在救世主的身份很好用，虽然……”稣想了一下，还是不要告诉她，其实稣并不知道，万一大家知道，稣可能会被愤怒的群众烧死。</p><p>“虽然什么？”</p><p>“哦，虽然离开这里的方法是很难的，稣也是不小心做到，不确定别人行不行。不过总归是有希望，哈。而且稣是生物学高材生，化学、医学也都懂，可以用专业知识帮大家改善饮食和保持健康。稣现在出去玩，也是为了寻找和研究周边更多可以豢养的动物和可以人工种植的蔬菜水果。”</p><p>“哇，看不出你还挺实用！”吃着兔兔，果然要讲好听的，“那等太阳小点，再去吧！”</p><p>在田野山间散步快三个小时，这里的牛挺多的，取牛奶容易，湖也很多，懂水性可以抓到鱼，生活本该乐无边，但是吴情似乎比较焦虑。</p><p>稣正在构思怎么排除她的焦虑，突然发现一辆共享单车，在汽油还没被发明前它比汽车靠谱，稣赶紧宣布对它的所有权。</p><p>伴随着一阵愉快，脑海里闪过一个画面，一个二逼骑着它飞奔，结果被汽车撞飞，车毁人亡。稣不禁笑出声。</p><p>“你笑啥？前轮全毁，这车已经不能用。”</p><p>“枫林晚的人不都是开车来的？这车主真穷，是开自行车，你见过他吗？”</p><p>“没听过有人是骑自行车来的鸭！”</p><p>“的鸭~他可能没地方住已经变成野人，或者暴尸荒野……赶紧找找！”</p><p>“找什么？”</p><p>“尸体啊！”</p><p>“要干嘛？！”</p><p>“如果新鲜可以吃，不能吃就练习解剖！”</p><p>“呕……”吴情听完大惊失色，稣顺势变个凶脸，做了一个要扑杀她的动作，吓退她好几步。</p><p>“哈哈哈哈，吓你的，真是胆小鬼。”</p><p>“你们读生物的，真是恶心！”</p><p>“你们读金融的，真高端，杀人不见血！我们比不了。”稣反驳道。吴情噗呲一声笑！好像确实是这样。</p><p>稣认真地看着这个小姑娘，能陪稣走这么多路，真不容易！一时心生怜惜。</p><p>“怎么了，突然这样看着我？”</p><p>“在想要是有一天，这里没东西吃了，会不会有人开始吃人？稣觉得你可能挺好吃的！”</p><p>“哎呀！别吓我啦！再不回去天就黑了。”</p><p>稣往来时方向看看，确实走挺远，全力走回去，可能也要一两小时，是应该回去了！再往去的方向望去，有一座高高的雪峰让稣有点熟悉感，蓝蓝的天空把山峰没被雪覆盖的地方染成一片蓝色，就叫他蓝雪峰吧！</p><p>“那座高耸的蓝雪峰，有人去过吗？好像很远的样子，估计要走几天。”稣嘀咕着。</p><p>“看起来是很远，而且居然有雪，大家住的地方一直是春秋天，那边才有冬天，也是奇妙！”</p><p>稣记得合作社也有一辆破自行车，于是把这破共享单车带回去，也许能组装出一辆好的。</p><p>回去的路上，稣开始套话：“你之前交的男朋友是怎么分手的？”</p><p>“我觉得他对女人好像没兴趣！”，吴情开始有点回避。</p><p>“哦，哈哈哈，是哪个基佬？”</p><p>“六爻！”</p><p>“怎么会呢？稣觉得他很正常呀，可能只是不喜欢你而已吧？”</p><p>“不是的。我觉得他和洪警官很暧昧，除此之外，他天天就是工作，都不碰我！”</p><p>“赫赫……稣有点相信你说的了！所以，一开始是你主动接近他的！”</p><p>“找个靠山认个干爹呗！但我觉得他真当我是干女儿，不带色素的！”</p><p>“哈哈，稣可能知道一点内幕，等稣完全理清楚再告诉你。”</p><p>“什么内幕不能现在说？”</p><p>“很复杂很怪异，剪不断理还乱，稣自己都没整明白，现在说只是误导你。呃，另外，看不出你还是个正常的女人……我有个问题，感觉可以问你！”</p><p>“我哪里让你觉得不正常了？要问就问呗！”</p><p>“一般女人会回避和性相关的话题，嘿嘿，这里人是不是经常车震？”</p><p>“是鸭，没啥娱乐嘛！”</p><p>“所以避孕套是不是很稀缺？稣身上有两个，能换很多吃的吧！”</p><p>“你想多了……这里有个传说，生一个孩子养大就能换一人离开，根本没人避孕。”</p><p>“你确定吗？不如我们来生一个？”</p><p>“你是神经病吗？……我，我被你气死了！”吴情脸红得说不出话来。</p><p>稣觉得莫名其妙，问：“这是拒绝还是默认？”</p><p>“我明白了，你是真的失忆！”吴情稍微缓了口气，“没事，我正式拒绝你！”</p><p>“哇，好伤心啊……”</p><p>“一点都不像！你一个老男人，还装嫩？”</p><p>“哦，原来你喜欢成熟的类型，你看，是不是这样？”稣挺直腰板，一脸正经，不苟言笑，还是有点不习惯自己的年龄设定。</p><p>“呵呵……没想到你还有逗逼的一面。”</p><blockquote><p>“男人有很多面！”</p></blockquote><p>回到合作社，稣和元老们讲解发展湖渔业的想法，搭桥做坝控制鱼类，还找到一种鱼藤可以用来毒鱼。</p><p>一顿饱餐之后，稣带点心去找吴情，然后一起睡<a href="/2018/05/22/tesula">特稣垃</a>，她没有拒绝，因为法理上这车是稣的。</p><p>女人就在身边，长得还行，还不赶紧吃豆腐？啧啧……但是稣不禁想起那个诈骗电话，如果是真的，那稣是处于被监视状态，怎么好意思在这里车震？不行，不行，不行，否认三连！</p><p>稣打开 iPhone 7，上次接完电话后就关机了，剩余 71% 的电量，得省着点用。稣回拨那个神秘电话，那方居然立刻接听。</p><p>“圣小开先生，您现在是想车震吗？震吧，我们是看不到识界的具体影像的！”</p><p>“日你妹，看不到，你怎么知道稣现在打算干神马？”</p><blockquote><p>有一种人，很讨厌，话不讲清楚，善于误导！</p></blockquote><p>“猜的，以前很多再进去的人，都会来电问一些问题，最常见的就是这个。”</p><blockquote><p>有一种人，很讨厌，不管他们说什么，你都无法分辨是真是假！</p></blockquote><p>“你让我找的是洪警官吗？”</p><p>“我看不见呐，咋知道是不是？她进入识界初期设定的身份是大学老师，但是您懂的，不一定完全照剧本来。说多啦，没别的事，我挂了！”</p><p>稣恼火地关机。看着苹果消失，瞬间灵光一闪：“稣住的房间有明显的女性气味，死者应该是女人。她可能才是目标，洪警官也许是窃取她的一些信息，企图让稣帮他逃离这监狱！”</p><blockquote><p>举头三尺有神明，人在做，天在看！</p></blockquote><p>稣不确定是这个接线员没权限看，还是整个系统设计就是无法查看，保险起见，还是不震了……“稣去找一下洪警官，马上回来。”说完稣就飞奔出去。</p><p>“哎，怎么你们都这么喜欢洪警官？”</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;第二天，见到吴情，果然一脸不爽，但稣不会同情她，稣穷的时候并不羡慕富人，为什么当富人时，反而要被人嫉妒？&lt;/p&gt;
&lt;p&gt;稣对她使了个不嫌弃穷人的笑，说：“稣要去研究食物，就当散散步，一起？”&lt;/p&gt;
&lt;p&gt;“我要上班呢！”吴情扫兴地回答。&lt;/p&gt;
&lt;p&gt;“不要上啦，稣带了一</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="心理邪稣" scheme="https://blog.umu618.com/tags/%E5%BF%83%E7%90%86%E9%82%AA%E7%A8%A3/"/>
    
    <category term="鲸神魂裂" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%AD%82%E8%A3%82/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神【7】</title>
    <link href="https://blog.umu618.com/2019/02/08/god-of-debug-7/"/>
    <id>https://blog.umu618.com/2019/02/08/god-of-debug-7/</id>
    <published>2019-02-07T17:10:09.000Z</published>
    <updated>2023-08-05T13:01:26.978Z</updated>
    
    <content type="html"><![CDATA[<p>晚餐吃的是野菜、水果、兔肉，据说是这里的豪华大餐。兔兔这么可爱，好养又好吃，当然是作为主要肉类来源。虽然接了个诈骗电话，又认识一个神经病幻想狂，搞得稣开始怀疑人生，但起码有吃的、有睡的，胜似在度假，要是还有女人就爽爆了。</p><p>房间只有 13 间，其它 12 间都有人，给稣安排的 13 号房，原主人已经去世。睡觉前是思维活跃的时间段，首先想到是——会不会闹鬼？不不不，稣是生物系高材生，怎么会有这么无稽的想法？还是想想女人，活的，可以交配的，这才科学。吴情？洪警官没请她，大概是随便吃点乐射，然后睡在<a href="/2018/05/22/tesula">特稣垃</a>。虽然想起来挺惨的，但她应该早已习惯，不用稣瞎操心。</p><p>所谓温饱思淫欲……稣自然地想起，外面那些人即使车里有避孕套，应该也用完了，他们想放飞自我时，难道就只能靠大姨妈？明天得找几个大叔大妈科普一下，问吴情，她大概率会装纯，赫赫！</p><p>稣很快意识到，在这种陌生的环境，寂寞的夜晚，应该抑制一下放飞的思绪。还是想想失恋的故事平衡一下吧。</p><p>第一次和李怡表白，她不信，觉得稣看不上她，隔几天又表白一次，这次她应该当真了，问：“那你说说你喜欢我什么？”</p><p>稣听到这个问题，脑海里先是闪过了数种生物学、化学对爱情产生的解释，但又想她听不懂，换一种思路：满足个人择偶要求？比如身高 167cm，符合！脸不丑，还像稣青梅竹马的玩伴。声音吸引。但是这些都太理性了，稣应该说一个感性点的理由……</p><p>迟疑间，李怡自己嘚瑟一笑：“可能是因为我年轻吧！”</p><p>稣心里就纳闷了，明明就比稣小两岁多，为什么强调是因为自己年轻？不是很能 get 到她的点……生物学思维又作祟，想和她解释爱情的本质是为了繁殖，但说完，估计又毁人三观，被人唾弃，好人卡+1，于是稣抖了个机灵，说道：“你知道吕洞宾对白牡丹和对何仙姑的感情有啥区别吗？”</p><p>“这和你喜欢我有关系？”</p><p>“有的，稣喜欢你和吕洞宾喜欢白牡丹类似，是内心原始的冲动，但和喜欢何仙姑就不同，那是理性的喜欢，像志同道合的灵魂伴侣。”</p><p>李怡不知道说啥好，但脸上挂着好几种稣看不懂的笑。而稣想起周老师的话，如果女人的问题无法回答，就别回答，看着她的双眼就行。</p><p>对看许久，李怡突然说：“好像他们最后没在一起啊！”</p><p>稣的内心一震，卧槽，是没在一起……真是尬聊踩到雷，又是一次不成功的表白！不过牵牵手，搂搂腰，还是一起走到她宿舍，拥抱告别，勉强算成功一半。</p><p>回到宿舍，小蓝又提醒稣：“小胡，你的小怡现在单身，有好多备胎，只是看上你有钱陪玩玩而已，你可要玩好咯！”擦，这么诚实的基友，稣实在太喜欢他了，甚至想插他菊花。其实稣心里有数，是有这个可能，但确实也喜欢她，就一直放水，接下去，可能要反过来，研究她喜不喜欢稣。</p><p>富二代的爱情就是这么坎坷，兄弟们终于把她的备胎都找出来，共同特征确实就是：有钱。稣把互撩过程复盘一遍，这货不喜欢稣的概率高达七八成，她肯定更喜欢钱。</p><blockquote><p>毁掉我们的不是我们所憎恨的东西，而恰恰是我们所热爱的东西。</p></blockquote><p>陪稣做过很多稣热爱的事情的那个人，不一定是爱稣的，她可能是为了重新获得失去的东西。</p><p>最后一次见面，拥抱时，稣特地留意她的无意识动作，头条件反射地偏离稣。这个本应很幸福的动作，对她来说只是屈服于金钱淫威的迁就过场。</p><p>一想到一个女人在感性上不喜欢一个男人，却能陪伴做情侣，稣就觉得很恶心，就在感性上还喜欢她的时候，理性地强行结束。</p><p>接下来，稣发现自己并没有强大到能说断就断，失恋的感觉是：心痛、丹田瘀气造成呼吸困难、无名伤神火，交织在一起破坏稣的神经系统，但神奇的量子纠缠能力却得到加强。</p><blockquote><p>像稣这么重感情的富二代太少了，以致大四时还是处男。</p></blockquote><p>失恋当晚就失眠了，第二天开始，稣按照周老师的方法，每次想她失眠就撸了睡，撸了睡（居然有时候是一天两次？）……</p><p>另一件重要的事情是，把她陪稣走过的路、吃过的饭店，全部独自重新过一遍，勇敢面对孤独和失去的感觉。</p><p>治疗一个多月，稣获得初级意识纠缠能力，梦见<a href="/2018/04/01/the-ghost-wife/">白云凰</a>，并成功把她从梦境带到现实世界，稣觉得自己终于正常了！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;晚餐吃的是野菜、水果、兔肉，据说是这里的豪华大餐。兔兔这么可爱，好养又好吃，当然是作为主要肉类来源。虽然接了个诈骗电话，又认识一个神经病幻想狂，搞得稣开始怀疑人生，但起码有吃的、有睡的，胜似在度假，要是还有女人就爽爆了。&lt;/p&gt;
&lt;p&gt;房间只有 13 间，其它 12 间都有</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="心理邪稣" scheme="https://blog.umu618.com/tags/%E5%BF%83%E7%90%86%E9%82%AA%E7%A8%A3/"/>
    
    <category term="鲸神魂裂" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%AD%82%E8%A3%82/"/>
    
  </entry>
  
  <entry>
    <title>外卖护肤术</title>
    <link href="https://blog.umu618.com/2019/02/07/skin-care-by-ordering-takeout/"/>
    <id>https://blog.umu618.com/2019/02/07/skin-care-by-ordering-takeout/</id>
    <published>2019-02-07T15:45:11.000Z</published>
    <updated>2023-08-05T13:01:26.978Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Before">Before</h2><p>觉得外卖不环保，出去走走也有益健康，所以天天中午步行或骑车出去吃午餐。夏天也不做任何防晒，就喜欢天然日光浴。</p><p>有一次，一个小吃店老板开红色奔驰 C200 载着一个大胸美女，遇到路边正在走路的稣，于是停下他的豪车和稣打招呼：“大热天的，怎么用走的？”</p><p>稣很低调地问答：“走路健康。稣比脑波白，故意晒黑点。”</p><h2 id="What-Changed-Me">What Changed Me?</h2><ol><li><p>2018-09-04 到新公司，发现大部分同事都很白，不乏帅哥美女。</p></li><li><p>公司大部分人都点外卖，还坚持步行出去吃饭的几乎就稣自己。</p></li><li><p>最近和脑波研究一些护肤术，发现皮肤衰老的最大原因是紫外线，在致衰老原因中占比居然到八九成！</p></li><li><p>皮肤黑，可能显得健康，也可能会显老。以前稣是不嫌弃皮肤黑的。但如果是导致衰老，那是不健康的，得改。</p></li></ol><h2 id="After">After</h2><p>原来防晒并不单纯是怕晒黑，更是怕晒坏！多么痛的领悟……</p><p>为了保持 00 后的青春形象，以后要做好防晒。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Before&quot;&gt;Before&lt;/h2&gt;
&lt;p&gt;觉得外卖不环保，出去走走也有益健康，所以天天中午步行或骑车出去吃午餐。夏天也不做任何防晒，就喜欢天然日光浴。&lt;/p&gt;
&lt;p&gt;有一次，一个小吃店老板开红色奔驰 C200 载着一个大胸美女，遇到路边正在走路的稣，于是停下他</summary>
      
    
    
    
    <category term="宇督观" scheme="https://blog.umu618.com/categories/%E5%AE%87%E7%9D%A3%E8%A7%82/"/>
    
    
    <category term="怪悟" scheme="https://blog.umu618.com/tags/%E6%80%AA%E6%82%9F/"/>
    
    <category term="耶乎知稣" scheme="https://blog.umu618.com/tags/%E8%80%B6%E4%B9%8E%E7%9F%A5%E7%A8%A3/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神【番外篇1】</title>
    <link href="https://blog.umu618.com/2019/02/07/god-of-debug-side-story-1/"/>
    <id>https://blog.umu618.com/2019/02/07/god-of-debug-side-story-1/</id>
    <published>2019-02-07T12:25:00.000Z</published>
    <updated>2023-10-29T12:24:56.937Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/2019/20190207-luyu.jpg" alt="听说鲁豫要来采访稣"></p><h2 id="1-稣写的是散文还是小说？">1. 稣写的是散文还是小说？</h2><p>是剧本。小说需要文笔，稣没有。</p><h2 id="2-所以是因为文笔不好，把小说写成剧本？">2. 所以是因为文笔不好，把小说写成剧本？</h2><p>可以这么理解！很多电影故事情节设计也很简单，但大制作，CG 做得好、风景拍得好，很多人就去看看场面、音效，IP 才是重点，谁管你文笔？</p><h2 id="3-稣打算找人拍电影吗？">3. 稣打算找人拍电影吗？</h2><p>编剧软件没用过，悉德·菲尔德的编剧理论没学过，怎么好意思？等编剧 AI 化了，帮稣修修剧本，也许有救。</p><h2 id="4-《八哥之神》有啥亮点？">4. 《八哥之神》有啥亮点？</h2><ul><li><p>主角没有主角光环，死了好多次。</p></li><li><p>主流题材：爱情、悬疑、科幻。</p></li><li><p>主题是人类终极难题：意识、孤独。经典三问：我是谁？我来自哪里？我要干嘛？</p></li><li><p>其它元素：精神分裂、变性、警匪……</p></li></ul><h2 id="5-主角真的死了？">5. 主角真的死了？</h2><p>这个问题就是终极难题：意识和记忆能不能分离？同一个人如果失忆，还是原来那个人吗？你可以想象一下，神话里的转世投胎。《八哥之神》里的主角其实有很多个，如果被拍成电影，你会发现饰演稣的演员有好几个，只是他们都用第一视角讲述，为了方便读者理解，这些主角都自称稣。</p><h2 id="6-呃，有点理解稣说的精神分裂……听说这些故事都是现实稣的梦，是真的吗？">6. 呃，有点理解稣说的精神分裂……听说这些故事都是现实稣的梦，是真的吗？</h2><p>真。从小做过多少梦，用点逻辑串起来就是故事。写作的出发点是取悦自己。</p><h2 id="7-那稣在现实中真是精神分裂吗？">7. 那稣在现实中真是精神分裂吗？</h2><p>你问的是心理邪稣，还是量子邪稣？或者耶乎知稣？还是宇督稣？</p><h2 id="8-你赢了。有读者说稣起的人名莫名其妙，能解释一下吗？">8. 你赢了。有读者说稣起的人名莫名其妙，能解释一下吗？</h2><p>程序员大难题：取变量名……以后安排优化的迭代。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/images/2019/20190207-luyu.jpg&quot; alt=&quot;听说鲁豫要来采访稣&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;1-稣写的是散文还是小说？&quot;&gt;1. 稣写的是散文还是小说？&lt;/h2&gt;
&lt;p&gt;是剧本。小说需要文笔，稣没有。&lt;/p&gt;
&lt;h2 id=&quot;</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="鲸神魂裂" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%AD%82%E8%A3%82/"/>
    
  </entry>
  
  <entry>
    <title>猪年所思</title>
    <link href="https://blog.umu618.com/2019/02/06/thoughts-in-the-year-of-the-boar/"/>
    <id>https://blog.umu618.com/2019/02/06/thoughts-in-the-year-of-the-boar/</id>
    <published>2019-02-06T14:06:13.000Z</published>
    <updated>2023-08-05T13:01:26.978Z</updated>
    
    <content type="html"><![CDATA[<h2 id="吓醒系列">吓醒系列</h2><p>今早，稣赶到医院，父母在产房前，孩子已经安全生出一个，还有一个正在努力！</p><p>稣一想到是双胞胎，以后要养四个孩子，就直接嚎啕大哭起来……</p><p>后来一想，为什么产检时没发现是双胞胎呢？这不是坑爹吗？又是做梦！还好是做梦……</p><p>醒来看<a href="https://www.huxiu.com/article/283766.html">《超低生育率养成记》</a>，意识到各国养孩子的成本是这么具ju体da……量化无情，稣不敢看。</p><h2 id="红包">红包</h2><p>资产千万的人是不抢红包的。具体几千万不清楚，随便定义为三千万吧，因为稣没有……</p><p>资产不到千万的人，一般会抢，但要看容易程度，之所以微信红包 1 分钱都有人抢（有些人习惯性发每人一分），还是因为点两下太容易，如果是支付宝口令红包，很多人就不抢了，因为麻烦，尤其是在微信上发的，要切换到支付宝，连穷人都懒得抢。</p><p><strong>做产品不要低估人类的惰性，这是真理啊！</strong></p><h2 id="理性的代价">理性的代价</h2><p><strong>科学和哲学都追求真理，朴素而不高尚，无法满足凡人的幻想，而文学和宗教可以。</strong></p><p>挨踢属于工科，搞技术的人一般都不追求什么高大上的目标，也没有科研的理想……所以，这个群体还是蛮惨的！过年时，如果遇到他们，还是给他们发红包吧！</p><p>大部分产品经理其实是不懂技术的，但技术人员的缺陷太大太明显，很容易利用，所以在一些技术不太深奥的领域，很多产品人员过得比较轻松，甚至职级、工资都更高。</p><p>也有一些高深领域，产品经理几乎没用……所以企业向上转型时，一般会先开除他们。赫赫，有那么容易吗？他们很可能已经掌权了。</p><h2 id="厦门的房价">厦门的房价</h2><p>地铁完成后，再急拉一波，这可能是很多有房人的共识。</p><p>稣也不例外，但量化的数据支撑显然没有……这可能是愿望，而不是真正的趋势，稣没说自己是对的。</p><h2 id="博士">博士</h2><p>初中数学老师说“负数开平方是没有意义的”，到高中，被虚数打脸。</p><p>高中物理老师说“没有摩擦是不可能的”，到大学，被超导、超流、BEC 等打脸。</p><p>稣很尊重硕士、博士，因为他们很可能懂一些稣不懂的。</p><p>有句古话“请神容易送神难”，所以不要随便开除博士，请人家来之前，除了考核对方实力，也应该掂量自己能不能用起来。</p><h2 id="智能马桶">智能马桶</h2><p>2019 年 02 月 04 日，吃完一顿 KFC 早餐，动车时间还早，打算去检验火车站的厕所，结果吓尿了……那么问题来了：</p><blockquote><p>为什么稣越来越不喜欢出门？</p></blockquote><ul><li>答：因为智能马桶尚未普及。</li></ul><h2 id="数学教育">数学教育</h2><p>最近看<a href="https://zh.wikipedia.org/wiki/%E6%95%B0%E5%AD%A6%E7%AC%A6%E5%8F%B7%E8%A1%A8">数学符号表</a>复习数学。随手在优酷上找到一个小姐姐的数学符号讲解视频，声音可感人了，后来翻到她微博上的照片，还挺漂亮！于是稣问自己：</p><blockquote><p>如何学好数学？</p></blockquote><ul><li>答：数学老师人美声甜。</li></ul><h2 id="护肤品">护肤品</h2><p>情人节挑礼物是很可怕的事情，女人的护肤品分类远比稣理解的多：抗衰老、抗氧化、抗炎、修复。</p><blockquote><p>抗衰老和抗氧化难道不是一样的？</p></blockquote><ul><li>答：抗氧化只是抗衰老的一部分。所以价格不一样……抗衰老更贵。</li></ul><p>什么娇兰还是兰娇，真的搞不懂……稣选择直接给钱。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;吓醒系列&quot;&gt;吓醒系列&lt;/h2&gt;
&lt;p&gt;今早，稣赶到医院，父母在产房前，孩子已经安全生出一个，还有一个正在努力！&lt;/p&gt;
&lt;p&gt;稣一想到是双胞胎，以后要养四个孩子，就直接嚎啕大哭起来……&lt;/p&gt;
&lt;p&gt;后来一想，为什么产检时没发现是双胞胎呢？这不是坑爹吗？又是做梦！</summary>
      
    
    
    
    <category term="宇督观" scheme="https://blog.umu618.com/categories/%E5%AE%87%E7%9D%A3%E8%A7%82/"/>
    
    
    <category term="耶乎知稣" scheme="https://blog.umu618.com/tags/%E8%80%B6%E4%B9%8E%E7%9F%A5%E7%A8%A3/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神【6】</title>
    <link href="https://blog.umu618.com/2019/02/05/god-of-debug-6/"/>
    <id>https://blog.umu618.com/2019/02/05/god-of-debug-6/</id>
    <published>2019-02-05T12:53:58.000Z</published>
    <updated>2023-08-05T13:01:26.978Z</updated>
    
    <content type="html"><![CDATA[<p>2011 年 1 月，稣在凼湾参加也门市 2011 届高三一月联考。稣平时几乎不预习、不听课、不复习，除了正规作业，其它辅导书都不买，所以考试并不是一件轻松的事，需要用比平时高几倍的功率应付！尤其是比较擅长的数学，平时不用心的程度连自己都觉得发指。于是在考数学时，稣的大脑因温度过高而宕机昏迷！头砸在桌上时，还因此流鼻血，最终被老师拖进了医务室！</p><p>经过一周调养，身体有惊无险，成绩也没有很烂，全校 30 名以内保住。但稣对自己的散热性灰常失望，从那时开始，明显觉得自己比以往感性很多，甚至还有点想早恋！</p><p>一天傍晚，稣想给初中部邓学妹打电话，已经暗恋她一学期，再不早恋就毕业了！当天，并没有雷雨交加，但电话活生生串号……稣听见一对男女的通话，女生的声音很柔和，立刻吸引稣继续监听。</p><p>听对话，男生在微信上用电话号码加女生找不到，所以问女生有没有注册微信，女生说自己流量不够用，没注册，用 QQ 就好。男生立刻说要给她充电话费，女生没表态。稣分析，男生应该是喜欢女生，而女生态度不明朗。</p><p>听完对话，稣脑补了剧情：男孩上大学，女孩上高一。如果稣和邓学妹早恋，过一年半载也是这样的剧情，吓得稣果断放下电话立地成佛……</p><p>多年之后，大学校园，不同院系上同一门体育选修课，一个女生脸像小时候的玩伴，吸引了稣的目光，听她和别人嘻哈，总感觉声音似曾相识。有次跑完步，稣终于对她下手了！</p><p>“哈哈，你的眼圈好黑，属熊猫吗？”稣笑着说。</p><p>女生低下头，不吭声，似乎在酝酿什么报复社会的情绪，稣顿时有点后悔！只好自我介绍：“稣是方圆十里著名的富二代，鲸神链，你叫李怡是吧！点名时听过。”</p><p>“哦，我听同学说过你，高我们两届的土豪学长。”语气略显紧张，打消了稣的疑虑，看来她打不过稣。</p><p>于是稣开启上帝模式，盘问她，顺势对一下她高中时，是不是接过那样的一通电话，当稣说出细节后，她惊讶得快窒息。最后我们互加了微信。</p><p>稣从回忆中醒过神，开始怀疑这记忆可能是假，是刚刚被植入的，因为稣大学时如果是富二代，毕业后怎么会去喂狗粮，然后来了这里又似乎莫名变成富一代？但是稣实在想不起毕业前更多的事情。</p><p>现在是在农耕时代，该为吃喝拉撒睡操碎心吧！吴情应该已经习惯，稣还陌生得有点尿急，连个马桶都没有……</p><p>这时，听说合作社书记洪警官要见稣，二把手齐六爻来接稣过去，他是这里的陶瓷艺术家，马桶是有的，就是他做的。洪锦韬进来之前是警察，带着杀伤性武器，大家都尊称他洪警官。</p><p>稣有预感，这个洪警官可能是接线员要稣找的人，如果其他人都是罪犯，总不能安排一个当警察吧！这不是无间道吗？但性别对不起来，疑惑！</p><p>单独见面之后，稍微有点眉目。洪警官说自己在识界已经很久，很多东西早就想明白，进入枫林晚前，自己也确实是个女人……她一直没有对别人说过，因为还没透析离开的方法，只能按兵不动。</p><p>但很显然，稣并不记得上次是如何离开，所以也帮不上忙……只好和她开玩笑：“锦韬是男名，不是你在外面的真名吧！”</p><p>“确实不是。但你说的外面，指的是什么？枫林晚外面那个他们以为是真实世界的识界？还是再外面的真实世界？”</p><p>“嗯？原来稣来自魔性山，这也是识界虚拟的？难怪接线员叫稣圣小开，但稣记得自己叫鲸神链，这里的人却又认为稣叫钱学森！”</p><p>“先安顿下来，明天去找找上次离开的线索。”</p><p>稣嘴里说好，心里却想着：“稣要的是谈恋爱，你们瞎编这些蛇精病的剧情，关稣啥事……”</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;2011 年 1 月，稣在凼湾参加也门市 2011 届高三一月联考。稣平时几乎不预习、不听课、不复习，除了正规作业，其它辅导书都不买，所以考试并不是一件轻松的事，需要用比平时高几倍的功率应付！尤其是比较擅长的数学，平时不用心的程度连自己都觉得发指。于是在考数学时，稣的大脑因</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="心理邪稣" scheme="https://blog.umu618.com/tags/%E5%BF%83%E7%90%86%E9%82%AA%E7%A8%A3/"/>
    
    <category term="鲸神魂裂" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%AD%82%E8%A3%82/"/>
    
  </entry>
  
  <entry>
    <title>EOSIO 数据同步</title>
    <link href="https://blog.umu618.com/2019/02/03/umutech-eosio-data-synchronization/"/>
    <id>https://blog.umu618.com/2019/02/03/umutech-eosio-data-synchronization/</id>
    <published>2019-02-03T15:40:00.000Z</published>
    <updated>2023-08-05T13:01:26.978Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>作者: UMU @ MEET.ONE 实验</p></blockquote><p>最近三个月尝试各种方案把 EOSIO 链上交易数据同步到数据库中，踩了不少坑，现总结一下经验。</p><h2 id="1-使用-MongoDB-插件同步-transaction-traces-和-action-traces">1. 使用 MongoDB 插件同步 transaction_traces 和 action_traces</h2><p>原始需求是要链上交易数据，所以先是把 transaction_traces 和 action_traces 都同步。</p><p><strong>踩坑</strong>：无奈地发现速度跟不上，服务器的时间成本比较高，只能舍弃。</p><h2 id="2-使用-MongoDB-插件同步-transaction-traces">2. 使用 MongoDB 插件同步 transaction_traces</h2><p>研究插件代码，发现 action_traces 是从 transaction_traces 拆出来的，是重复的，所以把 action_traces 去掉，这次成功追上主网区块高度。</p><p><strong>踩坑</strong>：transaction_traces 在查询 actions 时不太方便，因为 actions 是放到 transaction_traces 内部的一个数组，要查询具体一个 action 就得分两步走，先在 MongoDB 查询出某个 trx，然后再 actions 数组里遍历。数据库使用端的工程师觉得这样太麻烦，无奈继续放弃这到手的肥肉。</p><h2 id="3-使用-MongoDB-插件同步-action-traces">3. 使用 MongoDB 插件同步 action_traces</h2><p>明确 action_traces 才是客户端想要的后，就只同步 action_traces。</p><p><strong>踩坑</strong>：action_traces 条数比 transaction_traces 多了三倍以上，又出现追不上区块的问题……</p><h2 id="4-使用-MongoDB-插件同步-action-traces，但只要-transfer-数据">4. 使用 MongoDB 插件同步 action_traces，但只要 transfer 数据</h2><p>客户端最关心的是 transfer 数据，既然跟不上，就舍弃其它数据。</p><p><strong>踩坑</strong>：舍弃的数据后期不好补。</p><h2 id="5-考虑-kafka-plugin">5. 考虑 kafka_plugin</h2><p>有人说 kafka_plugin 同步数据很快，可以追上主网区块。</p><p><strong>踩坑</strong>：从 kafka_plugin 代码就能看出它没有处理 action_traces，如果还要去后端再拿出来处理，再插入到 MongoDB 里，那开发成本和服务器成本一样又上去了。</p><h2 id="6-从-2019-年的区块开始同步">6. 从 2019 年的区块开始同步</h2><p>从 35058781 块开始，插入数据库。之前的区块（1 - 35058780）处理后，仅插入数据量相对很小的 account_controls、accounts、pub_keys，其它数据量大的表不插入。</p><p>做这个尝试很重要，因为发现重要的线索：</p><ul><li><p>大约在 2200 万块开始，nodeos 的处理速度下降很多，平均每块要 2-3ms，所以同步慢的原因在于跑 nodeos 的服务器的性能。</p></li><li><p>在 1 开始的早期区块阶段，同时插入 transaction_traces 和 action_traces，并不能看出比只插入 action_traces 慢，说明 MongoDB 端压力很小。</p></li></ul><h2 id="7-结论">7. 结论</h2><ul><li><p>要追上主网区块高度，nodeos 机器性能要好，2.5GHz CPU 不够用。之前听闻 BOS 要求 BP 使用 4.0GHz 的 CPU，现在看起来也是有道理的……以性能成本换取时间。</p></li><li><p>MongoDB 集群，按之前的文章<a href="/2018/12/11/umutech-mongodb-on-centos/">《为 EOSIO MongoDB 插件搭建高可用集群》</a>的配置，插入阶段毫无压力。</p></li><li><p>插件代码有些问题，需要优化，最明显的就是 queue_size 的设计不合理，打印处理时间太长的提示也不合理。</p><ul><li><p>queue 函数是个模板，所有的 queue 都调用它，但  max_queue_size 和 queue_sleep_time 缺只有一份，这可能导致一个 queue 导致的 queue_sleep_time 加大，影响到其它 queue，即整体的休眠时间会无用地加大。</p></li><li><p>打印处理时间没有按照 max_queue_size 变化，当 max_queue_size 设置大时，打印就很频繁，带来延迟。</p></li></ul></li><li><p>建议：一定要注意成本问题！如果查询量不是很巨大，找点友商的数据源用用就好了，自己搭建的成本好高……但如果查询量太大，或者友商卖太贵，以上经验就是很好的参考了。</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;作者: UMU @ MEET.ONE 实验&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;最近三个月尝试各种方案把 EOSIO 链上交易数据同步到数据库中，踩了不少坑，现总结一下经验。&lt;/p&gt;
&lt;h2 id=&quot;1-使用-MongoDB-插件同步-tra</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="调研" scheme="https://blog.umu618.com/tags/%E8%B0%83%E7%A0%94/"/>
    
    <category term="ops" scheme="https://blog.umu618.com/tags/ops/"/>
    
    <category term="mongodb" scheme="https://blog.umu618.com/tags/mongodb/"/>
    
    <category term="blockchain" scheme="https://blog.umu618.com/tags/blockchain/"/>
    
  </entry>
  
  <entry>
    <title>“你真的懂稣吗？”——答对也没钱</title>
    <link href="https://blog.umu618.com/2019/02/03/do-you-know-me/"/>
    <id>https://blog.umu618.com/2019/02/03/do-you-know-me/</id>
    <published>2019-02-03T09:27:42.000Z</published>
    <updated>2023-08-05T13:01:26.978Z</updated>
    
    <content type="html"><![CDATA[<h2 id="判断题">判断题</h2><ol><li><p>稣从小喜欢富婆，至今（2019 年）未变。</p></li><li><p>相比恋爱的过程，稣更喜欢失恋的结果。</p></li><li><p>稣酒量太好，从来不屑和别人比酒量。</p></li><li><p>稣是 00 后。</p></li><li><p>稣是很有原则的人，稣的原则就是：原则随时可以改进。</p></li><li><p>一劫，人间 43 亿 2 千万年，现在是宇宙的第四劫初期，名唤七鹰劫。这是稣的座右铭“天地玄黄，宇宙洪荒。度修七鹰劫，证悟神通”中“度修七鹰劫”的由来。</p></li><li><p>稣长期随地乱扔个性，就连撒泡尿都要排泄一定份量的个性，但还是很有个性。</p></li><li><p>稣最长的暗恋记录是八年。</p></li><li><p>稣是很理性，又很感性的人。</p></li><li><p>十几年前，稣发誓“努力赚钱，买宝马”，结果钱太难赚，改发誓“努力赚钱，买马”，后来发现买了马也不会骑来上班……只好再改为“努力写马，赚钱”，最后稣真的写了一个木马，流传很广。</p></li></ol><h2 id="答案">答案</h2><ol><li><p>是。稣很贵，穷屌丝女哪养得起稣？</p></li><li><p>是。失恋磨心、减肥，传说失恋七次就能修炼好量子纠缠邪术，为宇宙和平而再恋。</p></li><li><p>否。您问稣酒量怎么样，稣指着大海的方向——稣酒量太差，宁愿跳海，也不敢喝。</p></li><li><p>否。这是正经问答！“稣是 00 后”这个梗说的是 00 后是中国完全正常的第一代，他们能正常的快乐，不理会嫉妒他们的老一代。</p></li><li><p>否。稣根本就没有原则，哪来这么多废话。</p></li><li><p>否。这么瞎掰您也信？“度修七鹰劫”是因为稣想塑造一个绝情的自我形象，所以用“七鹰”来代替“情”。</p></li><li><p>否。稣哪里有个性了？您才有个性嘞！从来不觉得自己很有个性，只是有点内向。</p></li><li><p>否。这暗恋的故事原来记在百度贴吧，结果吧被删了，后来在腾讯微博私信到女主，结果腾讯微博倒闭，私信被全部清空。所以不记得几年了，但肯定不止八年。</p></li><li><p>是。这很容易做到的，举个例子：地球绕着太阳转，因为地球深爱着太阳，我日！</p></li><li><p>否。写着玩的，把自己整半死，没放出去。</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;判断题&quot;&gt;判断题&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;稣从小喜欢富婆，至今（2019 年）未变。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;相比恋爱的过程，稣更喜欢失恋的结果。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;稣酒量太好，从来不屑和别人比酒量。&lt;/p&gt;
&lt;/li&gt;
</summary>
      
    
    
    
    <category term="U墨" scheme="https://blog.umu618.com/categories/U%E5%A2%A8/"/>
    
    
    <category term="耶乎知稣" scheme="https://blog.umu618.com/tags/%E8%80%B6%E4%B9%8E%E7%9F%A5%E7%A8%A3/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·天之道人</title>
    <link href="https://blog.umu618.com/2019/02/02/reconstructionism-poet-understanding-the-universal-rule-humans/"/>
    <id>https://blog.umu618.com/2019/02/02/reconstructionism-poet-understanding-the-universal-rule-humans/</id>
    <published>2019-02-02T08:52:23.000Z</published>
    <updated>2023-08-05T13:01:26.978Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·天之道人》：十年练技，八年练心，身负情商逆应用；三年潜龙，五年入档，心怀宇宙正无穷。</p><h2 id="注解">注解</h2><p>改编自霹雳布袋戏人物“天踦爵”诗号：</p><blockquote><p>三年寻龙，十年点穴，肩负青囊走南北；<br>三寸知息，十面洞心，掌握乾坤通天阙。</p></blockquote><p>题目的断句：不是天之“道人”，而是“奉行天之道的人”的缩写。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·天之道人》：十年练技，八年练心，身负情商逆应用；三年潜龙，五年入档，心怀宇宙正无穷。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;改编自霹雳布袋戏人物“天踦爵”诗号：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;三年寻龙，十年点穴，肩负青囊走南北；&lt;br&gt;</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·搞荡基</title>
    <link href="https://blog.umu618.com/2019/02/01/reconstructionism-poet-with-dangge/"/>
    <id>https://blog.umu618.com/2019/02/01/reconstructionism-poet-with-dangge/</id>
    <published>2019-02-01T04:36:00.000Z</published>
    <updated>2023-08-05T13:01:26.971Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·搞荡基》：摩斯汉堡天天吃，今日已觉胃不支。德国家常美又廉，荒淫麟来试一试。</p><h2 id="注解">注解</h2><ul><li><p>胃不支：又作“味不知”。</p></li><li><p>荒淫麟：人名。</p></li></ul><p>为明天和荡哥搞基而作。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·搞荡基》：摩斯汉堡天天吃，今日已觉胃不支。德国家常美又廉，荒淫麟来试一试。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;胃不支：又作“味不知”。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;荒淫麟：人名。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>稣为什么设置朋友圈三天可见？</title>
    <link href="https://blog.umu618.com/2019/01/31/why-last-3-days-viewable/"/>
    <id>https://blog.umu618.com/2019/01/31/why-last-3-days-viewable/</id>
    <published>2019-01-31T12:16:00.000Z</published>
    <updated>2023-08-05T13:01:26.971Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p><strong>生活需要遗忘，三天可见才是真实的生活——毕竟还不能选择“一天可见”。</strong></p></li><li><p>有些人的手机套餐没有无限流量，看了稣半年朋友圈，当晚就超标。为了保护他们。</p></li><li><p>和隐私无关。稣一直保护核心机密。</p></li><li><p>任何走心广告，看完稣都不会取消三天可见。给钱可以考虑。</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;生活需要遗忘，三天可见才是真实的生活——毕竟还不能选择“一天可见”。&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;有些人的手机套餐没有无限流量，看了稣半年朋友圈，当晚就超标。为了保护他们。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;和</summary>
      
    
    
    
    <category term="宇督观" scheme="https://blog.umu618.com/categories/%E5%AE%87%E7%9D%A3%E8%A7%82/"/>
    
    
    <category term="耶乎知稣" scheme="https://blog.umu618.com/tags/%E8%80%B6%E4%B9%8E%E7%9F%A5%E7%A8%A3/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·中年女子不如鸭</title>
    <link href="https://blog.umu618.com/2019/01/31/reconstructionism-poet-middle-aged-women-are-not-better-than-ducks/"/>
    <id>https://blog.umu618.com/2019/01/31/reconstructionism-poet-middle-aged-women-are-not-better-than-ducks/</id>
    <published>2019-01-31T04:59:00.000Z</published>
    <updated>2023-08-05T13:01:26.971Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·中年女子不如鸭》：一车两位富休假，三餐一线穷在加。闲mang人岂识忙xian中趣？中年女子不如鸭。</p><h2 id="注解">注解</h2><ol><li><p>一对土豪夫妻，每人一辆车，车位紧靠，车牌就差一位。最近快过年了，土豪妻子已经休假，所以土豪把车停在俩车位中间，即一车占两位。</p></li><li><p>这说的是别人……大过年的还在加班！</p></li><li><p>这些别人明明好惨啊！但他们觉得忙才有意思……</p></li><li><p>那些穷逼的中年女子真不如鸭，嘎！</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·中年女子不如鸭》：一车两位富休假，三餐一线穷在加。闲mang人岂识忙xian中趣？中年女子不如鸭。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;一对土豪夫妻，每人一辆车，车位紧靠，车牌就差一位。最近快过年了，土豪妻子已经休假，所以土</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神【5】</title>
    <link href="https://blog.umu618.com/2019/01/31/god-of-debug-5/"/>
    <id>https://blog.umu618.com/2019/01/31/god-of-debug-5/</id>
    <published>2019-01-30T16:27:14.000Z</published>
    <updated>2023-08-05T13:01:26.971Z</updated>
    
    <content type="html"><![CDATA[<p>晴空万里，稣在<a href="/2018/05/22/tesula/">特稣垃</a>车顶上醒来，车里睡着一个妹纸！她醒来后，非要说这车是稣送她的，稣却只记得自己是个养狗的，这车……根本养不起！这妹纸，那就……更养不起了！</p><p>“你说是，就是吧！本来就不是稣的，送你又不吃亏。”，稣心想。然后研究一下，车是坏的，还好，不然不是要暴露自己不会用<a href="/2018/05/22/tesula/">特稣垃</a>的真相？</p><p>“你是……我们认识？”</p><p>“吴情，爱情的情。你走了 110 天，还以为你已经回到现实世界，没想到失忆回来了！”妹纸一脸忧郁和失望。</p><p>稣看着她的黑眼圈，脑海里闪过前女友李怡的脸，稣刚认识李怡时，也是同款的黑眼圈！便试探地问：“你失恋啦？”</p><p>“没有。”简单的回答，但意犹未尽，似乎强行咽下好多话。也罢，自己还在懵逼，管她那么多干嘛。</p><p>这里风景秀丽，像极了瑞士 Lungern。嗯哼？稣并没去过，是朋友圈里看到的。奇怪的是，村民大多住在汽车里，只有少量的木屋。他们看到稣，似乎还蛮尊重的，仿佛稣是有钱人。但稣根本没有印象，难道说 110 天前，稣真的来过？没事，反正他们看起来对稣挺友善，先逮个人来问问吧！</p><p>就是你，抱只狗的大妈，和撒狗粮的稣有缘。“你认得稣？”</p><p>“见过，你是这里的名人，好多人没见过你，也听说过你。”大妈挺热情地回答。</p><p>“那你偷偷地告诉稣，那个吴情是肿么肥事？”</p><p>“她不是你的小蜜吗？你上次走后，她跟了别人，但矛盾挺大的，后来翅膀硬点就分手了。”大妈偷偷地说，但稣觉得她的声音有点刺耳！什么！居然给稣戴绿帽？虽然稣不记得自己有过小蜜……但突然有了，又突然没了，还是有点莫名激动。大妈见稣有点躁动，赶紧安慰说：“小姑娘不容易，还不是你一走就是几个月！不要计较啦。”</p><p>这难道就是中彩票，又丢掉的感觉？继续了解，又发现不少情况：原来稣已婚。这还是吴情和别人说的……</p><p>稣找回吴情问：“稣结婚啦？你确定？稣记得自己单身呢！在魔性山上只有单身狗相伴……造谣！赤果果地造谣！”</p><p>“上次搭你顺风车，闲聊时，你说自己哄孩子睡觉的能力比家里的三个老婆加起来还厉害。”</p><p>纳尼？稣还有三个老婆，好吧，你说有就有！“但我们的关系，不是他们说的那样吧？小蜜？”</p><p>“当然不是，别听她们瞎说！”她有点不高兴，一个尴尬的表情后继续讲：“我们没啥关系，只是上次我想和你组队离开这里，你却一个人跑了。没事没事，忘记也好。”</p><p>这时，稣的手机响起，吴情惊讶地说：“都 110 天了还有电？”稣反问：“这里没有电吗？”</p><p>得到习惯性看弱智但很肯定的回答，稣马上意识到自己更可能是刚刚来到这里。如果真在此百日之久，iPhone 7 不可能还有电。来电号码是未知，一个女人的声音：“圣小开先生，我是刚刚接待你的记录员，现在有点信息要透露给你，请注意记住我的每句话！明白吗？”</p><p>“稣不叫圣小开啊！你打错了吧？”</p><p>“好吧，你现在叫钱学森，可以鸟吗？”对方有点不耐烦，但稣的疑惑并未解开，不宜轻举妄动，继续听她扯，“这里面的大部分人都是现实世界里的罪犯，全部洗掉记忆，回到他们还没犯罪前的状态，只有两个是科研志愿者，不属于此列，你是其一，另一名至今还没超脱过，你现在得帮她回来，不然时间再久，她会被同化。”</p><p>“我们两个？和其他人有啥区别？”稣问。</p><p>“你身处之地是意识监狱，其他人永远无法离开，在这里死亡后就真的死啦！而你们只要破解游戏规则，就能回到现实。我的话全部带到，暂别！”</p><p>“射精病，稣在这里受人尊重，回什么吃狗粮的现实？既来之则安之！先跟这个妹纸谈个恋爱再说。”稣的内心哈哈狞笑中。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;晴空万里，稣在&lt;a href=&quot;/2018/05/22/tesula/&quot;&gt;特稣垃&lt;/a&gt;车顶上醒来，车里睡着一个妹纸！她醒来后，非要说这车是稣送她的，稣却只记得自己是个养狗的，这车……根本养不起！这妹纸，那就……更养不起了！&lt;/p&gt;
&lt;p&gt;“你说是，就是吧！本来就不是稣的，</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="心理邪稣" scheme="https://blog.umu618.com/tags/%E5%BF%83%E7%90%86%E9%82%AA%E7%A8%A3/"/>
    
    <category term="鲸神魂裂" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%AD%82%E8%A3%82/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·魔性山军犬养殖训练基地</title>
    <link href="https://blog.umu618.com/2019/01/30/reconstructionism-poet-middle-aged-men-are-not-better-than-dogs/"/>
    <id>https://blog.umu618.com/2019/01/30/reconstructionism-poet-middle-aged-men-are-not-better-than-dogs/</id>
    <published>2019-01-30T05:21:22.000Z</published>
    <updated>2023-08-05T13:01:26.971Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·魔性山军犬养殖训练基地》：一步夹蛋两步扯，八分前戏七秒射。中年男子不如狗，心向南辕道北辙。</p><h2 id="注解">注解</h2><ol><li><p>草地上的石板路，石板铺得太近，一步一块容易夹到蛋，一步两块又太大步，容易扯到蛋。</p></li><li><p>这说的是别人……</p></li><li><p>这些别人好惨啊！</p></li><li><p>事与愿违，人生常态。美食美景美色不常有，律法又无情，还是要合情合理合法地及时行乐，加了这“三合”——真难……</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·魔性山军犬养殖训练基地》：一步夹蛋两步扯，八分前戏七秒射。中年男子不如狗，心向南辕道北辙。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;草地上的石板路，石板铺得太近，一步一块容易夹到蛋，一步两块又太大步，容易扯到蛋。&lt;/p&gt;
&lt;/l</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神【4】</title>
    <link href="https://blog.umu618.com/2019/01/30/god-of-debug-4/"/>
    <id>https://blog.umu618.com/2019/01/30/god-of-debug-4/</id>
    <published>2019-01-29T16:19:11.000Z</published>
    <updated>2023-08-05T13:01:26.971Z</updated>
    
    <content type="html"><![CDATA[<p>稣是<a href="/2019/01/30/reconstructionism-poet-middle-aged-men-are-not-better-than-dogs/">魔性山军犬养殖训练基地</a>的一名训犬师，著作《狗粮的三十六种撒法和七十二种喂法》。</p><blockquote><p>《诗盗·魔性山军犬养殖训练基地》<br>一步夹蛋两步扯，<br>八分前戏七秒射。<br>中年男子不如狗，<br>心向南辕道北辙。</p></blockquote><p>2018 年 12 月 29 日 21 点多，突然有犬吠，稣在楼上看了一下，外面一男一女似乎走错路，听到狗叫声吓退了。这个时间点，冬天的晚上，不应该有人来此。本不想理会，但突然看到女人的鞋子滑了一下，男人迅速扶住女人，然后一路拽着手下山。稣平时就是专业撒狗粮的，没想到晚上居然被这对奇怪的男女喂狗粮……</p><p>披了件深色外套就下去观测他们。原来真是走错路，他们想上魔性山健身公园爬山。但是这么晚，除了有点吓人，可能还有什么乱七八糟的剧情吧！这么一想，稣差点笑出来！</p><p>一路跟着上山，他们只顾着聊天没注意到稣。从对话内容可以看出他们还不熟悉彼此。女人一直在诉苦，大概是上次恋爱如何如何失败，付出太多，却不被珍惜。男人则比较熟练地开导她，分析得头头是道的样子。女人恍然大悟，明白过去不少认识是错的，自己并没有很差劲，然后逐渐开怀，有了笑语。</p><p>这时候正好爬到半山腰一个庙，他们左拐去参观。稣则继续走，趁他们不注意抄到前面去。后来听到男人说他不信佛，只是在外面看看，不想进去拜。女人已经被治愈了一些，目的达到，说想下山。稣也就随之折返。</p><p>下山后，他们在光亮处，稣发现那个男人长得很像钱学森！这太不可思议了，稣以前上学时，经常看到钱学森的画像，今晚真是见鬼！</p><p>他们上了一辆<a href="/2018/05/22/tesula/">特稣垃</a>，车牌是“四个逼”……这特么是违法的吧！要不要报警？稣犹豫一下的时间，他们却在车震？？哦，并没有，稣可能狗粮吃多产生幻觉！上山容易，下山难，腿抖导致以为车在震吧！</p><p>稣还在纳闷“钱学森”时，车启动了，果断抄起附近的共享单车追上去看看他们往哪走。</p><p>以前坐过一个同学的宝马三系，每次只有男生时，他都是一顿操作猛于虎。但只载妹纸时，都是开得像自行车。这<a href="/2018/05/22/tesula/">特稣垃</a>也是开得很慢，可能用自动驾驶解放双手，进行无可告人的操作……吧！</p><p>稣以 30KM/h 左右速度跟着，到了十字路口，突然出八哥了……这乐射单车居然没法刹车！他们已经停车，稣如果避开，就会冲向十字路口，可能被横向行驶的车撞成狗！于是稣果断撞<a href="/2018/05/22/tesula/">特稣垃</a>，飞出去前，大骂：“草泥马的共享单车！”但心里想的却是：“这车好像挺贵？估计要赔不少钱！”</p><p>醒来已经在<a href="/2019/01/25/god-of-debug-3/">枫林晚</a>……</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;稣是&lt;a href=&quot;/2019/01/30/reconstructionism-poet-middle-aged-men-are-not-better-than-dogs/&quot;&gt;魔性山军犬养殖训练基地&lt;/a&gt;的一名训犬师，著作《狗粮的三十六种撒法和七十二种喂法》。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="心理邪稣" scheme="https://blog.umu618.com/tags/%E5%BF%83%E7%90%86%E9%82%AA%E7%A8%A3/"/>
    
    <category term="鲸神魂裂" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%AD%82%E8%A3%82/"/>
    
  </entry>
  
  <entry>
    <title>人与人之间的差异咋这么大捏？</title>
    <link href="https://blog.umu618.com/2019/01/26/people-are-so-different/"/>
    <id>https://blog.umu618.com/2019/01/26/people-are-so-different/</id>
    <published>2019-01-26T15:03:27.000Z</published>
    <updated>2023-08-05T13:01:26.971Z</updated>
    
    <content type="html"><![CDATA[<p>只想说说差异本身，不想纠结谁对谁错，仅是惊讶差异的存在！</p><h2 id="姜是驱寒的？">姜是驱寒的？</h2><p>不久前，在前同事朋友圈看到她说拿姜来驱寒……稣差点就<a href="/categories/%E5%90%93%E9%86%92/">吓醒</a>了！</p><p>稣一直以为姜和薄荷是同类，是清凉的，只有浓度太大，味觉系统手刺激，才会引起热辣感，它本身应该没有什么能量，所以是夏天降温用的。夏天时，稣常喝姜味苏打水，个人感觉真的可以降温，而且有句古话“冬吃萝卜夏吃姜”佐证！</p><h2 id="台风天蔬菜会降价？">台风天蔬菜会降价？</h2><p>几年前聊过这话题，冒出几个人觉得会降价，理由是菜坏了……</p><p>然而实际都是涨价，因为各种成本都上升。</p><h2 id="男孩从小就比女孩勇敢？">男孩从小就比女孩勇敢？</h2><p>很多人这么认为，包括曾经的稣。</p><p>去幼儿园参观之后，稣发现大部分哭得很惨的都是男生……小男孩比同龄的小女孩更需要母爱。</p><h2 id="女人比男人会哄小孩睡眯眯？">女人比男人会哄小孩睡眯眯？</h2><p>又想当然了吧……稣自己试过前也这样以为。</p><p>现实是，无论哄女孩，还是哄男孩，妈妈、老婆、丈母娘，加起来也没稣行。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;只想说说差异本身，不想纠结谁对谁错，仅是惊讶差异的存在！&lt;/p&gt;
&lt;h2 id=&quot;姜是驱寒的？&quot;&gt;姜是驱寒的？&lt;/h2&gt;
&lt;p&gt;不久前，在前同事朋友圈看到她说拿姜来驱寒……稣差点就&lt;a href=&quot;/categories/%E5%90%93%E9%86%92/&quot;&gt;吓醒&lt;/a</summary>
      
    
    
    
    <category term="宇督观" scheme="https://blog.umu618.com/categories/%E5%AE%87%E7%9D%A3%E8%A7%82/"/>
    
    
    <category term="耶乎知稣" scheme="https://blog.umu618.com/tags/%E8%80%B6%E4%B9%8E%E7%9F%A5%E7%A8%A3/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神【3】</title>
    <link href="https://blog.umu618.com/2019/01/25/god-of-debug-3/"/>
    <id>https://blog.umu618.com/2019/01/25/god-of-debug-3/</id>
    <published>2019-01-24T16:08:00.000Z</published>
    <updated>2023-08-05T13:01:26.971Z</updated>
    
    <content type="html"><![CDATA[<p>打开阳台落地窗前，稣以为自己在 28 层，到阳台发现是在 8 层，心想：“有救了，才 8 层，小心点就可以爬下去。”</p><p>正好，公寓在维修锈蚀老化的空调格栅，一条吊绳就在眼前，稣看到自由在招手，毫不犹豫就开始扮演蜘蛛侠。爬下几楼后，手就开始后悔，这敲键盘的手，哪能这么玩，还剩 2 层，干脆直接跳下去吧。</p><p>不知从哪来的勇气，反正稣跳楼了，没觉得自己会死……一阵迷糊之后，稣在实验室里醒来！</p><p>记录员：“恭喜回来！你通过考验了。”</p><p>稣想起自己参加了一个类似《黑客帝国》中母体的项目——“识界”，一开始是从简单的梦境脱困，一路轻松过关，刚刚的项目属于比较难的。怎么通过考验的？稣有点纳闷！</p><p>深吸了一口冷气，开始分析刚才做的两个梦：场景都很真实，在梦里都没怀疑过是梦，第一个梦死亡前，并没有以为自己不会死，而第二个是以为自己不会死的。那么按照识界规则，如果不相信自己会死，就能脱离，相反，会换个身份继续在识界生活，即转世。</p><p>稣的第一问：“第一世失败转世，第二世才成功的？”</p><p>记录员：“没有，你只在识界待了一世就超脱！三百多名志愿者，你是第一个回来的，这个速度也是很惊人！”</p><p>稣郁闷了，凡是和自己想的不一样的现象，必须仔细反复分析，想通之前都是纠结，这是稣活了六十几岁还一直保持的……性格缺陷？</p><p>脑海里突然出现第一个梦境里的村庄的名字——枫林晚，赫赫，停车那啥？？真是一个汽车旅馆！</p><p>记录员说有三百多名志愿者，这和第一个梦境里的枫林晚村庄的人数吻合，而且稣是从识界里的正常世界，掉进异次元的。开车之前，稣在正常世界和女朋友爬山……能莫名想起好多细节。</p><p>“所以第一个梦境才是识界？稣进入了一个叫枫林晚的地方。”稣问记录员。</p><p>记录员显然有点意外，他不知道稣其实一连做了两个梦，便回答：“识界的设定是这样没错，你还做了其它梦？”</p><p>“是的，稣在枫林晚是被冻死的，并没有觉得自己不会死，却在一阵孤独感中醒来，继续第二个梦。第二个梦的场景也是 30 年前，但有几处和现实不一样。”</p><p>“哦？你这种超脱识界的方式，我们还没前例，能再详细描述吗？”</p><p>“第二梦中，有个舍友，但现实并没有，有个叫六舅的基友被地铁撞死，而现实是被一辆白色玛莎拉蒂撞飞而已，脑残了很久，但并没有死。梦境没有造全，门外的空间是一片无法照亮的黑暗，像个监狱。稣孤独地生活了几天，尝试从阳台越狱，结果不小心跳楼吓醒。”</p><p>记录员似乎不满意稣的描述，可能这些情节对他分析案例没有帮助，又问：“你记得时间吗？”</p><p>“应该是 2018 年 09 月 11 日到 2019 月 06 月 18 日之间，因为梦中那个并不存在的舍友说稣已经离婚，而稣当时没有意识到现实中的 2019 月 06 月 18 日又复婚了。”</p><p>“你能超脱识界的原因是什么？”记录员直接把问题丢给稣！</p><p>“呃……”稣突然灵光一闪，“如果第二个梦是在超脱识界回到现实后做的，那是违法识界法则。所以第二个梦，只能是在识界临死状态下做的，正是因为那个梦，使在识界里的稣相信自己不会死。”</p><p>“你竟然是被梦救醒的！首例，首例！”</p><p>趁记录员正高兴，稣又问了一遍：“能了解一下其他志愿者的情况吗？”</p><p>“对不起，无可奉告。这是机密，也是实验者的隐私。”</p><p>“你不说，稣也能猜到一些！现在人口这么少，实验还有生命危险，你们不可能找到这么多正常人！”稣的脑海里闪过识界枫林晚里很多个看起来并不友好的人脸。</p><p>“咳！圣先生，你很聪明，不过我不会中你的圈套，等你再继续过关，自然有人会告诉你实情。还有问题吗？”</p><p>“为什么叫枫林晚？”稣笑着问。</p><p>“这名字是你刚刚取的。”记录员看到稣的笑脸，又补充：“你很幸运，一般人醒来根本笑不出来！”</p><p>卧槽，这名字满满的欲望的气息，倒也挺符合的，里面男女比例很平衡，还是要生孩子才能离开，想想就……Biu！</p><p>话说回来，稣确实运气好，据说以前很多实验者都因为识界太真实，经历过多次痛苦的死亡过程，烙下心理阴影，所以志愿者都要求心理素质十分强大！呵，没空管别人，问正事：“识界里的吴情，现实中也叫吴情吗？”</p><p>“你再打听别人隐私的话，今天就到此为止咯！”</p><p>“好吧！明天，还能继续枫林晚？”</p><p>“随你。识界系统还无法百分百准确地把实验者置入特定场景。这是一个有随机性的双向选择。”</p><p>“那下次，稣打算带着自行车和食物进去。”稣坏笑着说，又心想：“进入后，记忆会被屏蔽，带这两个绝对不会不懂怎么用，哈！”</p><p>“你自己好好构思……我帮不上忙！”记录员无奈地说，“跟你沟通真不轻松，下次换班，让另一个美女同事和你对接，再见，圣先生！”</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;打开阳台落地窗前，稣以为自己在 28 层，到阳台发现是在 8 层，心想：“有救了，才 8 层，小心点就可以爬下去。”&lt;/p&gt;
&lt;p&gt;正好，公寓在维修锈蚀老化的空调格栅，一条吊绳就在眼前，稣看到自由在招手，毫不犹豫就开始扮演蜘蛛侠。爬下几楼后，手就开始后悔，这敲键盘的手，哪能</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="心理邪稣" scheme="https://blog.umu618.com/tags/%E5%BF%83%E7%90%86%E9%82%AA%E7%A8%A3/"/>
    
    <category term="鲸神魂裂" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%AD%82%E8%A3%82/"/>
    
  </entry>
  
  <entry>
    <title>Nodejs 实现监控告警</title>
    <link href="https://blog.umu618.com/2019/01/24/umutech-push-notification-to-im-using-nodejs/"/>
    <id>https://blog.umu618.com/2019/01/24/umutech-push-notification-to-im-using-nodejs/</id>
    <published>2019-01-24T10:53:55.000Z</published>
    <updated>2023-08-05T13:01:26.971Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>作者: UMU @ MEET.ONE 实验室</p></blockquote><h2 id="钉钉">钉钉</h2><ol><li><p>选择要接受通知的群，群设置 - 群机器人 - 添加机器人；</p></li><li><p>复制 webhook URL，记为 webhook_url；</p></li><li><p>发送通知的代码：</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">const fetch &#x3D; require(&#39;node-fetch&#39;)</span><br><span class="line"></span><br><span class="line">fetch(webhook_url, &#123;</span><br><span class="line">  method: &#39;POST&#39;,</span><br><span class="line">  headers: &#123;</span><br><span class="line">    &#39;Content-Type&#39;: &#39;application&#x2F;json&#39;</span><br><span class="line">  &#125;,</span><br><span class="line">  body: JSON.stringify(&#123;</span><br><span class="line">    &quot;msgtype&quot;: &quot;text&quot;,</span><br><span class="line">    &quot;text&quot;: &#123;&quot;content&quot;: text&#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;).then(function(res) &#123;</span><br><span class="line">  if (res.ok) &#123;</span><br><span class="line">    console.log(&#39;Dingtalk message sent!&#39;)</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">   console.log(&#39;status &#x3D; &#39; + res.status)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="Telegram">Telegram</h2><ol><li><p>添加 <a href="https://telegram.me/BotFather">@BotFather</a>，发送 /newbot 命令，随提示逐步建立一个机器人，得到这个机器人的 token，记为 bot_token。</p></li><li><p>选择要接受通知的 Group 或 Channel，按以下任一方式取得 chat_id：</p></li></ol><p>(1) 转发 Group 或 Channel 内的消息到 <a href="https://telegram.me/getidsbot">@getidsbot</a></p><p>(2) 通过 Web 版查看 Group 或 Channel 的 URL 中，p 参数 的值。</p><ul><li><p>如果是 Group，chat_id 为把 g 前缀替换为负号的负整数。比如 <code>p=g268787210</code>，则 <code>chat_id = '-268787210'</code></p></li><li><p>如果是 Channel，chat_id 为 _ 前部分，并把 c 前缀替换为 -100 的负整数。比如 <code>p=c1383705039_968667419389618100</code>，则 <code>chat_id = '-1001383705039'</code></p></li></ul><ol start="3"><li>发送通知的代码：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">const TelegramBot &#x3D; require(&#39;node-telegram-bot-api&#39;)</span><br><span class="line">const bot &#x3D; new TelegramBot(bot_token, &#123;polling: false&#125;)</span><br><span class="line"></span><br><span class="line">bot.sendMessage(chat_id, text)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;作者: UMU @ MEET.ONE 实验室&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;钉钉&quot;&gt;钉钉&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;选择要接受通知的群，群设置 - 群机器人 - 添加机器人；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;复制</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="调研" scheme="https://blog.umu618.com/tags/%E8%B0%83%E7%A0%94/"/>
    
    <category term="ops" scheme="https://blog.umu618.com/tags/ops/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神【2】</title>
    <link href="https://blog.umu618.com/2019/01/20/god-of-debug-2/"/>
    <id>https://blog.umu618.com/2019/01/20/god-of-debug-2/</id>
    <published>2019-01-20T12:45:12.000Z</published>
    <updated>2023-08-05T13:01:26.971Z</updated>
    
    <content type="html"><![CDATA[<p>稣出生在道州德国鹰熊岛，四面环海，无论往哪个方向走，都会被海阻挡。海的那头，除了海天一色，就是高耸的青山。</p><p>曾经以为，稣这辈子都会被困在海里。鹰熊岛的岛民处于农耕时代，人情社会，这并不是稣擅长、喜欢的。</p><p>上了小学后，稣有一段时间快乐过——在书籍的海洋里遨游，也是不错的……</p><p>到四年级，稣又被无限的宇宙给吓出翔！无穷无尽的宇宙，让稣感到恐惧，觉得人生没有意义。</p><blockquote><p>稣生也有涯，而宇宙也无涯。以有涯随无涯，殆已！</p></blockquote><p>五年级，宇宙觉得稣太孤独，就创造了道州德国鹰熊岛外面的世界。</p><p>也许那些全是假的，所以稣现在又回到一个相似的困境。只是这里和鹰熊岛景观差很多，走了快三天，没遇到海，连小河都没有。</p><p>走过田野，就是高山，就是海那边印象中永远到不了的那种山，翻过去却是雪地。虽然很陡，走得很累的稣还是直接跳了下去。</p><p>稣被冻死前，想起吴情，嗯？？几天前，明明有人愿意嫁给稣，外面的世界又没人知道，为什么稣要拒绝呢？还跑出来冻死在雪地里，真是脑子抽风啊！</p><h2 id="从一个梦里醒来，马上就继续另一个梦，或者梦见自己醒来，都会产生梦中梦的错觉">从一个梦里醒来，马上就继续另一个梦，或者梦见自己醒来，都会产生梦中梦的错觉</h2><p>稣醒来，身在软件园非正常人类研究中心！门，居然开着！卧槽，稣不可能这么不小心。只有一个可能，舍友开的门，睡眼惺忪转头一看，果然她没在床上！</p><p>门口都是灰，稣想起是物业来装修什么东西，然后回床上一瞧，竟是一堆的粉尘，所以稣一晚上吸了多少灰尘……床太脏，想睡个回笼觉都不行。</p><p>稣觉得不太对劲，心想：如果还在梦中，只要继续睡就行了。站在落地窗边，看到阳台有女人的衣服，想起另外一张床，丑女舍友的，现在她不在，可以借用一下吧！但是，马上又想起，她实在太丑了，根本睡不了……</p><p>算了，刚才做梦在雪里冻死，这个舍友叫黄雪，不是暗示睡她的床会再死一次吧？！既然睡不着，就起来看看电影吧。</p><p>打开电脑，却发现宿舍居然没有网络！翻翻手机微信，也没有任何人联系稣。看来只能去上班了……</p><p>习惯性想牵电助力自行车出宿舍，才意识到，自己刚刚换工作，已经不需要跑去观音山非正常人类研究中心那么远的地方了，现在走路去新公司就行……</p><p>然而伸手去推门，才发现出八哥了，走廊是被封起来的，也就是说稣出不去！太可怕了，稣得打打电话。</p><p>第一个打给脑波，没人接！有点怪，但稣马上安慰自己，她经常睡得很死，没接很正常。</p><p>接着打给六舅——号码是空号！射精病呢？啥时候把号码注销的？</p><p>再打给我妹，也不通！纳尼？回英国了吗？</p><p>突然想起，不是还有个舍友吗？虽然稣不明白，为什么有这样一个舍友……打给黄雪，她一开口就说：“嘿，稣，好久不见！”</p><p>稣，好奇地问：“很久了吗？”</p><p>黄雪：“是啊，自从我交到男朋友，就没见过面啊，超过两个月了吧！”</p><p>稣：“什么鬼……你知道六舅的号码为什么变成空号吗？”</p><p>黄雪：“呃……他不是挂了？”</p><p>稣大吃一精：“挂了？！别开玩笑啊！”</p><p>黄雪：“那家伙不是喜欢骑车上班，结果被地铁撞飞，挂了呗。”</p><p>“擦！好像是有这肥屎，但怎么是地铁？好奇怪！”再问，“我妹呢？”</p><p>黄雪：“这我不清楚，没怎么联系。”</p><p>稣：“哦，那我们是怎么成为舍友的，我怎么都不记得？”</p><p>黄雪：“不就是为了省钱吗？”</p><p>“我擦，稣存款千万，缺这点宿舍费？说实话不行吗？”</p><p>“哈哈哈……”黄雪银铃般笑个不停，好吧，这家伙虽然长得丑，起码声音很好听。</p><p>稣：“笑够了吧！电话费也是要钱的。”</p><p>“呵，哈哈，你看你，连电话费都要省，还吹牛！”黄雪稍微严肃了一下，继续说：“你不是离婚吗！每个月要付三万抚养费，还要还车贷和房贷，装？你继续装！”</p><p>卧槽，稣突然想起来，鹰熊岛是个农村，以前政策不开放，生了二胎会被强行结扎，为了不结扎离的婚，然后要让脑波安心，啥房子、车子都归她，而且还要每个月交钱。</p><p>稣一阵沉默，“……还有个问题，偷偷地问，我们没发生过什么吧？”</p><p>“哈哈哈”又是那阵鄙视的笑声，“<a href="/2017/12/27/reconstructionism-poet-monkey-king/">干林涝</a>！不和你说梦话了，白白！”</p><p>擦，虽然是一通不愉快的电话，但起码对起来一部分。稣立刻尝试破解附近的 WiFi 密码，很顺利找到一个信号是弱密码。</p><p>连上网络后，打开 QQ 想查查其它真相，奇怪的是，群名单里居然空空的，以前加的基友群、联盟群啥的，都躲到“已退出的群”里了。</p><p>居然没人鸟稣！？算了，先看电影吧。《灰静熊西蒙》好像还可以……</p><p>第二天，WiFi 密码被改了……真特么小气，稣不就看了几集电影？后来发现，自己的手机原来早就开通无限流量套餐，以前不知道，真浪费！宿舍还是出不去，只能继续看电影消遣。</p><p>这样的日子一天天过去，稣消耗完耐心，终于从阳台跳了下去……</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;稣出生在道州德国鹰熊岛，四面环海，无论往哪个方向走，都会被海阻挡。海的那头，除了海天一色，就是高耸的青山。&lt;/p&gt;
&lt;p&gt;曾经以为，稣这辈子都会被困在海里。鹰熊岛的岛民处于农耕时代，人情社会，这并不是稣擅长、喜欢的。&lt;/p&gt;
&lt;p&gt;上了小学后，稣有一段时间快乐过——在书籍的</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="心理邪稣" scheme="https://blog.umu618.com/tags/%E5%BF%83%E7%90%86%E9%82%AA%E7%A8%A3/"/>
    
    <category term="鲸神魂裂" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%AD%82%E8%A3%82/"/>
    
  </entry>
  
  <entry>
    <title>鉴喵稣</title>
    <link href="https://blog.umu618.com/2019/01/20/bitch-identification-officer/"/>
    <id>https://blog.umu618.com/2019/01/20/bitch-identification-officer/</id>
    <published>2019-01-20T06:20:19.000Z</published>
    <updated>2024-04-13T14:38:27.522Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题">问题</h2><p>稣有个前女友，想鉴定一下。</p><p>某日晚，稣在她宿舍，出了一道选择题：“好困，稣就在你这睡眯眯了？”</p><h3 id="1-被拉黑">1. 被拉黑</h3><p>她生气地说：“没想到你是这样的人！”稣觉得莫名其妙就几天不理她，过一段时间发现被她拉黑微信，再过几天 QQ 也被拉黑。</p><h3 id="2-实力劝退">2. 实力劝退</h3><p>讲各种道理，全方面分析，有凭有据，稣感动得内牛满面，哭着回自己宿舍睡。</p><h3 id="3-睡就睡">3. 睡就睡</h3><p>人非圣贤孰能不睡，一起睡个觉而已。</p><p>然后真的只是睡觉……</p><h3 id="4-陪聊通宵">4. 陪聊通宵</h3><p>就是不睡！</p><h2 id="分析">分析</h2><p>很早以前有人告诉稣，头像是猫的女生一般比较骚，刚开始稣是不信的，后来发现可能有点道理。</p><h3 id="1-绿茶喵">1. 绿茶喵</h3><p>绿茶喵的主要特点是装纯。</p><p>她们可能是由于早年错误的教育，不由自主很感性地装纯，送人绿茶，唇齿留香，所以可能是好人。</p><p>也可能是因为某些心理问题，不得不掩饰，时间久了就是习惯性装，人格有明显缺陷，这种更可能不是好人。</p><p>她们习惯站在道德高点，而且可能没有意识到自己的行为很喵。</p><p>内心一般很自卑，比较容易玩老了就嫁给屌丝渣男。</p><h3 id="2-心机喵">2. 心机喵</h3><p>心机喵主要特点是擅长玩套路，会主动引导，软中带理性，大部分行为都是故意的，甚至会安排或提醒以后要怎么发展。</p><p>特征一：卖乖。经常不假思索地说：是的、好的。只要故意说一个她不可能知道的事情，她习惯性地说“是的”，那就要留意。</p><p>特征二：会夸人。经常说好听的话，偶尔会冒出一些正确的赞美。</p><p>特征三：备胎多。</p><p>特征四：不排斥开车和亲密行为，但上床会很谨慎，因为她们怕因此输了，也怕其他备胎知道。但只要她要的条件达到了，是愿意上床的，毕竟她也需要。</p><p>特征五：刻意营造自己的道德高点，但她们明白自己的行为有点喵，可能会被身边的亲近的人说是心机喵，心里有芥蒂，如果智商不够，可能会自爆某人说她心机喵，以求得别人安慰和放下戒心。</p><h3 id="3-喜欢稣的女人">3. 喜欢稣的女人</h3><p>互相喜欢的人不会在这种时刻拒绝，最多只会留个心思观测对方。</p><p>也有的，以为稣啥都没干是不喜欢她，第二天就和稣分手，稣明明没说谎啊！但这种是正常女人。</p><h3 id="4-喜欢稣的女神">4. 喜欢稣的女神</h3><p>实力观测……没话说。反正稣已经被收服了……</p><h3 id="5-薛定谔的喵">5. 薛定谔的喵</h3><p>女人心是难以捉摸的，反正稣看不懂，就把大部分女人归到这类。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;问题&quot;&gt;问题&lt;/h2&gt;
&lt;p&gt;稣有个前女友，想鉴定一下。&lt;/p&gt;
&lt;p&gt;某日晚，稣在她宿舍，出了一道选择题：“好困，稣就在你这睡眯眯了？”&lt;/p&gt;
&lt;h3 id=&quot;1-被拉黑&quot;&gt;1. 被拉黑&lt;/h3&gt;
&lt;p&gt;她生气地说：“没想到你是这样的人！”稣觉得莫名其妙就几天</summary>
      
    
    
    
    <category term="宇督观" scheme="https://blog.umu618.com/categories/%E5%AE%87%E7%9D%A3%E8%A7%82/"/>
    
    
    <category term="心理邪稣" scheme="https://blog.umu618.com/tags/%E5%BF%83%E7%90%86%E9%82%AA%E7%A8%A3/"/>
    
    <category term="鹏风" scheme="https://blog.umu618.com/tags/%E9%B9%8F%E9%A3%8E/"/>
    
  </entry>
  
  <entry>
    <title>《列子·杨朱》人生观</title>
    <link href="https://blog.umu618.com/2019/01/19/lie-zi-yang-zhu-philosophy/"/>
    <id>https://blog.umu618.com/2019/01/19/lie-zi-yang-zhu-philosophy/</id>
    <published>2019-01-19T15:09:50.000Z</published>
    <updated>2023-08-05T13:01:26.971Z</updated>
    
    <content type="html"><![CDATA[<h2 id="生">生</h2><blockquote><p>杨朱曰：“百年，寿之大齐。得百年者千无一焉。</p></blockquote><p>杨朱说：“一百岁，是寿命的极限。能活到一百岁的，一千人中难有一人。</p><blockquote><p>设有一者，孩抱以逮昏老，几居其半矣。</p></blockquote><p>即使有一人，他在孩童与衰老糊涂的时间，几乎占去了一半时间。</p><blockquote><p>夜眠之所弭，昼觉之所遗，又几居其半矣。</p></blockquote><p>再去掉夜间睡眠的时间，去掉白天休息的时间，又几乎占去了一半。</p><blockquote><p>痛疾哀苦，亡失忧惧，又几居其半矣。</p></blockquote><p>加上疾病痛苦、失意优愁，又几乎占去了一半。</p><blockquote><p>量十数年之中，然而自得亡介焉之虑者，亦亡一时之中尔。</p></blockquote><p>估计剩下的十多年中，舒适自得，没有丝毫顾虑的时间，也没有其中的一半。</p><blockquote><p>则人之生也奚为哉？奚乐哉？</p></blockquote><p>那么人生在世又为了什么呢？有什么快乐呢？</p><blockquote><p>为美厚尔，为声色尔，而美厚复不可常厌足，声色不可常玩闻。</p></blockquote><p>为了味美丰富的食物吧，为了悦耳的音乐与悦目的女色吧，可是味美丰富的食物并不能经常得到满足，悦耳的音乐与悦目的女色也不能经常听得到与玩得到。</p><blockquote><p>乃复为刑赏之所禁劝，名法之所进退，遑遑尔竞一时之虚誉，规死后之余荣，尔顺耳目之观听，惜身意之是非，徒失当年之至乐，不能自肆于一时，重囚累梏，何以异哉？</p></blockquote><p>再加上要被刑罚所禁止，被赏赐所规劝，被名誉所推进，被法网所阻遏，惶恐不安地去竞争一时的虚伪声誉，以图死后所留下的荣耀，孤独谨慎地去选择耳朵可以听的东西与眼睛可以看的东西，爱惜身体与意念的是与非，白白地丧失了当时最高的快乐，不能自由自在地活一段时间，这与罪恶深重的囚犯所关押的一层又一层的牢笼又有什么区别呢？</p><blockquote><p>太古之人知生之暂来，知死之暂住，故从心而动，不违自然所好，当身之娱非所去也，故不为名所劝；</p></blockquote><p>上古的人懂得出生是暂时的到来，懂得死亡是暂时的离去，因而随心所欲地行动，不违背自然的喜好，不减少今生的娱乐，所以不被名誉所规劝，顺从自然本性去游玩，</p><blockquote><p>从性而游，不逆万物所好，死后之名非所取也，故不为刑所及。名誉先后，年命多少，非所量也。”</p></blockquote><p>不违背万物的喜好，不博取死后的名誉，所以不被刑罚所牵连。名誉的先后，寿命的长短，都不是他们所考虑的。”</p><h2 id="死">死</h2><blockquote><p>杨朱曰：“万物所异者生也，所同者死也。</p></blockquote><p>杨朱说：“万物所不同的是生存，所相同的是死亡。</p><blockquote><p>生则有贤愚、贵贱，是所异也；死则有臭腐、消灭，是所同也。</p></blockquote><p>生存就有贤有愚、有贵有贱，这是不同的；死亡就有腐烂发臭、消失灭亡，这是相同的。</p><blockquote><p>虽然，贤愚、贵贱非所能也，臭腐、消灭亦非所能也。</p></blockquote><p>即使是这样，贤愚与贵贱也不是人所能办到的，腐臭、消灭也不是人所能办到的。</p><blockquote><p>故生非所生，死非所死，贤非所贤，愚非所愚，贵非所贵，贱非所贱。</p></blockquote><p>所以生不是人所能生，死不是人所能死，贤不是人所能贤，愚不是人所能愚，贵不是人所能贵，贱也不是人所能贱。</p><blockquote><p>然而万物齐生齐死，齐贤齐愚，齐贵齐贱。</p></blockquote><p>然而万物的生与死是一样的，贤与愚是一样的，贵与贱也是一样的。</p><blockquote><p>十年亦死，百年亦死，仁圣亦死，凶愚亦死。</p></blockquote><p>活十年也是死，活百年也是死。仁人圣人也是死，凶人愚人也是死。</p><blockquote><p>生则尧舜，死则腐骨；生则桀纣，死则腐骨。</p></blockquote><p>活着是尧舜，死了便是腐骨；活着是桀纣，死了也是腐骨。</p><blockquote><p>腐骨一矣，孰知其异？且趣当生，奚逢死后？”</p></blockquote><p>腐骨是一样的，谁知道它们的差异呢？姑且追求今生，哪有工夫顾及死后？”</p><h2 id="恋">恋</h2><p>古语有云：书不读秦汉以下；意常在山水之间。爱不是光说不练；恋不能自私自利。稣一直记得吓大的校训：恋爱不息，止于上车。恋爱有益身心健康，失恋锻炼思维意志。有时候稣也会幻想能不能跳过恋爱的过程，直接让失恋强壮稣的心灵，但往往变成自恋，被人唾弃，所以这是不对的，还是要多找几个女朋友。</p><h2 id="爱">爱</h2><p>爱制造压力和动力……</p><h2 id="性">性</h2><p>以利相交，利尽则散；以势相交，势去则倾；以权相交，权失则弃；以情相交，情逝人伤；唯以性相交，成其久远。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;生&quot;&gt;生&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;杨朱曰：“百年，寿之大齐。得百年者千无一焉。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;杨朱说：“一百岁，是寿命的极限。能活到一百岁的，一千人中难有一人。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;设有一者，孩抱以</summary>
      
    
    
    
    <category term="宇督观" scheme="https://blog.umu618.com/categories/%E5%AE%87%E7%9D%A3%E8%A7%82/"/>
    
    
    <category term="怪悟" scheme="https://blog.umu618.com/tags/%E6%80%AA%E6%82%9F/"/>
    
  </entry>
  
  <entry>
    <title>八哥之神【1】</title>
    <link href="https://blog.umu618.com/2019/01/19/god-of-debug-1/"/>
    <id>https://blog.umu618.com/2019/01/19/god-of-debug-1/</id>
    <published>2019-01-18T16:15:10.000Z</published>
    <updated>2023-08-05T13:01:26.971Z</updated>
    
    <content type="html"><![CDATA[<p>2018 年 9 月 11 日，稣开<a href="/2018/05/22/tesula/">特稣垃</a>回德国，遇到一个女孩想搭便车，看起来并不是德国人，但应该是个学生，稣就同意了。</p><p>车开到德国大桥爬坡时，居然提示快没电了……难道多载一个人，里程就要打这么多折？为了省电下坡空档滑行，结果进入异次元空间……来到一个很陌生的村庄。</p><p>下车给老爸打电话，居然能通，他说那个地方是汽车坟场，凡是过德国大桥正好没油的车就可能掉进去。</p><p>这坑很大，而且历史悠久！进来的人都发展出一个村庄了，主要靠农业和修车维持生存。</p><p>一个大伯说：“这里的科技很原始，你这车很难修，得在村里生活很久才可能离开了。”</p><p>另一个大妈说：“呵呵，来到这里的人，还有离开的先例吗？”</p><p>大伯看起来像修车工，稣好奇地问：“修好要多少钱？”</p><p>大伯乐呵了：“钱是什么东西？这里没有银行、ATM，你上哪里取？就算取了，我们也不承认。”</p><p>原来，这里陆陆续续进来三四百人，至今没有人成功离开。无法离开的原因可能是：在原始农业时代修好工业时代的车——难；修好之后，开出这个异次元世界——更难！</p><p>不过大妈似乎并没有很绝望，眼神看起来很乐观，有种在这里一样能快乐地生活的气态。继续深聊，才发现当地有个传说：只要在这里生儿育女，就可以一个换一个，如果生两个孩子，那么在孩子都成年后，夫妻就可以离开，回到原来的世界。</p><p>这时候，身边的女孩说话了：“我愿意和你结婚、生子，等孩子长大，争取他们的同意，我们就离开！”</p><p>稣看着眼前这个相貌平平又没胸的女孩，惊讶不已！怎么能这么轻易就谈婚论嫁！？难道她看穿稣在现实世界有两千万存款？不对啊，外面的钱，在这里又没啥卵用。还是问点实际的：“都不知道你贵姓芳名呢？”</p><p>“我叫吴情，爱情的情。”女孩问答道，口气很平静，像在念口头禅。</p><p>稣隐约记得在现实世界，稣已经结婚生子，但还是好奇地问：“那你说说为什么要嫁给稣？我们才认识几分钟呢！”</p><p>“首先，你有车，说明在实现世界里，能力没问题，而且对车肯定比我更了解；其次，从你的年纪和身材来看，保持得挺好，在这边主要是靠农业和修车业，这两者你都会比我有优势很多。然后，刚才你让我搭便车，说明心地善良。最后，我是读金融的，在这里刚开始用处不大，但会越来越有用，只要我们结合，我会用专业帮助你更好地规划生活、事业和资产。”</p><p>听起来好像还不错，稣也一直很喜欢读财务、金融之类的女生，顿时有点心动，继续问：“你觉得我们在这里能活得好？”</p><p>“一定比大部分人活得好！说不定，我们会成为这里的富豪家族。”</p><p>哇嗷！成为一方富豪！？想想还有点期待……但还是有个隐患：“如果我们真的能活得很好，这里又是世外桃源，稣可能想留下，你会陪稣留下来吗？”</p><p>“不会。”吴情无情地回答。</p><p>稣：“为什么？”</p><p>吴情：“这里的时代落后我们原来生活的时代太多，我只能接受一时的倒退，不能是一辈子！我必须回去。”</p><p>“所以你，只是想互相利用，你并不喜欢稣，是吧？”稣失望地问。</p><p>“可能吧，我不确定以后会不会喜欢你，但即使喜欢，以我现在的心思，我大概率要离开。”有一刹那，女孩露出了羞涩的表情。</p><p>虽然有点诱惑，但稣最终还是做出决定，“对不起，稣不能娶你，没有感情基础，很为难，况且这个传说还没人实践过，说不定只是哪个有才的人，想出来娱乐大家的主意呢！”</p><p>“我是 98 年的，虽然没有很漂亮，但很年轻，你居然能拒绝我这个年龄段的女孩子！”吴情有点意外，继续问：“我想听听你有什么更好的方案！”</p><p>“稣没有什么更好的方案！不过很感谢你在某些程度上，对稣的肯定，作为答谢，车就送你吧！稣是暴走族，每次暴走灵思飞扬说不定可以穿越时空，想用走的试试……”</p><p>吴情忍不住笑了，可能是笑稣天真，但眼神里还带着一丝丝鄙视……不过，稣却发现她笑起来挺美的。</p><p>稣：“你要多笑！很美。再见！”</p><p>“好吧，再见！”她又笑了一下，这次没有鄙视。稣记住了这个年轻女孩的笑容。</p><p>说完，稣不顾一切反对，往东直走，三天三夜之后，终于累死在路上。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;2018 年 9 月 11 日，稣开&lt;a href=&quot;/2018/05/22/tesula/&quot;&gt;特稣垃&lt;/a&gt;回德国，遇到一个女孩想搭便车，看起来并不是德国人，但应该是个学生，稣就同意了。&lt;/p&gt;
&lt;p&gt;车开到德国大桥爬坡时，居然提示快没电了……难道多载一个人，里程就要打这</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="鲸神链" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%93%BE/"/>
    
    <category term="鲸神魂裂" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%AD%82%E8%A3%82/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·草</title>
    <link href="https://blog.umu618.com/2019/01/15/reconstructionism-poet-grass/"/>
    <id>https://blog.umu618.com/2019/01/15/reconstructionism-poet-grass/</id>
    <published>2019-01-15T01:37:00.000Z</published>
    <updated>2023-08-05T13:01:26.971Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·草》：心怀蒙古大草原，脚踩都市小草团。心旷神怡思飞扬，每天冒死来上班。</p><h2 id="注解">注解</h2><p>没错，“小草青青，脚下留情”这是反人类的标语，人类自古就喜欢踩草地。</p><blockquote><p>可是人人都踩，草地就坏了鸭！草草这么可爱你怎么可以踩？</p></blockquote><p>草，之所以被踩坏，是因为很多人焦虑总是走同一条最短路线。而稣不走寻常路，每天走不同曲线，踩不同的位置。草草这么口爱，稣就是要踩，只要不被人捅死就可以愉快地去上班。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·草》：心怀蒙古大草原，脚踩都市小草团。心旷神怡思飞扬，每天冒死来上班。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;没错，“小草青青，脚下留情”这是反人类的标语，人类自古就喜欢踩草地。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;可是人人都踩，草地就坏了鸭</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·记一次见鬼吓醒</title>
    <link href="https://blog.umu618.com/2019/01/13/reconstructionism-poet-two-ghosts/"/>
    <id>https://blog.umu618.com/2019/01/13/reconstructionism-poet-two-ghosts/</id>
    <published>2019-01-13T04:20:00.000Z</published>
    <updated>2023-08-05T13:01:26.971Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·记一次见鬼吓醒》：鳏寡残废天不欢，绝症孤独神作伴。纵有二逼快乐多，情智双高命却短。</p><h2 id="注解">注解</h2><p>梦见两个过世的朋友，一个横结肠癌，一个胃癌……醒来又想起鳏寡效应……</p><p>愿科技进步，人间应该只有一种绝症，叫：活腻了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·记一次见鬼吓醒》：鳏寡残废天不欢，绝症孤独神作伴。纵有二逼快乐多，情智双高命却短。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;梦见两个过世的朋友，一个横结肠癌，一个胃癌……醒来又想起鳏寡效应……&lt;/p&gt;
&lt;p&gt;愿科技进步，人间应该只有一种绝症，叫：活</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="死神" scheme="https://blog.umu618.com/tags/%E6%AD%BB%E7%A5%9E/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·大霾苍蝇</title>
    <link href="https://blog.umu618.com/2019/01/12/reconstructionism-poet-haze/"/>
    <id>https://blog.umu618.com/2019/01/12/reconstructionism-poet-haze/</id>
    <published>2019-01-12T05:54:00.000Z</published>
    <updated>2023-08-05T13:01:26.971Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·大霾苍蝇》：碉堡千栋插云立，雾霾万里从天倾。晨跑打球不怕病？盖被睡眯保小命。</p><h2 id="注解">注解</h2><p>霹雳角色“大漠苍鹰”的诗号：</p><blockquote><p>太行千仞插云立，黄河万里从天倾。冲霄岂为层嶂碍？击光翻浪任翱行。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·大霾苍蝇》：碉堡千栋插云立，雾霾万里从天倾。晨跑打球不怕病？盖被睡眯保小命。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;霹雳角色“大漠苍鹰”的诗号：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;太行千仞插云立，黄河万里从天倾。冲霄岂为层嶂碍？击光翻浪任翱</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·黑客求道</title>
    <link href="https://blog.umu618.com/2019/01/05/reconstructionism-poet-ceh/"/>
    <id>https://blog.umu618.com/2019/01/05/reconstructionism-poet-ceh/</id>
    <published>2019-01-05T05:41:28.000Z</published>
    <updated>2023-08-05T13:01:26.971Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·黑客求道》：数十年来炼黑客，求知问心不可得。情劫歧途会有期，直见正道更无疑。</p><h2 id="注解">注解</h2><p>霹雳角色“剑禅觅心”的诗号：</p><blockquote><p>数甲子来寻剑客，空劫佛尘会有期。求道觅心不可得，直见禅锋更无疑。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·黑客求道》：数十年来炼黑客，求知问心不可得。情劫歧途会有期，直见正道更无疑。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;霹雳角色“剑禅觅心”的诗号：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;数甲子来寻剑客，空劫佛尘会有期。求道觅心不可得，直见禅锋更无</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
  </entry>
  
  <entry>
    <title>程序员鼓励师系列：EOSIO 智能合约开发从入门到入定</title>
    <link href="https://blog.umu618.com/2019/01/04/umutech-eosio-smart-contracts-development-beginners-guide/"/>
    <id>https://blog.umu618.com/2019/01/04/umutech-eosio-smart-contracts-development-beginners-guide/</id>
    <published>2019-01-04T14:25:47.000Z</published>
    <updated>2023-08-05T13:01:26.971Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>作者: UMU @ MEET.ONE 实验室</p></blockquote><h2 id="常规入门流程">常规入门流程</h2><p>经典三步：</p><ol><li><p>了解区块链基本概念，了解 EOS 基本情况；</p></li><li><p>看<a href="https://developers.eos.io/eosio-cpp/docs">官方开发者文档</a>；</p></li><li><p>开始愉快地写代码。</p></li></ol><p>但是，有个很大的问题：开发语言居然是 C++！所以，鼓励师出场了……</p><h2 id="这不是-C-，这不是-C-，这真是不是-C">这不是 C++，这不是 C++，这真是不是 C++</h2><p>不信？我们就来试一试：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">error: cannot use &#39;try&#39; with exceptions disabled</span><br><span class="line">        try &#123;</span><br><span class="line">        ^</span><br></pre></td></tr></table></figure><p>智能合约的编译目标是 WASM 文件，最终要在 WASM 的 VM 里运行，比如 <a href="https://github.com/WebAssembly/wabt">wabt</a>，这和常规情况下使用原生 C++ 开发可执行程序、静态库、动态库等，有很大不同。</p><p>受限部分包括：</p><ul><li><p>语言特性。比如上面举例的 try。</p></li><li><p>可调用外部函数。比如 CRT 的 rand 函数，再比如您想用 socket 自由通信……没门。</p></li><li><p>内存访问。这个比较难解释，后面再说。</p></li></ul><p>如果您学过 Golang、Python、nodejs、Java 或其它相近语言，转到智能合约开发，可以说是轻而易举。理由如下：</p><ol><li><p>智能合约关注业务逻辑，和大部分脚本语言类似。</p></li><li><p>智能合约有很强的约束范围，API 很有限，不会要求记忆大量知识。举个例子，它可以使用 boost，但也只是子集，无法使用完全的 boost。</p></li><li><p>智能合约有很强的套路，代码是满满的既定格式。熟悉 Hello world，会用基本的命令行工具进行测试，最多只需要 2 天，就会发出“原来这么简单”的感叹。</p></li></ol><h2 id="【高级话题】关于-WASM">【高级话题】关于 WASM</h2><h3 id="1-多语言支持">1. 多语言支持</h3><p>如果您学过 Golang、Rust 可能会注意到，它们可以编译成 WASM 文件。比如 Golang 的编译命令为：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GOOS=js GOARCH=wasm go build -o hello.wasm</span><br></pre></td></tr></table></figure><p>但是找个 Hello world 编译一下，您可能会哭，产生的 WASM 文件有 2.3MB，就获得一个打印信息……（EOS 基本概念：RAM 挺贵的。）</p><p>虽然现状是 C++ 一枝独秀，但未来可能会有人开发专门的编译器支持 Golang、Rust 等语言开发 EOS 智能合约。</p><h3 id="2-WASM-逆向">2. WASM 逆向</h3><p><a href="https://code.visualstudio.com/">VSCode</a> 安装插件后可以直接打开 WASM 文件，显示 WAST 代码，比如我们随便打开一个 hello.wasm，滚动到末尾，可能会看到以下两行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(data (i32.const 8192) &quot;read\00&quot;)</span><br><span class="line">(data (i32.const 8197) &quot;get\00malloc_from_freed was designed to only be called after _heap was completely allocated\00&quot;))</span><br></pre></td></tr></table></figure><p>下面我们写个 C++ 代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>* p = <span class="keyword">reinterpret_cast</span>&lt;<span class="keyword">const</span> <span class="keyword">char</span>*&gt;(<span class="number">8192</span>);</span><br><span class="line">eosio::print(p);</span><br></pre></td></tr></table></figure><p>以上代码，打印出 <code>read</code>。如果把 <code>8192</code> 改为 <code>8197</code>，则打印 <code>get</code>；改为 <code>8201</code>，打印 <code>malloc_from_freed was designed to only be called after _heap was completely allocated</code>。</p><p>这个例子可能吓倒大家，特别交代下，一般开发中，较难遇到逆向……只是想说明 WASM 的内存管理和常规 C++ 开发的可执行程序是不同的，后者把指针指向 8192，是 Process Working Set 的地址，通常来说去读这么低的地址，后果极可能是读异常，挂掉。</p><p><strong>划重点</strong>：虽然你用 C++ 写代码，但编译后是 WASM 二进制编码，运行时使用 VM，受控性很强，降低了开发难度，也杜绝很多安全问题。</p><h3 id="3-性能问题">3. 性能问题</h3><p>为了讨好 Python 程序员，下面用 Python 来写个开平方运算，有这样的：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line">print(math.sqrt(<span class="number">2.0</span>))</span><br></pre></td></tr></table></figure><p>也有这样的：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy</span><br><span class="line"></span><br><span class="line">print(numpy.sqrt(<span class="number">2.0</span>))</span><br></pre></td></tr></table></figure><p>他们有个共同点——很快……相对 C++ 写的！！有点难以理解？</p><p>Python 的 sqrt 函数，其实都是用 C 语言实现的，最终都是调用解释器里的本地代码，速度很快。</p><p>原生 C++ 写的本地程序，几乎肯定是比 Python 快的，但我们前面说过：智能合约的 C++ 不是常规的 C++，当它被编译成 WASM 后，我们去看 WAST 代码，会发现 sqrt 的实现整个被塞进 WASM 里，它最终要用 VM 来执行，当然没有 Python 解释器快了！</p><h3 id="4-设计原则">4. 设计原则</h3><p>打开任意 WASM 文件，可以看到里面很多 <code>(import</code> 开头的行，这些都是原生 C++ 实现的 API，它们的执行速度就是本地代码的速度，对应<a href="https://eosio.github.io/eosio.cdt/modules.html">官网 API 文档</a>里的 API。</p><p>有前面的性能问题，我们不禁要问 EOS 为什么不多做点 API 来提高性能？这是因为维护少量 API 代价比较可控，数量一多就有版本问题，各节点可能因为版本不同步而无法达成共识。</p><p>另外，目前的 <a href="https://github.com/WebAssembly/wabt">wabt</a> 功能强大，性能也过得去，对于 sqrt 此类可能并不常用的数学函数，即使用原生 C++ 实现了，性能提升带来的好处，也无法平衡多版本可能带来的风险。</p><p>原则上，BP 之间快速达成共识，提升 TPS 才是更值得做的。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;作者: UMU @ MEET.ONE 实验室&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;常规入门流程&quot;&gt;常规入门流程&lt;/h2&gt;
&lt;p&gt;经典三步：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;了解区块链基本概念，了解 EOS 基本情况；&lt;/p&gt;
&lt;/</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="调研" scheme="https://blog.umu618.com/tags/%E8%B0%83%E7%A0%94/"/>
    
    <category term="洗脑" scheme="https://blog.umu618.com/tags/%E6%B4%97%E8%84%91/"/>
    
    <category term="blockchain" scheme="https://blog.umu618.com/tags/blockchain/"/>
    
  </entry>
  
  <entry>
    <title>EOSIO MongoDB 插件系列：管理技巧</title>
    <link href="https://blog.umu618.com/2019/01/03/umutech-eosio-mongodb-plugin-management-skills/"/>
    <id>https://blog.umu618.com/2019/01/03/umutech-eosio-mongodb-plugin-management-skills/</id>
    <published>2019-01-03T06:45:22.000Z</published>
    <updated>2023-08-05T13:01:26.968Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>作者: UMU @ MEET.ONE 实验室</p></blockquote><p>总结同步主网数据到 MongoDB 时的常用操作，大部分以 transaction_traces 表为例。</p><h2 id="1-nodeos-配置优化">1. nodeos 配置优化</h2><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">read-mode</span> = read-<span class="literal">on</span>ly</span><br><span class="line"><span class="attr">validation-mode</span> = light</span><br><span class="line"></span><br><span class="line"><span class="attr">mongodb-queue-size</span> = <span class="number">2048</span></span><br><span class="line"><span class="attr">abi-serializer-max-time-ms</span> = <span class="number">15000</span></span><br></pre></td></tr></table></figure><h2 id="2-首次启动-nodeos">2. 首次启动 nodeos</h2><p>从 <code>https://eosnode.tools/blocks</code> 下载最新 blocks data，以减少网络同步时间。</p><p>首次启动，应使用 <code>--replay-blockchain</code> 参数。</p><h2 id="3-守护-nodeos-进程">3. 守护 nodeos 进程</h2><p>目前 nodeos 1.5+ 版本如果优雅退出，下次启动可以无需痛苦的 replay 过程，所以可以监控 nodeos 进程，如果退出就调用。</p><p>启动脚本 /home/ubuntu/shell/continue.sh：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup /usr/<span class="built_in">local</span>/eosio/bin/nodeos --config-dir /home/ubuntu/nodeos/config-dir --data-dir /home/ubuntu/nodeos/data-dir &gt; /home/ubuntu/shell/`date +%Y-%m-%d_%H-%M`.<span class="built_in">log</span> 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><p>守护脚本 /home/ubuntu/shell/autorun.sh：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -C nodeos || /home/ubuntu/shell/continue.sh</span><br></pre></td></tr></table></figure><p>添加到计划任务，运行 <code>sudo crontab -e</code>，输入下行并保存、退出：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">* * * * * /home/ubuntu/shell/autorun.sh</span><br></pre></td></tr></table></figure><h2 id="4-读写用户分离">4. 读写用户分离</h2><p>nodeos 需要写入，使用有写入权限的 EOS 用户，其余情况使用只读权限的 EOSReader 用户，数据库安装之后就尽量不使用管理员用户。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">use EOS</span><br><span class="line">db.createUser(&#123;<span class="string">&quot;user&quot;</span> : <span class="string">&quot;EOS&quot;</span>, <span class="string">&quot;pwd&quot;</span> : <span class="string">&quot;Password&quot;</span>, <span class="string">&quot;roles&quot;</span> : [&#123;<span class="attr">role</span> : <span class="string">&quot;readWrite&quot;</span>, <span class="string">&quot;db&quot;</span> : <span class="string">&quot;EOS&quot;</span>&#125;,<span class="string">&quot;dbOwner&quot;</span>]&#125;);</span><br><span class="line">db.createUser(&#123;<span class="string">&quot;user&quot;</span> : <span class="string">&quot;EOSReader&quot;</span>, <span class="string">&quot;pwd&quot;</span> : <span class="string">&quot;password&quot;</span>, <span class="string">&quot;roles&quot;</span> : [&#123;<span class="attr">role</span> : <span class="string">&quot;read&quot;</span>, <span class="string">&quot;db&quot;</span> : <span class="string">&quot;EOS&quot;</span>&#125;]&#125;);</span><br></pre></td></tr></table></figure><h2 id="5-查询同步进度">5. 查询同步进度</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">use EOS</span><br><span class="line">db.transaction_traces.find(&#123;&#125;, &#123;<span class="string">&quot;block_num&quot;</span> : <span class="number">1</span>, <span class="string">&quot;block_time&quot;</span> : <span class="number">1</span>&#125;, -<span class="number">1</span>).sort(&#123;<span class="attr">$natural</span>:-<span class="number">1</span>&#125;).pretty()</span><br></pre></td></tr></table></figure><h2 id="6-修复丢失数据">6. 修复丢失数据</h2><p>参考《<a href="/2019/01/03/umutech-eosio-mongodb-plugin-find-lost-insertion-from-logs/">EOSIO MongoDB 插件系列：从 log 中找回丢</a>》</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;作者: UMU @ MEET.ONE 实验室&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;总结同步主网数据到 MongoDB 时的常用操作，大部分以 transaction_traces 表为例。&lt;/p&gt;
&lt;h2 id=&quot;1-nodeos-配置优化&quot;</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="调研" scheme="https://blog.umu618.com/tags/%E8%B0%83%E7%A0%94/"/>
    
    <category term="blockchain" scheme="https://blog.umu618.com/tags/blockchain/"/>
    
  </entry>
  
  <entry>
    <title>EOSIO MongoDB 插件系列：从 log 中找回丢失的插入记录</title>
    <link href="https://blog.umu618.com/2019/01/03/umutech-eosio-mongodb-plugin-find-lost-insertion-from-logs/"/>
    <id>https://blog.umu618.com/2019/01/03/umutech-eosio-mongodb-plugin-find-lost-insertion-from-logs/</id>
    <published>2019-01-03T03:58:24.000Z</published>
    <updated>2023-08-05T13:01:26.968Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>作者: UMU @ MEET.ONE 实验室</p></blockquote><h2 id="问题">问题</h2><p>当 MongoDB 因不可抗力故障，nodeos 重启后会丢失上次故障时正在插入的记录。</p><h2 id="解决">解决</h2><p>nodeos 会将插入语句连同错误原因等信息一起写入 log，这给了我们手动修复丢失的机会。下面以 transaction_traces 为例，介绍修复流程。</p><h3 id="1-找出所有失败记录">1. 找出所有失败记录</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep <span class="string">&#x27;mongo exception, trans_traces insert:&#x27;</span> *.<span class="built_in">log</span> &gt; lost.txt</span><br></pre></td></tr></table></figure><h3 id="2-从-log-生成-mongo-script">2. 从 log 生成 mongo script</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;print(&quot;++++&quot;);</span></span><br><span class="line"><span class="string">var eos = db.getSiblingDB(&quot;EOS&quot;);&#x27;</span> &gt; lost.js</span><br><span class="line"></span><br><span class="line">cat lost.txt | sed -n <span class="string">&#x27;s/.*, trans_traces insert: \(.*\), line 920, code.*/eos.transaction_traces.insert(\1)/p&#x27;</span> &gt;&gt; lost.js</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;print(&quot;----&quot;);&#x27;</span> &gt;&gt; lost.js</span><br></pre></td></tr></table></figure><h3 id="3-导入-MongoDB">3. 导入 MongoDB</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup mongo mongodb://<span class="variable">$user</span>:<span class="variable">$password</span>@127.0.0.1:<span class="variable">$port</span>/admin lost.js &gt; lost.log</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;作者: UMU @ MEET.ONE 实验室&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;问题&quot;&gt;问题&lt;/h2&gt;
&lt;p&gt;当 MongoDB 因不可抗力故障，nodeos 重启后会丢失上次故障时正在插入的记录。&lt;/p&gt;
&lt;h2 id=&quot;解决&quot;</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="调研" scheme="https://blog.umu618.com/tags/%E8%B0%83%E7%A0%94/"/>
    
    <category term="blockchain" scheme="https://blog.umu618.com/tags/blockchain/"/>
    
  </entry>
  
  <entry>
    <title>纯数字 EOS 账号</title>
    <link href="https://blog.umu618.com/2018/12/30/umutech-numeric-eosio-name/"/>
    <id>https://blog.umu618.com/2018/12/30/umutech-numeric-eosio-name/</id>
    <published>2018-12-30T13:37:01.000Z</published>
    <updated>2023-08-05T13:01:26.968Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>作者: UMU @ MEET.ONE 实验室</p></blockquote><h2 id="问题">问题</h2><p>2018 年最后一个工作日，智能合约开发小哥哥遇到一个奇怪的现象：某个账号给我们合约转账，在 EOS 浏览器上都可以找到记录，但用 <code>cleos get table</code> 在合约的 RAM 里找却找不到！</p><h2 id="现象">现象</h2><p>了解具体情况后，注意到两个事实：</p><ol><li><p>只有某个特定账号有问题，其它账号很正常。</p></li><li><p>那个有问题的账号是纯数字的。</p></li></ol><p>这是 EOS 账号解析的问题，UMU 曾经给 EOS 提过一个相关的 issue：<a href="https://github.com/EOSIO/eos/issues/5824">get_table_by_scope parameter lower_bound is NOT properly converted, cause enumeration dead loop #5824</a>，里面有问题产生原因和解决方案。</p><h2 id="分析">分析</h2><p>eosio::name 本质是一个 uint64_t 数字的 base32 编码，编码形式是为了方便人类记忆。举个例子：</p><p><code>shengxiaokai</code> 本质上是 <code>14075216089888066784 (0xc3553675c6a40ce0)</code></p><p><code>cleos get table</code> 在解析账号时，兼容了这两种表达形式，所以 <code>14075216089888066784</code> 和 <code>shengxiaokai</code> 是等价的。</p><p>但本身是纯数字的账号可就有歧义了，比如 <code>313131313131</code> 是当成一个 uint64_t 解释，还是当成 base32？很不巧，解析代码是优先当成 uint64_t 解释的。</p><h2 id="解决方案">解决方案</h2><p>给纯数字 EOS 账号加上个空格后缀，比如 <code>111122223333</code> 可以改为 <code>&quot;111122223333 &quot;</code>。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;作者: UMU @ MEET.ONE 实验室&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;问题&quot;&gt;问题&lt;/h2&gt;
&lt;p&gt;2018 年最后一个工作日，智能合约开发小哥哥遇到一个奇怪的现象：某个账号给我们合约转账，在 EOS 浏览器上都可以找到</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="调研" scheme="https://blog.umu618.com/tags/%E8%B0%83%E7%A0%94/"/>
    
    <category term="debug" scheme="https://blog.umu618.com/tags/debug/"/>
    
    <category term="blockchain" scheme="https://blog.umu618.com/tags/blockchain/"/>
    
  </entry>
  
  <entry>
    <title>EOSIO 找出谁为我质押</title>
    <link href="https://blog.umu618.com/2018/12/28/umutech-eosio-find-out-who-stakes-for-me/"/>
    <id>https://blog.umu618.com/2018/12/28/umutech-eosio-find-out-who-stakes-for-me/</id>
    <published>2018-12-28T03:18:00.000Z</published>
    <updated>2023-08-05T13:01:26.968Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>作者: UMU @ MEET.ONE 实验室</p></blockquote><h2 id="问题">问题</h2><p>很多 EOS 浏览器都只能显示别人给我抵押了多少 EOS，但不能看到是哪个账号帮我抵押的。</p><h2 id="分析">分析</h2><h3 id="1-看抵押的实现代码">1. 看抵押的实现代码</h3><p>从 <code>eosio.contracts/eosio.system/src/delegate_bandwidth.cpp</code> 的 <code>delegatebw</code> 函数开始分析。</p><p>它调用了 <code>changebw</code>，其中的查表操作是这样的：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">del_bandwidth_table     <span class="title">del_tbl</span><span class="params">( _self, from.value )</span></span>;</span><br><span class="line"><span class="keyword">auto</span> itr = del_tbl.find( receiver.value );</span><br></pre></td></tr></table></figure><p>scope 是 from，而 from 就是要求的未知项，直接粉碎我们用这路线继续求解的可能。</p><h3 id="2-找交易记录">2. 找交易记录</h3><p>MEET.ONE 之前发布过几篇关于 MongoDB 插件的文章，这些积累为我们继续求解提供了很大便利。</p><p>直接在 <code>Mongo Shell</code> 里尝试：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">use EOS</span><br><span class="line">db.transaction_traces.findOne(&#123;<span class="string">&quot;action_traces.act.account&quot;</span> : <span class="string">&quot;eosio&quot;</span>, <span class="string">&quot;action_traces.act.name&quot;</span> : <span class="string">&quot;delegatebw&quot;</span>, <span class="string">&quot;action_traces.act.data.receiver&quot;</span> : <span class="string">&quot;shengxiaokai&quot;</span>&#125;)</span><br></pre></td></tr></table></figure><p>执行之后，找到一条 trx_id 为 <code>9bd50c0fd6f0e1d0ed4c6f5c6f873a33976955ff9dae2ac3eb16cb7e9a44d106</code> 的交易记录，显示 <code>1freeaccount</code> 为 <code>shengxiaokai</code> 抵押：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;from&quot;</span> : <span class="string">&quot;1freeaccount&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;receiver&quot;</span> : <span class="string">&quot;shengxiaokai&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;stake_net_quantity&quot;</span> : <span class="string">&quot;0.0000 EOS&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;stake_cpu_quantity&quot;</span> : <span class="string">&quot;0.5000 EOS&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;transfer&quot;</span> : <span class="number">0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;作者: UMU @ MEET.ONE 实验室&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;问题&quot;&gt;问题&lt;/h2&gt;
&lt;p&gt;很多 EOS 浏览器都只能显示别人给我抵押了多少 EOS，但不能看到是哪个账号帮我抵押的。&lt;/p&gt;
&lt;h2 id=&quot;分析</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="调研" scheme="https://blog.umu618.com/tags/%E8%B0%83%E7%A0%94/"/>
    
    <category term="blockchain" scheme="https://blog.umu618.com/tags/blockchain/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·记一次危险性社交活动</title>
    <link href="https://blog.umu618.com/2018/12/22/reconstructionism-poet-dangerous-social-activity/"/>
    <id>https://blog.umu618.com/2018/12/22/reconstructionism-poet-dangerous-social-activity/</id>
    <published>2018-12-22T04:01:47.000Z</published>
    <updated>2023-08-05T13:01:26.968Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·记一次危险性社交活动》：去年波荡吃火锅，今年当醉草消火。强京东哥薛定谔，有心怀春无处躲。</p><h2 id="注解">注解</h2><p>波荡：补东，即冬至要进补。<br>当醉：冬至。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·记一次危险性社交活动》：去年波荡吃火锅，今年当醉草消火。强京东哥薛定谔，有心怀春无处躲。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;波荡：补东，即冬至要进补。&lt;br&gt;
当醉：冬至。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="闽南语" scheme="https://blog.umu618.com/tags/%E9%97%BD%E5%8D%97%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>改进 EOSIO MongoDB 插件对分片集群的插入性能</title>
    <link href="https://blog.umu618.com/2018/12/21/umutech-eosio-fix-cluster-writes-for-mongodb/"/>
    <id>https://blog.umu618.com/2018/12/21/umutech-eosio-fix-cluster-writes-for-mongodb/</id>
    <published>2018-12-21T13:51:12.000Z</published>
    <updated>2023-08-05T13:01:26.968Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>作者: UMU @ MEET.ONE 实验室</p></blockquote><h2 id="问题">问题</h2><p>为了保证 MongoDB 服务器的容量足够应对未来发展，我们做了分片，但经过对比测试，发现每隔 15 分钟左右，nodeos 就会报错，并优雅退出。</p><p>查看了社区的 issues 发现有类似情况：<a href="https://github.com/EOSIO/eos/issues/5488">mongodb shard: line 870, code 61, generic server error</a></p><h2 id="解决">解决</h2><h3 id="定位代码">定位代码</h3><p>反复测试发现，总是同一个地方抛出异常：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// insert action_traces</span></span><br><span class="line"><span class="keyword">if</span>( write_atraces ) &#123;</span><br><span class="line">   <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">if</span>( !bulk_action_traces.execute() ) &#123;</span><br><span class="line">         EOS_ASSERT( <span class="literal">false</span>, chain::mongo_db_insert_fail,</span><br><span class="line">                     <span class="string">&quot;Bulk action traces insert failed for transaction trace: $&#123;id&#125;&quot;</span>, (<span class="string">&quot;id&quot;</span>, t-&gt;id) );</span><br><span class="line">      &#125;</span><br><span class="line">   &#125; <span class="keyword">catch</span>( ... ) &#123;</span><br><span class="line">      handle_mongo_exception( <span class="string">&quot;action traces insert&quot;</span>, __LINE__ );</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>插入数据的代码很多，但就这个地方报错，说明 action_traces 表有特殊性。</p><h3 id="分析异同">分析异同</h3><p>action_traces 的 shard key 被定义为 _id，而其他没报错的表并不是 _id。</p><h3 id="理论">理论</h3><p>批量插入时，_id 是有单调递增性的，根据官方文档<br><a href="https://docs.mongodb.com/master/core/bulk-write-operations/#avoid-monotonic-throttling">Avoid Monotonic Throttling</a>，需要降低单调递增性，才能使批量插入均匀分散到各个 shard 上。</p><h3 id="成果">成果</h3><p>(<a href="https://github.com/EOSIO/eos/pull/6498">#6498</a>) Fix cluster writes for mongo DB</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;作者: UMU @ MEET.ONE 实验室&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;问题&quot;&gt;问题&lt;/h2&gt;
&lt;p&gt;为了保证 MongoDB 服务器的容量足够应对未来发展，我们做了分片，但经过对比测试，发现每隔 15 分钟左右，node</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="debug" scheme="https://blog.umu618.com/tags/debug/"/>
    
    <category term="mongodb" scheme="https://blog.umu618.com/tags/mongodb/"/>
    
    <category term="blockchain" scheme="https://blog.umu618.com/tags/blockchain/"/>
    
  </entry>
  
  <entry>
    <title>EOSIO 的连续通胀率 4.879% 是怎么算出来的？</title>
    <link href="https://blog.umu618.com/2018/12/21/umutech-eosio-continuous-rate/"/>
    <id>https://blog.umu618.com/2018/12/21/umutech-eosio-continuous-rate/</id>
    <published>2018-12-21T07:32:05.000Z</published>
    <updated>2023-08-05T13:01:26.968Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>作者: UMU @ MEET.ONE 实验室</p></blockquote><h2 id="问题">问题</h2><p>在 <code>eosio.contracts/eosio.system/src/producer_pay.cpp</code> 中有这样一行代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">const double   continuous_rate       &#x3D; 0.04879;          &#x2F;&#x2F; 5% annual rate</span><br></pre></td></tr></table></figure><p>搜索一下，会得到这样的解释：</p><blockquote><p>EOS是连续增发的模式，连续通胀率是 4.879%，年度通胀是 5%；</p></blockquote><blockquote><p>运用微积分的知识，可以推导出来，假设是增发的次数是无限多次，那么，连续通胀的情景下，所设置的连续通胀率就是 4.879%。</p></blockquote><p>然而，并没有解释具体算法……</p><h2 id="求解">求解</h2><ul><li>假设通胀率是“每日结算”的，记为 daily_rate，则：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(1 + daily_rate &#x2F; 365) ^ 365 &#x3D; 1 + annual_rate</span><br><span class="line"></span><br><span class="line">注：这里的 ^ 表示幂，不是 XOR 运算。</span><br></pre></td></tr></table></figure><p>那么计算 daily_rate 的公式为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[365TH_ROOT(1 + annual_rate) - 1] * 365</span><br><span class="line"></span><br><span class="line">注：365TH_ROOT 是开 365 次方</span><br></pre></td></tr></table></figure><p>把 5% 带入，计算结果是：<code>0.048793425246406</code>，这个数值已经和 0.04879 基本一样了。</p><ul><li>但是“每日结算”并不够，接下来推到时时刻刻都在结算的情况。</li></ul><p>问题本质：已知 annual_rate、<code>(1 + continuous_rate / N) ^ N = 1 + annual_rate</code>，求 continuous_rate 在 N 为无穷大时的解。</p><p>复习一下大学数学，马上就会发现 <code>lim N-&gt;∞ (1 + x / N) ^ N</code> 就是 <code>e ^ x</code> 的定义，所以：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">continuous_rate &#x3D; ln(1 + annual_rate)</span><br></pre></td></tr></table></figure><p>把 5% 代入 annual_rate，<code>continuous_rate = 0.048790164169432</code></p><h2 id="参考">参考</h2><p>#1537 <a href="https://github.com/EOSIO/eos/issues/1537">DAWN-651 ⁃ setting correct per-block “continuous inflation” so annual inflation is 5%</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;作者: UMU @ MEET.ONE 实验室&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;问题&quot;&gt;问题&lt;/h2&gt;
&lt;p&gt;在 &lt;code&gt;eosio.contracts/eosio.system/src/producer_pay.cpp&lt;/c</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="调研" scheme="https://blog.umu618.com/tags/%E8%B0%83%E7%A0%94/"/>
    
    <category term="金融" scheme="https://blog.umu618.com/tags/%E9%87%91%E8%9E%8D/"/>
    
    <category term="blockchain" scheme="https://blog.umu618.com/tags/blockchain/"/>
    
  </entry>
  
  <entry>
    <title>EOSIO 1.5.0 MongoDB 插件搭配 MongoDB 4.0.4</title>
    <link href="https://blog.umu618.com/2018/12/16/umutech-using-mongodb-4-with-eosio-1-5-mongodb-plugin/"/>
    <id>https://blog.umu618.com/2018/12/16/umutech-using-mongodb-4-with-eosio-1-5-mongodb-plugin/</id>
    <published>2018-12-16T15:04:42.000Z</published>
    <updated>2023-08-05T13:01:26.968Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题描述">问题描述</h2><p>在前文《<a href="/2018/12/11/umutech-mongodb-on-centos/">为 EOSIO MongoDB 插件搭建高可用集群</a>》中，我们使用了 MongoDB 4.0.4，如果直接配套 EOSIO 1.5 版本，MongoDB 插件用的 MongoDB C Driver 与 MongoDB 4.0.4 是不完全兼容的。</p><ul><li><p>EOSIO 1.5 指定的 MongoDB 版本是 3.6.3；</p></li><li><p>MongoDB 4.0 的客户端需要 MongoDB C Driver 1.11.0，而 EOSIO 1.5 用的是 1.10.2。</p></li></ul><blockquote><p>参考：<a href="https://docs.mongodb.com/manual/release-notes/4.0/#drivers">Release Notes for MongoDB 4.0</a></p></blockquote><h2 id="改进方案">改进方案</h2><p>修改 <code>eos/scripts/eosio_build_$&#123;SYS_NAME&#125;.sh</code>，其中 SYS_NAME 是系统名字，以 macOS 为例，应该改的是 <code>eos/scripts/eosio_build_darwin.sh</code>。</p><ul><li><p>把 mongo-c-driver 版本改到足够高，比如 1.13.0，即把脚本里的下载链接 <code>https://github.com/mongodb/mongo-c-driver/releases/download/1.10.2/mongo-c-driver-1.10.2.tar.gz</code> 改为 <code>https://github.com/mongodb/mongo-c-driver/releases/download/1.13.0/mongo-c-driver-1.13.0.tar.gz</code></p></li><li><p>把 mongo-cxx-driver 版本改到足够高，比如 3.4.0，可以直接把脚本里的 <code>git clone https://github.com/mongodb/mongo-cxx-driver.git --branch releases/v3.3 --depth 1</code> 改为 <code>git clone https://github.com/mongodb/mongo-cxx-driver.git --branch releases/stable --depth 1</code></p></li><li><p>Ubuntu 操作参考：</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">&#x27;s/releases\/v3.3/releases\/stable/;s/1\.10\.2/1\.13\.0/g&#x27;</span> scripts/eosio_build_ubuntu.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译前</span></span><br><span class="line">grep <span class="string">&quot;Version:&quot;</span> /usr/<span class="built_in">local</span>/lib/pkgconfig/libmongocxx-static.pc</span><br><span class="line">Version: 3.3.2-pre</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译</span></span><br><span class="line">./eosio_build.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译后</span></span><br><span class="line">grep <span class="string">&quot;Version:&quot;</span> /usr/<span class="built_in">local</span>/lib/pkgconfig/libmongocxx-static.pc</span><br><span class="line">Version: 3.4.0</span><br></pre></td></tr></table></figure><p>然后编译、安装 eos。</p><blockquote><p>参考：</p><p><a href="https://github.com/mongodb/mongo-c-driver/releases/tag/1.13.0">mongo-c-driver 1.13.0</a></p><p><a href="https://github.com/mongodb/mongo-cxx-driver/releases/tag/r3.4.0">MongoDB C++11 Driver 3.4.0</a></p></blockquote><h2 id="注意事项">注意事项</h2><p>以上方法不适用于 v1.7.0，新版 eos 已经使用新版 mongo-c-driver 和 MongoDB C++11 Driver，唯一需要改的是 <code>eos/scripts/eosio_build.sh</code> 的这行：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> MONGODB_VERSION=4.0.6 <span class="comment">#3.6.3</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;问题描述&quot;&gt;问题描述&lt;/h2&gt;
&lt;p&gt;在前文《&lt;a href=&quot;/2018/12/11/umutech-mongodb-on-centos/&quot;&gt;为 EOSIO MongoDB 插件搭建高可用集群&lt;/a&gt;》中，我们使用了 MongoDB 4.0.4，如果直接配套 E</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="debug" scheme="https://blog.umu618.com/tags/debug/"/>
    
    <category term="linux" scheme="https://blog.umu618.com/tags/linux/"/>
    
    <category term="mongodb" scheme="https://blog.umu618.com/tags/mongodb/"/>
    
    <category term="blockchain" scheme="https://blog.umu618.com/tags/blockchain/"/>
    
  </entry>
  
  <entry>
    <title>为 EOSIO MongoDB 插件搭建高可用集群</title>
    <link href="https://blog.umu618.com/2018/12/11/umutech-mongodb-on-centos/"/>
    <id>https://blog.umu618.com/2018/12/11/umutech-mongodb-on-centos/</id>
    <published>2018-12-11T04:04:28.000Z</published>
    <updated>2023-08-05T13:01:26.968Z</updated>
    
    <content type="html"><![CDATA[<h2 id="选型">选型</h2><p><strong>系统：CentOS7。</strong> 正像大部分国人喜欢用免费的 Windows 旗舰版，采用 RedHat 社区版，既有“企业级待遇”，又免费。实在是解决选择恐惧症必备良药……</p><p><strong>MongoDB：4.0.4。</strong> 4.0 之前的版本不支持一些类型转换的函数，后期使用起来很麻烦。举个例子：</p><blockquote><p><a href="https://docs.mongodb.com/manual/reference/operator/aggregation/toDate/#exp._S_toDate">$toDate</a></p><p>New in version 4.0.</p></blockquote><p><strong>文件系统：XFS。</strong> 4.0 已经抛弃 <a href="https://docs.mongodb.com/manual/core/mmapv1/#storage-mmapv1">MMAPv1 Storage Engine</a>，官方文档强烈建议 <a href="https://docs.mongodb.com/manual/core/wiredtiger/#storage-wiredtiger"><br>WiredTiger Storage Engine</a> 和 XFS 配套使用。</p><blockquote><p>With the WiredTiger storage engine, using XFS is strongly recommended for data bearing nodes to avoid performance issues that may occur when using EXT4 with WiredTiger.</p></blockquote><p><strong>副本数：1。</strong> 数据可以很容易重新获取，丢失的代价不高，所以副本不是很重要（有钱请搞三副本）。另外，目前 nodeos 较常把数据弄脏，在它本身没高可用时，不宜对数据库投入太多成本。</p><p><strong>机器配置：某云服务器一台。</strong> 16 Cores，256G RAM，启动盘 10G，额外八个 1T Disk。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ lsblk</span><br><span class="line">NAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span><br><span class="line">sda      8:0    0   10G  0 disk </span><br><span class="line">└─sda1   8:1    0   10G  0 part /</span><br><span class="line">sdb      8:16   0    1T  0 disk </span><br><span class="line">sdc      8:32   0    1T  0 disk </span><br><span class="line">sdd      8:48   0    1T  0 disk </span><br><span class="line">sde      8:64   0    1T  0 disk </span><br><span class="line">sdf      8:80   0    1T  0 disk </span><br><span class="line">sdg      8:96   0    1T  0 disk </span><br><span class="line">sdh      8:112  0    1T  0 disk </span><br><span class="line">sdi      8:128  0    1T  0 disk </span><br></pre></td></tr></table></figure><h2 id="环境配置">环境配置</h2><h3 id="1-设置-SE-Linux">1. 设置 SE Linux</h3><p>安装过程中，若您需要 reboot 系统，则每次 reboot 之后都要做一次：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setenforce Permissive</span><br></pre></td></tr></table></figure><h3 id="2-关闭-TPH">2. 关闭 TPH</h3><p>以下命令不是持久化改变，但比较容易说明改了啥，仅供参考：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> never &gt; /sys/kernel/mm/transparent_hugepage/enabled</span><br><span class="line"><span class="built_in">echo</span> never &gt; /sys/kernel/mm/transparent_hugepage/defrag</span><br></pre></td></tr></table></figure><p>根据 <a href="https://docs.mongodb.com/manual/tutorial/transparent-huge-pages/index.html#red-hat-centos-7">Disable Transparent Huge Pages (THP)</a>，真正使用的是：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /etc/tuned/no-thp</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;[main]</span></span><br><span class="line"><span class="string">include=virtual-guest</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[vm]</span></span><br><span class="line"><span class="string">transparent_hugepages=never&#x27;</span> &gt; /etc/tuned/no-thp/tuned.conf</span><br><span class="line"></span><br><span class="line">tuned-adm profile no-thp</span><br></pre></td></tr></table></figure><h3 id="3-TCP-优化">3. TCP 优化</h3><p>以下命令不是持久化改变，但比较容易说明优化了啥，仅供参考：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> 120 &gt; /proc/sys/net/ipv4/tcp_keepalive_time</span><br><span class="line"><span class="built_in">echo</span> 3 &gt; /proc/sys/net/ipv4/tcp_fin_timeout</span><br><span class="line"><span class="built_in">echo</span> 3 &gt; /proc/sys/net/ipv4/tcp_orphan_retries</span><br></pre></td></tr></table></figure><p>真正使用的是：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">FILE=/etc/sysctl.conf</span><br><span class="line">cp <span class="variable">$FILE</span> <span class="variable">$&#123;FILE&#125;</span>_`date +%Y%m%d%H%M`</span><br><span class="line"></span><br><span class="line">KEY=tcp_keepalive_time</span><br><span class="line">VALUE=120</span><br><span class="line"></span><br><span class="line">egrep <span class="string">&quot;net.ipv4.<span class="variable">$KEY</span>&quot;</span> <span class="variable">$FILE</span> &amp;&amp; sed -i -c <span class="string">&quot;s/net\.ipv4\.<span class="variable">$KEY</span>.*/net\.ipv4\.<span class="variable">$KEY</span> = <span class="variable">$VALUE</span>/g&quot;</span> <span class="variable">$FILE</span> || <span class="built_in">echo</span> <span class="string">&quot;net.ipv4.<span class="variable">$KEY</span> = <span class="variable">$VALUE</span>&quot;</span> &gt;&gt; <span class="variable">$FILE</span></span><br><span class="line"></span><br><span class="line">VALUE=3</span><br><span class="line">KEY=tcp_fin_timeout</span><br><span class="line"></span><br><span class="line">egrep <span class="string">&quot;net.ipv4.<span class="variable">$KEY</span>&quot;</span> <span class="variable">$FILE</span> &amp;&amp; sed -i -c <span class="string">&quot;s/net\.ipv4\.<span class="variable">$KEY</span>.*/net\.ipv4\.<span class="variable">$KEY</span> = <span class="variable">$VALUE</span>/g&quot;</span> <span class="variable">$FILE</span> || <span class="built_in">echo</span> <span class="string">&quot;net.ipv4.<span class="variable">$KEY</span> = <span class="variable">$VALUE</span>&quot;</span> &gt;&gt; <span class="variable">$FILE</span></span><br><span class="line"></span><br><span class="line">KEY=tcp_orphan_retries</span><br><span class="line"></span><br><span class="line">egrep <span class="string">&quot;net.ipv4.<span class="variable">$KEY</span>&quot;</span> <span class="variable">$FILE</span> &amp;&amp; sed -i -c <span class="string">&quot;s/net\.ipv4\.<span class="variable">$KEY</span>.*/net\.ipv4\.<span class="variable">$KEY</span> = <span class="variable">$VALUE</span>/g&quot;</span> <span class="variable">$FILE</span> || <span class="built_in">echo</span> <span class="string">&quot;net.ipv4.<span class="variable">$KEY</span> = <span class="variable">$VALUE</span>&quot;</span> &gt;&gt; <span class="variable">$FILE</span></span><br><span class="line"></span><br><span class="line">sysctl -p 2&gt;/tmp/sysctl.tmp</span><br></pre></td></tr></table></figure><h2 id="安装步骤">安装步骤</h2><h3 id="1-全局设置">1. 全局设置</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">PASSWORD=MEETONE_FAKE_PASSWORD</span><br><span class="line"></span><br><span class="line">PREFIX=/disk</span><br><span class="line">BIND_IP=10.140.0.10</span><br><span class="line">D_PORT=17089</span><br><span class="line">CS_PORT=17088</span><br><span class="line">S_PORT=17087</span><br><span class="line">NUM_SHARD=7</span><br></pre></td></tr></table></figure><h3 id="2-防火墙例外">2. 防火墙例外</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">semanage port -a -t mongod_port_t -p tcp 17087-17095</span><br></pre></td></tr></table></figure><h3 id="3-分区">3. 分区</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">yum install -y xfsprogs</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> InitDisk &#123;</span><br><span class="line">  umount <span class="variable">$&#123;PREFIX&#125;</span>*</span><br><span class="line">  sed -i <span class="string">&quot;s:^LABEL=<span class="variable">$&#123;PREFIX&#125;</span>:#LABEL=<span class="variable">$&#123;PREFIX&#125;</span>:&quot;</span> /etc/fstab</span><br><span class="line">  i=0</span><br><span class="line">  <span class="keyword">for</span> drv <span class="keyword">in</span> &#123;b..i&#125;; <span class="keyword">do</span></span><br><span class="line">    /sbin/parted /dev/sd<span class="string">&quot;<span class="variable">$drv</span>&quot;</span> -s mklabel gpt mkpart primary 2048s 100%</span><br><span class="line">    sleep 1</span><br><span class="line">    mkfs.xfs -f -b size=4096 -d su=64k,sw=4,agcount=2000 /dev/sd<span class="string">&quot;<span class="variable">$drv</span>&quot;</span>1</span><br><span class="line">    xfs_admin -L <span class="variable">$&#123;PREFIX&#125;</span><span class="variable">$i</span> /dev/sd<span class="string">&quot;<span class="variable">$drv</span>&quot;</span>1</span><br><span class="line">    mkdir -p <span class="variable">$&#123;PREFIX&#125;</span><span class="variable">$i</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;LABEL=<span class="variable">$&#123;PREFIX&#125;</span><span class="variable">$i</span> <span class="variable">$&#123;PREFIX&#125;</span><span class="variable">$i</span> xfs rw,noatime,nodiratime,allocsize=16M,inode64,logbsize=256k,delaylog,nobarrier,nolargeio,swalloc 0 0&quot;</span> &gt;&gt; /etc/fstab</span><br><span class="line"></span><br><span class="line">    i=$[i+1]</span><br><span class="line">  <span class="keyword">done</span></span><br><span class="line">  mount -a</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">InitDisk</span><br></pre></td></tr></table></figure><h3 id="4-安装-MongoDB-Community-Edition">4. 安装 MongoDB Community Edition</h3><p>参考官网的安装文档：<a href="https://docs.mongodb.com/manual/tutorial/install-mongodb-on-red-hat/">Install MongoDB Community Edition on Red Hat Enterprise or CentOS Linux</a></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;[mongodb-org-4.0]</span></span><br><span class="line"><span class="string">name=MongoDB Repository</span></span><br><span class="line"><span class="string">baseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/4.0/x86_64/</span></span><br><span class="line"><span class="string">gpgcheck=1</span></span><br><span class="line"><span class="string">enabled=1</span></span><br><span class="line"><span class="string">gpgkey=https://www.mongodb.org/static/pgp/server-4.0.asc&#x27;</span> &gt; /etc/yum.repos.d/mongodb-org-4.0.repo</span><br><span class="line"></span><br><span class="line">yum install -y mongodb-org</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;exclude=mongodb-org,mongodb-org-server,mongodb-org-shell,mongodb-org-mongos,mongodb-org-tools&#x27;</span> &gt;&gt; /etc/yum.conf</span><br></pre></td></tr></table></figure><h3 id="5-初始化数据库目录">5. 初始化数据库目录</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> InitDir &#123;</span><br><span class="line">  rm -rf <span class="variable">$&#123;PREFIX&#125;</span>0/mongod_conf_data <span class="variable">$&#123;PREFIX&#125;</span>0/mongo_log</span><br><span class="line">  <span class="keyword">for</span> ((i = 1; i &lt;= <span class="variable">$NUM_SHARD</span>; ++i)); <span class="keyword">do</span></span><br><span class="line">    rm -rf <span class="variable">$&#123;PREFIX&#125;</span><span class="variable">$i</span>/mongo*</span><br><span class="line">  <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">  mkdir -p <span class="variable">$&#123;PREFIX&#125;</span>0/mongod_conf_data</span><br><span class="line">  chown -R mongod. <span class="variable">$&#123;PREFIX&#125;</span>0/mongod_conf_data</span><br><span class="line">  mkdir -p <span class="variable">$&#123;PREFIX&#125;</span>0/mongo_log</span><br><span class="line">  chown -R mongod. <span class="variable">$&#123;PREFIX&#125;</span>0/mongo_log</span><br><span class="line">  <span class="keyword">for</span> ((i = 1; i &lt;= <span class="variable">$NUM_SHARD</span>; ++i)); <span class="keyword">do</span></span><br><span class="line">    mkdir -p <span class="variable">$&#123;PREFIX&#125;</span><span class="variable">$i</span>/mongod_data</span><br><span class="line">    chown mongod. <span class="variable">$&#123;PREFIX&#125;</span><span class="variable">$i</span>/mongo*</span><br><span class="line">  <span class="keyword">done</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">InitDir</span><br></pre></td></tr></table></figure><h3 id="6-配置-MongoD-分片服务器">6. 配置 MongoD 分片服务器</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> CreateShardConfig &#123;</span><br><span class="line">  <span class="keyword">for</span> ((i = 1; i &lt;= <span class="variable">$NUM_SHARD</span>; ++i)); <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;shardsvr=true</span></span><br><span class="line"><span class="string">replSet=shard<span class="variable">$i</span></span></span><br><span class="line"><span class="string">bind_ip=127.0.0.1,<span class="variable">$BIND_IP</span></span></span><br><span class="line"><span class="string">port=$[D_PORT+i-1]</span></span><br><span class="line"><span class="string">dbpath=<span class="variable">$&#123;PREFIX&#125;</span><span class="variable">$i</span>/mongod_data</span></span><br><span class="line"><span class="string">logpath=<span class="variable">$&#123;PREFIX&#125;</span>0/mongo_log/shard<span class="variable">$i</span>.log</span></span><br><span class="line"><span class="string">pidfilepath=/var/run/mongodb/mongod_shard<span class="variable">$i</span>.pid</span></span><br><span class="line"><span class="string">logappend=true</span></span><br><span class="line"><span class="string">logRotate=reopen</span></span><br><span class="line"><span class="string">fork=true</span></span><br><span class="line"><span class="string">wiredTigerCacheSizeGB=10</span></span><br><span class="line"><span class="string">#keyFile=/etc/mongodb-keyfile</span></span><br><span class="line"><span class="string">#verbose=true</span></span><br><span class="line"><span class="string">directoryperdb=true</span></span><br><span class="line"><span class="string">wiredTigerDirectoryForIndexes=true&quot;</span> &gt; /etc/mongod_shard<span class="variable">$i</span>.conf</span><br><span class="line">    chown mongod. /etc/mongod_shard<span class="variable">$i</span>.conf</span><br><span class="line">  <span class="keyword">done</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> CreateShardService &#123;</span><br><span class="line">  <span class="keyword">for</span> ((i = 1; i &lt;= <span class="variable">$NUM_SHARD</span>; ++i)); <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;[Unit]</span></span><br><span class="line"><span class="string">Description=MongoD</span></span><br><span class="line"><span class="string">After=network.target</span></span><br><span class="line"><span class="string">Documentation=https://docs.mongodb.org/manual</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Service]</span></span><br><span class="line"><span class="string">User=mongod</span></span><br><span class="line"><span class="string">Group=mongod</span></span><br><span class="line"><span class="string">Environment=\&quot;OPTIONS=-f /etc/mongod_shard<span class="variable">$i</span>.conf\&quot;</span></span><br><span class="line"><span class="string">EnvironmentFile=-/etc/sysconfig/mongod</span></span><br><span class="line"><span class="string">ExecStart=/usr/bin/mongod \$OPTIONS</span></span><br><span class="line"><span class="string">ExecStartPre=/usr/bin/mkdir -p /var/run/mongodb</span></span><br><span class="line"><span class="string">ExecStartPre=/usr/bin/chown mongod:mongod /var/run/mongodb</span></span><br><span class="line"><span class="string">ExecStartPre=/usr/bin/chmod 0755 /var/run/mongodb</span></span><br><span class="line"><span class="string">PermissionsStartOnly=true</span></span><br><span class="line"><span class="string">PIDFile=/var/run/mongodb/mongod_shard<span class="variable">$i</span>.pid</span></span><br><span class="line"><span class="string">Type=forking</span></span><br><span class="line"><span class="string"># file size</span></span><br><span class="line"><span class="string">LimitFSIZE=infinity</span></span><br><span class="line"><span class="string"># cpu time</span></span><br><span class="line"><span class="string">LimitCPU=infinity</span></span><br><span class="line"><span class="string"># virtual memory size</span></span><br><span class="line"><span class="string">LimitAS=infinity</span></span><br><span class="line"><span class="string"># open files</span></span><br><span class="line"><span class="string">LimitNOFILE=64000</span></span><br><span class="line"><span class="string"># processes/threads</span></span><br><span class="line"><span class="string">LimitNPROC=64000</span></span><br><span class="line"><span class="string"># locked memory</span></span><br><span class="line"><span class="string">LimitMEMLOCK=infinity</span></span><br><span class="line"><span class="string"># total threads (user+kernel)</span></span><br><span class="line"><span class="string">TasksMax=infinity</span></span><br><span class="line"><span class="string">TasksAccounting=false</span></span><br><span class="line"><span class="string"># Recommended limits for mongod as specified in</span></span><br><span class="line"><span class="string"># http://docs.mongodb.org/manual/reference/ulimit/#recommended-settings</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Install]</span></span><br><span class="line"><span class="string">WantedBy=multi-user.target&quot;</span> &gt; /usr/lib/systemd/system/mongod_shard<span class="variable">$i</span>.service</span><br><span class="line">  <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">  systemctl daemon-reload</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> InitShard &#123;</span><br><span class="line">  SH=/tmp/mongod_shard.sh</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;&quot;</span> &gt; <span class="variable">$FILE</span></span><br><span class="line">  <span class="keyword">for</span> ((i = 1; i &lt;= <span class="variable">$NUM_SHARD</span>; ++i)); <span class="keyword">do</span></span><br><span class="line">    PORT=$[D_PORT+i-1]</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;echo \&quot;rs.initiate(&#123;_id: &#x27;shard<span class="variable">$i</span>&#x27;, members:[&#123;_id: 0, host: &#x27;<span class="variable">$BIND_IP</span>:<span class="variable">$PORT</span>&#x27;&#125;]&#125;)\&quot; | mongo --host 127.0.0.1 --port <span class="variable">$PORT</span>&quot;</span> &gt;&gt; <span class="variable">$SH</span></span><br><span class="line">  <span class="keyword">done</span></span><br><span class="line">  bash <span class="variable">$SH</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> CreateShardUser &#123;</span><br><span class="line">  JS=/tmp/mongod_shard.js</span><br><span class="line"></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;use admin;</span></span><br><span class="line"><span class="string">db.createUser(&#123; \&quot;user\&quot;: \&quot;MongoAdmin\&quot;, \&quot;pwd\&quot;: \&quot;<span class="variable">$&#123;PASSWORD&#125;</span>\&quot;, \&quot;roles\&quot;: [\&quot;root\&quot;]&#125;);</span></span><br><span class="line"><span class="string">cfg = rs.conf();</span></span><br><span class="line"><span class="string">cfg.members[0].priority = 10;</span></span><br><span class="line"><span class="string">rs.reconfig(cfg);&quot;</span> &gt; <span class="variable">$JS</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> ((i = 1; i &lt;= <span class="variable">$NUM_SHARD</span>; ++i)); <span class="keyword">do</span></span><br><span class="line">    mongo --port $[CS_PORT+i-1] &lt; <span class="variable">$JS</span></span><br><span class="line">  <span class="keyword">done</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">CreateShardConfig</span><br><span class="line">CreateShardService</span><br><span class="line"><span class="keyword">for</span> ((i = 1; i &lt;= <span class="variable">$NUM_SHARD</span>; ++i)); <span class="keyword">do</span> systemctl restart mongod_shard<span class="variable">$i</span>.service; <span class="keyword">done</span></span><br><span class="line">InitShard</span><br><span class="line">CreateShardUser</span><br></pre></td></tr></table></figure><h3 id="7-配置-MongDB-Config-Server">7. 配置 MongDB Config Server</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> CreateConfigServerConfig &#123;</span><br><span class="line">  FILE=/etc/mongod.conf</span><br><span class="line"></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;replSet=csReplSet</span></span><br><span class="line"><span class="string">configsvr=true</span></span><br><span class="line"><span class="string">bind_ip=127.0.0.1,<span class="variable">$BIND_IP</span></span></span><br><span class="line"><span class="string">port=<span class="variable">$CS_PORT</span></span></span><br><span class="line"><span class="string">dbpath=<span class="variable">$&#123;PREFIX&#125;</span>0/mongod_conf_data</span></span><br><span class="line"><span class="string">logpath=<span class="variable">$&#123;PREFIX&#125;</span>0/mongo_log/config.log</span></span><br><span class="line"><span class="string">pidfilepath=/var/run/mongodb/mongod.pid</span></span><br><span class="line"><span class="string">logappend=true</span></span><br><span class="line"><span class="string">logRotate=reopen</span></span><br><span class="line"><span class="string">fork=true</span></span><br><span class="line"><span class="string">#keyFile=/etc/mongodb-keyfile&quot;</span> &gt; <span class="variable">$FILE</span></span><br><span class="line"></span><br><span class="line">  chown mongod. <span class="variable">$FILE</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> CreateConfigServerService &#123;</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&#x27;[Unit]</span></span><br><span class="line"><span class="string">Description=MongoCS</span></span><br><span class="line"><span class="string">After=network.target</span></span><br><span class="line"><span class="string">Documentation=https://docs.mongodb.org/manual</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Service]</span></span><br><span class="line"><span class="string">User=mongod</span></span><br><span class="line"><span class="string">Group=mongod</span></span><br><span class="line"><span class="string">Environment=&quot;OPTIONS=-f /etc/mongod.conf&quot;</span></span><br><span class="line"><span class="string">EnvironmentFile=-/etc/sysconfig/mongod</span></span><br><span class="line"><span class="string">ExecStart=/usr/bin/mongod $OPTIONS</span></span><br><span class="line"><span class="string">ExecStartPre=/usr/bin/mkdir -p /var/run/mongodb</span></span><br><span class="line"><span class="string">ExecStartPre=/usr/bin/chown mongod:mongod /var/run/mongodb</span></span><br><span class="line"><span class="string">ExecStartPre=/usr/bin/chmod 0755 /var/run/mongodb</span></span><br><span class="line"><span class="string">PermissionsStartOnly=true</span></span><br><span class="line"><span class="string">PIDFile=/var/run/mongodb/mongod.pid</span></span><br><span class="line"><span class="string">Type=forking</span></span><br><span class="line"><span class="string"># file size</span></span><br><span class="line"><span class="string">LimitFSIZE=infinity</span></span><br><span class="line"><span class="string"># cpu time</span></span><br><span class="line"><span class="string">LimitCPU=infinity</span></span><br><span class="line"><span class="string"># virtual memory size</span></span><br><span class="line"><span class="string">LimitAS=infinity</span></span><br><span class="line"><span class="string"># open files</span></span><br><span class="line"><span class="string">LimitNOFILE=64000</span></span><br><span class="line"><span class="string"># processes/threads</span></span><br><span class="line"><span class="string">LimitNPROC=64000</span></span><br><span class="line"><span class="string"># locked memory</span></span><br><span class="line"><span class="string">LimitMEMLOCK=infinity</span></span><br><span class="line"><span class="string"># total threads (user+kernel)</span></span><br><span class="line"><span class="string">TasksMax=infinity</span></span><br><span class="line"><span class="string">TasksAccounting=false</span></span><br><span class="line"><span class="string"># Recommended limits for mongod as specified in</span></span><br><span class="line"><span class="string"># http://docs.mongodb.org/manual/reference/ulimit/#recommended-settings</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Install]</span></span><br><span class="line"><span class="string">WantedBy=multi-user.target&#x27;</span> &gt; /usr/lib/systemd/system/mongod.service</span><br><span class="line"></span><br><span class="line">  systemctl daemon-reload</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">CreateConfigServerConfig</span><br><span class="line">CreateConfigServerService</span><br><span class="line"></span><br><span class="line">systemctl restart mongod.service</span><br><span class="line"></span><br><span class="line">sleep 5</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;rs.initiate(&#123;_id: &#x27;csReplSet&#x27;, members:[&#123;_id: 0, host: &#x27;<span class="variable">$BIND_IP</span>:<span class="variable">$CS_PORT</span>&#x27;&#125;]&#125;)&quot;</span> | mongo --port <span class="variable">$CS_PORT</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;use admin;</span></span><br><span class="line"><span class="string">db.createUser(&#123; \&quot;user\&quot;: \&quot;MongoAdmin\&quot;, \&quot;pwd\&quot;: \&quot;<span class="variable">$&#123;PASSWORD&#125;</span>\&quot;, \&quot;roles\&quot;: [\&quot;root\&quot;]&#125;);&quot;</span> | mongo --port <span class="variable">$CS_PORT</span></span><br></pre></td></tr></table></figure><h3 id="8-配置-MongS">8. 配置 MongS</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> CreateMongoSConfig &#123;</span><br><span class="line">  FILE=/etc/mongos.conf</span><br><span class="line"></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;configdb=csReplSet/<span class="variable">$BIND_IP</span>:<span class="variable">$CS_PORT</span></span></span><br><span class="line"><span class="string">bind_ip_all=true</span></span><br><span class="line"><span class="string">port=17087</span></span><br><span class="line"><span class="string">logpath=<span class="variable">$&#123;PREFIX&#125;</span>0/mongos_log/mongos.log</span></span><br><span class="line"><span class="string">pidfilepath=/var/run/mongodb/mongos.pid</span></span><br><span class="line"><span class="string">logappend=true</span></span><br><span class="line"><span class="string">logRotate=reopen</span></span><br><span class="line"><span class="string">fork=true</span></span><br><span class="line"><span class="string">#keyFile=/etc/mongodb-keyfile&quot;</span> &gt; <span class="variable">$FILE</span></span><br><span class="line"></span><br><span class="line">  chown mongod. <span class="variable">$FILE</span></span><br><span class="line"></span><br><span class="line">  mkdir -p <span class="variable">$&#123;PREFIX&#125;</span>0/mongos_log</span><br><span class="line">  chown -R mongod. <span class="variable">$&#123;PREFIX&#125;</span>0/mongos_log</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> CreateMongoSService &#123;</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&#x27;[Unit]</span></span><br><span class="line"><span class="string">Description=MongoS</span></span><br><span class="line"><span class="string">After=network.target</span></span><br><span class="line"><span class="string">Documentation=https://docs.mongodb.org/manual</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Service]</span></span><br><span class="line"><span class="string">User=mongod</span></span><br><span class="line"><span class="string">Group=mongod</span></span><br><span class="line"><span class="string">Environment=&quot;OPTIONS=-f /etc/mongos.conf&quot;</span></span><br><span class="line"><span class="string">EnvironmentFile=-/etc/sysconfig/mongod</span></span><br><span class="line"><span class="string">ExecStart=/usr/bin/mongos $OPTIONS</span></span><br><span class="line"><span class="string">ExecStartPre=/usr/bin/mkdir -p /var/run/mongodb</span></span><br><span class="line"><span class="string">ExecStartPre=/usr/bin/chown mongod:mongod /var/run/mongodb</span></span><br><span class="line"><span class="string">ExecStartPre=/usr/bin/chmod 0755 /var/run/mongodb</span></span><br><span class="line"><span class="string">PermissionsStartOnly=true</span></span><br><span class="line"><span class="string">PIDFile=/var/run/mongodb/mongos.pid</span></span><br><span class="line"><span class="string">Type=forking</span></span><br><span class="line"><span class="string"># file size</span></span><br><span class="line"><span class="string">LimitFSIZE=infinity</span></span><br><span class="line"><span class="string"># cpu time</span></span><br><span class="line"><span class="string">LimitCPU=infinity</span></span><br><span class="line"><span class="string"># virtual memory size</span></span><br><span class="line"><span class="string">LimitAS=infinity</span></span><br><span class="line"><span class="string"># open files</span></span><br><span class="line"><span class="string">LimitNOFILE=64000</span></span><br><span class="line"><span class="string"># processes/threads</span></span><br><span class="line"><span class="string">LimitNPROC=64000</span></span><br><span class="line"><span class="string"># locked memory</span></span><br><span class="line"><span class="string">LimitMEMLOCK=infinity</span></span><br><span class="line"><span class="string"># total threads (user+kernel)</span></span><br><span class="line"><span class="string">TasksMax=infinity</span></span><br><span class="line"><span class="string">TasksAccounting=false</span></span><br><span class="line"><span class="string"># Recommended limits for mongod as specified in</span></span><br><span class="line"><span class="string"># http://docs.mongodb.org/manual/reference/ulimit/#recommended-settings</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Install]</span></span><br><span class="line"><span class="string">WantedBy=multi-user.target&#x27;</span> &gt; /usr/lib/systemd/system/mongos.service</span><br><span class="line"></span><br><span class="line">  systemctl daemon-reload</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> AddShards &#123;</span><br><span class="line">  FILE=/tmp/mongo_add_shards.js</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;use admin;&quot;</span> &gt; <span class="variable">$FILE</span></span><br><span class="line">  <span class="keyword">for</span> ((i = 1; i &lt;= <span class="variable">$NUM_SHARD</span>; ++i)); <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;db.runCommand(&#123;addshard:\&quot;shard<span class="variable">$i</span>/<span class="variable">$BIND_IP</span>:$[D_PORT+i-1]\&quot;&#125;);&quot;</span> &gt;&gt; <span class="variable">$FILE</span></span><br><span class="line">  <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">  mongo --port <span class="variable">$S_PORT</span> &lt; <span class="variable">$FILE</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">CreateMongoSConfig</span><br><span class="line">CreateMongoSService</span><br><span class="line"></span><br><span class="line">systemctl restart mongos.service</span><br><span class="line"></span><br><span class="line">AddShards</span><br></pre></td></tr></table></figure><h3 id="9-【可选】配置-keyfile">9. 【可选】配置 keyfile</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> ConfigKeyfile &#123;</span><br><span class="line">  FILE=/etc/mongodb-keyfile</span><br><span class="line">  openssl rand -base64 745 &gt; <span class="variable">$FILE</span></span><br><span class="line">  chown mongod. <span class="variable">$FILE</span></span><br><span class="line">  chmod 600 <span class="variable">$FILE</span></span><br><span class="line"></span><br><span class="line">  grep -P <span class="string">&#x27;^#keyFile&#x27;</span> /etc/mongod*.conf  &amp;&amp;  sed -i <span class="string">&#x27;s/#keyFile/keyFile/g&#x27;</span> /etc/mongod*.conf</span><br><span class="line"></span><br><span class="line">  grep -P <span class="string">&#x27;^#keyFile&#x27;</span> /etc/mongos.conf  &amp;&amp;  sed -i <span class="string">&#x27;s/#keyFile/keyFile/g&#x27;</span> /etc/mongos.conf</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> RestartMongo &#123;</span><br><span class="line">  systemctl restart mongod.service</span><br><span class="line">  <span class="keyword">for</span> ((i = 1; i &lt;= <span class="variable">$NUM_SHARD</span>; ++i)); <span class="keyword">do</span></span><br><span class="line">    systemctl restart mongod_shard<span class="variable">$i</span>.service;</span><br><span class="line">  <span class="keyword">done</span></span><br><span class="line">  systemctl restart mongos.service</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ConfigKeyfile</span><br><span class="line">RestartMongo</span><br></pre></td></tr></table></figure><h3 id="10-【可选】配置集合和创建索引">10. 【可选】配置集合和创建索引</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">use EOS</span><br><span class="line">db.action_traces.createIndex(&#123;&quot;act.account&quot;: 1, &quot;_id&quot;:1&#125;,&#123;background: true, sparse: true&#125;)</span><br><span class="line">db.action_traces.createIndex(&#123;&quot;act.name&quot;: 1, &quot;_id&quot;:1&#125;,&#123;background: true, sparse: true&#125;)</span><br><span class="line">db.action_traces.createIndex(&#123;&quot;act.data.receiver&quot;: 1, &quot;_id&quot;:1&#125;,&#123;background: true, sparse: true&#125;)</span><br><span class="line">db.action_traces.createIndex(&#123;&quot;act.data.from&quot;: 1, &quot;_id&quot;:1&#125;,&#123;background: true, sparse: true&#125;)</span><br><span class="line">db.action_traces.createIndex(&#123;&quot;act.data.to&quot;: 1, &quot;_id&quot;:1&#125;,&#123;background: true, sparse: true&#125;)</span><br><span class="line">db.action_traces.createIndex(&#123;&quot;act.data.name&quot;: 1, &quot;_id&quot;:1&#125;,&#123;background: true, sparse: true&#125;)</span><br><span class="line">db.action_traces.createIndex(&#123;&quot;act.data.voter&quot;: 1, &quot;_id&quot;:1&#125;,&#123;background: true, sparse: true&#125;)</span><br><span class="line">db.action_traces.createIndex(&#123;&quot;act.authorization.actor&quot;: 1, &quot;_id&quot;:1&#125;,&#123;background: true, sparse: true&#125;)</span><br><span class="line">db.action_traces.createIndex(&#123;&quot;receipt.receiver&quot;: 1, &quot;_id&quot;:1&#125;,&#123;background: true, sparse: true&#125;)</span><br><span class="line"></span><br><span class="line">db.action_traces.createIndex(&#123;&quot;block_num&quot;: 1, &quot;_id&quot;:1&#125;,&#123;background: true&#125;)</span><br><span class="line">db.action_traces.createIndex(&#123;&quot;block_time&quot;: 1, &quot;_id&quot;:1&#125;,&#123;background: true&#125;)</span><br><span class="line"></span><br><span class="line">db.transaction_traces.createIndex(&#123;&quot;id&quot;: 1, &quot;_id&quot;:1&#125;,&#123;background: true&#125;)</span><br><span class="line"></span><br><span class="line">sh.enableSharding(&quot;EOS&quot;)</span><br><span class="line">sh.shardCollection(&quot;EOS.action_traces&quot;, &#123;&quot;_id&quot; : 1&#125;,  true)</span><br><span class="line">sh.shardCollection(&quot;EOS.transaction_traces&quot;, &#123;&quot;_id&quot; : 1&#125;,  true)</span><br></pre></td></tr></table></figure><h3 id="11-【可选】安装-EOSIO-1-5">11. 【可选】安装 EOSIO 1.5</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/eosio/eos/releases/download/v1.5.0/eosio-1.5.0-1.el7.x86_64.rpm</span><br><span class="line">rpm -ivh ./eosio-1.5.0-1.el7.x86_64.rpm --nodeps</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;选型&quot;&gt;选型&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;系统：CentOS7。&lt;/strong&gt; 正像大部分国人喜欢用免费的 Windows 旗舰版，采用 RedHat 社区版，既有“企业级待遇”，又免费。实在是解决选择恐惧症必备良药……&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Mo</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="linux" scheme="https://blog.umu618.com/tags/linux/"/>
    
    <category term="ops" scheme="https://blog.umu618.com/tags/ops/"/>
    
    <category term="mongodb" scheme="https://blog.umu618.com/tags/mongodb/"/>
    
  </entry>
  
  <entry>
    <title>为编译 EOSIO 降级 boost 到 1.67</title>
    <link href="https://blog.umu618.com/2018/12/10/umutech-downgrade-boost-for-eosio/"/>
    <id>https://blog.umu618.com/2018/12/10/umutech-downgrade-boost-for-eosio/</id>
    <published>2018-12-10T08:07:02.000Z</published>
    <updated>2023-08-05T13:01:26.958Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题">问题</h2><p>目前 EOSIO 1.5 依赖的 boost 版本为 1.67，但最新的 boost 是 1.68，如果不小心用 <code>brew upgrade</code> 把 boost 升级到最新，则 EOSIO 代码将无法顺利编译。</p><h2 id="解决">解决</h2><p>不必删除 1.68 版本，当之前安装过 1.67，再安装 1.68 时，其实两者是同时存在的，只是系统目录下的链接是指向最新版本而已。只要把链接改回 1.67 即可。</p><p>以下脚本适用于 macOS Mojave 系统，其它系统请自行做相应修改。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line">ln -s /usr/<span class="built_in">local</span>/include/boost /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/include/boost </span><br><span class="line"></span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_atomic-mt.a /usr/<span class="built_in">local</span>/lib/libboost_atomic-mt.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_atomic-mt.dylib /usr/<span class="built_in">local</span>/lib/libboost_atomic-mt.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_chrono-mt.a /usr/<span class="built_in">local</span>/lib/libboost_chrono-mt.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_chrono-mt.dylib /usr/<span class="built_in">local</span>/lib/libboost_chrono-mt.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_chrono.a /usr/<span class="built_in">local</span>/lib/libboost_chrono.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_chrono.dylib /usr/<span class="built_in">local</span>/lib/libboost_chrono.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_container-mt.a /usr/<span class="built_in">local</span>/lib/libboost_container-mt.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_container-mt.dylib /usr/<span class="built_in">local</span>/lib/libboost_container-mt.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_container.a /usr/<span class="built_in">local</span>/lib/libboost_container.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_container.dylib /usr/<span class="built_in">local</span>/lib/libboost_container.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_context-mt.a /usr/<span class="built_in">local</span>/lib/libboost_context-mt.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_context-mt.dylib /usr/<span class="built_in">local</span>/lib/libboost_context-mt.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_contract-mt.a /usr/<span class="built_in">local</span>/lib/libboost_contract-mt.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_contract-mt.dylib /usr/<span class="built_in">local</span>/lib/libboost_contract-mt.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_contract.a /usr/<span class="built_in">local</span>/lib/libboost_contract.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_contract.dylib /usr/<span class="built_in">local</span>/lib/libboost_contract.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_coroutine-mt.a /usr/<span class="built_in">local</span>/lib/libboost_coroutine-mt.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_coroutine-mt.dylib /usr/<span class="built_in">local</span>/lib/libboost_coroutine-mt.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_coroutine.a /usr/<span class="built_in">local</span>/lib/libboost_coroutine.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_coroutine.dylib /usr/<span class="built_in">local</span>/lib/libboost_coroutine.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_date_time-mt.a /usr/<span class="built_in">local</span>/lib/libboost_date_time-mt.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_date_time-mt.dylib /usr/<span class="built_in">local</span>/lib/libboost_date_time-mt.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_date_time.a /usr/<span class="built_in">local</span>/lib/libboost_date_time.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_date_time.dylib /usr/<span class="built_in">local</span>/lib/libboost_date_time.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_exception-mt.a /usr/<span class="built_in">local</span>/lib/libboost_exception-mt.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_exception.a /usr/<span class="built_in">local</span>/lib/libboost_exception.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_fiber-mt.a /usr/<span class="built_in">local</span>/lib/libboost_fiber-mt.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_fiber-mt.dylib /usr/<span class="built_in">local</span>/lib/libboost_fiber-mt.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_filesystem-mt.a /usr/<span class="built_in">local</span>/lib/libboost_filesystem-mt.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_filesystem-mt.dylib /usr/<span class="built_in">local</span>/lib/libboost_filesystem-mt.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_filesystem.a /usr/<span class="built_in">local</span>/lib/libboost_filesystem.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_filesystem.dylib /usr/<span class="built_in">local</span>/lib/libboost_filesystem.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_graph-mt.a /usr/<span class="built_in">local</span>/lib/libboost_graph-mt.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_graph-mt.dylib /usr/<span class="built_in">local</span>/lib/libboost_graph-mt.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_graph.a /usr/<span class="built_in">local</span>/lib/libboost_graph.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_graph.dylib /usr/<span class="built_in">local</span>/lib/libboost_graph.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_iostreams-mt.a /usr/<span class="built_in">local</span>/lib/libboost_iostreams-mt.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_iostreams-mt.dylib /usr/<span class="built_in">local</span>/lib/libboost_iostreams-mt.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_iostreams.a /usr/<span class="built_in">local</span>/lib/libboost_iostreams.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_iostreams.dylib /usr/<span class="built_in">local</span>/lib/libboost_iostreams.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_locale-mt.a /usr/<span class="built_in">local</span>/lib/libboost_locale-mt.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_locale-mt.dylib /usr/<span class="built_in">local</span>/lib/libboost_locale-mt.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_log-mt.a /usr/<span class="built_in">local</span>/lib/libboost_log-mt.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_log-mt.dylib /usr/<span class="built_in">local</span>/lib/libboost_log-mt.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_log.a /usr/<span class="built_in">local</span>/lib/libboost_log.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_log.dylib /usr/<span class="built_in">local</span>/lib/libboost_log.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_log_setup-mt.a /usr/<span class="built_in">local</span>/lib/libboost_log_setup-mt.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_log_setup-mt.dylib /usr/<span class="built_in">local</span>/lib/libboost_log_setup-mt.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_log_setup.a /usr/<span class="built_in">local</span>/lib/libboost_log_setup.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_log_setup.dylib /usr/<span class="built_in">local</span>/lib/libboost_log_setup.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_math_c99-mt.a /usr/<span class="built_in">local</span>/lib/libboost_math_c99-mt.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_math_c99-mt.dylib /usr/<span class="built_in">local</span>/lib/libboost_math_c99-mt.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_math_c99.a /usr/<span class="built_in">local</span>/lib/libboost_math_c99.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_math_c99.dylib /usr/<span class="built_in">local</span>/lib/libboost_math_c99.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_math_c99f-mt.a /usr/<span class="built_in">local</span>/lib/libboost_math_c99f-mt.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_math_c99f-mt.dylib /usr/<span class="built_in">local</span>/lib/libboost_math_c99f-mt.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_math_c99f.a /usr/<span class="built_in">local</span>/lib/libboost_math_c99f.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_math_c99f.dylib /usr/<span class="built_in">local</span>/lib/libboost_math_c99f.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_math_c99l-mt.a /usr/<span class="built_in">local</span>/lib/libboost_math_c99l-mt.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_math_c99l-mt.dylib /usr/<span class="built_in">local</span>/lib/libboost_math_c99l-mt.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_math_c99l.a /usr/<span class="built_in">local</span>/lib/libboost_math_c99l.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_math_c99l.dylib /usr/<span class="built_in">local</span>/lib/libboost_math_c99l.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_math_tr1-mt.a /usr/<span class="built_in">local</span>/lib/libboost_math_tr1-mt.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_math_tr1-mt.dylib /usr/<span class="built_in">local</span>/lib/libboost_math_tr1-mt.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_math_tr1.a /usr/<span class="built_in">local</span>/lib/libboost_math_tr1.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_math_tr1.dylib /usr/<span class="built_in">local</span>/lib/libboost_math_tr1.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_math_tr1f-mt.a /usr/<span class="built_in">local</span>/lib/libboost_math_tr1f-mt.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_math_tr1f-mt.dylib /usr/<span class="built_in">local</span>/lib/libboost_math_tr1f-mt.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_math_tr1f.a /usr/<span class="built_in">local</span>/lib/libboost_math_tr1f.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_math_tr1f.dylib /usr/<span class="built_in">local</span>/lib/libboost_math_tr1f.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_math_tr1l-mt.a /usr/<span class="built_in">local</span>/lib/libboost_math_tr1l-mt.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_math_tr1l-mt.dylib /usr/<span class="built_in">local</span>/lib/libboost_math_tr1l-mt.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_math_tr1l.a /usr/<span class="built_in">local</span>/lib/libboost_math_tr1l.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_math_tr1l.dylib /usr/<span class="built_in">local</span>/lib/libboost_math_tr1l.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_prg_exec_monitor-mt.a /usr/<span class="built_in">local</span>/lib/libboost_prg_exec_monitor-mt.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_prg_exec_monitor-mt.dylib /usr/<span class="built_in">local</span>/lib/libboost_prg_exec_monitor-mt.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_prg_exec_monitor.a /usr/<span class="built_in">local</span>/lib/libboost_prg_exec_monitor.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_prg_exec_monitor.dylib /usr/<span class="built_in">local</span>/lib/libboost_prg_exec_monitor.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_program_options-mt.a /usr/<span class="built_in">local</span>/lib/libboost_program_options-mt.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_program_options-mt.dylib /usr/<span class="built_in">local</span>/lib/libboost_program_options-mt.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_program_options.a /usr/<span class="built_in">local</span>/lib/libboost_program_options.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_program_options.dylib /usr/<span class="built_in">local</span>/lib/libboost_program_options.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_random-mt.a /usr/<span class="built_in">local</span>/lib/libboost_random-mt.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_random-mt.dylib /usr/<span class="built_in">local</span>/lib/libboost_random-mt.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_random.a /usr/<span class="built_in">local</span>/lib/libboost_random.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_random.dylib /usr/<span class="built_in">local</span>/lib/libboost_random.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_regex-mt.a /usr/<span class="built_in">local</span>/lib/libboost_regex-mt.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_regex-mt.dylib /usr/<span class="built_in">local</span>/lib/libboost_regex-mt.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_regex.a /usr/<span class="built_in">local</span>/lib/libboost_regex.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_regex.dylib /usr/<span class="built_in">local</span>/lib/libboost_regex.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_serialization-mt.a /usr/<span class="built_in">local</span>/lib/libboost_serialization-mt.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_serialization-mt.dylib /usr/<span class="built_in">local</span>/lib/libboost_serialization-mt.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_serialization.a /usr/<span class="built_in">local</span>/lib/libboost_serialization.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_serialization.dylib /usr/<span class="built_in">local</span>/lib/libboost_serialization.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_signals-mt.a /usr/<span class="built_in">local</span>/lib/libboost_signals-mt.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_signals-mt.dylib /usr/<span class="built_in">local</span>/lib/libboost_signals-mt.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_signals.a /usr/<span class="built_in">local</span>/lib/libboost_signals.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_signals.dylib /usr/<span class="built_in">local</span>/lib/libboost_signals.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_stacktrace_addr2line-mt.a /usr/<span class="built_in">local</span>/lib/libboost_stacktrace_addr2line-mt.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_stacktrace_addr2line-mt.dylib /usr/<span class="built_in">local</span>/lib/libboost_stacktrace_addr2line-mt.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_stacktrace_addr2line.a /usr/<span class="built_in">local</span>/lib/libboost_stacktrace_addr2line.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_stacktrace_addr2line.dylib /usr/<span class="built_in">local</span>/lib/libboost_stacktrace_addr2line.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_stacktrace_basic-mt.a /usr/<span class="built_in">local</span>/lib/libboost_stacktrace_basic-mt.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_stacktrace_basic-mt.dylib /usr/<span class="built_in">local</span>/lib/libboost_stacktrace_basic-mt.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_stacktrace_basic.a /usr/<span class="built_in">local</span>/lib/libboost_stacktrace_basic.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_stacktrace_basic.dylib /usr/<span class="built_in">local</span>/lib/libboost_stacktrace_basic.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_stacktrace_noop-mt.a /usr/<span class="built_in">local</span>/lib/libboost_stacktrace_noop-mt.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_stacktrace_noop-mt.dylib /usr/<span class="built_in">local</span>/lib/libboost_stacktrace_noop-mt.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_stacktrace_noop.a /usr/<span class="built_in">local</span>/lib/libboost_stacktrace_noop.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_stacktrace_noop.dylib /usr/<span class="built_in">local</span>/lib/libboost_stacktrace_noop.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_system-mt.a /usr/<span class="built_in">local</span>/lib/libboost_system-mt.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_system-mt.dylib /usr/<span class="built_in">local</span>/lib/libboost_system-mt.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_system.a /usr/<span class="built_in">local</span>/lib/libboost_system.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_system.dylib /usr/<span class="built_in">local</span>/lib/libboost_system.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_test_exec_monitor-mt.a /usr/<span class="built_in">local</span>/lib/libboost_test_exec_monitor-mt.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_test_exec_monitor.a /usr/<span class="built_in">local</span>/lib/libboost_test_exec_monitor.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_thread-mt.a /usr/<span class="built_in">local</span>/lib/libboost_thread-mt.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_thread-mt.dylib /usr/<span class="built_in">local</span>/lib/libboost_thread-mt.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_timer-mt.a /usr/<span class="built_in">local</span>/lib/libboost_timer-mt.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_timer-mt.dylib /usr/<span class="built_in">local</span>/lib/libboost_timer-mt.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_timer.a /usr/<span class="built_in">local</span>/lib/libboost_timer.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_timer.dylib /usr/<span class="built_in">local</span>/lib/libboost_timer.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_type_erasure-mt.a /usr/<span class="built_in">local</span>/lib/libboost_type_erasure-mt.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_type_erasure-mt.dylib /usr/<span class="built_in">local</span>/lib/libboost_type_erasure-mt.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_type_erasure.a /usr/<span class="built_in">local</span>/lib/libboost_type_erasure.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_type_erasure.dylib /usr/<span class="built_in">local</span>/lib/libboost_type_erasure.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_unit_test_framework-mt.a /usr/<span class="built_in">local</span>/lib/libboost_unit_test_framework-mt.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_unit_test_framework-mt.dylib /usr/<span class="built_in">local</span>/lib/libboost_unit_test_framework-mt.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_unit_test_framework.a /usr/<span class="built_in">local</span>/lib/libboost_unit_test_framework.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_unit_test_framework.dylib /usr/<span class="built_in">local</span>/lib/libboost_unit_test_framework.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_wave-mt.a /usr/<span class="built_in">local</span>/lib/libboost_wave-mt.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_wave-mt.dylib /usr/<span class="built_in">local</span>/lib/libboost_wave-mt.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_wserialization-mt.a /usr/<span class="built_in">local</span>/lib/libboost_wserialization-mt.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_wserialization-mt.dylib /usr/<span class="built_in">local</span>/lib/libboost_wserialization-mt.dylib</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_wserialization.a /usr/<span class="built_in">local</span>/lib/libboost_wserialization.a</span><br><span class="line">ln -f /usr/<span class="built_in">local</span>/Cellar/boost/1.67.0_1/lib/libboost_wserialization.dylib /usr/<span class="built_in">local</span>/lib/libboost_wserialization.dylib</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;问题&quot;&gt;问题&lt;/h2&gt;
&lt;p&gt;目前 EOSIO 1.5 依赖的 boost 版本为 1.67，但最新的 boost 是 1.68，如果不小心用 &lt;code&gt;brew upgrade&lt;/code&gt; 把 boost 升级到最新，则 EOSIO 代码将无法顺利编译。&lt;/</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="debug" scheme="https://blog.umu618.com/tags/debug/"/>
    
    <category term="macos" scheme="https://blog.umu618.com/tags/macos/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·肥</title>
    <link href="https://blog.umu618.com/2018/12/02/reconstructionism-poet-fat/"/>
    <id>https://blog.umu618.com/2018/12/02/reconstructionism-poet-fat/</id>
    <published>2018-12-01T16:21:00.000Z</published>
    <updated>2023-08-05T13:01:26.958Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·肥》：巨婴口欲吃乐射，横纹小腹双下巴。一喊减肥先减胸，中年妇女肿么了？</p><h2 id="注解">注解</h2><p>穷和老都会导致肥胖。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·肥》：巨婴口欲吃乐射，横纹小腹双下巴。一喊减肥先减胸，中年妇女肿么了？&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;穷和老都会导致肥胖。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
  </entry>
  
  <entry>
    <title>《Effective C++》读书笔记</title>
    <link href="https://blog.umu618.com/2018/11/26/umutech-effective-cpp/"/>
    <id>https://blog.umu618.com/2018/11/26/umutech-effective-cpp/</id>
    <published>2018-11-26T15:22:15.000Z</published>
    <updated>2023-08-05T13:01:26.958Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第一章-让自己习惯-C">第一章 让自己习惯 C++</h2><h3 id="1-视-C-为一个语言联邦">1. 视 C++ 为一个语言联邦</h3><p>C++ 是个多重范型编程语言：面向过程、面向对象、函数式、泛型、原编程式，所以他的规约很多，记住四个次语言可以帮助了解 C++：C、Object-Oriented C++、Template C++、STL。</p><h3 id="2-尽量以-const、enum、inline-替换-define">2. 尽量以 const、enum、inline 替换 #define</h3><p>他们的根本差别是：前三者是编译器处理的，最后者是预处理器处理的。enum 比 const 更像 #define，比如说 const 定义通常可以求地址或引用，而 enum 不行。</p><p>inline 函数比宏多了类型安全和可预料性，一个例子是将 i++ 或 ++i 当参数传给宏时，可能导致 ++ 了多次，而传给 inline 函数则不会。</p><h3 id="3-尽可能使用-const">3. 尽可能使用 const</h3><p>const 可以帮助编译器侦测错误的用法。例如，令函数返回一个常量值，往往可降低因调用者错误而造成的意外，而又不至于放弃安全性和高效性。比如当比较语句少写了一个 = 时：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 本意是 ==，结果导致在 a * b 的临时变量上调用 operator=</span></span><br><span class="line"><span class="keyword">if</span> (a * b = c) ...</span><br></pre></td></tr></table></figure><p>如果 operator= 返回值不是 const 会导致以上错误代码编译通过！</p><p>bitwise constness 认为 const 成员函数不可以更改对象内任何 non-static 成员变量，logical constness 主张在调用者侦测不出的前提下可以修改对象内某些 bits，可以利用 mutable 释放掉 non-static 成员变量的 bitwise constness 约束。</p><p>在 const 和 non-const 成员函数中避免重复的做法是：让 non-const 成员函数调用 const 成员函数，而不要反过来。</p><h3 id="4-确定对象被使用前已被初始化">4. 确定对象被使用前已被初始化</h3><p>为内置型对象进行手工初始化，因为 C++ 不保证初始化它们。</p><p>构造函数最好使用成员初值列，而不是赋值操作，排列顺序最好和声明次序想同。</p><p>为避免跨编译单元的初始化次序问题，用 local static 对象代替 non-local static 对象，参考 Singleton 模式常见实现。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">XClass&amp; <span class="title">GetInstance</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">static</span> XClass instance;</span><br><span class="line">    <span class="keyword">return</span> instance;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第二章-构造-析构-赋值运算">第二章 构造/析构/赋值运算</h2><h3 id="5-了解-C-默默编写并调用哪些函数">5. 了解 C++ 默默编写并调用哪些函数</h3><p>编译器可以隐式为类创建：默认构造函数、复制构造函数、赋值构造函数、析构函数。</p><h3 id="6-若不想使用编译器自动产生的函数，就应该明确拒绝">6. 若不想使用编译器自动产生的函数，就应该明确拒绝</h3><p>拒绝的普遍方法是：把函数设为 private，只有声明没有实现。但 member 函数和 friend 函数还是可以调用 private 函数，由于没有实现，会在连接期报错，不利排插，将错误移至编译期的方法是：private 继承 Uncopyable 类，Boost 也有个类，名为 noncopyable。</p><p>更新式的做法是把函数声明为 = delete。</p><h3 id="7-为多态基类声明-virtual-析构函数">7. 为多态基类声明 virtual 析构函数</h3><p>任何类只要带有 virtual 函数，都几乎确定应该有一个 virtual 析构函数。但有 virtual 函数会降低调用效率和可优化性，所以能不用则不用，比如说，某个类没有考虑作为基类（base class）被继承，则没有必要有 virtual 析构函数，STL 的容器大多如此。</p><h3 id="8-别让异常逃离析构函数">8. 别让异常逃离析构函数</h3><p>如果一个被析构函数调用的函数可能抛出异常，析构函数应该捕捉任何异常，然后吞下他们或者结束程序。</p><p>如果客户需要对某个函数运行期间抛出的异常做出反应，那么类应该提供一个普通函数执行该操作，而非在析构函数中。</p><h3 id="9-绝不在构造和析构过程中调用-virtual-函数">9. 绝不在构造和析构过程中调用 virtual 函数</h3><p>因为这类调用从不降至派生类（derived class），它将调用本层的函数。</p><h3 id="10-令-operator-返回一个-reference-to-this">10. 令 operator= 返回一个 reference to *this</h3><p>这样才能支持连锁赋值，a = b = c = d。</p><h3 id="11-在-operator-中处理“自我赋值”">11. 在 operator= 中处理“自我赋值”</h3><p>方法有：比较来源和目标对象的地址、精心周到的语句顺序、copy-and-swap。要考虑自我赋值的概率，如果很小，则比较地址的方式可能并不好，因为无视它效率更高。</p><h3 id="12-复制对象时勿忘其每一个成分">12. 复制对象时勿忘其每一个成分</h3><p>复制函数应该保证复制“对象内的所有成员变量”及“所有基类成分”。当你编写一个复制函数，请确保（1）复制所有 local 成员变量，（2）调用所有基类内的适当的复制函数。</p><p>不要尝试以某个复制函数实现另一个复制函数。应该将共同机能放进第三个函数中，并由两个复制函数共同调用。</p><h2 id="第三章-资源管理">第三章 资源管理</h2><h3 id="13-以对象管理资源">13. 以对象管理资源</h3><p>获得资源后立刻放进对象（managing object）内。“以对象管理资源”又称“资源取得时机就是初始化时机”（Resource Acquisition Is Initialization; RAII）</p><p>管理对象（managing object）运用析构函数确保资源被释放。</p><p>为防止资源泄漏，请使用 RAII 对象，它们在构造函数中获得资源并在析构函数中释放资源。</p><p>常被使用的 RAII class 是 std::shared_ptr，它是“引用计数器型智能指针”（Reference-counting smart pointer; RCSP），它无法打破环形引用（cycles of reference）。</p><p>不要用智能指针管理动态分配的数组，因为会导致错误形式的释放。参考《<a href="https://my.oschina.net/umu618/blog/818839">[C++ 学习笔记 1] delete 和 delete [] 的本质区别</a>》。</p><h3 id="a-name-item14-14-在资源管理类中小心-coping-行为-a"><a name="item14">14. 在资源管理类中小心 coping 行为</a></h3><p>复制 RAII 对象必须一并复制它管理的资源，常见的 RAII class copying 行为是：</p><p>（1）禁止复制；</p><p>（2）对底层资源祭出“引用计数法”（reference-count）；</p><p>（3）复制底部资源；</p><p>（4）转移底部资源的拥有权。</p><h3 id="15-在资源管理类中提供对原始资源的访问">15. 在资源管理类中提供对原始资源的访问</h3><p>APIs 往往要求访问原始资源（raw resource），所以每一个 RAII class 应该提供一个“取得其所管理之资源”的方法，比如 .get()。</p><p>对原始资源的访问可能经由显式转换或隐式转换。一般而言，显式转换比较安全，但隐式转换对客户比较方便。</p><h3 id="16-成对使用-new-和-delete-时要采取相同形式">16. 成对使用 new 和 delete 时要采取相同形式</h3><p>如果你在 new 表达式中使用 []，必须在相应的 delete 表达式中也使用 []。如果你在 new 表达式中不使用 []，一定不要在相应的 delete 表达式中使用 []。参考《<a href="https://my.oschina.net/umu618/blog/818839">[C++ 学习笔记 1] delete 和 delete [] 的本质区别</a>》。</p><h3 id="17-以独立语句将-newed-对象置入智能指针">17. 以独立语句将 newed 对象置入智能指针</h3><p>以独立语句将 newed 对象存储于（置入）智能指针内。如果不这么做，一旦异常被抛出，有可能导致难以察觉的资源泄漏。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 编译器可能为了产生更高效代码，而弹性地改变三个元语句的执行顺序</span></span><br><span class="line"><span class="comment">// 如果 priority() 抛出异常，可能导致 new Widget 返回的指针遗失</span></span><br><span class="line">processWidget(<span class="built_in">std</span>::<span class="built_in">shared_ptr</span>&lt;Widget&gt;(<span class="keyword">new</span> Widget), priority());</span><br><span class="line"></span><br><span class="line"><span class="comment">// 以下独立语句可行，因为编译器对“跨越语句的各项操作”没有重新排序的自由。</span></span><br><span class="line"><span class="function"><span class="built_in">std</span>::<span class="built_in">shared_ptr</span>&lt;Widget&gt; <span class="title">pw</span><span class="params">(<span class="keyword">new</span> Widget)</span></span>;</span><br><span class="line">processWidget(pw, priority());</span><br></pre></td></tr></table></figure><h2 id="第四章-设计与声明">第四章 设计与声明</h2><h3 id="18-让接口容易被正确使用，不易被误用">18. 让接口容易被正确使用，不易被误用</h3><p>“促进正确使用”的办法包括接口的一致性，以及与内置类型的行为兼容。一致性的例子：STL 容器都有 size 成员函数。不一致性对开发人员造成的心理负担，没有任何一个 IDE 可以完全抹除。</p><p>“阻止误用”的办法包括建立新类型、限制类型上的操作，束缚对象值，以及消除客户的资源管理责任。</p><p>std::shared_ptr 使用每个指针专属的删除器，消除“cross-DLL problem”；它还支持定制删除器，可被用来自动解除互斥锁（mutexes，见<a href="#item14">条款 14</a>）。</p><h3 id="19-设计-class-犹如设计-type">19. 设计 class 犹如设计 type</h3><p>Class 设计就是 type 的设计，在定义一个新 type 之前，要考虑以下主题：</p><p>（1）新 type 的对象应该如何被创建和销毁？</p><p>（2）对象的初始化和赋值该有什么差别？</p><p>（3）新 type 的对象如果被以值传递（pass by value），意味着什么？</p><p>（4）什么的新 type 的合法值？setter 函数要检查错误。</p><p>（5）新 type 需要配合某个继承图系（inheritance graph）吗？这影响函数——尤其是析构函数，是否为 virtual（见<a href="#7-%E4%B8%BA%E5%A4%9A%E6%80%81%E5%9F%BA%E7%B1%BB%E5%A3%B0%E6%98%8E-virtual-%E6%9E%90%E6%9E%84%E5%87%BD%E6%95%B0">条款 7</a>）。</p><p>（6）新 type 需要什么样的转换？如果希望 T1 被隐式转换为 T2，必须在 class T1 内写一个类型转换函数（operator T2）或在 class T2 内写一个可被单一实参调用（non-explicit-one-argument）的构造函数。如果只允许 explicit 构造函数存在，就得写出专门负责转换的函数，且不得为类型转换操作符（type conversion perators）或 non-explicit-one-argument 构造函数。（条款 15 有隐式和显式转换函数的范例，<a href="https://my.oschina.net/umu618/blog/839649">https://my.oschina.net/umu618/blog/839649</a>）</p><p>（7）什么样的操作符和函数对此新 type 而言是合理的？这决定你的 class 有哪些函数，其中哪些是 member 函数，哪些则否。（参考条款 23, 24, 26）</p><p>（8）什么样的标准函数应该驳回？声明为 private。（见<a href="#6-%E8%8B%A5%E4%B8%8D%E6%83%B3%E4%BD%BF%E7%94%A8%E7%BC%96%E8%AF%91%E5%99%A8%E8%87%AA%E5%8A%A8%E4%BA%A7%E7%94%9F%E7%9A%84%E5%87%BD%E6%95%B0%EF%BC%8C%E5%B0%B1%E5%BA%94%E8%AF%A5%E6%98%8E%E7%A1%AE%E6%8B%92%E7%BB%9D">条款 6</a>）</p><p>（9）谁该取用新 type 的成员？这个问题帮你决定成员的可见性（public、protected、private）。也帮你决定哪个 classes 和/或 functions 应该是 friends，以及将它们嵌套于另一个之内是否合理。</p><p>（10）什么是新 type 的未声明接口（undeclared interface）？它对效率、异常安全性（见条款 29）以及资源运用（例如多任务锁定和动态内存）提供何种保证？你在这些方面提供的保证，将为你的 class 实现代码加上相应的约束条件。</p><p>（11）新 type 有多么一般化？new class or new class template?</p><p>（12）真的需要一个新 type 吗？如果只是定义新的子类（derived class）以便为既有 class 添加机能，那么也许单纯定义一或多个 non-member 函数或</p><h3 id="20-宁以-pass-by-reference-to-const-替换-pass-by-value">20. 宁以 pass-by-reference-to-const 替换 pass-by-value</h3><p>尽量以 pass-by-reference-to-const 替换 pass-by-value。前者通常比较高效，并可避免切割问题（slicing problem，即派生类被转化成基类时丢失派生类特有的成分）。</p><p>以上规则并不适用于内置类型，以及 STL 的迭代器和函数对象。对它们而言，pass-by-value 往往比较适当。</p><h3 id="21-必须返回对象时，别妄想返回其-reference">21. 必须返回对象时，别妄想返回其 reference</h3><p>不要返回 pointer 或 reference 指向一个 local stack 对象，因为离开作用域即被销毁。</p><p>不要返回 reference 指向一个 heap-allocated 对象，因为无法保证配套 delete。</p><p>不要返回 pointer 或 reference 指向一个 local static 对象而有可能同时需要多个这样的对象。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _WINSOCK_DEPRECATED_NO_WARNINGS <span class="comment">// to use inet_ntoa</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;winsock2.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib, <span class="meta-string">&quot;ws2_32.lib&quot;</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    in_addr a1 = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;;</span><br><span class="line">    in_addr a2 = &#123;<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>&#125;;</span><br><span class="line">    printf_s(<span class="string">&quot;You think it&#x27;s: %s, &quot;</span>, inet_ntoa(a1));</span><br><span class="line">    printf_s(<span class="string">&quot;%s\n&quot;</span>, inet_ntoa(a2));</span><br><span class="line">    printf_s(<span class="string">&quot;But in fact it&#x27;s: %s, %s\n&quot;</span>, inet_ntoa(a1), inet_ntoa(a2));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>以上代码输出为：</p><blockquote><p>You think it’s: 1.2.3.4, 5.6.7.8<br>But in fact it’s: 1.2.3.4, 1.2.3.4</p></blockquote><h3 id="22-将成员变量声明为-private">22. 将成员变量声明为 private</h3><p>切记将成员变量声明为 private。这可赋予客户访问数据的一致性、可细微划分访问控制、允诺约束条件获得保证，并提供 class 作者以充分的实现弹性。</p><p>protected 并不比 public 更具封装性。</p><h3 id="23-宁以-non-member、non-friend-替换-member-函数">23. 宁以 non-member、non-friend 替换 member 函数</h3><p>宁可拿 non-member non-friend 函数替换 member 函数。这样做可以增加封装型、包裹弹性（packaging flexibility）和技能扩充性。</p><h3 id="24-若所有参数皆需类型转换，请为此采用-non-member-函数">24. 若所有参数皆需类型转换，请为此采用 non-member 函数</h3><p>member 函数的反面是 non-member 函数，而不是 friend 函数。</p><p>设计 operator * 时，要能支持乘法交换律。</p><p>如果你需要为某个函数的所有参数（包括 this 指针所指的那个隐喻参数）进行类型转换，那么这个函数必须是个 non-member。从 Object-Oriented C++ 跨进 Template C++ 时，会有新争议和解法，参考条款 46。</p><h3 id="25-考虑写出一个不抛异常的-swap-函数">25. 考虑写出一个不抛异常的 swap 函数</h3><p>通常我们不能改变 std 命名空间内的任何东西，但可以为 temlates 制造特化版本。</p><p>C++ 只允许对 class templates 偏特化（partially specialize），而对 function templates 则不许。</p><p>当 std::swap 对你的类型效率不高时，提供一个 swap 成员函数，并确定这个函数不抛出异常。因为成员 swap 的一个最好应用是帮助 classes 和 class templates 提供强烈的异常安全性（exception-safety）保障。条款 29 细说。</p><p>如果你提供了一个 member swap，也该提供一个 non-member swap 用来调用前者。对于 classes（而非 templates），也请特化 std::swap。</p><p>调用 swap 时应针对 std::swap 使用 using 声明式，然后调用 swap 并不带任何“命名空间资格修饰”。</p><p>为“用户定义类型”进行 std templates 全特化是好的，但千万不要尝试在 std 内加入某些对 std 而言全新的东西。</p><h2 id="第五章-实现">第五章 实现</h2><h3 id="26-尽可能延后变量定义式的出现时间">26. 尽可能延后变量定义式的出现时间</h3><p>太早出现，可能因为下面出现异常，导致构造白白浪费。</p><p>延后可以增加程序的清晰度、改善效率。</p><h3 id="27-尽量少做转型动作">27. 尽量少做转型动作</h3><p>dynamic_casts 有性能代价，应该尽量避免。绝对要避免“连串动态转型”（cascading dynamic casts）。</p><p>如果转型是必要的，试着将它隐藏于某个函数。客户可以条用该函数，而不需要讲转型放进他们的代码内。</p><p>宁可使用 C+±style 转型，不要使用旧式转型。前者很容易辨识出来，而且有分门别类的职掌。</p><h3 id="28-避免返回-handles-指向对象内部成分">28. 避免返回 handles 指向对象内部成分</h3><p>避免返回 handles（包括 reference、指针、迭代器）指向对象内部，可以增加封装型，帮助 const 成员函数的行为像个 const，将发生“虚吊号码牌”（dangling handles）的可能性降至最低。</p><p>反之，传出去的 handles 可能让你暴露在“handles ”的风险下。</p><h3 id="29-为“异常安全”而努力是值得的">29. 为“异常安全”而努力是值得的</h3><p>当异常被抛出时，异常安全的函数会：（1）不泄漏任何资源；（2）不允许数据败坏。</p><p>异常安全函数（Exception-safe functions）提供这三个保证之一：（1）基本承诺，如果异常抛出，程序内的任何事物仍然保持在有效状态下。（2）强烈保证，如果异常抛出，程序状态不改变。（3）不抛掷（nothrow）保证，承诺绝不抛出异常。</p><p>“强烈保证”往往能够以 copy-and-swap 实现出来，但“强烈保证”并非对所有函数都可以实现或具备现实意义。</p><p>木桶原理：函数提供的“异常安全保证”通常最高只等于其所调用的各个函数的“异常安全保证”中的最弱者。</p><h3 id="30-透彻了解-inlining-的里里外外">30. 透彻了解 inlining 的里里外外</h3><p>将大多数 inlining 限制在小型、被频繁调用的函数身上。这可使日后的调试过程和二进制升级（binary upgradability）更容易，也可使潜在的代码膨胀问题最小化，使程序的速度提升机会最大化。</p><p>定义于 class 内的函数都隐性成为 inline，包括像 operator* 这样的 friend 函数。</p><p>不要只因为 function templates 出现在头文件，就将它们声明为 inline。</p><p>所有对 virtual 函数的调用（除非是最平淡无奇的）都会使 inlining 落空。</p><p>编译器通常不对“通过函数指针而进行的调用”实施 inlining，这意味着对 inline 函数的调用最终是否 inlined 由编译器决定。</p><p>构造函数和析构函数往往是 inlining 的糟糕候选，因为他们隐含一些由编译器产生的代码。</p><p>inline 函数的风险：它们无法随着程序库的升级而升级，必须重新编译。</p><h3 id="31-将文件间的编译依存关系降至最低">31. 将文件间的编译依存关系降至最低</h3><p>支持“编译依存性最小化”的一般构想是：相依于声明式，不要相依于定义式。基于此构想的两个手段是 Handle classes 和 Interface classes。</p><p>程序库头文件应该以“完全且仅有声明式”（full and declaration-only forms）的形式存在。这种做法适用于 templates。</p><p>（1）如果使用 object references 或 object pointers 可以完成任务，就不要使用 object。</p><p>（2）如果可以，尽量以 class 声明式替换 class 定义式。</p><p>（3）为声明式和定义式提供不同的头文件。</p><p>Java 和 .NET 都不允许在 Interfaces 内实现成员变量或成员函数，但 C++ 可以。</p><p>Handle classes 和 Interface classes 有微小的性能损失，但为了降低 classes 之间的耦合性是值得的。如果性能比耦合性重要，才用具象类（concrete ）替换它们。</p><h2 id="第六章-继承与面向对象设计">第六章 继承与面向对象设计</h2><h3 id="32-确定你的-public-继承塑模出-is-a-关系">32. 确定你的 public 继承塑模出 is-a 关系</h3><p>“public 继承”意味 is-a。适用于 base classes 身上的每一件事一定也适用于 derived classes 身上，因为每一个 derived classes 对象也都是一个 base class 对象。</p><p>classes 之间的关系除了 is-a 之外，还有 has-a（有一个）和 is-implemented-in-terms-of（根据某物实现出）两种常见的关系。</p><h3 id="33-避免遮掩继承而来的名称">33. 避免遮掩继承而来的名称</h3><p>derived classes 内的名称会掩盖 base classes 内的名称。在 public 继承下从来没有人希望如此。</p><p>为了让被掩盖的名称再见天日，可使用 using 声明式或转交函数（forwarding function）。</p><h3 id="34-区分接口继承和实现继承">34. 区分接口继承和实现继承</h3><p>接口继承和实现继承不同。在 public 继承之下，derived classes 总是继承 base class 的接口。</p><p>成员函数的接口总是会被继承。</p><p>pure virtual 函数有两个最突出的特征：他们必须被任何“继承了它们”的具象 class 重新声明，而且它们在抽象 class 中通常没有定义。</p><p>声明一个 pure virtual 函数的目的是为了让 derived classes 只继承函数接口。</p><p>声明简朴的（非纯）impure virtual 函数的目的，是让 derived classes 继承该函数的接口和缺省实现。</p><p>声明 non-virtual 函数的目的是为了令 derived classes 继承函数的接口及一份强制性实现。</p><h3 id="35-考虑-virtual-函数以外的其它选择">35. 考虑 virtual 函数以外的其它选择</h3><h4 id="藉由-Non-Virtual-手法实现-Template-Method-模式">藉由 Non-Virtual 手法实现 Template Method 模式</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">class GameCharacter &#123;</span><br><span class="line">public:</span><br><span class="line">    int HealthValue() const           &#x2F;&#x2F; derived classes 不重新定义它</span><br><span class="line">    &#123;</span><br><span class="line">        ...</span><br><span class="line">        int value &#x3D; DoHealthValue();</span><br><span class="line">        ...</span><br><span class="line">        return value;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">private:    &#x2F;&#x2F; 不是必须 private</span><br><span class="line">    virtual int DoHealthValue() const &#x2F;&#x2F; derived classes 可重新定义它</span><br><span class="line">    &#123;</span><br><span class="line">        ...                           &#x2F;&#x2F; 缺省算法</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>令客户通过 public non-virtual 成员函数间接调用 private virtual 函数，称之为 non-virtual interface（NVI）手法。它是 Template Method 设计模式的一个独特表现形式。non-virtual 函数称为 virtual 函数的外覆器（wrapper）。</p><h4 id="藉由-Function-Pointers-手法实现-Strategy-模式">藉由 Function Pointers 手法实现 Strategy 模式</h4><p>缺点：将机能从成员函数移到 class 外部函数，导致非成员函数无法访问 class 的 non-public 成员。</p><h4 id="藉由-std-function-手法实现-Strategy-模式">藉由 std::function 手法实现 Strategy 模式</h4><h4 id="古典的-Strategy-模式">古典的 Strategy 模式</h4><p>古典的 Strategy 模式会将健康函数做成一个分离的继承体系中的 virtual 成员函数。</p><h3 id="36-绝不重新定义继承而来的-non-virtual-函数">36. 绝不重新定义继承而来的 non-virtual 函数</h3><ul><li>class 内声明一个 non-virtual 函数会为该 class 建立起一份不变性（invariant），凌驾其特异性（specialization）。</li></ul><h3 id="37-绝不重新定义继承而来的缺省参数值">37. 绝不重新定义继承而来的缺省参数值</h3><ul><li>本条款的讨论局限于“继承一个带有缺省参数值的 virtual 函数”，绝对不要新定义继承而来的缺省参数值，因为缺省参数都是静态绑定，而 virtual 函数——你唯一应该复写的东西——却是动态绑定。</li></ul><h3 id="38-通过复合塑模出-has-a-或“根据某物实现出”">38. 通过复合塑模出 has-a 或“根据某物实现出”</h3><ul><li><p>复合（composition）的意义和 public 继承完全不同。</p></li><li><p>在应用域（application domain），复合意味 has-a（有一个）。在实现域（implementation domain），复合意味 is-implemented-in-terms-of（根据某物实现出）。</p></li></ul><h3 id="39-明智而审慎地使用-private-继承">39. 明智而审慎地使用 private 继承</h3><ul><li><p>Private 继承意味 is-implemented-in-terms-of（根据某物实现出）。它通常比复合（composition）的级别低。但是当 derived class 需要访问 protected base class 的成员，或需要重新定义继承而来的 virtual 函数时，这么设计是合理的。</p></li><li><p>和复合（composition）不同，private 继承可以造成 empty base 最优化。这对致力于“对象尺寸最小化”的程序库开发者而言，可能很重要。</p></li></ul><h3 id="40-明智而审慎地使用多重继承">40. 明智而审慎地使用多重继承</h3><ul><li><p>多重继承比单一继承复杂。它可能导致新的歧义性，以及对 virtual 继承的需要。</p></li><li><p>virtual 继承会增加大小、速度、初始化（及赋值）复杂度等等成本。如果 virtual base classes 不带任何数据，将是最具实用价值的情况。</p></li><li><p>多重继承的确有正当用途。其中一个情节涉及“public 继承某个 Interface class”和“private 继承某个协助实现的 class”的两相组合。</p></li></ul><h2 id="第七章-模板与泛型编程">第七章 模板与泛型编程</h2><h3 id="41-了解隐式接口和编译期多态">41. 了解隐式接口和编译期多态</h3><ul><li><p>class 和 template 都支持接口（interface）和多态（polymorphism）。</p></li><li><p>对 class 而言接口是显示（explicit）的，以函数签名为中心。多态则是通过 virtual 函数发生于运行期。</p></li><li><p>对 template 参数而言，接口是隐式的（implicit），奠基于有效表达式。多态则是通过 template 具现化和函数重载解析（function overloading resolution）发生于编译期。</p></li></ul><h3 id="42-了解-typename-的双重意义">42. 了解 typename 的双重意义</h3><ul><li><p>声明 template 参数时，前缀关键字 class 和 typename 可互换。</p></li><li><p>请使用关键字 typename 标识嵌套从属类型名称；但不得在 base class lists（基类列）或 member initialization list（成员初值列）内以它作为 base class 修饰符。</p></li></ul><h3 id="43-学习处理模板化基类内的名称">43. 学习处理模板化基类内的名称</h3><ul><li>当我们从 Object Oriented C++ 跨进 Template C++，继承就不像以前那么畅行无阻了。面对一些编译不通过的情况，可在 derived class templates 内通过 “this-&gt;” 指涉 base class templates 内的成员名称，或藉由一个明白写出的 “base class 资格修饰符” 完成。</li></ul><h3 id="44-将与参数无关的代码抽离-templates">44. 将与参数无关的代码抽离 templates</h3><ul><li><p>Templates 生成多个 classes 和多个函数，所以任何 template 代码都不该与某个造成膨胀的 template 参数产生相依关系。</p></li><li><p>因非类型模板参数（non-type template parameters）而造成的代码膨胀，往往可消除，做法是以函数参数或 class 成员变量替换 template 参数。</p></li><li><p>因类型参数（type parameters）而造成的代码膨胀，往往可降低，做法是让带有完全相同二进制表述（binary representations）的具现类型（instantiation types）共享实现码。</p></li></ul><h3 id="45-运用成员函数模板接受所有兼容类型">45. 运用成员函数模板接受所有兼容类型</h3><ul><li><p>请使用成员函数模板（member function templates）生成“可接受所有兼容类型”的函数。</p></li><li><p>如果你声明 member templates 用于“泛化 copy 构造”或“泛化 assignment 操作”，你还是需要声明正常的 copy 构造函数和 copy assignment 操作符。</p></li></ul><h3 id="46-需要类型转换时请为模板定义非成员函数">46. 需要类型转换时请为模板定义非成员函数</h3><p>函数的参数可以隐式转换，函数模板不行。</p><p>friend 的传统用途是“访问 class 的 non-public 成分”。</p><p>在 class 内部声明 non-member 函数的唯一办法就是：令它成为一个 friend。</p><ul><li>当我们编写一个 class template，而它所提供之“于此 template 相关的”函数支持“所有参数之隐式类型转换”时，请将那些函数定义为“class templdate 内部的 friend 函数”。</li></ul><h3 id="47-请使用-traits-classes-表现类型信息">47. 请使用 traits classes 表现类型信息</h3><p>STL 的迭代器有 5 种：input、output、forward、bidirectional、random access，为了给它们实现统一的 advance 函数，需要再编译期间判断迭代器的类型，这可以使用 Traits 技术来实现。</p><ul><li><p>建立一组重载函数（身份像劳工）或函数模板（例如 doAdvance，最后一个参数是 typename std::iterator_traits<IterT>::iterator_category()），彼此间的差异只在于各自的 traits 参数（可以不命名，只是一个类型）。令每个函数实现码与其接受之 traits 信息相应和。</p></li><li><p>简历一个控制函数（身份像工头）或函数模板（例如 advance），它调用上述那些“劳工函数”并传递 traits class 所提供的信息。</p></li><li><p>Traits classes 使得“类型相关信息”在编译期可用。它们以 templates 和“templates 特化”完成实现。</p></li><li><p>整合重载技术（overloading）后，traits classes 有可能在编译期对类型执行 if…else 测试。</p></li></ul><h3 id="48-认识-template-元编程">48. 认识 template 元编程</h3><p>Traits 解法属于 TMP（Template metaprogramming，模板元编程），比 typeid-based 解法高效，高效的原因：</p><ul><li><p>编译期测试类型。</p></li><li><p>类型测试代码不会被链接到可执行程序中。</p></li></ul><p>TMP 是图灵完备（Turling-complete）的。</p><ul><li><p>TMP 可将工作由运行期移往编译期，因而得以实现早期错误侦测和更高的执行效率。</p></li><li><p>TMP 可被用来生成“基于政策选择组合”（based on combinations of policy choices）的客户定制代码，也可用来避免生成对某些特殊类型并不适合的代码。</p></li></ul><h2 id="第八章-定制-new-和-delete">第八章 定制 new 和 delete</h2><h3 id="49-了解-new-handler-的行为">49. 了解 new-handler 的行为</h3><p>当 operator new 无法满足某一内存分配需求时，它会先调用一个客户指定的错误处理函数 new-handler。（这并非全部事实，参考条款 51）为了指定“用以处理内存不足”的函数，客户必须调用声明于 &lt;new&gt; 的标准库函数 set_new_handler：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="built_in">std</span> &#123;</span><br><span class="line">  <span class="function"><span class="keyword">typedef</span> <span class="title">void</span> <span class="params">(*new_handler)</span><span class="params">()</span></span>;</span><br><span class="line">  <span class="function">new_handler <span class="title">set_new_handler</span><span class="params">(new_handler p)</span> <span class="keyword">noexcept</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用法示例：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OutOfMemory</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cerr</span> &lt;&lt; <span class="string">&quot;Unable to satisfy request for memory!\n&quot;</span>;</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">abort</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">std</span>::set_new_handler(OutOfMemory);</span><br><span class="line">  <span class="keyword">char</span>* big_array = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">32</span> * <span class="number">1024</span> * <span class="number">1024</span> * <span class="number">1024</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>设计良好的 new-handler 函数必须做一下事情：</p><ul><li><p><strong>让更多内存可被使用</strong>。实现此策略的一个做法是：程序一开始就分配一大块内存，而后当 new-handler 第一次被调用，将它们释还给程序使用。</p></li><li><p><strong>安装另一个 new-handler</strong>。如果当前 new-handler 无法取得更多可用内存，或许它知道另外哪个 new-handler 由此能力。</p></li><li><p><strong>卸除 new-handler</strong>，也就是将 nullptr 传给 set_new_handler，这样 operator new 会在内存分配失败时抛出异常。</p></li><li><p><strong>抛出 bad_alloc 或其派生的异常</strong>。这样的异常不会被 operator new 捕捉，而会被传播到内存索求处。</p></li><li><p><strong>不返回</strong>，通常调用 abort 或 exit。</p></li></ul><p>C++ 不支持 class 专属之 new-handler，如果您需要，可以自己实现，只需每个 class 提供自己的 set_new_handler 和 operator new。</p><p>nothrow/noexcept new 是一个颇为局限的工具，因为它只适用于内存分配；后续的构造函数调用还是可能抛出异常。</p><h3 id="50-了解-new-和-delete-的合理替换时机">50. 了解 new 和 delete 的合理替换时机</h3><p>替换编译器提供的 operator new/delete 的最常见理由：</p><ul><li><p><strong>用来检测运用上的错误。</strong></p></li><li><p><strong>为了强化效能。</strong></p><ul><li><p>增加分配和归还速度。</p></li><li><p>降低缺省内存管理器带来的空间额外开销。</p></li><li><p>弥补缺省分配器种的非最佳齐位（suboptimal alignment）。</p></li><li><p>将相关对象成簇集中。</p></li></ul></li><li><p><strong>为了收集使用上的统计数据。</strong></p></li><li><p><strong>为了获得非传统的行为。</strong></p></li></ul><h3 id="51-编写-new-和-delete-时需固守常规">51. 编写 new 和 delete 时需固守常规</h3><ul><li><p>operator new 应该内含一个无穷循环，并在其中尝试分配内存，如果它无法满足内存需求，就该调用 new-handler。它也应该有能力处理 0 bytes 申请。Class 专属版本则还应该处理“比正确大小更大的（错误）申请”。</p></li><li><p>operator delelte 应该在收到 null 指针时不做任何事。Class 专属版本处理“比正确大小更大的（错误）申请”。</p></li></ul><h3 id="52-写了-placement-new-也要写-placement-delete">52. 写了 placement new 也要写 placement delete</h3><ul><li><p>当您写一个 <em>placement</em> operator new，请确定也写出了对应的 <em>placement</em> operator delete。否则，您的程序可能会发生隐微而时断时续的内存泄露。</p></li><li><p>当您声明 <em>placement</em> new 和 <em>placement</em> delete，请确定不要无意识（非故意）地遮掩了它们的正常版本。</p></li></ul><h2 id="第九章-杂项讨论">第九章 杂项讨论</h2><h3 id="53-不要轻忽编译器的警告">53. 不要轻忽编译器的警告</h3><ul><li><p>严肃对待编译器发出的警告信息。努力在您的编译器的最高（最严苛）警告级别下争取“无任何警告”的荣誉。</p></li><li><p>不要过度依赖编译器的报警能力，因为不同的编译器对待事情的态度并不相同。一旦移植到另一编译器上，您原本依赖的警告信息有可能消失。</p></li></ul><h3 id="54-让自己熟悉-STL">54. 让自己熟悉 STL</h3><ul><li><p>C++ 标准程序库的主要机能由 STL、iostream、locales 组成。并包含 C99 标准程序库。</p></li><li><p>需要熟悉智能指针（例如 std::shared_ptr）、一般化函数指针（std::function）、hash-based 容器、正则表达式（regular expressions）等。</p></li></ul><h3 id="55-让自己熟悉-Boost">55. 让自己熟悉 Boost</h3><ul><li><p>Boost 是一个社群，也是一个网站。致力于免费、开源、同僚复审的 C++ 程序库开发。Boost 在 C++ 标准化过程中扮演深具影响力的角色。</p></li><li><p>Boost 提供数十个类目实现，例如：字符串与文本处理、容器、函数对象和高级编程、泛型编程、模板元编程、数学和数值、正确性与测试、数据结构、语言间的支持、内存、杂项。</p></li></ul><p>（完，最后更新：2020-07-26）</p><p>京东联盟购买链接：</p><p>推荐购买新版的 <a href="https://union-click.jd.com/jdc?e=&amp;p=JF8BAMUJK1olXg8CXF1UCEkXCl8LElIQWQcBUFxUCXtTXDdWRGtMGENDFlVDFhNSVzMXQA4KD1heSl1UAU4TAmwMGVIUQl9HCANtfjlFUTttGB93A3hCNztHXUxgRT1vXVcZbQcyVF9fDUkVAGwOK2sVWjZDOltdCUIVM244G1wQXQUFUFdaCkIRBl8PG1IlOXpmU15UOHsnAF84K1slXjZAOg0PWxxEUGoKSVgRXAMHAA4NCR8eBzwPTlITXVFXBAkJOEkWAmsBKw">Effective Modern C++</a> 中国电力出版社 2018年04月01日 平装</p><p><img src="/images/effective-modern-cpp.png" alt="Effective Modern C++"> <img src="/images/effective-modern-cpp-jd.png" alt="Effective Modern C++ QR Code"></p><p><a href="https://union-click.jd.com/jdc?e=&amp;p=AyIGZRhfEgoaBVUbXBYyEgZXE1kXAhs3EUQDS10iXhBeGlcJDBkNXg9JHUlSSkkFSRwSBlcTWRcCGxgMXgdIMnt3UkItCxxVZAdtM3FaVF8jUkESYmILWSteFQMTBFIcXRwKIgdUGV4XABEEUytrFQMiUTsbWhQDEwZQG14WMhAGVBlYHQQUB1UrWxIDGgJcG1sSCxYCVStcFQsiYyl%2FXBULIjdVGlkdABAHXCtYJTIiB2UYa1dsEQUHElIVVxICUBtYEAoQAwVIWhAGRVcAGV5AVUEAUk9rFwMTA1w%3D">Effective C++：改善程序与设计的55个具体做法（第3版 中文版）(博文视点出品)</a> 出版时间：2011-01-01 用纸：轻型纸 含试读</p><p><a href="https://union-click.jd.com/jdc?e=&amp;p=AyIGZRprFQMTAFIeXxAyVlgNRQQlW1dCFFlQCxxKQgFHRE5XDVULR0UVAxMAUh5fEB1LQglGa0JlbHETQQRVYktPAU8fa2p3WApZEGUOHjdQG1oUARUAUxJTJQITBVAZWRYBFDdlG1olSXwGZRlaFAARD1MdWxUyEgBUE14cAxUPXRNYFDIVB1wrP2lmFQdcK2sVAxMAUh5fEDIRN2UrWyUBIkU7GFlHCxsHABteEAIRAl0ZX0VREwJRTAtAABdSAkhcElYiBVQaXxw%3D">Effective C++中文版：改善程序与设计的55个具体做法（第3版）</a> 出版时间：2006-07-01</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;第一章-让自己习惯-C&quot;&gt;第一章 让自己习惯 C++&lt;/h2&gt;
&lt;h3 id=&quot;1-视-C-为一个语言联邦&quot;&gt;1. 视 C++ 为一个语言联邦&lt;/h3&gt;
&lt;p&gt;C++ 是个多重范型编程语言：面向过程、面向对象、函数式、泛型、原编程式，所以他的规约很多，记住四个次语</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="cpp" scheme="https://blog.umu618.com/tags/cpp/"/>
    
  </entry>
  
  <entry>
    <title>无人在意的八哥</title>
    <link href="https://blog.umu618.com/2018/11/25/overlooked-bugs/"/>
    <id>https://blog.umu618.com/2018/11/25/overlooked-bugs/</id>
    <published>2018-11-25T05:59:53.000Z</published>
    <updated>2023-08-05T13:01:26.958Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-主题曲《像屎》">1. 主题曲《像屎》</h2><blockquote><p>实习生黑锅<br>是很遥远的事情<br>八哥算什么<br>早无人在意<br>前埔不夜城<br>处处烤鱼<br>酒杯中好一片男男风情<br>最肯忘却故人失<br>最不屑一顾是相思<br>养着老怕人笑<br>还怕人看轻<br>新又来看乱码呆<br>竟不见有心人去改<br>庸才占着茅坑前途不在</p></blockquote><h2 id="2-百度分享不支持-HTTPS">2. 百度分享不支持 HTTPS</h2><p><a href="http://share.baidu.com/code">百度分享</a>不支持 HTTPS 的解决方案：<a href="https://github.com/hrwhisper/baiduShare">https://github.com/hrwhisper/baiduShare</a>，最早是 2016-07-09 发布，说明百度分享不支持 HTTPS 已经两年以上。</p><h3 id="结论">结论</h3><p>百度可能听不进用户的话，用户宁愿自己解决问题……稣也亲自反馈过，应该是被无视了，至今还没官方支持！</p><h2 id="3-Linux-内核代码风格翻译错误">3. Linux 内核代码风格翻译错误</h2><p><a href="https://www.kernel.org/doc/html/v4.19/translations/zh_CN/coding-style.html#id12">Linux 内核代码风格 v4.19</a></p><blockquote><p>分配一个零长数组的首选形式是这样的：<br><code>p = kcalloc(n, sizeof(...), ...);</code></p></blockquote><p><a href="https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory">原文</a>是“The preferred form for allocating a zeroed array is the following:”，所以“零长”应该改为“填零”。</p><p><a href="https://www.kernel.org/doc/htmldocs/kernel-api/API-kcalloc.html">kcalloc 的文档</a>也说：“kcalloc — allocate memory for an array. The memory is set to zero. ”</p><p>kcalloc 的定义 <a href="https://github.com/torvalds/linux/blob/v4.19/include/linux/slab.h">/include/linux/slab.h</a> 更能说明：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line"> * kcalloc - allocate memory for an array. The memory is set to zero.</span><br><span class="line"> * @n: number of elements.</span><br><span class="line"> * @size: element size.</span><br><span class="line"> * @flags: the type of memory to allocate (see kmalloc).</span><br><span class="line"> *&#x2F;</span><br><span class="line">static inline void *kcalloc(size_t n, size_t size, gfp_t flags)</span><br><span class="line">&#123;</span><br><span class="line">return kmalloc_array(n, size, flags | __GFP_ZERO);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>“零长数组”应该是指：<code>char u[0];</code></p><h3 id="结论-2">结论</h3><p>疑智商太高，学习太快，中国的内核开发者都不屑看翻译的文档。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-主题曲《像屎》&quot;&gt;1. 主题曲《像屎》&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;实习生黑锅&lt;br&gt;
是很遥远的事情&lt;br&gt;
八哥算什么&lt;br&gt;
早无人在意&lt;br&gt;
前埔不夜城&lt;br&gt;
处处烤鱼&lt;br&gt;
酒杯中好一片男男风情&lt;br&gt;
最肯忘却故人失&lt;br&gt;
最</summary>
      
    
    
    
    <category term="宇督观" scheme="https://blog.umu618.com/categories/%E5%AE%87%E7%9D%A3%E8%A7%82/"/>
    
    
    <category term="debug" scheme="https://blog.umu618.com/tags/debug/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB db.stats() 的各种 Size</title>
    <link href="https://blog.umu618.com/2018/11/18/umutech-mongodb-metrics-from-db-stats/"/>
    <id>https://blog.umu618.com/2018/11/18/umutech-mongodb-metrics-from-db-stats/</id>
    <published>2018-11-18T11:16:25.000Z</published>
    <updated>2023-08-05T13:01:26.958Z</updated>
    
    <content type="html"><![CDATA[<h2 id="现象">现象</h2><p>db.stats() 的各种 Size 需要理理，先看例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.action_traces.dataSize()</span><br><span class="line">12489840963</span><br><span class="line"></span><br><span class="line">&gt; db.action_traces.totalSize()</span><br><span class="line">5391249408</span><br><span class="line"></span><br><span class="line">&gt; db.action_traces.storageSize()</span><br><span class="line">3684032512</span><br><span class="line"></span><br><span class="line">&gt; db.action_traces.totalIndexSize()</span><br><span class="line">1707216896</span><br></pre></td></tr></table></figure><h2 id="概念解释">概念解释</h2><p>db.action_traces.stats() 里的 size 就是 db.action_traces.dataSize()，也就是数据本身的逻辑大小。</p><p>由于数据库引擎有压缩概念，所以存储到介质时，可能占用的空间并没有逻辑大小那么多，比如 WiredTiger Storage Engine 的压缩率就挺不错的，dataSize = 12,489,840,963 字节的数据，存到硬盘只有 storageSize = 5,391,249,408 字节。</p><p>其中 totalIndexSize 是索引占存储器的大小，所以 totalSize = storageSize + totalIndexSize。</p><p>注意：索引有时会比数据本身还大……</p><h2 id="参考">参考</h2><p><a href="https://docs.mongodb.com/manual/reference/method/db.collection.stats/index.html">db.collection.stats() — MongoDB Manual</a></p><p><a href="https://docs.mongodb.com/manual/reference/method/db.collection.totalIndexSize/index.html">db.collection.totalIndexSize() — MongoDB Manual</a></p><p><a href="https://docs.mongodb.com/manual/reference/method/db.collection.dataSize/index.html">db.collection.dataSize() — MongoDB Manual</a></p><p><a href="https://docs.mongodb.com/manual/reference/method/db.collection.storageSize/index.html">db.collection.storageSize() — MongoDB Manual</a></p><p><a href="https://docs.mongodb.com/manual/reference/method/db.collection.totalSize/">db.collection.totalSize() — MongoDB Manual</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;现象&quot;&gt;现象&lt;/h2&gt;
&lt;p&gt;db.stats() 的各种 Size 需要理理，先看例子：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;li</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="ops" scheme="https://blog.umu618.com/tags/ops/"/>
    
    <category term="mongodb" scheme="https://blog.umu618.com/tags/mongodb/"/>
    
  </entry>
  
  <entry>
    <title>截屏热键怎么设置才能截菜单？</title>
    <link href="https://blog.umu618.com/2018/11/18/umutech-screenshot-hotkey/"/>
    <id>https://blog.umu618.com/2018/11/18/umutech-screenshot-hotkey/</id>
    <published>2018-11-18T08:39:22.000Z</published>
    <updated>2023-08-05T13:01:26.958Z</updated>
    
    <content type="html"><![CDATA[<p>稣习惯使用 Ctrl+Shift+A 或 Ctrl+F12 作为截屏热键，而微信 PC 版的默认截屏热键是 Alt+A。</p><p>今天被人问“怎么截菜单？”稣一脸懵逼，回答：“和截其它，有什么不同吗？”对方说：“一按截屏热键菜单就退出了！”</p><p>稣恍然大悟，原来 TA 没改默认热键，只要按下 Alt，菜单确实会退出……</p><p>默认的不一定最好。PS：TX 程序员不懂这个道理吗？为什么选择 Alt+A 这样奇葩的组合！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;稣习惯使用 Ctrl+Shift+A 或 Ctrl+F12 作为截屏热键，而微信 PC 版的默认截屏热键是 Alt+A。&lt;/p&gt;
&lt;p&gt;今天被人问“怎么截菜单？”稣一脸懵逼，回答：“和截其它，有什么不同吗？”对方说：“一按截屏热键菜单就退出了！”&lt;/p&gt;
&lt;p&gt;稣恍然大悟，</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="windows" scheme="https://blog.umu618.com/tags/windows/"/>
    
    <category term="debug" scheme="https://blog.umu618.com/tags/debug/"/>
    
  </entry>
  
  <entry>
    <title>阿理银</title>
    <link href="https://blog.umu618.com/2018/10/27/aliyun-amoy/"/>
    <id>https://blog.umu618.com/2018/10/27/aliyun-amoy/</id>
    <published>2018-10-27T14:44:59.000Z</published>
    <updated>2023-08-05T13:01:26.958Z</updated>
    
    <content type="html"><![CDATA[<p>2018-04-17，收到阿理面试通知邮件，开始观测。</p><p>2018-06-01，猎头和面试官都确认全部通过，只是遇到晋升季，HR 比较忙，会延迟谈 offer。稣同时还在面其它公司，所以觉得延迟点更好！</p><p>整个面试过程，亲身体会到阿理面试的专业性：有当面聊、写代码笔试、电话技术面两轮、HR 两轮。其中其它部门的技术官面试在专业上叫“交叉面试”，这是稣原公司没有的环节。另外，HR 有一票否决权，这要求 HR 的专业性要很高，否则很难服众。</p><p>2018-06-07，主面试官问能不能去杭州，稣其实早就想过这问题，他问的是能不能去 1 年，这远低于稣的预期，直接回答可以去 18 个月。稣 2010 年去过一次杭州，印象太好了，所以去几年，要是混得好，定居是没问题的。</p><p>期间，知道好多同事也面了，但他们大多选择待在厦门办事处，有些直接表示非厦门则拒。稣劝过，厦门只是个办事处，可能不长久，最好还是狠点，考虑长期利益去杭州。</p><p>2018-08-31，是在原公司最后一天。就在前一天，稣的选择还是不开竞业协议就去阿理银，开了就不去。原计划休息一个月，等 HR 把 offer 理清楚。然而由于稣太穷了，休息一个月？不可能滴，天不让！一辈子也别想休息……</p><p>整个 8 月份，现在的公司就每隔几天来催赶紧入职，直到最后一天，稣终于没有其它选项。09-04 入职，中间只休息了一天！</p><p>插播一句：现公司很豪爽，把稣的入职日算到 09-03，多发了一天工资！第一天就感动得一把鼻涕……</p><p>2018-09-10 早，杭州来电：</p><pre><code>- 您好，我是你爸爸 HR，想和您沟通一下，阿理银的 offer。- 哦……（心理活动：我爸爸？哦，原来是阿理爸爸）稣这个月才刚换公司，过几年吧。谢谢啊，谢谢！- 这样啊，那不打扰您了，祝您工作顺利。</code></pre><p>2018-10，稣了解到的厦门阿理银情况，越来越像自己预料的，混乱、军心难聚。加班太厉害，大家叫苦连天，大佬都在杭州、上海，沟通不便。</p><p>当然，稣只能看到槽点。因为如果有些人在厦门阿理银混得很好，他肯定不会找稣吐槽。不过，光看这些问题，稣完全有优势，这些都是稣善于解决的问题。</p><p>稣是说如果……厦门阿理银以后如果撤了，很可能就是因为——错过了稣。反过来，如果壮大了，那是某些人的不幸，稣是看好阿理文化的。</p><p>这次没有吓醒。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;2018-04-17，收到阿理面试通知邮件，开始观测。&lt;/p&gt;
&lt;p&gt;2018-06-01，猎头和面试官都确认全部通过，只是遇到晋升季，HR 比较忙，会延迟谈 offer。稣同时还在面其它公司，所以觉得延迟点更好！&lt;/p&gt;
&lt;p&gt;整个面试过程，亲身体会到阿理面试的专业性：有</summary>
      
    
    
    
    <category term="宇督观" scheme="https://blog.umu618.com/categories/%E5%AE%87%E7%9D%A3%E8%A7%82/"/>
    
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>赚大钱的套路都是一样的</title>
    <link href="https://blog.umu618.com/2018/10/21/logic-of-making-good-money/"/>
    <id>https://blog.umu618.com/2018/10/21/logic-of-making-good-money/</id>
    <published>2018-10-21T11:52:24.000Z</published>
    <updated>2023-08-05T13:01:26.958Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-一个幻想">1. 一个幻想</h2><p>如果全世界每人给我一毛钱，那我不是有六个亿了？</p><p>这个套路是收割大量粉丝，很遗憾普通人做不到。</p><h2 id="2-改进版——收割未来">2. 改进版——收割未来</h2><pre><code>思考一个问题：市盈率为 1000 是什么意思？另一个比较平民的问题：厦门房屋租售比高达 1∶756 是什么意思？</code></pre><p>答案：</p><pre><code>靠分红至少 1000 年才能收回本金。靠收租 63 年（即 756 个月）才能收回购房本钱。</code></pre><p>公司上市后，核心员工拿到的红利，本质上是未来的钱，其它自己拿钱去买股票的人，都是潜在收割对象。其中有一种，比较特别的人是：后期加入没有分到股票、期权的员工，他们因为对公司有感情，得到消息也比外界散民多，所以自行买入，甚至参与员工持股。</p><p>请自行搜索：一个惊人的数据——员工持股七成被套！</p><p>有人在房价上升期买了房子，两年后就卖了，赚到可观的差价。有的倒霉蛋，买完，房价就不涨了，靠收 63 年租是很悲剧的，毕竟房子寿命一般 50 年，属于您的时间最长也就 70 年。</p><h2 id="3-除了死，一切趁早。">3. 除了死，一切趁早。</h2><p>请自行搜索：1900名高管辞职创近5年纪录</p><p><a href="https://www.zhihu.com/question/32128570/answer/514026023">中国股市这一轮暴跌导致了中产阶级和平民怎么样的损失？</a></p><blockquote><p>所有人都在谈论中产阶级和平民，却没有注意到高层，也就是那些上市公司的控股股东，他们才是真的惨。因为普通人炒股很少带杠杆，而股东们，基本上全都带有杠杆。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-一个幻想&quot;&gt;1. 一个幻想&lt;/h2&gt;
&lt;p&gt;如果全世界每人给我一毛钱，那我不是有六个亿了？&lt;/p&gt;
&lt;p&gt;这个套路是收割大量粉丝，很遗憾普通人做不到。&lt;/p&gt;
&lt;h2 id=&quot;2-改进版——收割未来&quot;&gt;2. 改进版——收割未来&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;</summary>
      
    
    
    
    <category term="宇督观" scheme="https://blog.umu618.com/categories/%E5%AE%87%E7%9D%A3%E8%A7%82/"/>
    
    
    <category term="金融" scheme="https://blog.umu618.com/tags/%E9%87%91%E8%9E%8D/"/>
    
  </entry>
  
  <entry>
    <title>EOSIO 资源分配机制</title>
    <link href="https://blog.umu618.com/2018/10/20/umutech-eosio-resource-limits/"/>
    <id>https://blog.umu618.com/2018/10/20/umutech-eosio-resource-limits/</id>
    <published>2018-10-20T07:53:38.000Z</published>
    <updated>2023-08-05T13:01:26.958Z</updated>
    
    <content type="html"><![CDATA[<p>本文为 MEET.ONE 发布的<a href="https://github.com/meet-one/documentation/blob/master/EOSIO-CPU.md">《EOSIO CPU 资源分配原理分析》</a> 的个人版本，稣是其主要编辑之一。</p><h2 id="1-相关概念">1. 相关概念</h2><p>您没看错，以下要介绍的几个概念，都是金融词汇。稣的柚子系列文章，又名《程序员转行做金融》，并兼职卖柚子……</p><ul><li><p>存款准备金率</p><p>Deposit-reserve Ratio。存款准备金是指金融机构为保证客户提取存款和资金清算需要而准备的，是缴存在中央银行的存款，中央银行要求的存款准备金占其存款总额的比例就是存款准备金率。</p><p>经常能听到的“降准不降息，等于装牛逼”里面的“降准”全称就是“降低法定存款准备金率”。</p><p>举个外星的例子：如果存款准备金率为 1‰，就意味着金融机构每吸收 1000 元存款，要向央行缴存 1 元的存款准备金，用于发放贷款的资金为 999 元。</p></li><li><p>挤兑</p><p>Run on Banks。在银行券流通的条件下，银行券持有者争相到发行银行券的银行要求兑现贵金属货币的现象。当一家银行的信用发生动摇，准备金不足，银行券兑现发生困难，就会发生挤兑。挤兑可能使一家银行倒闭，甚至波及整个银行业。现在一般是指存款户集中地大量地到银行提取现钞。</p></li><li><p>涨跌停板制度</p><p>这个不解释了……就问一句：连续 5 天跌停和一天暴跌 41%，您喜欢那种？如果您喜欢没有板的，再多问一句：一天暴跌 99.9% 您觉得怎么样？</p></li><li><p>峰谷电价</p><p>又称“分时电价”，也很好理解。再举个类似的例子：下班高峰期打的，不加价基本打不到，因为别人加价优先接单。</p></li></ul><h2 id="2-资源分配基本原则">2. 资源分配基本原则</h2><p>EOS 账户可用资源与其抵押给资源的柚子数量的关系是：可用资源 = 总可用资源 * 本用户抵押数量 / 全体用户抵押数量。从这个关系上看，存在两个风险：</p><ul><li>大户挤兑散民；</li><li>占着茅坑不拉屎。</li></ul><p>第一个问题，用成本来解决，要通过加仓把别人的比例减少，按目前 3-4 亿的抵押量来说，需要付出的代价极高。</p><p>第二个问题，则通过引入一个放大因子来解决。之所以能放大是因为，某个时间点不拉屎的确实占大多数。只要把您拉屎的时间，除以一天的时间，就可以算出您一天拉屎的占用率。相信是很小的，笑……虽然您有柚子，就有拉屎的权利，但您自己不拉，让给需要拉的也是合理的，毕竟资源利用起来才是好事。</p><p>以 CPU 为例，计算公式为：</p><pre><code>可用 CPU 微秒数 = max_block_cpu_usage * (account_cpu_usage_average_window_ms / block_interval_ms) * staked_cpu_count / total_staked_cpu_count其中 max_block_cpu_usage 是可配置的，当前主网配置为默认值 default_max_block_cpu_usage = 200000所以 max_block_cpu_usage * (account_cpu_usage_average_window_ms / block_interval_ms) = 34560000000</code></pre><p>以主网 2018-10-19 为例，CPU 总质押量为 280053493.80756617 EOS，所以每个 EOS 可用 123.40 us。注意：这个数值是没有放大过的。</p><h2 id="3-堵车问题">3. 堵车问题</h2><p>EOS 定义了两种资源使用状态：拥堵、空闲，由过去一分钟每个块的平均使用量来界定。还是用 CPU 说事：大于 max_block_cpu_usage * target_block_cpu_usage_pct 则进入拥堵。</p><p>两个状态下的可用量本来应该有 1000 倍的差距，但因为有涨跌停板保护，并不会直上直下。每一分钟，只能跌到 99/100，只能涨到 1000/999。所以从拥堵开始到绝对拥堵，有 log(0.001) / log(0.99) = 687 分钟之长；从绝对拥堵完全恢复更慢，是 log(1000) / log(1000/999) = 6904 分钟。目前的 target_block_cpu_usage_pct 已经从 10% 调整到 20%，它提高了总使用量临界值，使拥堵状态更难触碰。</p><p>可用量的变化过程是可能随时改变方向的，类似多头和空头拉锯。比如拥堵时，可用量变少，能够使用资源的用户也随之减少，使用量降到阈值以下，可用量又会开始慢慢上升。</p><h2 id="4-阈值的设定">4. 阈值的设定</h2><p>max_block_cpu_usage 和 target_block_cpu_usage_pct 都是可以配置的，为什么不一次性配高点呢？主要考虑的因素是，目前各个 BP 的机器性能参差不齐，如果冒然的把这两个值调高，可能会导致节点 replay 变慢，同时对于配置低的机器来说，同步区块也会很吃力。别忘了，我们的准备金率才 1‰，属于严重超发，提高可用率，虽然会使拥堵来得晚点，但真到拥堵的那刻，爆发的能量可是更大的哦！</p><p>总之，还是稳一点好，慢慢涨经验。目前来看昨天的调整，对节点之间的同步、CPU 使用率没有太大影响。</p><h2 id="5-参考">5. 参考</h2><p><a href="https://github.com/EOSIO/eos/blob/master/libraries/chain/resource_limits.cpp">EOSIO 代码</a></p><p><a href="https://www.jianshu.com/p/f914fefa512f">EOS资源模型</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本文为 MEET.ONE 发布的&lt;a href=&quot;https://github.com/meet-one/documentation/blob/master/EOSIO-CPU.md&quot;&gt;《EOSIO CPU 资源分配原理分析》&lt;/a&gt; 的个人版本，稣是其主要编辑之一。&lt;/p</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="调研" scheme="https://blog.umu618.com/tags/%E8%B0%83%E7%A0%94/"/>
    
    <category term="金融" scheme="https://blog.umu618.com/tags/%E9%87%91%E8%9E%8D/"/>
    
    <category term="blockchain" scheme="https://blog.umu618.com/tags/blockchain/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·肥肉是精神累赘</title>
    <link href="https://blog.umu618.com/2018/10/02/reconstructionism-poet-fat-is-a-burden-of-spiritual-progress/"/>
    <id>https://blog.umu618.com/2018/10/02/reconstructionism-poet-fat-is-a-burden-of-spiritual-progress/</id>
    <published>2018-10-02T14:26:34.000Z</published>
    <updated>2023-08-05T13:01:26.958Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·肥肉是精神累赘》：码农低薪城鱼贵，山鸡高瘦厦羊肥。穷不顾身富健美，老来病残高消费。</p><h2 id="注解">注解</h2><p>农民进城写代码，发现农村一斤十几的黄翅，城里卖三四十，实在吃不起……<br>闽清山里有种高脚鸡，几乎没有肥肉，连皮也没有油脂，但是抓回厦门的农村养，全都养肥了！更何况那些肥羊！大量脂肪都是输送到农村富集起来，吃不完的肥肉拿去喂鸡，鸡都肥了，人再吃肥鸡，循环肥胖。<br>去城里超市买羊肉，只能吃得起一斤三十的肥羊肉，而在山里，几乎没有肥肉的羊肉一斤才六十，这要在城里估计得上百了，突然分不清哪里的消费高。在城里因为穷，吃不起好的品种，回到山里才能吃得起。<br>最后不得不得出一个结论：穷人才容易吃胖！这是在浪费生命啊！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·肥肉是精神累赘》：码农低薪城鱼贵，山鸡高瘦厦羊肥。穷不顾身富健美，老来病残高消费。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;农民进城写代码，发现农村一斤十几的黄翅，城里卖三四十，实在吃不起……&lt;br&gt;
闽清山里有种高脚鸡，几乎没有肥肉，连皮也没有油</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="怪悟" scheme="https://blog.umu618.com/tags/%E6%80%AA%E6%82%9F/"/>
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·量子邪稣</title>
    <link href="https://blog.umu618.com/2018/09/16/reconstructionism-poet-quantum-supervisor/"/>
    <id>https://blog.umu618.com/2018/09/16/reconstructionism-poet-quantum-supervisor/</id>
    <published>2018-09-16T10:12:31.000Z</published>
    <updated>2023-08-05T13:01:26.958Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·量子邪稣》：生死无待，诡道莫测，量子邪稣藐神话。</p><h2 id="注解">注解</h2><p>生死无待：叠加态<br>诡道：诡异的轨道<br>莫测：海森堡测不准原理</p><p>霹雳角色“昊天”的诗号：</p><blockquote><p>一睨仙魔惊叹，一笑天地独尊。六界布武，在予一人，<strong>始主藐神话</strong>。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·量子邪稣》：生死无待，诡道莫测，量子邪稣藐神话。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;生死无待：叠加态&lt;br&gt;
诡道：诡异的轨道&lt;br&gt;
莫测：海森堡测不准原理&lt;/p&gt;
&lt;p&gt;霹雳角色“昊天”的诗号：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
  </entry>
  
  <entry>
    <title>《诗盗·算计云好看》</title>
    <link href="https://blog.umu618.com/2018/08/29/reconstructionism-poet-cloud-computing/"/>
    <id>https://blog.umu618.com/2018/08/29/reconstructionism-poet-cloud-computing/</id>
    <published>2018-08-29T01:56:33.000Z</published>
    <updated>2023-08-05T13:01:26.958Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·算计云好看》：百年科技非一般，量子邪稣观之闪。马首回顾娱乐色，云中晴雨一夕间。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·算计云好看》：百年科技非一般，量子邪稣观之闪。马首回顾娱乐色，云中晴雨一夕间。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>为什么稣不追星？</title>
    <link href="https://blog.umu618.com/2018/08/22/why-i-am-not-starchaser/"/>
    <id>https://blog.umu618.com/2018/08/22/why-i-am-not-starchaser/</id>
    <published>2018-08-21T16:00:00.000Z</published>
    <updated>2023-08-05T13:01:26.958Z</updated>
    
    <content type="html"><![CDATA[<p>高中时，很多同学听磁带，谈论共同的明星，稣听的全是一些没人唱的曲或者相对冷门的歌手唱的，于是乎同学都以为稣不追星……</p><p>这个误解好大！其实是稣惊讶地发现小小的一个耳机就可以替代所有歌星，歌星唱功再屌，它也可以播放，稣大胆预测将来 AI 可以代替任何人唱歌，所以稣追的星，其实是——耳机。</p><p>后来为了保护听力，改为扬声器了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;高中时，很多同学听磁带，谈论共同的明星，稣听的全是一些没人唱的曲或者相对冷门的歌手唱的，于是乎同学都以为稣不追星……&lt;/p&gt;
&lt;p&gt;这个误解好大！其实是稣惊讶地发现小小的一个耳机就可以替代所有歌星，歌星唱功再屌，它也可以播放，稣大胆预测将来 AI 可以代替任何人唱歌，所以稣</summary>
      
    
    
    
    <category term="U墨" scheme="https://blog.umu618.com/categories/U%E5%A2%A8/"/>
    
    
    <category term="怪悟" scheme="https://blog.umu618.com/tags/%E6%80%AA%E6%82%9F/"/>
    
    <category term="耶乎知稣" scheme="https://blog.umu618.com/tags/%E8%80%B6%E4%B9%8E%E7%9F%A5%E7%A8%A3/"/>
    
  </entry>
  
  <entry>
    <title>为什么穷稣砸锅卖铁也要买个跑步机装逼？</title>
    <link href="https://blog.umu618.com/2018/08/21/why-buying-a-treadmill/"/>
    <id>https://blog.umu618.com/2018/08/21/why-buying-a-treadmill/</id>
    <published>2018-08-20T16:00:00.000Z</published>
    <updated>2024-04-13T14:38:27.524Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>跑步机可以控制时速，比如用 6KM/h 是比较适合稣的，而野跑则是变速运动，一不小心容易伤到膝盖。</p></li><li><p>可以在跑步机旁边放个空气净化器，而野跑容易吸尾气。</p></li><li><p>健身房有冷气，跑 40 分钟才有的流汗效果，在家不开空调只要 24 分钟，省时省钱。</p></li><li><p>健身房偶尔会有美女来约炮。——这问题很大，因为约炮也轮不到稣，会受刺激，伤心。</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;跑步机可以控制时速，比如用 6KM/h 是比较适合稣的，而野跑则是变速运动，一不小心容易伤到膝盖。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可以在跑步机旁边放个空气净化器，而野跑容易吸尾气。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;健身房有冷气，跑 40 分钟才</summary>
      
    
    
    
    <category term="U墨" scheme="https://blog.umu618.com/categories/U%E5%A2%A8/"/>
    
    
    <category term="耶乎知稣" scheme="https://blog.umu618.com/tags/%E8%80%B6%E4%B9%8E%E7%9F%A5%E7%A8%A3/"/>
    
    <category term="鹏风" scheme="https://blog.umu618.com/tags/%E9%B9%8F%E9%A3%8E/"/>
    
  </entry>
  
  <entry>
    <title>《诗盗·骚年游》</title>
    <link href="https://blog.umu618.com/2018/08/18/reconstructionism-poet-junior-tour/"/>
    <id>https://blog.umu618.com/2018/08/18/reconstructionism-poet-junior-tour/</id>
    <published>2018-08-18T03:40:53.000Z</published>
    <updated>2023-08-05T13:01:26.958Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·骚年游》：<br>算来好景只如斯，惟许有钱支。寻常装逼，等闲递笑，诚意吉祥意。<br>十年情了音尘断，往事不胜思。一狗惨叫，半脸肥鸡，总是咬人屎。<br>仕途茫然财路断，全家不够吃。一心补脑，半脸肥猪，总吃卵磷脂。</p><h2 id="注解">注解</h2><p>作者：那男性CEO开</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·骚年游》：&lt;br&gt;
算来好景只如斯，惟许有钱支。寻常装逼，等闲递笑，诚意吉祥意。&lt;br&gt;
十年情了音尘断，往事不胜思。一狗惨叫，半脸肥鸡，总是咬人屎。&lt;br&gt;
仕途茫然财路断，全家不够吃。一心补脑，半脸肥猪，总吃卵磷脂。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="闽南语" scheme="https://blog.umu618.com/tags/%E9%97%BD%E5%8D%97%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·缩减</title>
    <link href="https://blog.umu618.com/2018/07/24/reconstructionism-poet-retrenching/"/>
    <id>https://blog.umu618.com/2018/07/24/reconstructionism-poet-retrenching/</id>
    <published>2018-07-24T00:49:00.000Z</published>
    <updated>2023-08-05T13:01:26.958Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·缩减》：消费降级已两年，年年总是廿一天。观测完毕就不买，绝欲绝育要成仙。</p><h2 id="注解">注解</h2><p>《被房子掏空的中国人开始消费降级了》<br>观测 21 天后不买大法。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·缩减》：消费降级已两年，年年总是廿一天。观测完毕就不买，绝欲绝育要成仙。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;《被房子掏空的中国人开始消费降级了》&lt;br&gt;
观测 21 天后不买大法。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="金融" scheme="https://blog.umu618.com/tags/%E9%87%91%E8%9E%8D/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·莫干</title>
    <link href="https://blog.umu618.com/2018/07/21/reconstructionism-poet-no-fucking/"/>
    <id>https://blog.umu618.com/2018/07/21/reconstructionism-poet-no-fucking/</id>
    <published>2018-07-21T05:34:00.000Z</published>
    <updated>2023-08-05T13:01:26.958Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·莫干》：莫干山上莫干湖，裸心谷里裸心鼓。为爱鼓掌湖与峰，淫酒赋诗只服稣。</p><h2 id="注解">注解</h2><p>湖与峰：双关语，和某学弟名字同音。<br>搞基军团去金门玩，建议他们——莫干。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·莫干》：莫干山上莫干湖，裸心谷里裸心鼓。为爱鼓掌湖与峰，淫酒赋诗只服稣。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;湖与峰：双关语，和某学弟名字同音。&lt;br&gt;
搞基军团去金门玩，建议他们——莫干。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="打嘴炮" scheme="https://blog.umu618.com/tags/%E6%89%93%E5%98%B4%E7%82%AE/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·槽倾池</title>
    <link href="https://blog.umu618.com/2018/07/17/reconstructionism-poet-bullshit/"/>
    <id>https://blog.umu618.com/2018/07/17/reconstructionism-poet-bullshit/</id>
    <published>2018-07-17T01:01:00.000Z</published>
    <updated>2023-08-05T13:01:26.958Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·槽倾池》：聊八卦，甩锅拍马屁，谣言何沉；乱吐槽，随手扔垃圾，牛皮为轻。</p><h2 id="注解">注解</h2><p>改编自霹雳角色“墨倾池”的诗号。</p><blockquote><p>话九宸，挥袖风云尽，江山何沉，<br>随逸兴，负手乾坤定，苍黄为轻。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·槽倾池》：聊八卦，甩锅拍马屁，谣言何沉；乱吐槽，随手扔垃圾，牛皮为轻。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;改编自霹雳角色“墨倾池”的诗号。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;话九宸，挥袖风云尽，江山何沉，&lt;br&gt;
随逸兴，负手乾坤定，苍</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
  </entry>
  
  <entry>
    <title>人工神经网络训练方法——后向传播</title>
    <link href="https://blog.umu618.com/2018/07/10/umutech-train-ann-using-backpropagation/"/>
    <id>https://blog.umu618.com/2018/07/10/umutech-train-ann-using-backpropagation/</id>
    <published>2018-07-10T13:00:23.000Z</published>
    <updated>2023-08-05T13:01:26.958Z</updated>
    
    <content type="html"><![CDATA[<p>《<a href="/2018/07/05/umutech-train-ann-using-random-search/">人工神经网络训练方法——随机查找</a>》介绍的随机查找方法，有点盲人摸象，所以继续介绍主流的后向传播(BackPropagation)算法。</p><h2 id="填坑">填坑</h2><p>先给随机查找做个优化！上篇中的激活函数统一使用 ReLU，其实这是不好的，输出层可以改为 Sigmoid 或 Tanh：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">inline double ActivationFunction_ReLU(double x) &#123;</span><br><span class="line">  return std::max(0.0, x);</span><br><span class="line">&#125;</span><br><span class="line">inline double ActivationFunction_Sigmoid(double x) &#123;</span><br><span class="line">  return 1.0 &#x2F; (1 + exp(-x));</span><br><span class="line">&#125;</span><br><span class="line">inline double ActivationFunction_Tanh(double x) &#123;</span><br><span class="line">  return (tanh(x) + 1.0) &#x2F; 2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">double AnnRun(const double x[2], double* w) &#123;</span><br><span class="line">  double f &#x3D; ActivationFunction_ReLU(x[0] * w[0] + x[1] * w[1] - w[2]);</span><br><span class="line">  double g &#x3D; ActivationFunction_ReLU(x[0] * w[3] + x[1] * w[4] - w[5]);</span><br><span class="line">  return ActivationFunction_Sigmoid(f * w[6] + g * w[7] - w[8]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>原因很简单，我们已经知道 Xor 的结果不是 0 就是 1，用 ReLU 是可能大于 1 的，而 Sigmoid 和 Tanh 不会大于 1。</p><h2 id="后向传播">后向传播</h2><p>理论学习：<a href="https://www.zhihu.com/question/27239198">《如何直观地解释 back propagation 算法？》</a></p><p>原理：求导</p><p>训练时，x 和 y 都是固定的，要求的是 a 和 b，所以问题是：当 y 偏离了 delta_y，求 a 和 b 应该修正多少？</p><p>分别对 a 和 b 求偏导，则:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dy&#x2F;da &#x3D; x</span><br><span class="line">dy&#x2F;db &#x3D; 1</span><br></pre></td></tr></table></figure><p>所以</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">delta_a &#x3D; delta_y &#x2F; x</span><br><span class="line">delta_b &#x3D; delta_y</span><br></pre></td></tr></table></figure><p>代码不会骗人，来一个简化的例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; BackPropagation.cpp</span><br><span class="line">&#x2F;&#x2F;</span><br><span class="line"></span><br><span class="line">#include &lt;iostream&gt;</span><br><span class="line"></span><br><span class="line">void Train(double&amp; a,</span><br><span class="line">           double&amp; b,</span><br><span class="line">           double input,</span><br><span class="line">           double expect_output,</span><br><span class="line">           double learning_rate) &#123;</span><br><span class="line">  double delta_y &#x3D; expect_output - (input * a + b);</span><br><span class="line">  if (input !&#x3D; 0) &#123;</span><br><span class="line">    a +&#x3D; (delta_y &#x2F; input) * learning_rate;</span><br><span class="line">  &#125;</span><br><span class="line">  b +&#x3D; delta_y * learning_rate;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main() &#123;</span><br><span class="line">  &#x2F;&#x2F; 要求的函数是：y &#x3D; 2 * x + 3</span><br><span class="line">  const double input[4] &#x3D; &#123;0, 1, 2, 3&#125;;</span><br><span class="line">  const double expect_output[4] &#x3D; &#123;3, 5, 7, 9&#125;;</span><br><span class="line"></span><br><span class="line">  &#x2F;&#x2F; 初始化状态是：y &#x3D; 1 * x + 4</span><br><span class="line">  double a &#x3D; 1.0;</span><br><span class="line">  double b &#x3D; 4.0;</span><br><span class="line"></span><br><span class="line">  std::cout &lt;&lt; &quot;Initial: y &#x3D; &quot; &lt;&lt; a &lt;&lt; &quot; * x + &quot; &lt;&lt; b &lt;&lt; &quot;\n&quot;;</span><br><span class="line"></span><br><span class="line">  &#x2F;&#x2F; 两轮就搞定了</span><br><span class="line">  for (int t &#x3D; 0; t &lt; 2; ++t) &#123;</span><br><span class="line">    for (int i &#x3D; 0; i &lt; 4; ++i) &#123;</span><br><span class="line">      Train(a, b, input[i], expect_output[i], 1);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  std::cout &lt;&lt; &quot;Trained: y &#x3D; &quot; &lt;&lt; a &lt;&lt; &quot; * x + &quot; &lt;&lt; b &lt;&lt; &quot;\n&quot;;</span><br><span class="line"></span><br><span class="line">  return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《&lt;a href=&quot;/2018/07/05/umutech-train-ann-using-random-search/&quot;&gt;人工神经网络训练方法——随机查找&lt;/a&gt;》介绍的随机查找方法，有点盲人摸象，所以继续介绍主流的后向传播(BackPropagation)算法。&lt;/p&gt;</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="cpp" scheme="https://blog.umu618.com/tags/cpp/"/>
    
    <category term="machine-learning" scheme="https://blog.umu618.com/tags/machine-learning/"/>
    
  </entry>
  
  <entry>
    <title>人工神经网络训练方法——随机查找</title>
    <link href="https://blog.umu618.com/2018/07/05/umutech-train-ann-using-random-search/"/>
    <id>https://blog.umu618.com/2018/07/05/umutech-train-ann-using-random-search/</id>
    <published>2018-07-05T15:45:52.000Z</published>
    <updated>2023-08-05T13:01:26.958Z</updated>
    
    <content type="html"><![CDATA[<p>《<a href="/2018/06/05/ann/">人工神经网络究竟是什么鬼？</a>》中没有讲到如何训练神经网络，本篇延续用 XOR 运算为例，介绍一种随机查找的训练方式，主要原理是：随机初始化 w，计算错误率，在循环中，保存错误率小的 w，直到错误率小于等于 0.01 为止。</p><p>代码不会骗人，简单的实现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; TrainXor_RandomSearch.cpp</span><br><span class="line">&#x2F;&#x2F; UMUTech @ 2018-07-05 23:45:52</span><br><span class="line">&#x2F;&#x2F; Be aware that I&#39;m only a novice to ANN. My apologies for any wrong info.</span><br><span class="line">&#x2F;&#x2F;</span><br><span class="line">#include &lt;algorithm&gt;</span><br><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include &lt;random&gt;</span><br><span class="line"></span><br><span class="line">std::default_random_engine random_engine;</span><br><span class="line"></span><br><span class="line">void RandomizeW(double* w, size_t size) &#123;</span><br><span class="line">  std::uniform_real_distribution&lt;double&gt; r(0, 1);</span><br><span class="line">  for (size_t i &#x3D; 0; i &lt; size; ++i) &#123;</span><br><span class="line">    w[i] &#x3D; r(random_engine);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void PrintW(double* w, size_t size) &#123;</span><br><span class="line">  for (size_t i &#x3D; 0; i &lt; size; ++i) &#123;</span><br><span class="line">    std::cout &lt;&lt; i &lt;&lt; &quot;\t&quot; &lt;&lt; w[i] &lt;&lt; &quot;\n&quot;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">double ActivationFunction(double x) &#123;</span><br><span class="line">  &#x2F;&#x2F; ReLU</span><br><span class="line">  return std::max(0.0, x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">double AnnRun(const double x[2], double* w) &#123;</span><br><span class="line">  &#x2F;&#x2F; bias 乘了 -1，让结果更好地收敛到 [0, 1]</span><br><span class="line">  double f &#x3D; ActivationFunction(x[0] * w[0] + x[1] * w[1] - w[2]);</span><br><span class="line">  double g &#x3D; ActivationFunction(x[0] * w[3] + x[1] * w[4] - w[5]);</span><br><span class="line">  return ActivationFunction(f * w[6] + g * w[7] - w[8]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main() &#123;</span><br><span class="line">  const double input[4][2] &#x3D; &#123;&#123;0, 0&#125;, &#123;0, 1&#125;, &#123;1, 0&#125;, &#123;1, 1&#125;&#125;;</span><br><span class="line">  const double expect_output[4] &#x3D; &#123;0, 1, 1, 0&#125;;</span><br><span class="line"></span><br><span class="line">  double last_error &#x3D; 1000;</span><br><span class="line"></span><br><span class="line">  double w[3 * 3];</span><br><span class="line">  double w_copy[3 * 3];</span><br><span class="line"></span><br><span class="line">  std::random_device rd;</span><br><span class="line">  random_engine.seed(rd());</span><br><span class="line"></span><br><span class="line">  int train_count &#x3D; 0;</span><br><span class="line">  for (; last_error &gt; 0.01; ++train_count) &#123;</span><br><span class="line">    if (train_count % 10000 &#x3D;&#x3D; 0) &#123;</span><br><span class="line">      std::cout &lt;&lt; &quot;Randomize\n&quot;;</span><br><span class="line">      RandomizeW(w, _countof(w));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    memcpy(w_copy, w, sizeof(w));</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 随机改变 w</span><br><span class="line">    std::uniform_real_distribution&lt;double&gt; r(-0.5, 0.5);</span><br><span class="line">    for (int i &#x3D; 0; i &lt; 3 * 3; ++i) &#123;</span><br><span class="line">      w[i] +&#x3D; r(random_engine);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    double error &#x3D; pow(AnnRun(input[0], w) - expect_output[0], 2.0);</span><br><span class="line">    error +&#x3D; pow(AnnRun(input[1], w) - expect_output[1], 2.0);</span><br><span class="line">    error +&#x3D; pow(AnnRun(input[2], w) - expect_output[2], 2.0);</span><br><span class="line">    error +&#x3D; pow(AnnRun(input[3], w) - expect_output[3], 2.0);</span><br><span class="line"></span><br><span class="line">    if (error &lt; last_error) &#123;</span><br><span class="line">      &#x2F;&#x2F; 错误率更小，保存</span><br><span class="line">      last_error &#x3D; error;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      &#x2F;&#x2F; 恢复 w</span><br><span class="line">      memcpy(w, w_copy, sizeof(w));</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  printf(&quot;Finished in %d loops.\n&quot;, train_count);</span><br><span class="line"></span><br><span class="line">  PrintW(w, _countof(w));</span><br><span class="line"></span><br><span class="line">  &#x2F;* Run the network and see what it predicts. *&#x2F;</span><br><span class="line">  printf(&quot;Output for [%1.f, %1.f] is %1.f.\n&quot;, input[0][0], input[0][1],</span><br><span class="line">         AnnRun(input[0], w));</span><br><span class="line">  printf(&quot;Output for [%1.f, %1.f] is %1.f.\n&quot;, input[1][0], input[1][1],</span><br><span class="line">         AnnRun(input[1], w));</span><br><span class="line">  printf(&quot;Output for [%1.f, %1.f] is %1.f.\n&quot;, input[2][0], input[2][1],</span><br><span class="line">         AnnRun(input[2], w));</span><br><span class="line">  printf(&quot;Output for [%1.f, %1.f] is %1.f.\n&quot;, input[3][0], input[3][1],</span><br><span class="line">         AnnRun(input[3], w));</span><br><span class="line"></span><br><span class="line">  return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果主要看人品，可能跑个不停，也可能几乎立刻完成。一次运行结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Randomize</span><br><span class="line">Finished in 344 loops.</span><br><span class="line">0       -1.18943</span><br><span class="line">1       -1.60685</span><br><span class="line">2       -0.848489</span><br><span class="line">3       1.28751</span><br><span class="line">4       1.21697</span><br><span class="line">5       0.532657</span><br><span class="line">6       -2.27322</span><br><span class="line">7       -0.77646</span><br><span class="line">8       -1.57966</span><br><span class="line">Output for [0, 0] is 0.</span><br><span class="line">Output for [0, 1] is 1.</span><br><span class="line">Output for [1, 0] is 1.</span><br><span class="line">Output for [1, 1] is 0.</span><br></pre></td></tr></table></figure><p>另一次：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Randomize</span><br><span class="line">Finished in 444 loops.</span><br><span class="line">0       1.6138</span><br><span class="line">1       1.4345</span><br><span class="line">2       1.33925</span><br><span class="line">3       1.50895</span><br><span class="line">4       1.09461</span><br><span class="line">5       -0.283878</span><br><span class="line">6       -2.37528</span><br><span class="line">7       1.08117</span><br><span class="line">8       0.239626</span><br><span class="line">Output for [0, 0] is 0.</span><br><span class="line">Output for [0, 1] is 1.</span><br><span class="line">Output for [1, 0] is 1.</span><br><span class="line">Output for [1, 1] is 0.</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《&lt;a href=&quot;/2018/06/05/ann/&quot;&gt;人工神经网络究竟是什么鬼？&lt;/a&gt;》中没有讲到如何训练神经网络，本篇延续用 XOR 运算为例，介绍一种随机查找的训练方式，主要原理是：随机初始化 w，计算错误率，在循环中，保存错误率小的 w，直到错误率小于等于 0.0</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="cpp" scheme="https://blog.umu618.com/tags/cpp/"/>
    
    <category term="machine-learning" scheme="https://blog.umu618.com/tags/machine-learning/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·魖</title>
    <link href="https://blog.umu618.com/2018/07/04/reconstructionism-poet-nothingness/"/>
    <id>https://blog.umu618.com/2018/07/04/reconstructionism-poet-nothingness/</id>
    <published>2018-07-04T03:51:17.000Z</published>
    <updated>2023-08-05T13:01:26.958Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·魖》：五味俱毒，七情皆苦。人生百态，尽归虚无。</p><h2 id="注解">注解</h2><p>平淡是真，平静是福。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·魖》：五味俱毒，七情皆苦。人生百态，尽归虚无。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;平淡是真，平静是福。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
  </entry>
  
  <entry>
    <title>显卡名称包含汉字导致 DX11 程序无法正常工作</title>
    <link href="https://blog.umu618.com/2018/06/29/umutech-chinese-name-gpu/"/>
    <id>https://blog.umu618.com/2018/06/29/umutech-chinese-name-gpu/</id>
    <published>2018-06-29T03:04:11.000Z</published>
    <updated>2023-08-05T13:01:26.958Z</updated>
    
    <content type="html"><![CDATA[<p>某游戏在 RemoteFX 远程桌面下无法正常运行。提示：</p><blockquote><p>运行引擎需要DX11特征等级10.0</p></blockquote><p>英文版提示：</p><blockquote><p>DX11 feature level 10.0 is required to run the engine.</p></blockquote><p>稣立刻调用 dxdiag 查看，结果 Feature Level 10.0 是支持的！</p><p>然后决定自己写个 DX11 程序测试一下，于是找到这里例子：<a href="http://www.rastertek.com/dx11s2tut03.html">Tutorial 3: Initializing DirectX 11</a>，稍加修改后运行，得到一个错误提示：</p><blockquote><p>MessageBox(hwnd, L&quot;Could not initialize Direct3D.“, L&quot;Error”, MB_OK);</p></blockquote><p>接下来，仔细检查这个初始化过程，发现居然是因为 wcstombs_s 失败引起的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; Convert the name of the video card to a character array and store it.</span><br><span class="line">error &#x3D; wcstombs_s(&amp;stringLength, m_videoCardDescription, 128, adapterDesc.Description, 128);</span><br></pre></td></tr></table></figure><p>原来是因为 RemoteFX 显卡的名字里有汉字……</p><blockquote><p>RemoteFX 3D 视频适配器</p></blockquote><p>设备名称：</p><blockquote><p>Microsoft RemoteFX 图形设备 - WDDM</p></blockquote><p>通过注册表改显卡名字，测试代码的问题解决！但 wcstombs_s 这块代码其实并无与显卡功能相关，去掉这段代码也可以解决问题。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;某游戏在 RemoteFX 远程桌面下无法正常运行。提示：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;运行引擎需要DX11特征等级10.0&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;英文版提示：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;DX11 feature level 1</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="windows" scheme="https://blog.umu618.com/tags/windows/"/>
    
    <category term="debug" scheme="https://blog.umu618.com/tags/debug/"/>
    
  </entry>
  
  <entry>
    <title>RemoteFX 能否用于物理机的远程桌面服务？</title>
    <link href="https://blog.umu618.com/2018/06/23/umutech-remotefx/"/>
    <id>https://blog.umu618.com/2018/06/23/umutech-remotefx/</id>
    <published>2018-06-23T13:54:47.000Z</published>
    <updated>2023-08-05T13:01:26.958Z</updated>
    
    <content type="html"><![CDATA[<h2 id="用户故事">用户故事</h2><p>大学时期（2002-2006 年）经常在学校机房使用远程桌面（RDP）连自己宿舍的电脑，当时的校园网是 100Mpbs 的，但每次一开视频，还是卡成翔……</p><p>后来慢慢发现，远程桌面看视频已经不是事儿了，甚至可以玩游戏！</p><p>近几年，云游戏的概念越来越流行，曾经用远程桌面连到开启 RemoteFX 的虚拟机上玩过街霸，发现体验很好。于是有了一个疑问：稣有一台 PC，配了块 GeForce GTX 980 Ti 显卡，能不能开启 RemoteFX，然后在烂机器远程桌面上去愉快地玩耍？</p><h2 id="调研结论">调研结论</h2><p>截止目前还不能在物理机上开启远程桌面的 RemoteFX 功能。其中原因是微软的商业策略，并不是技术问题。</p><h2 id="参考链接">参考链接</h2><p><a href="https://social.technet.microsoft.com/Forums/en-US/5611ed56-3e79-413e-8dbf-a8c7fb4f1493/windows-10-rdp-with-remotefx">Windows 10 RDP with RemoteFX</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;用户故事&quot;&gt;用户故事&lt;/h2&gt;
&lt;p&gt;大学时期（2002-2006 年）经常在学校机房使用远程桌面（RDP）连自己宿舍的电脑，当时的校园网是 100Mpbs 的，但每次一开视频，还是卡成翔……&lt;/p&gt;
&lt;p&gt;后来慢慢发现，远程桌面看视频已经不是事儿了，甚至可以玩游</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="调研" scheme="https://blog.umu618.com/tags/%E8%B0%83%E7%A0%94/"/>
    
  </entry>
  
  <entry>
    <title>人工神经网络究竟是什么鬼？</title>
    <link href="https://blog.umu618.com/2018/06/05/ann/"/>
    <id>https://blog.umu618.com/2018/06/05/ann/</id>
    <published>2018-06-05T15:12:43.000Z</published>
    <updated>2023-10-29T12:24:56.937Z</updated>
    
    <content type="html"><![CDATA[<p>难解释的问题，就举个简单的例子说明。PS：稣才入门，也不懂不简单的例子……</p><h2 id="题目">题目</h2><p>有一个未知的函数 f(x1, x2)，其中 x1、x2 取值和结果符合下表：</p><table><thead><tr><th style="text-align:right">x1</th><th style="text-align:right">x2</th><th style="text-align:right">f(x1, x2)</th></tr></thead><tbody><tr><td style="text-align:right">0</td><td style="text-align:right">0</td><td style="text-align:right">0</td></tr><tr><td style="text-align:right">0</td><td style="text-align:right">1</td><td style="text-align:right">1</td></tr><tr><td style="text-align:right">1</td><td style="text-align:right">0</td><td style="text-align:right">1</td></tr><tr><td style="text-align:right">1</td><td style="text-align:right">1</td><td style="text-align:right">0</td></tr></tbody></table><p>求 f(x1, x2) 的表达式。</p><h2 id="求解">求解</h2><h3 id="人脑抢答">人脑抢答</h3><p>知道异或运算的人可以马上抢答：f(x1, x2) = x1 ^ x2，其中 ^ 是 C 语言里表示 XOR 的运算符。</p><p>很明显，这答案是准确无误的，人脑的速度还可以……</p><h3 id="放开那个函数，让-AI-来！">放开那个函数，让 AI 来！</h3><p>人工神经网络（Artificial Neural Network，简称 ANN）解决问题的思路相对而言不太精确，大概就是——通过几个函数算出一个近似值，接近 0 就说是 0，接近 1 就说是 1。</p><p>首先，引入一个激活函数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sigmoid(x) &#x3D; 1.0 &#x2F; (1 + exp(-x))</span><br></pre></td></tr></table></figure><p>举个例子：sigmoid(1.777) = 1.0 / (1 + exp(-1.777)) ≈ 0.855326</p><p>类似的激活函数还有 tanh，但其实用 ReLU 更好，既简单又接近生物上的神经元。参考：<a href="https://www.zhihu.com/question/50396271">在神经网络中，激活函数sigmoid和tanh除了阈值取值外有什么不同吗？</a>、<a href="https://www.zhihu.com/question/29021768">请问人工神经网络中的activation function的作用具体是什么？为什么ReLu要好过于tanh和sigmoid function?</a>。但是 sigmoid 比较古老，很多教材拿它举例，稣也沿用它。</p><p>我们要求的函数是这样的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">f(x1, x2) &#x3D; sigmoid(w1 * g(x1, x2) + w2 * h(x1, x2) + w3)</span><br></pre></td></tr></table></figure><p>其中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">g(x1, x2) &#x3D; sigmoid(wg1 * x1 + wg2 * x2 + wg3)</span><br><span class="line">h(x1, x2) &#x3D; sigmoid(wh1 * x1 + wh2 * x2 + wh3)</span><br></pre></td></tr></table></figure><p>最终要求的是这三对系数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wg1 wg2 wg3</span><br><span class="line">wh1 wh2 wh3</span><br><span class="line">w1 w2 w3</span><br></pre></td></tr></table></figure><p>通俗说法叫求 w，其中序号为 3 的系数，又叫 bias 或者 b。</p><p>函数 f、g、h 其实就是一个神经元（neuron），结构如下：</p><p><img src="/images/2018/20180606-ann.png" alt="神经元结构图"></p><p><a href="/images/2018/20180606-ann.gv">神经元结构图 DOT 源文件</a></p><p>训练出来的一个解是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-5.734 -6.029 1.777</span><br><span class="line">-3.261 -3.172 4.460</span><br><span class="line">-6.581 5.826 -2.444</span><br></pre></td></tr></table></figure><p>下面我们来验证一下，举例 x1 = x2 = 0 比较容易算：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">g(0, 0) &#x3D; sigmoid(1.777) ≈ 0.855326</span><br><span class="line">h(0, 0) &#x3D; sigmoid(4.460) ≈ 0.988570</span><br><span class="line">f(0.855326, 0.988569) &#x3D; sigmoid(-6.581 * 0.855326 + 5.826 * 0.988570 + -2.444)</span><br><span class="line">  &#x3D; sigmoid(-2.313491586) ≈ 0.090012 ≈ 0</span><br></pre></td></tr></table></figure><h2 id="结论">结论</h2><p>ANN 就是数学的运用，训练就是在随机的 w 组合通过参考已知解逐渐纠正误差，逼出正解 w 组合。</p><p>打个比方，练习投篮的过程：肉眼观测，无数次调高低角度、出手力度、左右偏差，最终找到一套合适的参数，这个叫培养了球感……</p><p>机器学习也差不多是这样的过程，只是它比人快很多。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;难解释的问题，就举个简单的例子说明。PS：稣才入门，也不懂不简单的例子……&lt;/p&gt;
&lt;h2 id=&quot;题目&quot;&gt;题目&lt;/h2&gt;
&lt;p&gt;有一个未知的函数 f(x1, x2)，其中 x1、x2 取值和结果符合下表：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th styl</summary>
      
    
    
    
    <category term="宇督观" scheme="https://blog.umu618.com/categories/%E5%AE%87%E7%9D%A3%E8%A7%82/"/>
    
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
    <category term="数学" scheme="https://blog.umu618.com/tags/%E6%95%B0%E5%AD%A6/"/>
    
    <category term="machine-learning" scheme="https://blog.umu618.com/tags/machine-learning/"/>
    
  </entry>
  
  <entry>
    <title>学习 MongoDB 选举机制</title>
    <link href="https://blog.umu618.com/2018/05/31/umutech-mongodb-vote/"/>
    <id>https://blog.umu618.com/2018/05/31/umutech-mongodb-vote/</id>
    <published>2018-05-31T10:25:32.000Z</published>
    <updated>2023-08-05T13:01:26.958Z</updated>
    
    <content type="html"><![CDATA[<p>为了快速了解 MongoDB 选举机制，在网上找了一些文章来学习，后来发现里面提到的一些机制都过时了，尝试看代码了解，发现协议有 PV0 和 PV1 两种。</p><p>代码：<a href="https://github.com/mongodb/mongo/blob/r3.6.5/src/mongo/db/repl/topology_coordinator.cpp">https://github.com/mongodb/mongo/blob/r3.6.5/src/mongo/db/repl/topology_coordinator.cpp</a></p><p>一篇比较新的参考文章：<a href="https://blog.csdn.net/wentyoon/article/details/78986174">https://blog.csdn.net/wentyoon/article/details/78986174</a></p><p>如果新选举出的主节点立马挂掉，至少需要 30s 重新选主，这个是由 leaseTime 常量决定的：</p><p>const Seconds TopologyCoordinator::VoteLease::leaseTime = Seconds(30);</p><p>PV0 时，一个反对会将最终票数减 10000，即在绝大多数情况下,只要有节点反对，请求的节点就不能成为主节点，由 prepareElectResponse 函数实现，里面有不少 vote = -10000;，PV1 版本取消了否决票。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;为了快速了解 MongoDB 选举机制，在网上找了一些文章来学习，后来发现里面提到的一些机制都过时了，尝试看代码了解，发现协议有 PV0 和 PV1 两种。&lt;/p&gt;
&lt;p&gt;代码：&lt;a href=&quot;https://github.com/mongodb/mongo/blob/r</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="mongodb" scheme="https://blog.umu618.com/tags/mongodb/"/>
    
  </entry>
  
  <entry>
    <title>留一法交叉验证</title>
    <link href="https://blog.umu618.com/2018/05/26/leave-one-out-cross-validation/"/>
    <id>https://blog.umu618.com/2018/05/26/leave-one-out-cross-validation/</id>
    <published>2018-05-26T15:27:16.000Z</published>
    <updated>2023-08-05T13:01:26.958Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目">题目</h2><p>假设有如下一组输入并输出一个实数的数据，则线性回归（Y = bX + c）的留一法交叉验证均方差为？</p><table><thead><tr><th style="text-align:right">X</th><th style="text-align:right">Y</th></tr></thead><tbody><tr><td style="text-align:right">0</td><td style="text-align:right">2</td></tr><tr><td style="text-align:right">2</td><td style="text-align:right">2</td></tr><tr><td style="text-align:right">3</td><td style="text-align:right">1</td></tr></tbody></table><p>A. 10/27<br>B. 20/27<br>C. 50/27<br>D. 49/27</p><h2 id="概念">概念</h2><h3 id="1-交叉验证（Cross-Validation）">1. 交叉验证（Cross Validation）</h3><p>也称作循环估计（Rotation Estimation），是一种统计学上将数据样本切割成较小子集的实用方法。</p><p>在模式识别（Pattern Recognition）和机器学习（Machine Learning）的相关研究中，经常会将整个数据集合分成两个部分，分别是训练集合和测试集合。在一个 n 个元素的集合，选择 r 个元素做训练集（非空集，r &gt; 0），剩下的 n - r 个做测试集，这可以用“组合”计算有多少种可能。把每种组合都做过一遍就是交叉验证。</p><h3 id="2-组合（Combination）">2. 组合（Combination）</h3><p>nCr 表示由 n 个不同元素中，每次取出 r 个不重复之元素的组合，用符号 C n（下标）r（上标）表示。</p><h3 id="3-留一法交叉验证（Leave-one-out-Cross-Validation）">3. 留一法交叉验证（Leave-one-out Cross Validation）</h3><p>只留一个元素做测试集，即：r = n - 1。</p><h3 id="4-均方差">4. 均方差</h3><p>标准差（Standard Deviation），别名：标准偏差、实验标准差、均方差，是离均差平方的算术平均数的平方根，用 σ 表示。标准差是方差的算术平方根。标准差能反映一个数据集的离散程度。平均数相同的两组数据，标准差未必相同。</p><h2 id="解题">解题</h2><p>三个元素的集合留一，一共有 3C1 = 3 种组合，画 3 个点：</p><ul><li>A = (0, 2)</li><li>B = (2, 2)</li><li>C = (3, 1)</li></ul><ol><li>连接 A 和 B，得到直线 Y = 2，C 点的偏差 = 2 - 1 = 1</li><li>连接 A 和 C，得到直线 Y = (6 - X) / 3，B 点的偏差 = 4/3 - 2 = -2/3</li><li>连接 B 和 C，得到直线 Y = 4 - X，A 点的偏差 = 4 - 2 = 2</li></ol><p>所以方差为：(1^2 + (2/3)^2 + 2^2) / 3 = (9 + 4 + 4 * 9) / 27 = 49/27</p><p>题目说的是“均方差”，根据百度百科<a href="https://baike.baidu.com/item/%E6%A0%87%E5%87%86%E5%B7%AE">标准差</a>词条的说法，“均方差”==标准差，要开平方……所以题目中的答案没有一个是对的。出题者想让我们选 D，稣偏要选 F，你懂的 ck……</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;题目&quot;&gt;题目&lt;/h2&gt;
&lt;p&gt;假设有如下一组输入并输出一个实数的数据，则线性回归（Y = bX + c）的留一法交叉验证均方差为？&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:right&quot;&gt;X&lt;/th&gt;
&lt;th s</summary>
      
    
    
    
    <category term="宇督观" scheme="https://blog.umu618.com/categories/%E5%AE%87%E7%9D%A3%E8%A7%82/"/>
    
    
    <category term="debug" scheme="https://blog.umu618.com/tags/debug/"/>
    
    <category term="做题" scheme="https://blog.umu618.com/tags/%E5%81%9A%E9%A2%98/"/>
    
    <category term="数学" scheme="https://blog.umu618.com/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>特稣垃</title>
    <link href="https://blog.umu618.com/2018/05/22/tesula/"/>
    <id>https://blog.umu618.com/2018/05/22/tesula/</id>
    <published>2018-05-22T11:16:12.000Z</published>
    <updated>2024-04-13T14:38:27.526Z</updated>
    
    <content type="html"><![CDATA[<p>“你留在我身体里的东西，我会用内力逼出来！”</p><p>“别装逼，稣戴套了……”</p><p>话虽如此，稣还是既吃惊又不解，刚才没有高空坠落啊！这到底是肿么肥事？稣瞄了一眼自己的 iPhone 7，红色的套依然崭新地散发金属般的光泽，显示的时间是凌晨 4 点多，但日期是 2019 年……这个女人，稣好像不认识，为什么会睡在特稣垃里？必须好好追忆一番！</p><p>稣买了一辆特稣垃摸抖歪，改造成一个可以写代码和睡觉的移动小房，每周都有一两天，吃完晚饭，上健身房锻炼，洗澡，然后把车停到 JFC 充电车位，开空调，写代码，睡觉。这一系列动作灰常自然，不太可能出八哥，但是这个女人……实在是个异常。稣从来不去酒吧，健身房也没认识这号人物。难道这是特稣垃的车灵？</p><p>以其乱猜，不如直接问她，“你是人是车？怎么会在这里？”</p><p>“车？你怎么不问是不是鬼？我是你过去妻啊！”</p><p>“小凰？你怎么变成这样的……样子都和上次不一样！”</p><p>“你忘记了？我们刚刚从 2024 年穿越回来的，这是我 2024 年的样子。”</p><p>“呃，这么一说，仔细看你，还有点像小老婆！”</p><p>“哈，是的，她因为不好好学习，已经被我取代，都消失好几年了。”</p><p>“握叉！？这事情稣会同意？”</p><p>“别装逼，你就喜欢知书达理的美女，这不就是我？”</p><p>“稣是这种人吗？咳，嗯！稣就是这种人……但为什么我们要穿越到过去？”</p><p>“因为在 2024 年，电动房车很流行，很多程序员下班，就找充电桩车位过夜，关系好的一些基友，还会相约停在一起，好交流。然后大量上班族都不买房，不生孩子了，房价大跌。你穿越的目的就是要告诉现在的自己，记得把房子卖了，而且不要买特斯拉，上班族专用的国产电动房车很快就要流行了。”</p><p>“这个理由不错，但穿越本身是什么鬼？太不科学了！”</p><p>“没错，我就是鬼！我带你来的。”</p><p>吓醒。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;“你留在我身体里的东西，我会用内力逼出来！”&lt;/p&gt;
&lt;p&gt;“别装逼，稣戴套了……”&lt;/p&gt;
&lt;p&gt;话虽如此，稣还是既吃惊又不解，刚才没有高空坠落啊！这到底是肿么肥事？稣瞄了一眼自己的 iPhone 7，红色的套依然崭新地散发金属般的光泽，显示的时间是凌晨 4 点多，但日期</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="打嘴炮" scheme="https://blog.umu618.com/tags/%E6%89%93%E5%98%B4%E7%82%AE/"/>
    
    <category term="鹏风" scheme="https://blog.umu618.com/tags/%E9%B9%8F%E9%A3%8E/"/>
    
  </entry>
  
  <entry>
    <title>小本科对非欧几里得几何学脱敏的故事</title>
    <link href="https://blog.umu618.com/2018/05/19/noneuclidean-geometry/"/>
    <id>https://blog.umu618.com/2018/05/19/noneuclidean-geometry/</id>
    <published>2018-05-19T13:23:40.000Z</published>
    <updated>2023-08-05T13:01:26.958Z</updated>
    
    <content type="html"><![CDATA[<h2 id="高中时代">高中时代</h2><p>从小喜欢天文和数学，但高中时，有两个事件，促使后来读了挨踢专业。</p><ol><li>穷。所有人都说读天文学很烧钱，穷人家是负担不起的，没学到家就出来又不好就业。</li></ol><p>高一，有电脑课，但觉得电脑没人脑聪明，没什么兴趣。后来意外看到 Bill Gates 的事迹，明白了挨踢行业是很赚钱的，而且这个行业不怎么需要讲人情世故，也是自己可能擅长的领域。</p><ol start="2"><li>被非欧几何打击了。和数学课代表交好，经常讨论数学，都喜欢自学超前的知识。其中讨论过的一个最大的未解之谜就是：</li></ol><blockquote><p>三角形内角和可以大于或小于 180 度。</p></blockquote><p>当时只学到一些皮毛概念，仅知道“黎曼几何学是大于，罗巴切夫斯基几何学是小于”，但已经大受打击……</p><h2 id="大学时代">大学时代</h2><p>大部分时间都用于实践编程技术，原来比较擅长的数学和英语都被牺牲，不怎么认真去学。</p><p>但有追究过非欧几何学到底怎么来的：公理体系中采用了不同的平行定理。</p><ul><li><p>在平面内，从直线外一点，至少可以做两条直线和这条直线平行；</p></li><li><p>在平面内，从直线外一点，有且只有一条直线和这条直线平行；</p></li><li><p>在平面内，从直线外一点，不能做直线和已知直线平行。</p></li></ul><p>当时没有去深入理解，看了一个例子说球体表面的两条直线都会相交，结果就对非欧几何过敏了……脑子里不断产生抵抗，球面不是平的，球面的直线特么是弯的，这让直男怎么接受？</p><p>然后就把非欧几何学当成是外星的哲学了，觉得不是个有用的理论，完全忽视了自以为能理解的广义相对论是和黎曼几何学有关的！</p><h2 id="突然脱敏">突然脱敏</h2><p>最近补了点数学基础，顺便想把这个问题解决掉。纠正过程如下：</p><ul><li>球面上的两点之间，直线最短，嗯，在球体上看，最短的直线是穿过球体内部的，那个才是直的。</li></ul><p><strong>不对，我们讨论的是二维的面，你怎么扯到三维的球体，还内部？</strong></p><ul><li>球面上的直线是指什么？用地球来比方，赤道线和纬度线是不是都算？</li></ul><p><strong>赤道线是，但其他的纬度线不是，其它纬度线上的两点之间最短的线，并不在纬度线上，纬度线绕的更远，最短的还是这两点加上球心切面上两点之间那段圆弧（劣弧）。</strong></p><ul><li>直线只是定义一样，但在两种不同体系的面上样子是不一样的？</li></ul><p><strong>是的，“两点之间，直线段最短”球面上的直线，在三维世界看确实是弯的，但在二维世界，它是直的……是直的……是直的。在四维空间看我们的世界，也许也是弯的，但反正我们在三维空间看，是直的！虽然我们能找到其实是弯的证据。</strong></p><h2 id="脱敏是很重要的能力">脱敏是很重要的能力</h2><p>这其实不难理解，但长期自我抑制，不去解决它，再好的理解能力也没用武之地。</p><p>有些故事，要先相信，才有续集。</p><p>你是直的，还是弯的？</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;高中时代&quot;&gt;高中时代&lt;/h2&gt;
&lt;p&gt;从小喜欢天文和数学，但高中时，有两个事件，促使后来读了挨踢专业。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;穷。所有人都说读天文学很烧钱，穷人家是负担不起的，没学到家就出来又不好就业。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;高一，有电脑课，但觉得电脑没</summary>
      
    
    
    
    <category term="宇督观" scheme="https://blog.umu618.com/categories/%E5%AE%87%E7%9D%A3%E8%A7%82/"/>
    
    
    <category term="debug" scheme="https://blog.umu618.com/tags/debug/"/>
    
    <category term="洗脑" scheme="https://blog.umu618.com/tags/%E6%B4%97%E8%84%91/"/>
    
  </entry>
  
  <entry>
    <title>你的 Windows 许可证即将过期</title>
    <link href="https://blog.umu618.com/2018/05/12/umutech-prevent-licensing-ui/"/>
    <id>https://blog.umu618.com/2018/05/12/umutech-prevent-licensing-ui/</id>
    <published>2018-05-12T09:12:29.000Z</published>
    <updated>2023-10-29T12:24:56.937Z</updated>
    
    <content type="html"><![CDATA[<p>因为穷，没钱买正版 Windows 10，但也不用盗版，所以一直用试用版。</p><p>最近提示过期的对话框频繁弹出，终于惹恼稣，凭技术把它干掉。</p><p><img src="/images/2018/20180512-0.png" alt="你的 Windows 许可证即将过期" title="你的 Windows 许可证即将过期"></p><p><img src="/images/2018/20180512-1.png" alt="不要提醒稣" title="不要提醒稣"></p><p><a href="https://gitee.com/umutech/windows-cpp/tree/master/source/utility/PreventLicensingUI">代码在这里</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;因为穷，没钱买正版 Windows 10，但也不用盗版，所以一直用试用版。&lt;/p&gt;
&lt;p&gt;最近提示过期的对话框频繁弹出，终于惹恼稣，凭技术把它干掉。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2018/20180512-0.png&quot; alt=&quot;你的 Windows </summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="windows" scheme="https://blog.umu618.com/tags/windows/"/>
    
    <category term="作品" scheme="https://blog.umu618.com/tags/%E4%BD%9C%E5%93%81/"/>
    
    <category term="cpp" scheme="https://blog.umu618.com/tags/cpp/"/>
    
  </entry>
  
  <entry>
    <title>批量导出 QQ 空间说说</title>
    <link href="https://blog.umu618.com/2018/05/09/umutech-export-qzone-shuoshuo/"/>
    <id>https://blog.umu618.com/2018/05/09/umutech-export-qzone-shuoshuo/</id>
    <published>2018-05-09T14:22:15.000Z</published>
    <updated>2024-04-11T15:14:12.921Z</updated>
    
    <content type="html"><![CDATA[<h2 id="创作故事">创作故事</h2><p>2015-03-16 为了导出自己的说说，写了个半自动的程序，手动分析几个参数填到代码理，很快就刷刷地下载了 7 年的说说。第二天，就在知乎回答了两贴。</p><p><a href="https://www.zhihu.com/question/20935223/answer/42220600">如何一次性导出QQ空间说说？</a></p><p><a href="https://www.zhihu.com/question/24577183/answer/42220837">如何批量导出特定 QQ 号的所有说说？</a></p><p>2015-09-07 发现导出程序失效了，参数有点变化，但很快又跟进。</p><p>2015-11-27 又失效了，除了 json 字段有变化，还增加了对 Cookie 的验证，于是又加上了 Cookie 的模拟。</p><p>2015-12-11 又又失效了，这次增加了对 UserAgent 的验证……继续跟进。</p><p>由于知乎的热度，越来越多的人找 UMU 导出，<strong>但这个程序是半自动的</strong>，会占用宝贵的时间，所以要收点人工费。需要的可以联系微信 UMUTech，QQ：154401181（验证消息：qzone，QQ 比较少用，尽量先加微信）。</p><h2 id="收费规则">收费规则</h2><h3 id="1-8-88-元起，每-1000-条-8-88-元人民币；">1. 8.88 元起，每 1000 条 8.88 元人民币；</h3><h3 id="2-未满-1000-条部分，采用进一法，即-10001-条，是收费-8-88-2-17-76-元；">2. 未满 1000 条部分，采用进一法，即 10001 条，是收费 8.88 * 2 = 17.76 元；</h3><h3 id="3-封顶-88-88-元，所以，如果您的说说很多也不用害怕会很贵。">3. 封顶 88.88 元，所以，如果您的说说很多也不用害怕会很贵。</h3><h3 id="4-支持-QQ-红包、微信、支付宝。">4. 支持 QQ 红包、微信、支付宝。</h3><h2 id="FAQ">FAQ</h2><h3 id="1-要交出-QQ-密码吗？">1. 要交出 QQ 密码吗？</h3><p>答：不必须。如果您的说说都是公开的，则完全没有必要交出密码。如果您发过只有自己或者少数好友可见的说说，则需要用您的账号密码登录才能抓全。</p><h3 id="2-我的-QQ-空间被封了，别人都无法访问，可以导出吗？">2. 我的 QQ 空间被封了，别人都无法访问，可以导出吗？</h3><p>答：只要您自己能访问就可以，但要您协助登录。比如让您刷一个二维码，（二维码在本人的机器上产生，截图给您，所以您刷完是在本人机器上登录）。极少数时候因为登录保护，刷二维码可能失败，实在不行，要提供您的账号和密码。您可以事先改一个临时密码，事后再改掉。</p><h3 id="3-导出的格式是什么样的？">3. 导出的格式是什么样的？</h3><p>答：主体是一个 json 文件，里面有您全部说说，包括说说本身、别人的回复、图片链接（没有图片本身）。另外生成一份 txt 文件，只有发帖时间和说说本身，其它都没有。</p><h2 id="备注">备注</h2><p>如果有时间会改进，比如说搞成图文并茂的格式，也导出博客。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;创作故事&quot;&gt;创作故事&lt;/h2&gt;
&lt;p&gt;2015-03-16 为了导出自己的说说，写了个半自动的程序，手动分析几个参数填到代码理，很快就刷刷地下载了 7 年的说说。第二天，就在知乎回答了两贴。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.zhihu.co</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="作品" scheme="https://blog.umu618.com/tags/%E4%BD%9C%E5%93%81/"/>
    
  </entry>
  
  <entry>
    <title>外星人</title>
    <link href="https://blog.umu618.com/2018/05/06/alien/"/>
    <id>https://blog.umu618.com/2018/05/06/alien/</id>
    <published>2018-05-06T09:29:35.000Z</published>
    <updated>2023-08-05T13:01:26.958Z</updated>
    
    <content type="html"><![CDATA[<p>早上，稣像往常一样吓醒，不同的是，稣在加拿大某大学宿舍，身体是别人的……稣熟悉一下环境，思考一下人生，还记得自己家住道州德国，如果用这个加拿大人的身份生活下去，德国的父母不是很难见面？而且稣原本的身体会不会被别人占用了？如果是对换身体，那对方也可能想换回来。于是稣决定赶回德国！</p><p>打开柜子，收拾了一些衣物，发现这个加拿大人还是蛮有品味的。然后记起，他有一台红色外星人笔记本，翻了一下床，果然在被子里面，很高端。开始犹豫要不要带上，这又不是稣的，留着，如果他回来，起码还有东西，不至于都被稣洗劫了……但是仔细想想，又有点可笑，身体都被占了，他还活着吗？还能回来吗？都不知道呢！</p><p>最终，稣还是没带，因为——太重了！这时候他的舍友来了，但是稣并不记得他的名字，所以有点尴尬，他见到稣，开玩笑地说：“假期还窝在宿舍？不出去找女朋友玩？”嗯？他女朋友是个挪威美女，年轻貌美！哈！这个可以带……问题是稣不知道她在哪里，算了，还是赶快溜回德国。</p><p>出宿舍楼大门的时候，保安看到稣带着一些行李，就说要刷脸备案。好吧，刷！反正这脸不是稣的……果然逼逼几声就通过了，保安说：“谢谢配合，Aerial 先生！”咦？怎么像个字体名，Arial？</p><p>街上没啥人，出来之后才知道是因为地球已经被外星人入侵！有两种外星人来到地球，其中一种像章鱼，会发射神奇脑电波控制地球人，变成他们的奴隶。另一种像螳螂，自带刀剑，会到处砍人。</p><p>这里还插播一个新闻：据说，有个专门对付外星人的公司，打算通过提供保护赚钱，结果被团灭……老板打算带着老婆逃亡，却被员工砍死。专家分析是因为员工被外星章鱼控制。</p><p>稣十分后悔，刚刚吓醒，又被吓尿……赶快就近躲进一座医院。稣走进手术室，看到医生们都在做手术，但越看越不对劲，几个人被切成一块块的，这是什么医术？好叼，还能救活？最后那些人被推出来，稣才明白，那些医生是在解剖尸体，研究外星人如何控制人类……这个地方其实也不是医院，是非地球人研究中心！</p><p>研究员们看到稣，很惊讶地问：“你是怎么活着到这里的？”稣回答：“稣是从某大学出来的，那边还有很多人，很容易就走到这里。”研究员哈哈狞笑：“你说的那个大学，在你出来之后就团灭了。现在整个地球可能只有各个非地球人研究中心还有活人。如果你不介意，我们要研究一下你是如何能躲开外星人的。”</p><p>研究？稣想起电影理的情节，被研究的意思应该就是被当畜牲宰割吧！果断拒绝！但如果直接拒绝，可能他们会来硬的，所以稣先忽悠他们：“可以啊，但是稣饿了，你们这里有吃的吧？”</p><p>咳！？陪他们吃了一顿白灼章鱼……然后稣开始有种不祥的预感，这是真的地球章鱼吗？胆战心惊问出口，果然得到吃精的回答：“这些都是外星人，战争多年，早就没东西吃了，只能捡打死的外星人吃……”呃，稣只想说：“还真特么好吃啊！！而且一只可以吃很久，实在是太实惠了！”</p><p>吃完，稣就来了一个灵感，能不能生吃外星章鱼，这样可以获得他们的能力。研究员们听稣这样讲，惊喜万分，觉得很可行。于是从冰柜里取出一只速冻的小章鱼。这是被打死的外星章鱼肚子里怀的，还有生命力的时候被速冻保存。研究员不忘科普：“外星章鱼是胎生的，这就是和地球章鱼的区别！”</p><p>解冻完，大家毫不客气地讨论怎么分食，小章鱼一脸无辜。最后，院长亲自示范一口闷，果然吃完之后，院长就有了控制别人的能力。稣建议，出去控制那些螳螂把自己砍死，然后再吃个螳螂，这样院长就自带刀剑了。院长喜出望外，立马就去砍死几只螳螂，带回来给大家吃，哦不，是研究。</p><p>稣看到了希望，就表示了自己回德国的心愿。院长当即表示，会护送稣回去。临走前，稣问最后一个问题：“院长，为何相信稣的方案？生吃可能有细菌、病毒，太冒险了！”</p><p>“我是广东人。”</p><p>再次吓醒。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;早上，稣像往常一样吓醒，不同的是，稣在加拿大某大学宿舍，身体是别人的……稣熟悉一下环境，思考一下人生，还记得自己家住道州德国，如果用这个加拿大人的身份生活下去，德国的父母不是很难见面？而且稣原本的身体会不会被别人占用了？如果是对换身体，那对方也可能想换回来。于是稣决定赶回德</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="怪悟" scheme="https://blog.umu618.com/tags/%E6%80%AA%E6%82%9F/"/>
    
  </entry>
  
  <entry>
    <title>C/C++ 数字后缀用大写还是小写？</title>
    <link href="https://blog.umu618.com/2018/05/01/umutech-uppercase-or-not-integer-suffix/"/>
    <id>https://blog.umu618.com/2018/05/01/umutech-uppercase-or-not-integer-suffix/</id>
    <published>2018-05-01T12:26:23.000Z</published>
    <updated>2023-10-29T12:18:29.351Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题">问题</h2><p>对于 uint64_t 的常量，以前只写 Windows 平台的代码，所以习惯加上 Ui64 的后缀，前几天发现 g++ 不支持，于是改为 ULL，然后又测试了 ull，也是可以的，开始纠结以后是用大写还是小写……</p><h2 id="分析">分析</h2><p>输入时，是小写比大写方便，但小写的字母 l，容易被认成数字 1，比如 1234567890ll，看起来没 1234567890LL 容易辨认。虽然可以通过字体来提高辨识度，但不是每个人都用这样的字体。</p><p>看了 golang，并不支持数字加后缀，好样的！</p><p>同样的纠结，还有十六进制的 0x 和 0X，abcdef 和 ABCDEF……</p><p>golang 一样有这个纠结，看来要彻底的单一化还是不容易的。</p><p>ATL 的 HexEncode 函数，输出的十六进制是大写的，UMU 也一直喜欢大写格式，但 std::hex 默认是小写，要用 std::setiosflags (std::ios::uppercase) 改大写。所以，如果自己实现一个 HexEncode 函数，默认还是应该返回小写格式的，这个道理很简单，您看一下键盘，上面标注的都是大写字母，但按下去，默认是小写。要大写？请按住 SHIFT。</p><h2 id="总结">总结</h2><p>写代码时，数字后缀用大写，毕竟也很少需要加后缀；输出时，数字并不需要带后缀。</p><p>而十六进制可以更宽松点：写代码时，用小写，节省按 SHIFT 键；输出时，看情况。</p>]]></content>
    
    
    <summary type="html">大写还是小写？这是个问题！</summary>
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="cpp" scheme="https://blog.umu618.com/tags/cpp/"/>
    
    <category term="coding-style" scheme="https://blog.umu618.com/tags/coding-style/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB Shard ID hash 算法 std::hash 的跨平台性</title>
    <link href="https://blog.umu618.com/2018/04/24/umutech-mongodb-shard-id-hash/"/>
    <id>https://blog.umu618.com/2018/04/24/umutech-mongodb-shard-id-hash/</id>
    <published>2018-04-24T15:18:11.000Z</published>
    <updated>2023-08-05T13:01:26.958Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;functional&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> str = <span class="string">&quot;Meet the new boss...&quot;</span>;</span><br><span class="line">    <span class="built_in">std</span>::<span class="keyword">size_t</span> str_hash = <span class="built_in">std</span>::hash&lt;<span class="built_in">std</span>::<span class="built_in">string</span>&gt;&#123;&#125;(str);</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;hash(&quot;</span> &lt;&lt; <span class="built_in">std</span>::quoted(str) &lt;&lt; <span class="string">&quot;) = &quot;</span> &lt;&lt; str_hash &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    str = <span class="string">&quot;Meet the new boss..;&quot;</span>;</span><br><span class="line">    str_hash = <span class="built_in">std</span>::hash&lt;<span class="built_in">std</span>::<span class="built_in">string</span>&gt;&#123;&#125;(str);</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;hash(&quot;</span> &lt;&lt; <span class="built_in">std</span>::quoted(str) &lt;&lt; <span class="string">&quot;) = &quot;</span> &lt;&lt; str_hash &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    str = <span class="string">&quot;Meet the new boss../&quot;</span>;</span><br><span class="line">    str_hash = <span class="built_in">std</span>::hash&lt;<span class="built_in">std</span>::<span class="built_in">string</span>&gt;&#123;&#125;(str);</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;hash(&quot;</span> &lt;&lt; <span class="built_in">std</span>::quoted(str) &lt;&lt; <span class="string">&quot;) = &quot;</span> &lt;&lt; str_hash &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    str = <span class="string">&quot;Meet the new boss..,&quot;</span>;</span><br><span class="line">    str_hash = <span class="built_in">std</span>::hash&lt;<span class="built_in">std</span>::<span class="built_in">string</span>&gt;&#123;&#125;(str);</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;hash(&quot;</span> &lt;&lt; <span class="built_in">std</span>::quoted(str) &lt;&lt; <span class="string">&quot;) = &quot;</span> &lt;&lt; str_hash &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Windows,  VS 2017 的结果：</p><blockquote><p>hash(“Meet the new boss…”) = 5935324269489717502</p><p>hash(“Meet the new boss…;”) = 5935347359233909933</p><p>hash(“Meet the new boss…/”) = 5935325369001345713</p><p>hash(“Meet the new boss…,”) = 5935322070466461080</p></blockquote><p>Ubuntu 16.04,  g++ 5.4.0 20160609 的结果：</p><blockquote><p>hash(“Meet the new boss…”) = 10656026664466977650</p><p>hash(“Meet the new boss…;”) = 12509209616339026574</p><p>hash(“Meet the new boss…/”) = 6552276210272946664</p><p>hash(“Meet the new boss…,”) = 15639609178671340058</p></blockquote><p>还好我们不会在生产环境，使用 Windows 部署 MongoDB……</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">std::size_t ShardId::Hasher::operator()(const ShardId&amp; shardId) const &#123;</span><br><span class="line">     return std::hash&lt;std::string&gt;()(shardId._shardId); </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>详见：<a href="https://github.com/mongodb/mongo/blob/master/src/mongo/s/shard_id.cpp">https://github.com/mongodb/mongo/blob/master/src/mongo/s/shard_id.cpp</a></p><p>这个 std::hash 在 x86 和 x64 下都不一样，所以，让我们看看 MongoDB 如何解决这个问题：</p><p>MongoDB 3.4 no longer supports 32-bit x86 platforms.</p><p>好样的！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="cpp" scheme="https://blog.umu618.com/tags/cpp/"/>
    
    <category term="mongodb" scheme="https://blog.umu618.com/tags/mongodb/"/>
    
  </entry>
  
  <entry>
    <title>十年生死两茫茫</title>
    <link href="https://blog.umu618.com/2018/04/21/ten-years-in-wangsu/"/>
    <id>https://blog.umu618.com/2018/04/21/ten-years-in-wangsu/</id>
    <published>2018-04-20T16:00:00.000Z</published>
    <updated>2023-08-05T13:01:26.958Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-稣为什么能在-KJ-待-10-年之久？">1. 稣为什么能在 KJ 待 10 年之久？</h2><p>答：因为找不到工作。</p><h2 id="2-稣真幽默！">2. 稣真幽默！</h2><p>答：稣一向都很严肃，是真的找不到工作……</p><h2 id="3-哦，为什么呢？">3. 哦，为什么呢？</h2><p>答：因为稣知道的太多，一学会就忘。正常的招聘要的是经验，稣没有经验，只有智商。另外，厦门的公司能选择的不多。</p><h2 id="4-不尝试写下来备忘吗？">4. 不尝试写下来备忘吗？</h2><p>答：写了。领导不让发表，只能发点皮毛。智商这个东西也不好描述清楚。</p><h2 id="5-有打算创业吗？">5. 有打算创业吗？</h2><p>答：一直在创，但感觉不够高大上，冒然出手可能被绑定在一个不够高大上的业务上。</p><h2 id="6-听说稣很有钱是真的吗？">6. 听说稣很有钱是真的吗？</h2><p>答：是……真的……吧！但是 KJ 70-80% 的人比稣更有钱。赫赫……</p><h2 id="7-稣还是蛮幽默的。">7. 稣还是蛮幽默的。</h2><p>答：你高兴就好。稣只是穷得没那么焦虑。</p><h2 id="8-十年最大的感想是什么？">8. 十年最大的感想是什么？</h2><p>答：活着很容易，活得好很不容易。</p><h2 id="9-稣觉得自己活得好吗？">9. 稣觉得自己活得好吗？</h2><p>答：好</p><p>个鬼。</p><h2 id="10-有什么建议给大家？">10. 有什么建议给大家？</h2><p>答：挨踢无情，你承受不起，奉劝各位亲朋好友——千万不要学 C++。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-稣为什么能在-KJ-待-10-年之久？&quot;&gt;1. 稣为什么能在 KJ 待 10 年之久？&lt;/h2&gt;
&lt;p&gt;答：因为找不到工作。&lt;/p&gt;
&lt;h2 id=&quot;2-稣真幽默！&quot;&gt;2. 稣真幽默！&lt;/h2&gt;
&lt;p&gt;答：稣一向都很严肃，是真的找不到工作……&lt;/p&gt;
&lt;h2 </summary>
      
    
    
    
    <category term="U墨" scheme="https://blog.umu618.com/categories/U%E5%A2%A8/"/>
    
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
    <category term="耶乎知稣" scheme="https://blog.umu618.com/tags/%E8%80%B6%E4%B9%8E%E7%9F%A5%E7%A8%A3/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·卧龙小成</title>
    <link href="https://blog.umu618.com/2018/04/19/reconstructionism-poet-time-to-show-up/"/>
    <id>https://blog.umu618.com/2018/04/19/reconstructionism-poet-time-to-show-up/</id>
    <published>2018-04-19T15:17:12.000Z</published>
    <updated>2023-08-05T13:01:26.958Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·卧龙小成》：挨踢悟岁月，奇路游红尘。十年浑似醉，回首卧龙深。</p><p>改编自霹雳角色“北窗伏龙曲怀觞”的诗号。</p><blockquote><p>天涯无岁月，<br>歧路有风尘。<br>百年浑似醉，<br>是非一片云。</p></blockquote><p>唐朝骆宾王的《春日离长安客中言怀》：</p><blockquote><p>年华开早律，霁色荡芳晨。城阙千门晓，山河四望春。<br>御沟通太液，戚里对平津。宝瑟调中妇，金罍引上宾。<br>剧谈推曼倩，惊坐揖陈遵。意气一言合，风期万里亲。<br>自惟安直道，守拙忌因人。谈器非先木，图荣异后薪。<br>揶揄惭路鬼，憔悴切波臣。玄草终疲汉，乌裘几滞秦。<br>**生涯无岁月，岐路有风尘。**还嗟太行道，处处白头新。</p></blockquote><p>南吕词人张可久的《金字经·乐闲》：</p><blockquote><p><strong>百年浑似醉，</strong><br>满怀都是春。<br>高卧东山一片云。<br>嗔，是非拂面尘，<br>消磨尽，古今无限人。</p></blockquote><h2 id="注解">注解</h2><p>工作十几年了，其中在第二个公司差几天就十年整。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·卧龙小成》：挨踢悟岁月，奇路游红尘。十年浑似醉，回首卧龙深。&lt;/p&gt;
&lt;p&gt;改编自霹雳角色“北窗伏龙曲怀觞”的诗号。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;天涯无岁月，&lt;br&gt;
歧路有风尘。&lt;br&gt;
百年浑似醉，&lt;br&gt;
是非一片云。&lt;/p&gt;
&lt;/blockq</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>云存储</title>
    <link href="https://blog.umu618.com/2018/04/12/cloud-storage/"/>
    <id>https://blog.umu618.com/2018/04/12/cloud-storage/</id>
    <published>2018-04-12T04:38:00.000Z</published>
    <updated>2023-08-05T13:01:26.958Z</updated>
    
    <content type="html"><![CDATA[<p>小冰的磁盘坏了，拿去给技术部阿基修，阿基手法纯熟三下五除二就把数据备份出来，小冰交口称赞技术高超。</p><p>阿基很谦虚的说：“哪里哪里，我们技术部各个都是淫才，我的技术只能排老三。”</p><p>小冰很好奇地问：“不是传说你最好？还有人更厉害？”</p><p>阿基指了角落里的米德，说道：“那位技术就比我好，他都建议自建 RAID10 NAT，又安全又保密，磁盘挂了自己就能修复，所以很少人找他，名气也就不高。”</p><p>“你再看那边，那位瘦瘦的米开，他都建议使用云存储，所以他们的磁盘不会坏，他的高超之处在于预防故障在前，而且节省成本，但个人用户都不懂云存储的好处，所以他的名气也不大。”</p><p>“而我，只会拯救已坏的磁盘，救别人于危难之中，所以名气最大，但实则没有技术含量。”</p><p>小冰听完觉得十分有道理，于是选技术部最帅的罗基朗……帮忙买一块新的硬盘。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;小冰的磁盘坏了，拿去给技术部阿基修，阿基手法纯熟三下五除二就把数据备份出来，小冰交口称赞技术高超。&lt;/p&gt;
&lt;p&gt;阿基很谦虚的说：“哪里哪里，我们技术部各个都是淫才，我的技术只能排老三。”&lt;/p&gt;
&lt;p&gt;小冰很好奇地问：“不是传说你最好？还有人更厉害？”&lt;/p&gt;
&lt;p&gt;阿基</summary>
      
    
    
    
    <category term="U墨" scheme="https://blog.umu618.com/categories/U%E5%A2%A8/"/>
    
    
    <category term="怪悟" scheme="https://blog.umu618.com/tags/%E6%80%AA%E6%82%9F/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>学习 go 语言【8】strings.Builder vs bytes.Buffer</title>
    <link href="https://blog.umu618.com/2018/04/02/umutech-learn-go-8-strings-builder-vs-bytes-buffer/"/>
    <id>https://blog.umu618.com/2018/04/02/umutech-learn-go-8-strings-builder-vs-bytes-buffer/</id>
    <published>2018-04-02T10:47:56.000Z</published>
    <updated>2023-08-05T13:01:26.958Z</updated>
    
    <content type="html"><![CDATA[<h2 id="结论">结论</h2><ul><li>strings.Builder：省内存</li><li>bytes.Buffer：快</li></ul><h2 id="代码">代码</h2><p>性能测试程序如下：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> benchmark_test</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;bytes&quot;</span></span><br><span class="line"><span class="string">&quot;strings&quot;</span></span><br><span class="line"><span class="string">&quot;testing&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">ss = <span class="string">&quot;1234567890abcdefghijklmnopqrstuvwxyz&quot;</span></span><br><span class="line">bs = []<span class="keyword">byte</span>(ss)</span><br><span class="line">rn = <span class="string">&#x27;a&#x27;</span></span><br><span class="line">bt = <span class="keyword">byte</span>(<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">BenchmarkBuilderWrite</span><span class="params">(b *testing.B)</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> builder strings.Builder</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; b.N; i++ &#123;</span><br><span class="line">builder.Write(bs)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">BenchmarkBuiderWriteByte</span><span class="params">(b *testing.B)</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> builder strings.Builder</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; b.N; i++ &#123;</span><br><span class="line">builder.WriteByte(bt)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">BenchmarkBuilderWriteRune</span><span class="params">(b *testing.B)</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> builder strings.Builder</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; b.N; i++ &#123;</span><br><span class="line">builder.WriteRune(rn)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">BenchmarkBuilderWriteString</span><span class="params">(b *testing.B)</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> builder strings.Builder</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; b.N; i++ &#123;</span><br><span class="line">builder.WriteString(ss)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">BenchmarkBufferWrite</span><span class="params">(b *testing.B)</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> buffer bytes.Buffer</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; b.N; i++ &#123;</span><br><span class="line">buffer.Write(bs)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">BenchmarkBufferWriteByte</span><span class="params">(b *testing.B)</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> buffer bytes.Buffer</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; b.N; i++ &#123;</span><br><span class="line">buffer.WriteByte(bt)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">BenchmarkBufferWriteRune</span><span class="params">(b *testing.B)</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> buffer bytes.Buffer</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; b.N; i++ &#123;</span><br><span class="line">buffer.WriteRune(rn)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">BenchmarkBufferWriteString</span><span class="params">(b *testing.B)</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> buffer bytes.Buffer</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; b.N; i++ &#123;</span><br><span class="line">buffer.WriteString(ss)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;结论&quot;&gt;结论&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;strings.Builder：省内存&lt;/li&gt;
&lt;li&gt;bytes.Buffer：快&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;代码&quot;&gt;代码&lt;/h2&gt;
&lt;p&gt;性能测试程序如下：&lt;/p&gt;
&lt;figure class=&quot;high</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="optimization" scheme="https://blog.umu618.com/tags/optimization/"/>
    
    <category term="go" scheme="https://blog.umu618.com/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·白云凰</title>
    <link href="https://blog.umu618.com/2018/04/02/reconstructionism-poet-the-ghost-wife/"/>
    <id>https://blog.umu618.com/2018/04/02/reconstructionism-poet-the-ghost-wife/</id>
    <published>2018-04-02T08:24:18.000Z</published>
    <updated>2023-08-05T13:01:26.958Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·白云凰》：今日有鬼今日撞，白云山上白云凰。过去现在未来妻，三个老婆惊吓爽。</p><h2 id="注解">注解</h2><p>吓醒系列《<a href="/2018/04/01/the-ghost-wife/">白云凰</a>》配诗。<br>这个世界本来是有鬼和没鬼的叠加态，直到稣诞生，用宇督观观测世界，才确定——是没鬼的！<br>然而，稣一睡觉……咳！世界又变了！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·白云凰》：今日有鬼今日撞，白云山上白云凰。过去现在未来妻，三个老婆惊吓爽。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;吓醒系列《&lt;a href=&quot;/2018/04/01/the-ghost-wife/&quot;&gt;白云凰&lt;/a&gt;》配诗。&lt;br&gt;
这个世界本来是</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="怪悟" scheme="https://blog.umu618.com/tags/%E6%80%AA%E6%82%9F/"/>
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="死神" scheme="https://blog.umu618.com/tags/%E6%AD%BB%E7%A5%9E/"/>
    
    <category term="鲸神魂裂" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%AD%82%E8%A3%82/"/>
    
  </entry>
  
  <entry>
    <title>白云凰</title>
    <link href="https://blog.umu618.com/2018/04/01/the-ghost-wife/"/>
    <id>https://blog.umu618.com/2018/04/01/the-ghost-wife/</id>
    <published>2018-04-01T12:39:10.000Z</published>
    <updated>2023-08-05T13:01:26.958Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-独自旅游">1. 独自旅游</h2><p>2018-03-28，稣独自在一条古街游玩，据说这里保持民国时期的民俗风情。稣本身是一个不爱旅游的人，不知为何，居然来了……纳闷一下，就听到后面有人催促，天要黑了，要参观的赶快参观，不参观的可以回去了。稣想，既来之则安之，随处走走吧。</p><p>走进街头的石门，前段是一些商铺，但没人在营业，看来这条街已经过时废弃，只是作为景点供人参观而已。</p><p>但是再走一段，商铺没了，居然出现当地居民，看服饰，不像现代人。有一对老夫妻在门口好奇地看着稣，好像在念叨：“这么晚，怎么还有游客敢来？”稣很有礼貌地朝他们点点头，说：“老人家好！我们旅游团今天来这边参观，打扰了！”老人家有点不耐烦地说：“就你一个，还什么旅游团！”稣回头一看，嗯？真的就稣一个人，刚才团长让我们自己决定要不要玩，这么坑？就稣一个人进来！</p><p>天色已晚，气氛有点不对劲，稣想：“要不回去吧？”这时听到几个小孩在前面玩闹的声音。稣又好奇地往前走，但始终没有看到什么小孩，只看到一间房屋，似乎着过火，后来做了一些基本的修复。</p><h2 id="2-女神？女鬼？谢谢！">2. 女神？女鬼？谢谢！</h2><p>稣进入屋子，环顾一下，发现确实曾经失火，有不少痕迹，屋内墙壁还蘸着大片炭灰。</p><p>这时候一个白衣女从屋顶飘下来，长得很漂亮，稣还以为是仙女下凡……她开口说自己是鬼魂，呃！这么漂亮的女鬼？别吓稣，等下吓醒就不好了！</p><p>“我叫白云凰，19 岁时，这里发生地震，我在屋里被压倒，屋子着火，烧死了。”</p><p>“哦，那你真身一定很难看……吓尿！”</p><p>“是的，全身都烧黑了！但我是你前世的娘子，你不会嫌弃我吧？”</p><p>“啊！那你保持现在这个样子，下来我看看！”</p><p>她慢慢飘下来。稣近身观测过，觉得真不错，看来稣前世蛮有眼光嘛！</p><p>“我死得不甘心，至今未投胎，一直在这里等你！”</p><p>稣一时感动就上前抱她。她立刻推开，说：“我的阴气很重，怕有损相公身体，请相公为我找个美女，我要附身！”</p><p>“附身？那不是会把身体的原主人杀死？这样不好吧！”</p><p>“不一定，看谁的意志更强，不过我的求生意识很强，一般活人恐怕赢不了我。你可以找一个弱智或者品行恶劣的人，你觉得死不足惜的，我只有一个要求，就是得漂亮，至少和我生前差不多。”</p><p>“我考虑一下……如果找到了，后面怎么操作？”</p><p>“我的骨骸就葬在这屋子下面，你把我挖出来，我的双脚戴着父母给我的镇邪足环，它们把我绑定在屋子里，无法离开，你把它们摘下。然后我左手的戒指，你摘下来戴自己手上，这样我就可以跟着你了。只要你睡着，我们就能见面。”</p><p>稣挖出来一看，真的全是黑色，正常的骨头应该是白色的……但这样的黑色骨骸，反而不让人害怕，稣盯着她的头看了很久，还真是不错的脸型，烧成这样也能看出是个美人。</p><p>吓醒。</p><h2 id="3-附身">3. 附身</h2><p>第二天，稣就研究了一些出现附身的鬼片，比如《万能钥匙》。领悟到一个道理，附身并没有杀人，人还是那么多。有些人脑死了，还捐器官造福别人。如果说有人身体死了，脑子还活着，移植到这个脑死的身体，那不是救人吗？所以其实这没有什么不道德的。</p><p>有些人经过某些事情之后，会突然变了个人，外人根本无法知道他还是不是原来的他。记忆是存在并跟随身体的，就算灵魂换一个新的，由于有原来的记忆，别人是无法查知的。</p><p>有着丰富<a href="/tags/%E9%B2%B8%E7%A5%9E%E9%AD%82%E8%A3%82/">鲸神魂裂</a>经验的稣，马上意识到，附身其实是能让更多人存活于世的，不仅是救人一命，还有可能优化世界！举个例子，某人智力低下，考试经常挂，找个聪明的鬼魂附身，可以让他变聪明，提高成绩。即使是聪明人，也可能受限于特定思维方式，不够全面，找个互补的来附身，可以提高技能。</p><p>但是，到了晚上，白云凰并没有来找稣，看来只是偶然的一个怪梦。</p><h2 id="4-已经来到稣身边！？">4. 已经来到稣身边！？</h2><p>第三天，白云凰出现了，她说前一晚，稣太操劳，睡的时候脑子还在写代码，所以她没有来打扰。但稣白天看到一个美女，已经被她锁定……</p><p>“谁？稣怎么没有印象！”稣想，于是问她：“那你附身了吗？”</p><p>“马上，你醒来的时候，我就已经转世到现代了，有缘你会认识我的。”</p><p>“叫什么名字？在哪里？”</p><p>“呵，在美柚，其它的我不能告诉你！”</p><p>再次吓醒。</p><h2 id="5-人间的运行规律？">5. 人间的运行规律？</h2><p>弱者突然觉悟，是不是被附身的？这个故事告诉我们：好好学习，成绩不好，可能被暗杀，没人知道你是被附身，赫赫！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-独自旅游&quot;&gt;1. 独自旅游&lt;/h2&gt;
&lt;p&gt;2018-03-28，稣独自在一条古街游玩，据说这里保持民国时期的民俗风情。稣本身是一个不爱旅游的人，不知为何，居然来了……纳闷一下，就听到后面有人催促，天要黑了，要参观的赶快参观，不参观的可以回去了。稣想，既来之则</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="怪悟" scheme="https://blog.umu618.com/tags/%E6%80%AA%E6%82%9F/"/>
    
    <category term="死神" scheme="https://blog.umu618.com/tags/%E6%AD%BB%E7%A5%9E/"/>
    
    <category term="鲸神魂裂" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%AD%82%E8%A3%82/"/>
    
  </entry>
  
  <entry>
    <title>学习 go 语言【7】设置进程退出码</title>
    <link href="https://blog.umu618.com/2018/03/31/umutech-learn-go-7-set-exit-code-of-process/"/>
    <id>https://blog.umu618.com/2018/03/31/umutech-learn-go-7-set-exit-code-of-process/</id>
    <published>2018-03-31T12:45:49.000Z</published>
    <updated>2023-08-05T13:01:26.958Z</updated>
    
    <content type="html"><![CDATA[<h2 id="常规方案">常规方案</h2><p>直接用 os.Exit (exit_code)，但这个太暴力了，我们需要高雅一点的，于是找到了这个：<a href="https://stackoverflow.com/questions/24601516/correct-way-to-set-exit-code-of-process">https://stackoverflow.com/questions/24601516/correct-way-to-set-exit-code-of-process</a></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">    <span class="string">&quot;os&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    code := <span class="number">0</span></span><br><span class="line">    <span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">        os.Exit(code)</span><br><span class="line">    &#125;()</span><br><span class="line">    <span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">        fmt.Println(<span class="string">&quot;Another deferred func&quot;</span>)</span><br><span class="line">    &#125;()</span><br><span class="line">    fmt.Println(<span class="string">&quot;Hello, 世界&quot;</span>)</span><br><span class="line">    code = <span class="number">1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="问题">问题</h2><p>调用 panic 的时候就知道以上的方法存在不足！panic 之后会导致 main 退出，本来紧接着应该打印 Trace Log，然而 main 退出时调用了 os.Exit ()，然后没有然后了……</p><p>本来 panic 时，退出码应该是 2 的，结果由于以上装 X 代码的作用，退出码变成了 0！如果 panic 是自己主动调用的，那还可以改改，使用别的方式；如果是其它库函数的就难办了……</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;常规方案&quot;&gt;常规方案&lt;/h2&gt;
&lt;p&gt;直接用 os.Exit (exit_code)，但这个太暴力了，我们需要高雅一点的，于是找到了这个：&lt;a href=&quot;https://stackoverflow.com/questions/24601516/correct-w</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="debug" scheme="https://blog.umu618.com/tags/debug/"/>
    
    <category term="go" scheme="https://blog.umu618.com/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>求模版函数地址</title>
    <link href="https://blog.umu618.com/2018/03/21/umutech-take-address-of-template-function/"/>
    <id>https://blog.umu618.com/2018/03/21/umutech-take-address-of-template-function/</id>
    <published>2018-03-21T10:01:32.000Z</published>
    <updated>2023-08-05T13:01:26.958Z</updated>
    
    <content type="html"><![CDATA[<p>最近用 WTL 写 Ribbon 界面，发现一个坑。</p><h2 id="先看-WTL9-1-的代码">先看 WTL9.1 的代码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">static void (CharFormat::*Getk_[])(IPropertyStore*) &#x3D; </span><br><span class="line">&#123;</span><br><span class="line">    &amp;CharFormat::Getk_Family, </span><br><span class="line">    &amp;CharFormat::Getk_FontProperties_Size, </span><br><span class="line">    &amp;CharFormat::Getk_MaskEffect&lt;CFM_BOLD, CFE_BOLD, UI_PKEY_FontProperties_Bold&gt;,</span><br><span class="line">    &amp;CharFormat::Getk_MaskEffect&lt;CFM_ITALIC, CFE_ITALIC, UI_PKEY_FontProperties_Italic&gt;,</span><br><span class="line">    &amp;CharFormat::Getk_MaskEffect&lt;CFM_UNDERLINE, CFE_UNDERLINE, UI_PKEY_FontProperties_Underline&gt;,</span><br><span class="line">    &amp;CharFormat::Getk_MaskEffect&lt;CFM_STRIKEOUT, CFE_STRIKEOUT, UI_PKEY_FontProperties_Strikethrough&gt;,</span><br><span class="line">    &amp;CharFormat::Getk_VerticalPositioning, </span><br><span class="line">    &amp;CharFormat::Getk_Color&lt;CFM_COLOR, UI_PKEY_FontProperties_ForegroundColor&gt;, </span><br><span class="line">    &amp;CharFormat::Getk_Color&lt;CFM_BACKCOLOR, UI_PKEY_FontProperties_BackgroundColor&gt;, </span><br><span class="line">    &amp;CharFormat::Getk_ColorType&lt;CFM_COLOR, CFE_AUTOCOLOR, UI_SWATCHCOLORTYPE_AUTOMATIC, UI_PKEY_FontProperties_ForegroundColorType&gt;,</span><br><span class="line">    &amp;CharFormat::Getk_ColorType&lt;CFM_BACKCOLOR, CFE_AUTOBACKCOLOR, UI_SWATCHCOLORTYPE_NOCOLOR, UI_PKEY_FontProperties_BackgroundColorType&gt;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>其中 Getk_MaskEffect 是个模版函数，实现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">template &lt;DWORD t_dwMask, DWORD t_dwEffects, REFPROPERTYKEY key&gt;</span><br><span class="line">void Getk_MaskEffect(IPropertyStore* pStore)</span><br><span class="line">&#123;</span><br><span class="line">    if (SUCCEEDED(pStore-&gt;GetValue(key, &amp;propvar)))</span><br><span class="line">    &#123;</span><br><span class="line">        UIPropertyToUInt32(key, propvar, &amp;uValue);</span><br><span class="line">        if ((UI_FONTPROPERTIES)uValue !&#x3D; UI_FONTPROPERTIES_NOTAVAILABLE)</span><br><span class="line">        &#123;</span><br><span class="line">            dwMask |&#x3D; t_dwMask;</span><br><span class="line">            dwEffects |&#x3D; ((UI_FONTPROPERTIES) uValue &#x3D;&#x3D; UI_FONTPROPERTIES_SET) ? t_dwEffects : 0;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后，在 VS2017 编译失败了……</p><blockquote><p>1&gt;X:\WTL91_5321_Final\Include\atlribbon.h(422): error C2440: ‘initializing’: cannot convert from ‘overloaded-function’ to ‘void (__thiscall WTL::RibbonUI::CharFormat::* )(IPropertyStore *)’</p><p>1&gt;X:\WTL91_5321_Final\Include\atlribbon.h(422): note: None of the functions with this name in scope match the target type</p></blockquote><p>然后根据错误提示搜到：Cannot take address of template function，<a href="https://gcc.gnu.org/bugzilla/show_bug.cgi?id=39018">https://gcc.gnu.org/bugzilla/show_bug.cgi?id=39018</a>，翻译一下：模版函数的地址转化，分两步走，第一步先转具化，第二步转目标类型，这样可以；直接转过去不可以！</p><h2 id="再来看看-WTL10-怎么解决这个问题的！">再来看看 WTL10 怎么解决这个问题的！</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">static void (CharFormat::*Getk_[])(IPropertyStore*) &#x3D; </span><br><span class="line">&#123;</span><br><span class="line">    &amp;CharFormat::Getk_Family, </span><br><span class="line">    &amp;CharFormat::Getk_FontProperties_Size, </span><br><span class="line">    &amp;CharFormat::Getk_MaskEffectBold,</span><br><span class="line">    &amp;CharFormat::Getk_MaskEffectItalic,</span><br><span class="line">    &amp;CharFormat::Getk_MaskEffectUnderline,</span><br><span class="line">    &amp;CharFormat::Getk_MaskEffectStrikeout,</span><br><span class="line">    &amp;CharFormat::Getk_VerticalPositioning,</span><br><span class="line">    &amp;CharFormat::Getk_Color, </span><br><span class="line">    &amp;CharFormat::Getk_ColorBack, </span><br><span class="line">    &amp;CharFormat::Getk_ColorType,</span><br><span class="line">    &amp;CharFormat::Getk_ColorTypeBack,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>原来的模版函数，已经替换成普通函数了……</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">void Getk_MaskEffectBold(IPropertyStore* pStore)</span><br><span class="line">&#123;</span><br><span class="line">    Getk_MaskEffectAll(pStore, CFM_BOLD, CFE_BOLD, UI_PKEY_FontProperties_Bold);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void Getk_MaskEffectItalic(IPropertyStore* pStore)</span><br><span class="line">&#123;</span><br><span class="line">    Getk_MaskEffectAll(pStore, CFM_ITALIC, CFE_ITALIC, UI_PKEY_FontProperties_Italic);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void Getk_MaskEffectUnderline(IPropertyStore* pStore)</span><br><span class="line">&#123;</span><br><span class="line">    Getk_MaskEffectAll(pStore, CFM_UNDERLINE, CFE_UNDERLINE, UI_PKEY_FontProperties_Underline);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void Getk_MaskEffectStrikeout(IPropertyStore* pStore)</span><br><span class="line">&#123;</span><br><span class="line">    Getk_MaskEffectAll(pStore, CFM_STRIKEOUT, CFE_STRIKEOUT, UI_PKEY_FontProperties_Strikethrough);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void Getk_MaskEffectAll(IPropertyStore* pStore, DWORD _dwMask, DWORD _dwEffects, REFPROPERTYKEY key)</span><br><span class="line">&#123;</span><br><span class="line">    if (SUCCEEDED(pStore-&gt;GetValue(key, &amp;propvar)))</span><br><span class="line">    &#123;</span><br><span class="line">        UIPropertyToUInt32(key, propvar, &amp;uValue);</span><br><span class="line">        if ((UI_FONTPROPERTIES)uValue !&#x3D; UI_FONTPROPERTIES_NOTAVAILABLE)</span><br><span class="line">        &#123;</span><br><span class="line">            dwMask |&#x3D; _dwMask;</span><br><span class="line">            dwEffects |&#x3D; ((UI_FONTPROPERTIES)uValue &#x3D;&#x3D; UI_FONTPROPERTIES_SET) ? _dwEffects : 0;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近用 WTL 写 Ribbon 界面，发现一个坑。&lt;/p&gt;
&lt;h2 id=&quot;先看-WTL9-1-的代码&quot;&gt;先看 WTL9.1 的代码&lt;/h2&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;p</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="debug" scheme="https://blog.umu618.com/tags/debug/"/>
    
    <category term="cpp" scheme="https://blog.umu618.com/tags/cpp/"/>
    
  </entry>
  
  <entry>
    <title>学习 go 语言【6】从 stdin 读取一行汉字</title>
    <link href="https://blog.umu618.com/2018/03/14/umutech-learn-go-6-read-line-from-stdin/"/>
    <id>https://blog.umu618.com/2018/03/14/umutech-learn-go-6-read-line-from-stdin/</id>
    <published>2018-03-14T15:39:35.000Z</published>
    <updated>2023-08-05T13:01:26.948Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求">需求</h2><p>需要从 stdin 读取一行汉字！搜了几篇出来，居然都不支持输入中文……</p><h2 id="代码">代码</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">ScanLine</span><span class="params">()</span> <span class="params">(line <span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> buffer []<span class="keyword">rune</span></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="keyword">var</span> c <span class="keyword">rune</span></span><br><span class="line">n, err := fmt.Scanf(<span class="string">&quot;%c&quot;</span>, &amp;c)</span><br><span class="line"><span class="keyword">if</span> <span class="literal">nil</span> != err || <span class="number">1</span> != n || <span class="string">&#x27;\r&#x27;</span> == c || <span class="string">&#x27;\n&#x27;</span> == c &#123;</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">buffer = <span class="built_in">append</span>(buffer, c)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">string</span>(buffer)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;需求&quot;&gt;需求&lt;/h2&gt;
&lt;p&gt;需要从 stdin 读取一行汉字！搜了几篇出来，居然都不支持输入中文……&lt;/p&gt;
&lt;h2 id=&quot;代码&quot;&gt;代码&lt;/h2&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutte</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="go" scheme="https://blog.umu618.com/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>无形装逼最为致命</title>
    <link href="https://blog.umu618.com/2018/02/15/be-pretentious-unwittingly/"/>
    <id>https://blog.umu618.com/2018/02/15/be-pretentious-unwittingly/</id>
    <published>2018-02-15T11:39:27.000Z</published>
    <updated>2024-04-13T14:38:27.526Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-鲸神魂裂恶化了？">1. 鲸神魂裂恶化了？</h2><p>稣一直以为自己是一个共享记忆型的鲸神魂裂，但最近发生了几件事，让稣有点担心并不是这么回事……</p><p>最早的一次怀疑是无意间发现自己的微信签名档被设置为一句莫名其妙的话。要知道，微信签名档几乎没人看，所以也很少改，没有理由改了，自己完全没印象。而且微信的安全性应该蛮高的，不大可能是被人黑了。即使真被黑，也不会就改个签名档吧，钱包里有几千块不顺便转走？</p><p>后来是几次同事总说稣讲过什么话，然而一点都不像稣的风格！最近一次是好基友在公司尾牙拿了大奖，回头请客。那晚，是厦门久违的冬天，稣离聚餐的四代目就两公里多，于是选择直接暴走过去。走到海边后，风很大，有点后悔，冷得抖抖手啊，抖抖脚，请做深呼吸……擦，根本停不下来！</p><p>走几步无聊就打电话问一下其他人都到哪里了，他们五人都在同一辆车上，哈拉几句，就有点冷得心不在焉，然后他突然说了一句：你要带妹纸的话，要自己付钱。嗯哼？？稣什么时候说要带妹纸！而且稣是暴走过去的，要带妹纸的话，怎么可能用走的？</p><p>到店后，稣当场就反驳了，可是他们五人异口同声说稣确实说过要带一个美女过来……想起最近好几个反常的事例，稣有点怀疑，自己是不是鲸神魂裂恶化！</p><h2 id="2-情人劫？">2. 情人劫？</h2><p>2018-02-14，一大早起来就觉得不对劲，朋友圈里有八个前女友在晒婚礼、结婚证，八个前女友！场面何其壮观！最可怕的是这八个前女友都特么哪里来的……稣不记得有这么多啊！</p><p>接下来是午睡后，从企业群里得知 13:30 后就下班，正想继续睡，突然一个电话过来，很紧张地说：“稣，你赶快看看私 Q，有人在大池塘里说怀了你的孩子，我给你转到私 Q 了。”</p><p>卧槽，稣想起多年以前七夕情人节大池塘表白的狗血剧，这还剧情升级了？夸张得过分了，居然趁稣退出大池塘就造谣！不行，要淡定，稣应该没啥把柄，不怕。</p><h2 id="3-装逼被雷劈">3. 装逼被雷劈</h2><p>看完转播的消息，稣顿时冷静了，稣和当事者就见过一次面，没有发生任何不可告人的秘密。但为什么她要搞这么大动作呢？</p><p>稣回忆了当时的情况：稣乐于助人，帮她妈点忙，后来她要请吃饭，刚好那时稣的车被撞了，开去修，就在神鲸租车租了一辆奔驰 S500，装几天逼。但那晚不小心陪了一杯酒，回来就默默请了神鲸代驾，因为和神鲸租车是同一个公司，可以直接让他开回去还。但是这位代驾很有意思，一来就装孙子，称呼都是老板、圣总的，还装得好像很熟，搞得稣有点尴尬，还好 S500 的后座十分舒服，尤其是头枕，不小心就睡着了……难道睡着后发生什么？不可能啊！车上能搞出孩子？</p><p>稣找她私聊，问到底搞什么，要这样毁自己声誉！？她一口咬定就是稣干的……稣心想一定是别人的孩子，想找稣接盘。灵光一闪，稣记起，这应该是蓝翔技校的狗血剧情，发生在稣身上一定是哪里有八哥！很可能这是另一个平行世界，稣有八个前女友？不可能，这绝对是在做梦。</p><p>吓醒。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-鲸神魂裂恶化了？&quot;&gt;1. 鲸神魂裂恶化了？&lt;/h2&gt;
&lt;p&gt;稣一直以为自己是一个共享记忆型的鲸神魂裂，但最近发生了几件事，让稣有点担心并不是这么回事……&lt;/p&gt;
&lt;p&gt;最早的一次怀疑是无意间发现自己的微信签名档被设置为一句莫名其妙的话。要知道，微信签名档几乎没</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="暴走" scheme="https://blog.umu618.com/tags/%E6%9A%B4%E8%B5%B0/"/>
    
    <category term="鲸神魂裂" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%AD%82%E8%A3%82/"/>
    
    <category term="鹏风" scheme="https://blog.umu618.com/tags/%E9%B9%8F%E9%A3%8E/"/>
    
  </entry>
  
  <entry>
    <title>Mongo Shell 下批量更新集合</title>
    <link href="https://blog.umu618.com/2018/02/02/umutech-batch-update-under-mongodb-shell/"/>
    <id>https://blog.umu618.com/2018/02/02/umutech-batch-update-under-mongodb-shell/</id>
    <published>2018-02-02T09:57:47.000Z</published>
    <updated>2023-08-05T13:01:26.948Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求">需求</h2><p>延长 MongoDB 某集合里的“过期时间”字段。</p><h2 id="风险分析">风险分析</h2><p>update 一下是很简单，主要怕在 Shell 下操作可能改变数字类型。<br>先做了实验，发现 3.2 的版本下，并没有这个问题，之前看书，说数字可能被改为双精度，看来是旧版本的不足。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">db.UMU.find().forEach(function (doc) &#123;</span><br><span class="line">    doc.expireDate &#x3D; NumberLong(doc.updateTime + 180*24*60*60*1000);</span><br><span class="line">    db.UMU.save(doc);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>其中 NumberLong 是必要的，不然更新后，expireDate 的类型并不是和 updateTime 一样的 NumberLong。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;需求&quot;&gt;需求&lt;/h2&gt;
&lt;p&gt;延长 MongoDB 某集合里的“过期时间”字段。&lt;/p&gt;
&lt;h2 id=&quot;风险分析&quot;&gt;风险分析&lt;/h2&gt;
&lt;p&gt;update 一下是很简单，主要怕在 Shell 下操作可能改变数字类型。&lt;br&gt;
先做了实验，发现 3.2 的版本下，</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="ops" scheme="https://blog.umu618.com/tags/ops/"/>
    
    <category term="mongodb" scheme="https://blog.umu618.com/tags/mongodb/"/>
    
  </entry>
  
  <entry>
    <title>Ceph 慢盘原因分析一例：CPU 偷懒了！</title>
    <link href="https://blog.umu618.com/2018/02/02/umutech-cpufreq-governor-ondemand-causes-ceph-osd-slowly/"/>
    <id>https://blog.umu618.com/2018/02/02/umutech-cpufreq-governor-ondemand-causes-ceph-osd-slowly/</id>
    <published>2018-02-02T09:36:30.000Z</published>
    <updated>2023-08-05T13:01:26.948Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题">问题</h2><p>Ceph 运维发现一个 osd 慢了。</p><h2 id="分析">分析</h2><h3 id="1-硬件配置对比">1. 硬件配置对比</h3><p>找了一台参照机器，上面也一样跑了 15 个 osd，发现 CPU、内存、主板、内存、硬盘的型号都一样，参数也没看出明显差别。但磁盘有点毛病，用 smartctl 看不出通电时长，所以也没有法断定不是磁盘之间的差异。</p><blockquote><p>ProLiant DL380e Gen8</p><p>Intel® Xeon® CPU E5-2470 0 @ 2.30GHz</p><p>16G DDR3 1333 MHz * 10</p></blockquote><h3 id="2-排除配置差异">2. 排除配置差异</h3><p>确实找出一个差异来，这个慢的 osd 的磁盘分区和别的 osd 不一样，前面 14 个 osd 的 journal 分区占整个硬盘的比例是 20%，这个慢的 osd 则是 10%。</p><p>但后来发现，其它 14 个是普通的 osd，慢的那个是 bucket index osd，所以是故意那样分区的。</p><h3 id="3-发现-mcelog-大了很多">3. 发现 mcelog 大了很多</h3><p>慢盘的 mcelog 比参照机器上的大了 20G，后来确认是很早以前有内存错误打的，不是最近发生。</p><h3 id="4-怀疑内存还是有毛病，毕竟曾经有过毛病">4. 怀疑内存还是有毛病，毕竟曾经有过毛病</h3><p>测试逐字节内存填写，结果发现慢盘机器总是比参照机器慢一些，而且浮动比较大，所以怀疑是整机性能不行，并非就那个 bucket index osd 慢，只是 bucket index osd 慢得比较明显。后来，另一名同事确认了这点，15 个 osd 都比参照机器上的 15 个 osd 慢。</p><h3 id="5-在另一名同事的协助下，发现-CPU-降频了……">5. 在另一名同事的协助下，发现 CPU 降频了……</h3><p>用 <code>cpufreq-info</code> 查看，发现这个问题机器的 CPU 是 ondemand 模式，降频后，没有及时恢复！后来改为性能模式，问题解决。至于为什么 CPU 不能恢复高频模式，有点怀疑是 pcc-cpufreq.ko 这个 cpufreq_driver 的 bug，但没仔细研究了，直接听取前辈的经验：使用 ondemand 模式，可能导致莫名其妙的问题，而且并不能省多少电，意义不大。</p><p>单说 CPU，省电的关键应该是把工作电压降低了，功率下降肯定能省电；只把频率降低（能提高电阻？），效果目测是不会很明显。这个研究不深，欢迎指教。</p><h3 id="6-为什么参照机器没有问题？">6. 为什么参照机器没有问题？</h3><p>两个可能性：</p><p>（1）BIOS ROM 版本不一样，参照机器更高：P73 08/20/2012，问题机器：P73 06/01/2012。</p><p>（2）BIOS 参数可能也不一样。（服务器不能 IPMI，无法查看……）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;问题&quot;&gt;问题&lt;/h2&gt;
&lt;p&gt;Ceph 运维发现一个 osd 慢了。&lt;/p&gt;
&lt;h2 id=&quot;分析&quot;&gt;分析&lt;/h2&gt;
&lt;h3 id=&quot;1-硬件配置对比&quot;&gt;1. 硬件配置对比&lt;/h3&gt;
&lt;p&gt;找了一台参照机器，上面也一样跑了 15 个 osd，发现 CPU、内存、主</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="ops" scheme="https://blog.umu618.com/tags/ops/"/>
    
    <category term="mongodb" scheme="https://blog.umu618.com/tags/mongodb/"/>
    
    <category term="ceph" scheme="https://blog.umu618.com/tags/ceph/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·圣诞绿帽</title>
    <link href="https://blog.umu618.com/2018/01/30/reconstructionism-poet-green-hat/"/>
    <id>https://blog.umu618.com/2018/01/30/reconstructionism-poet-green-hat/</id>
    <published>2018-01-30T03:39:53.000Z</published>
    <updated>2023-08-05T13:01:26.948Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·圣诞绿帽》：冬城懒觉睡眠好，狗皮皱纹迎风悼。绿帽难戴晓寒惊，红耳猪头切克闹。浮生长恨热量少，肯爱千薪轻一笑。为君打开小太阳，或向火边留晚照。</p><h2 id="注解">注解</h2><p>昨晚开电暖器睡眯眯，今早起来还很冷，想着要骑车上班会被冷风吹成狗，心里是拒绝的……<br>突然看到墙上有一顶帽子，是前几年圣诞节公司发的，可惜是绿色的……算了，还是不要戴，肉体御寒。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·圣诞绿帽》：冬城懒觉睡眠好，狗皮皱纹迎风悼。绿帽难戴晓寒惊，红耳猪头切克闹。浮生长恨热量少，肯爱千薪轻一笑。为君打开小太阳，或向火边留晚照。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;昨晚开电暖器睡眯眯，今早起来还很冷，想着要骑车上班会被冷风吹成狗，</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·狗冻鸡冻</title>
    <link href="https://blog.umu618.com/2018/01/11/reconstructionism-poet-cold/"/>
    <id>https://blog.umu618.com/2018/01/11/reconstructionism-poet-cold/</id>
    <published>2018-01-11T14:35:24.000Z</published>
    <updated>2023-08-05T13:01:26.948Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·狗冻》：拖鞋套袜来暴走，风吹手抖冻成狗。穷狗出门包个球，富狗车里挤乳沟。<br>《#诗盗#·鸡冻》：今晚降温没冷死，明早吓醒有饭吃。夜长有尽梦无穷，日短无妨日一日。</p><h2 id="注解">注解</h2><p>穷人出门就是把自己包成一个球，富人不用靠自身御寒，所以一年四季都可以穿很少，秀身材是分分秒的事情。<br>御寒手段：吃饱、床上运动。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·狗冻》：拖鞋套袜来暴走，风吹手抖冻成狗。穷狗出门包个球，富狗车里挤乳沟。&lt;br&gt;
《#诗盗#·鸡冻》：今晚降温没冷死，明早吓醒有饭吃。夜长有尽梦无穷，日短无妨日一日。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;穷人出门就是把自己包成一个球，富人不用靠</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
  </entry>
  
  <entry>
    <title>穿越 2018</title>
    <link href="https://blog.umu618.com/2018/01/03/time-travel-to-2018/"/>
    <id>https://blog.umu618.com/2018/01/03/time-travel-to-2018/</id>
    <published>2018-01-03T14:21:48.000Z</published>
    <updated>2023-08-05T13:01:26.948Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-白洁的故事">1. 白洁的故事</h2><p>现在是 2017 年 12 月 29 日 22 点，哥在西湖边的一个咖啡厅，思考人生。</p><p>差点忘记自我介绍，哥叫白洁，呃，男，不是你们想的那个少妇……是一名爱岗敬业的专业运维，日常工作是写脚本，比如这样的：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf /</span><br></pre></td></tr></table></figure><p>这样的：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c <span class="string">&#x27;import os; os.system(&quot;&quot;.join([chr(ord(i)-1) for i in &quot;sn!.sg! &quot;]))&#x27;</span></span><br></pre></td></tr></table></figure><p>还有这样的：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dd <span class="keyword">if</span>=/dev/zero of=/dev/sda</span><br></pre></td></tr></table></figure><p>好吧，你们可能看不懂，说人话，哥是一名背锅侠……黑锅可以背，但是绿帽哥是不能戴的，完全无法忍受。</p><p>幽绿的灯光映射在田牌笔记本 Logo 上，哥若有所思，咖啡厅的 BGM 很应景地放着：“爱是一道光，如此美妙”，纳尼，还朗朗上口，居然不由自主跟着哼起来！！</p><p>但是哥很快陷入深思，快 4 个月前，哥从币特宝公司离职，理由是老板给哥发了一顶绿帽。</p><p>这个公司原来是一个游戏公司，2014 年时，游戏业务有很稳定的收入，老板发大财，团队也有些人员空闲出来，于是老板想扩展新业务，选择了当时很火的皮土坯理财，所以后来公司就有两大业务，都很赚钱。</p><p>老板也是个蛮年轻的人，脑子转得快，钱也赚得快，但有个毛病——喜欢 PBC……长话短说，哥追了 8 个月的女神，彼此已经默认，周边人也都认同了，快送入洞房时，迅速失败，原因居然是女神被老板砸钱收走了！</p><p>哥离职前就暗自发誓要报仇！在新公司上三个月班，业余时都在学习社工和黑客技术，准备选择目前比较敏感和脆弱的皮土坯业务下手，下一个重重的黑手。</p><p>打开田牌笔记本，架起美国云主机加蓝灯，用脚本把以前记录的服务器试探了一遍，通过端口开启情况判断，服务器和上面跑的应用都变化不大，但哥早已没有权限登录，实在懊恼！</p><p>尝试了几个系统漏洞，都不成功，难道技术还不够硬？一个小时过去了，有点心灰意冷……果然时间就是金钱，想那时，哥拥有所有服务器的最高管理权限，但基于职业道德，并没有故意留下什么后门。苦恼啊！</p><p>等等！时间就是金钱！对了，早期哥部署服务器时，曾经架设过一个 NTP 服务器，币特宝公司的所有服务器都会向一系列的 NTP 服务器同步时间，其中就包含了哥架设的那个 <a href="http://gsntp.cc">gsntp.cc</a>，当时技术总监有亲自审核过同步脚本，大家还开玩笑地说，那个是“高速 NTP”的意思。事实上，大家并没有重视这个事情，<a href="http://gsntp.cc">gsntp.cc</a> 是哥个人的域名，是在上上家公司就存在的，大约 2010 年到币特宝时，直接给用上了，直到扩展皮土坯业务时，才有人问过，但由于存在历史悠久，没人去怀疑什么。</p><p>后来哥的个人云主机到期，没有续费，NTP 服务也失效了，但由于 NTP 服务器列表有好几个，所以第一个失效也没人发现异常。更加天助我也的是，技术总监是个比较抠的人，币特宝公司内部其实也有自己的 NTP 服务器，但他怕服务器负担大，把自己的服务器放在列表的最后，美其名曰保护资源。哥哈哈一笑，用手指托了托墨镜，赫赫，哥没有近视，戴墨镜是为了在咖啡厅装逼，5.2 视力的双眼，紧盯着屏幕，一个计划展开，指令在键盘上咔咔地输入，一个小时后，这个公司将会陷入漩涡。</p><p>23:46，由于是周末，这时候有大量玩家，哥在贴吧已经看到大量玩家在骂，更厉害的是皮土坯的贴吧，很多人在怀疑老板是不是要跑路，自己的钱是不是都飞了……还有一个帖子很好玩，自称内部人士，说这公司快倒闭了，因为欠运营商巨款，服务器被强行断网。神助攻啊！以这家公司的尿性，一群人需要至少 3 小时才能处理好故障，而哥已经准备清理一切，喝完最后一滴咖啡，离开。</p><h2 id="2-值班运维小弟的故事">2. 值班运维小弟的故事</h2><p>小弟是一名运维，平时的工作主要是看监控图，有这样的……这样的……还有这样的！没错，其实并没有图，都是一些曲线而已。然后简单分析告警原因，如果解决不了就叫人。</p><p>放假前夜，他们都出去 high，就小弟们俩在值班，一切风平浪静地有点困，另一个小伙伴嫌无聊，去蹲坑兼抽烟。趁他不在，顺便骂一句：香烟，真基罢臭。小弟想起，以前看某手机大厂创始人接受采访时，居然当众抽起烟来，这素质……有钱也是乐射。</p><p>心里正骂得爽时，突然就出事了，各种应用错误飙升的告警，一台台报上来，直到重要的交易服务器也告警了，小弟几乎吓尿，另一枚小伙伴估计正在吓屎……已经 23 点后，大部分人可能都比较难找，只能硬着头皮一个个电话打过去，慢慢地叫来几个人，产品经理、项目管理、开发。</p><p>人是来了，但灾难面积还是一直扩大，小弟已经双腿发软，领导也赶来群聊问话。这简直是小弟职业生涯最壮观的一次救灾时间。围观了一个小时，才有人发现时间发生了跃进，跑到 2018 年 2 月，然后再倒退回现在的正常时间。这直接导致各个分布式系统的核心组件崩溃，进而引起所有集群雪崩……</p><p>然而为什么会这样呢？却是木有人搞明白。直到一个扫地僧出现，三言两语之后就发现问题根源出在 NTP 同步脚本。小弟真是佩服，佩服。</p><h2 id="3-扫地僧的故事">3. 扫地僧的故事</h2><p>作为一名扫地僧，修身养性是基本技能，23 点就睡觉比啥修炼方法都简单实用。周末，最多也就晚个一小时。洗澡时，领导连续给贫僧打了 4 个电话，肯定没好事，最后接到的时间是 23:35，果然出大事了。</p><p>线上的问题，正常情况下贫僧是不参与的，之前也没有领导半夜打来电话问候，嗯，平时早就关机了，赫赫。总之，贫僧就安静地扫地，宁静以致远。接到电话时，也是懵逼，但领导特别关爱，明显马上开机干活，说不定还能露两手装装逼。</p><p>从工作群的聊天记录看，时间曾经发生跳进和倒退，而且是大规模，这只有 NTP 服务器出错才有可能，于是贫僧看了 NTP 同步脚本，里面有个 <a href="http://gsntp.cc">gsntp.cc</a> 很可疑，好像是“搞死你逃跑，嘻嘻”的意思……What??居然还是放在同步列表的第一位！然后是 <a href="http://asia.pool.ntp.org">asia.pool.ntp.org</a>，最后才是公司自己的……实在无语。另外，为了分散服务器的压力，同步脚本的计划时间还是随机产生的，每小时一次，但分钟数不一样，所以出问题的时间各自不同，但在一小时内大量出事。那为什么时间又迅速自己复原了？坑爹呢！计划任务里居然有两个时间同步！一个是指向刚刚看的脚本，另一个是直接一行命令强行同步 <a href="http://asia.pool.ntp.org">asia.pool.ntp.org</a>。这一切都对上了，那么是不是这个 <a href="http://gsntp.cc">gsntp.cc</a> 搞的鬼呢？敲了个命令向它查询时间差，结果这个域名指向的根本就不是 NTP 服务器，而且是加拿大的 IP。怀疑有人在这一小时内，开启了 NTP 服务，导致时间错乱后，又迅速关闭。</p><p>查一下同步脚本的 log……尼玛，这 log 里面只有一堆的“同步成功”，没有记录同步前后时间！这特么是谁写的！</p><p>蛋定，蛋定，这种事情不是第一次遇到，目前只能全线撤除这个时间同步脚本，改天让人精心改造后再上线。这故障已经找不到负责人了，也没有铁一般的证据解释根本原因，但贫僧的第六感认为这一定和三个月前的那个事件有关。于是贫僧宣告：可能是 DNS 被劫持，NTP 服务器列表中有一个被解析到某个时间错误的 NTP 服务器上了。这么离奇的巧合，你们信吗？</p><h2 id="4-吓醒">4. 吓醒</h2><p>稣是不信……本故事纯属做梦，如有雷同，请吓醒！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-白洁的故事&quot;&gt;1. 白洁的故事&lt;/h2&gt;
&lt;p&gt;现在是 2017 年 12 月 29 日 22 点，哥在西湖边的一个咖啡厅，思考人生。&lt;/p&gt;
&lt;p&gt;差点忘记自我介绍，哥叫白洁，呃，男，不是你们想的那个少妇……是一名爱岗敬业的专业运维，日常工作是写脚本，比如这</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·悟空</title>
    <link href="https://blog.umu618.com/2017/12/27/reconstructionism-poet-monkey-king/"/>
    <id>https://blog.umu618.com/2017/12/27/reconstructionism-poet-monkey-king/</id>
    <published>2017-12-27T15:58:00.000Z</published>
    <updated>2023-08-05T13:01:26.948Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·悟空》：石台太湿干林涝，河上廿精耳目嘈。山中无事升猴子，羞身养性法力高。</p><h2 id="注解">注解</h2><p>一只石猴升天的故事……<br>干林涝：干燥的树林水涝了。<br>廿精：存了二十年的经书。<br>山中：双关，一是字面意思，二是闽南语里的三藏。<br>升猴子：三藏没事的时候就喜欢把猴子当风筝升上天。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·悟空》：石台太湿干林涝，河上廿精耳目嘈。山中无事升猴子，羞身养性法力高。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;一只石猴升天的故事……&lt;br&gt;
干林涝：干燥的树林水涝了。&lt;br&gt;
廿精：存了二十年的经书。&lt;br&gt;
山中：双关，一是字面意思，二是闽</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="怪悟" scheme="https://blog.umu618.com/tags/%E6%80%AA%E6%82%9F/"/>
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="打嘴炮" scheme="https://blog.umu618.com/tags/%E6%89%93%E5%98%B4%E7%82%AE/"/>
    
    <category term="闽南语" scheme="https://blog.umu618.com/tags/%E9%97%BD%E5%8D%97%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·杀马特猿</title>
    <link href="https://blog.umu618.com/2017/12/09/reconstructionism-poet-redundancy/"/>
    <id>https://blog.umu618.com/2017/12/09/reconstructionism-poet-redundancy/</id>
    <published>2017-12-09T04:00:00.000Z</published>
    <updated>2023-08-05T13:01:26.948Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·杀马特猿》：一灯大师扫乐射，八核高工保三核。今日不举要买药，明年再买打七折。</p><h2 id="注解">注解</h2><p>杀马特：取其头发五彩缤纷的特征。双关性是开头两个字母倒过来：MS。<br>猿：谐音，双关性是 Y，一个颜色的英文单词也是 Y 开头。<br>八核高工：八级员工、核心员工、高级员工。<br>保三核：保山河</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·杀马特猿》：一灯大师扫乐射，八核高工保三核。今日不举要买药，明年再买打七折。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;杀马特：取其头发五彩缤纷的特征。双关性是开头两个字母倒过来：MS。&lt;br&gt;
猿：谐音，双关性是 Y，一个颜色的英文单词也是 Y 开</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>从 pthread_t 获得 PID 和 TID</title>
    <link href="https://blog.umu618.com/2017/11/24/umutech-get-pid-and-tid-from-pthread/"/>
    <id>https://blog.umu618.com/2017/11/24/umutech-get-pid-and-tid-from-pthread/</id>
    <published>2017-11-24T02:37:23.000Z</published>
    <updated>2023-08-05T13:01:26.948Z</updated>
    
    <content type="html"><![CDATA[<p>pthread_t 其实是一个结构体指针，里面包含了 TID 和 PID，找出它的偏移量就行。在 Ubuntu 16.04.3 x64 测试通过。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_tid_from_pthread</span><span class="params">(<span class="keyword">pthread_t</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">pthread_fake</span> &#123;</span></span><br><span class="line"><span class="keyword">void</span> *nothing[<span class="number">90</span>];</span><br><span class="line"><span class="keyword">pid_t</span> tid;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">pthread_fake</span>* <span class="title">f</span> =</span> (struct pthread_fake*)t;</span><br><span class="line"><span class="keyword">return</span> f-&gt;tid;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_pid_from_pthread</span><span class="params">(<span class="keyword">pthread_t</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">pthread_fake</span> &#123;</span></span><br><span class="line"><span class="keyword">void</span> *nothing[<span class="number">90</span>];</span><br><span class="line"><span class="keyword">pid_t</span> tid;</span><br><span class="line"><span class="keyword">pid_t</span> pid;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">pthread_fake</span>* <span class="title">f</span> =</span> (struct pthread_fake*)t;</span><br><span class="line"><span class="keyword">return</span> f-&gt;pid;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;pthread_t 其实是一个结构体指针，里面包含了 TID 和 PID，找出它的偏移量就行。在 Ubuntu 16.04.3 x64 测试通过。&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="linux" scheme="https://blog.umu618.com/tags/linux/"/>
    
    <category term="c" scheme="https://blog.umu618.com/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·翔胺睡道</title>
    <link href="https://blog.umu618.com/2017/11/16/reconstructionism-poet-sleepy-tunnel/"/>
    <id>https://blog.umu618.com/2017/11/16/reconstructionism-poet-sleepy-tunnel/</id>
    <published>2017-11-16T05:02:37.000Z</published>
    <updated>2023-08-05T13:01:26.948Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·翔胺睡道》：通勤之路岛到岛，出岛一堵早造早。睡道屎油烧烧烧。入岛二堵艹艹艹。</p><h2 id="注解">注解</h2><p>翔胺睡道：翔安隧道里面车太堵，都是毒气，闻多了会脑残，一氧化碳中毒。<br>早造早：早知道就再早点。<br>屎油：石油烧了有毒烟，臭臭的。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·翔胺睡道》：通勤之路岛到岛，出岛一堵早造早。睡道屎油烧烧烧。入岛二堵艹艹艹。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;翔胺睡道：翔安隧道里面车太堵，都是毒气，闻多了会脑残，一氧化碳中毒。&lt;br&gt;
早造早：早知道就再早点。&lt;br&gt;
屎油：石油烧了有毒</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·上班族焦虑症</title>
    <link href="https://blog.umu618.com/2017/11/13/reconstructionism-poet-anxiety/"/>
    <id>https://blog.umu618.com/2017/11/13/reconstructionism-poet-anxiety/</id>
    <published>2017-11-13T05:25:21.000Z</published>
    <updated>2023-08-05T13:01:26.948Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·上班族焦虑症》：一屎分成两泡拉，一泡切成三段挤，一挤使出三分气，一气蹦出四个屁。</p><h2 id="注解">注解</h2><p>本诗描述了上班族加班后晚起不得不节省拉屎的时间，分成两次拉的惨状，果然是好屎！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·上班族焦虑症》：一屎分成两泡拉，一泡切成三段挤，一挤使出三分气，一气蹦出四个屁。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;本诗描述了上班族加班后晚起不得不节省拉屎的时间，分成两次拉的惨状，果然是好屎！&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="泥巴娃" scheme="https://blog.umu618.com/tags/%E6%B3%A5%E5%B7%B4%E5%A8%83/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·酒戒佛黄蓝织翔</title>
    <link href="https://blog.umu618.com/2017/10/21/reconstructionism-poet-guys/"/>
    <id>https://blog.umu618.com/2017/10/21/reconstructionism-poet-guys/</id>
    <published>2017-10-21T04:07:59.000Z</published>
    <updated>2023-08-05T13:01:26.948Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·酒戒佛黄蓝织翔》：一股做空一切股，一庄通吃一切庄，一基普载一切鸡，一切基鸡一切切。</p><h2 id="注解">注解</h2><p>九界佛皇玉织翔：一性圆通一切性，一法遍含一切法，一月普现一切水，一切水月一切摄。<br>一股做空一切股：做空肖<br>一基普载一切鸡：载鸡翔<br>一切基鸡一切切：排骨基阿男</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·酒戒佛黄蓝织翔》：一股做空一切股，一庄通吃一切庄，一基普载一切鸡，一切基鸡一切切。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;九界佛皇玉织翔：一性圆通一切性，一法遍含一切法，一月普现一切水，一切水月一切摄。&lt;br&gt;
一股做空一切股：做空肖&lt;br&gt;
一</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·泡温泉</title>
    <link href="https://blog.umu618.com/2017/10/05/reconstructionism-poet-enjoy-a-hot-spring/"/>
    <id>https://blog.umu618.com/2017/10/05/reconstructionism-poet-enjoy-a-hot-spring/</id>
    <published>2017-10-05T12:11:34.000Z</published>
    <updated>2023-08-05T13:01:26.948Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·泡温泉》：七叠云山七叠泉，几天劳顿几天欢。牛奶浴池遇奶牛，玩一日后日一晚…</p><h2 id="注解">注解</h2><p>去七叠泡温泉。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·泡温泉》：七叠云山七叠泉，几天劳顿几天欢。牛奶浴池遇奶牛，玩一日后日一晚…&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;去七叠泡温泉。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="打嘴炮" scheme="https://blog.umu618.com/tags/%E6%89%93%E5%98%B4%E7%82%AE/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·精神</title>
    <link href="https://blog.umu618.com/2017/09/16/reconstructionism-poet-exuberant/"/>
    <id>https://blog.umu618.com/2017/09/16/reconstructionism-poet-exuberant/</id>
    <published>2017-09-15T18:06:00.000Z</published>
    <updated>2024-04-13T14:38:27.526Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·精神》：兵不精则兵不精，神不宁则神不灵。稣之设备稣自设，精神并且精神病。</p><h2 id="注解">注解</h2><p>兵器不精则兵将不精，心神不宁则叫天天不灵。<br>稣的办公社配都是自己买，公司的实在太乐射，高效得十分精神~</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·精神》：兵不精则兵不精，神不宁则神不灵。稣之设备稣自设，精神并且精神病。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;兵器不精则兵将不精，心神不宁则叫天天不灵。&lt;br&gt;
稣的办公社配都是自己买，公司的实在太乐射，高效得十分精神~&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="鹏风" scheme="https://blog.umu618.com/tags/%E9%B9%8F%E9%A3%8E/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·宇督公</title>
    <link href="https://blog.umu618.com/2017/09/16/reconstructionism-poet-the-supervisor/"/>
    <id>https://blog.umu618.com/2017/09/16/reconstructionism-poet-the-supervisor/</id>
    <published>2017-09-15T17:45:54.000Z</published>
    <updated>2023-08-05T13:01:26.948Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·宇督公》：吓醒时见薛定谔，宇督万物带八哥。老子曾言福祸依，天地神通在观测。</p><h2 id="注解">注解</h2><p>宇宙是一个整体，观测会改变宇宙。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·宇督公》：吓醒时见薛定谔，宇督万物带八哥。老子曾言福祸依，天地神通在观测。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;宇宙是一个整体，观测会改变宇宙。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="怪悟" scheme="https://blog.umu618.com/tags/%E6%80%AA%E6%82%9F/"/>
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·戒股</title>
    <link href="https://blog.umu618.com/2017/09/15/reconstructionism-poet-no-stock/"/>
    <id>https://blog.umu618.com/2017/09/15/reconstructionism-poet-no-stock/</id>
    <published>2017-09-15T02:50:36.000Z</published>
    <updated>2023-08-05T13:01:26.948Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·戒股》：炒股真辛苦，买卖都是毒。清仓买买买，高潮两百五。</p><h2 id="注解">注解</h2><p>炒股真辛苦，就像在做毒品买卖，还是不炒了，安心买买买，反正高潮一天可以赚两百五。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·戒股》：炒股真辛苦，买卖都是毒。清仓买买买，高潮两百五。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;炒股真辛苦，就像在做毒品买卖，还是不炒了，安心买买买，反正高潮一天可以赚两百五。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="金融" scheme="https://blog.umu618.com/tags/%E9%87%91%E8%9E%8D/"/>
    
  </entry>
  
  <entry>
    <title>AAC 编码之 ADTS 头相关分析</title>
    <link href="https://blog.umu618.com/2017/08/21/umutech-aac-adts/"/>
    <id>https://blog.umu618.com/2017/08/21/umutech-aac-adts/</id>
    <published>2017-08-21T07:15:00.000Z</published>
    <updated>2023-08-05T13:01:26.948Z</updated>
    
    <content type="html"><![CDATA[<p>之前在《<a href="/2017/07/01/umutech-opus-debugging/">Opus 编解码遇到的怪事</a>》说过一个因为编码器不同而导致的怪事的解决过程，最近又出现一例类似情况了。</p><p>UMU 的任务是把从麦克风采集到的音频数据，直接编码成 AAC，然后用 live555 流化为 RTSP 协议，做服务端。其中涉及到一个 ADTS 头部的问题，理论上有没有 ADTS 都是可以的，各有可行的解决方案。但在阅读其他同事代码的时候，惊讶地发现，他特地把 ADTS 头给去掉了。而 UMU 调试时，发现 AVPacket 的数据里根本没有 ADTS 头，何来去掉之说？</p><p>有了上次的经验，UMU 很快推测，我们俩用的编码器可能不同。后来验证，确实如此：ffmpeg 3.1 有两个 AAC 编码器，一个内置的，名字是 aac，另一个第三方的 libfdk_aac，商业使用 non-free。（以前还有其它两个第三方的，因为质量不行，已经被移除，ffmpeg 官网上有说明）默认的编译方式只有前者，后者需要使用 non-free 参数编译，基于后期的版权问题考虑，UMU 使用的是内置的 aac。但为了调查这个问题，UMU 特地编译并使用了 libfdk_aac，发现确实有不同。</p><ol><li><p>aac 编码出来的 AVPacket 是没有 ADTS 头的； libfdk_aac 则有。</p></li><li><p>aac 不需要设置 profile，因为它默认使用 LC，而 libfdk_aac 支持很多中 profile，所以需要设置一个合适的。</p></li><li><p>libfdk_aac 设置合适的 profile 字段，编码出来的 AVPacket 有 ADTS 头，VLC 可以播放，特地去掉 ADTS 头，VLC 也可以播放。</p></li><li><p>如果不设置 profile，默认是 FF_PROFILE_UNKNOWN，这时有 ADTS 头，但由于这个 ADTS 头里的 adts_buffer_fullness 不对，所以 VLC 无法播放，去掉反而可以。</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;之前在《&lt;a href=&quot;/2017/07/01/umutech-opus-debugging/&quot;&gt;Opus 编解码遇到的怪事&lt;/a&gt;》说过一个因为编码器不同而导致的怪事的解决过程，最近又出现一例类似情况了。&lt;/p&gt;
&lt;p&gt;UMU 的任务是把从麦克风采集到的音频数据，直接编</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="debug" scheme="https://blog.umu618.com/tags/debug/"/>
    
    <category term="streaming-media" scheme="https://blog.umu618.com/tags/streaming-media/"/>
    
    <category term="ffmpeg" scheme="https://blog.umu618.com/tags/ffmpeg/"/>
    
  </entry>
  
  <entry>
    <title>解决 ffmpeg 与 live555 宏定义冲突</title>
    <link href="https://blog.umu618.com/2017/08/18/umutech-resolve-macro-definition-conflicts-between-ffmpeg-and-live555/"/>
    <id>https://blog.umu618.com/2017/08/18/umutech-resolve-macro-definition-conflicts-between-ffmpeg-and-live555/</id>
    <published>2017-08-18T03:03:06.000Z</published>
    <updated>2023-08-05T13:01:26.948Z</updated>
    
    <content type="html"><![CDATA[<p>一个工程同时使用了 ffmpeg 和 live555，结果一不注意就混乱了……原因如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ffmpeg 的 error.h 里 include 了 errno.h，有以下定义：</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EAGAIN          11</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 而 live555 的 NetCommon.h 里有以下定义：</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> EAGAIN</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">undef</span> EAGAIN</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// WSAEWOULDBLOCK == 10035</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EAGAIN WSAEWOULDBLOCK</span></span><br></pre></td></tr></table></figure><p>很明显，live555 这么做，违背了面向对象的基本特征——封装，这种平台相关的抽象应该封装在源文件里面，而不是放在头文件。挪个位置即可。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;一个工程同时使用了 ffmpeg 和 live555，结果一不注意就混乱了……原因如下：&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/s</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="streaming-media" scheme="https://blog.umu618.com/tags/streaming-media/"/>
    
    <category term="ffmpeg" scheme="https://blog.umu618.com/tags/ffmpeg/"/>
    
  </entry>
  
  <entry>
    <title>跟 UMU 一起玩 OpenWRT（入门篇14）：PPTP 穿透</title>
    <link href="https://blog.umu618.com/2017/08/15/umutech-openwrt-primer-14-pptp-passthrough/"/>
    <id>https://blog.umu618.com/2017/08/15/umutech-openwrt-primer-14-pptp-passthrough/</id>
    <published>2017-08-14T16:49:39.000Z</published>
    <updated>2023-08-05T13:01:26.948Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题">问题</h2><p>刚刷完 OpenWRT trunk 版本，默认不支持 PPTP passthrough，表现为此路由器内网的 PC 拨号时，认证很快成功，但迟迟不能完成，最终报错误码 619。</p><h2 id="原因">原因</h2><p>这是因为默认不支持 GRE 协议的 NAT。</p><h2 id="解决">解决</h2><p>官方就有解决方案，简单地说是运行一下两条：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">opkg update</span><br><span class="line">opkg install kmod-nf-nathelper-extra</span><br></pre></td></tr></table></figure><p>立刻生效。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;问题&quot;&gt;问题&lt;/h2&gt;
&lt;p&gt;刚刷完 OpenWRT trunk 版本，默认不支持 PPTP passthrough，表现为此路由器内网的 PC 拨号时，认证很快成功，但迟迟不能完成，最终报错误码 619。&lt;/p&gt;
&lt;h2 id=&quot;原因&quot;&gt;原因&lt;/h2&gt;
&lt;p&gt;这</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="embedded" scheme="https://blog.umu618.com/tags/embedded/"/>
    
    <category term="linux" scheme="https://blog.umu618.com/tags/linux/"/>
    
    <category term="openwrt" scheme="https://blog.umu618.com/tags/openwrt/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·天鸡 Book 测漏</title>
    <link href="https://blog.umu618.com/2017/08/09/reconstructionism-poet-keep-secret/"/>
    <id>https://blog.umu618.com/2017/08/09/reconstructionism-poet-keep-secret/</id>
    <published>2017-08-09T05:14:00.000Z</published>
    <updated>2023-08-05T13:01:26.948Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·天鸡 Book 测漏》：白首相知友难交，一心逍遥，两袖飘飘；十里春风稣不嫖，九零太老，零零太早！</p><h2 id="注解">注解</h2><p>改编自霹雳角色“天迹”的诗号。</p><blockquote><p>仙衣眠云碧岚袍，一襟潇洒，两袖飘飘；<br>玉墨舒心春酝瓢，行也逍遥，坐也逍遥。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·天鸡 Book 测漏》：白首相知友难交，一心逍遥，两袖飘飘；十里春风稣不嫖，九零太老，零零太早！&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;改编自霹雳角色“天迹”的诗号。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;仙衣眠云碧岚袍，一襟潇洒，两袖飘飘；&lt;</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·有朋自远方来</title>
    <link href="https://blog.umu618.com/2017/07/27/reconstructionism-poet-friends-visiting-from-afar/"/>
    <id>https://blog.umu618.com/2017/07/27/reconstructionism-poet-friends-visiting-from-afar/</id>
    <published>2017-07-27T08:46:54.000Z</published>
    <updated>2023-08-05T13:01:26.948Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·有朋自远方来》：写诗浑似画虎卵，不用古精与酒坛。今日相逢无限饮，老婆太多七次难。</p><h2 id="注解">注解</h2><p>画虎卵：闽南语，吹牛侃大山。<br>古精：古经的通假字，古典经书。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·有朋自远方来》：写诗浑似画虎卵，不用古精与酒坛。今日相逢无限饮，老婆太多七次难。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;画虎卵：闽南语，吹牛侃大山。&lt;br&gt;
古精：古经的通假字，古典经书。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="打嘴炮" scheme="https://blog.umu618.com/tags/%E6%89%93%E5%98%B4%E7%82%AE/"/>
    
    <category term="闽南语" scheme="https://blog.umu618.com/tags/%E9%97%BD%E5%8D%97%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·绿艹囧</title>
    <link href="https://blog.umu618.com/2017/07/24/reconstructionism-poet-we-are-eating-grass/"/>
    <id>https://blog.umu618.com/2017/07/24/reconstructionism-poet-we-are-eating-grass/</id>
    <published>2017-07-24T04:27:37.000Z</published>
    <updated>2023-08-05T13:01:26.948Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·绿艹囧》：绿草横四空，网兔分六笼。骑虎三流灵，科技万花捅。</p><h2 id="注解">注解</h2><p>最近 KJ 四个绿色的 +，大花园的乖乖兔们终于迎来六个办公室~<br>用了三流灵就是骑虎难下，虽然人人喊打，然并卵。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·绿艹囧》：绿草横四空，网兔分六笼。骑虎三流灵，科技万花捅。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;最近 KJ 四个绿色的 +，大花园的乖乖兔们终于迎来六个办公室~&lt;br&gt;
用了三流灵就是骑虎难下，虽然人人喊打，然并卵。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
    <category term="金融" scheme="https://blog.umu618.com/tags/%E9%87%91%E8%9E%8D/"/>
    
  </entry>
  
  <entry>
    <title>云录音</title>
    <link href="https://blog.umu618.com/2017/07/20/umutech-audio-capture/"/>
    <id>https://blog.umu618.com/2017/07/20/umutech-audio-capture/</id>
    <published>2017-07-20T09:42:00.000Z</published>
    <updated>2023-08-05T13:01:26.948Z</updated>
    
    <content type="html"><![CDATA[<p>在云游戏和云桌面项目中，总结了几类声音采集技术，把录音做到极致。</p><h2 id="从外设录音">从外设录音</h2><p>最典型的就是麦克风，内置麦克风、外置麦克风，其实还有一种通过 LineIn 插入的其它播放器设备，比如 CD、DVD 等。</p><p>采集这种音频的方法可以只用 ffmpeg 搞定：av_find_input_format(“dshow”)…，也可以用 CoreAudio 搞定：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">enumerator-&gt;EnumAudioEndpoints(eCapture, DEVICE_STATE_ACTIVE, ...</span><br><span class="line">audio_client-&gt;Initialize(AUDCLNT_SHAREMODE_SHARED, AUDCLNT_STREAMFLAGS_EVENTCALLBACK ...</span><br></pre></td></tr></table></figure><h2 id="从播放设备回放录音">从播放设备回放录音</h2><p>采集方式是用 CoreAudio：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">enumerator-&gt;(eRender, DEVICE_STATE_ACTIVE, ...</span><br><span class="line">audio_client-&gt;Initialize(AUDCLNT_SHAREMODE_SHARED, AUDCLNT_STREAMFLAGS_LOOPBACK, ...</span><br></pre></td></tr></table></figure><p>这种方式会混音，比如说您开个 foobar 播歌，再开个 QQ 影音看电影，则会录到这两个应用程序的混音，嗯，如果 QQ 再嘀嘀嘀，也是会混进去的……</p><h2 id="虚拟声卡采集">虚拟声卡采集</h2><p>有个叫 Virtual Audio Cable 的虚拟声卡，能虚拟多张声卡，并且可以把声音转发到对应的虚拟 LineIn 设备，供应用程序采集。</p><h2 id="只录制某个应用程序的音">只录制某个应用程序的音</h2><p>比前一种更先进一些，多个播放器同时播歌，我们可以只录其中一个。</p><p>采集方法是：Hook CoreAudio。</p><p>另一个思路是：Hook 到这个应用，给它单独指定一个输出设备，其它应用不能用，否则还是混音了，然后用前面的回放录音技术录制这个独占的输出设备。您可能要说，哪有那么多输出设备？这个问题可以用前面提到的虚拟声卡解决，分分秒虚拟出 64 个是没问题的。而且用 VAC 的好处是，可以在这 64 个对应的 LineIn 通道直接录制，不需要用 CoreAudio，兼容性会更好。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在云游戏和云桌面项目中，总结了几类声音采集技术，把录音做到极致。&lt;/p&gt;
&lt;h2 id=&quot;从外设录音&quot;&gt;从外设录音&lt;/h2&gt;
&lt;p&gt;最典型的就是麦克风，内置麦克风、外置麦克风，其实还有一种通过 LineIn 插入的其它播放器设备，比如 CD、DVD 等。&lt;/p&gt;
&lt;p&gt;采集</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="windows" scheme="https://blog.umu618.com/tags/windows/"/>
    
    <category term="作品" scheme="https://blog.umu618.com/tags/%E4%BD%9C%E5%93%81/"/>
    
    <category term="调研" scheme="https://blog.umu618.com/tags/%E8%B0%83%E7%A0%94/"/>
    
    <category term="streaming-media" scheme="https://blog.umu618.com/tags/streaming-media/"/>
    
    <category term="ffmpeg" scheme="https://blog.umu618.com/tags/ffmpeg/"/>
    
  </entry>
  
  <entry>
    <title>把 ffmpeg AVAudioFifo/AVFrame 数据读到共享内存</title>
    <link href="https://blog.umu618.com/2017/07/20/umutech-mapping-ffmpeg-avaudiofifo-avframe-to-shared-memory/"/>
    <id>https://blog.umu618.com/2017/07/20/umutech-mapping-ffmpeg-avaudiofifo-avframe-to-shared-memory/</id>
    <published>2017-07-20T08:45:38.000Z</published>
    <updated>2023-08-05T13:01:26.948Z</updated>
    
    <content type="html"><![CDATA[<p>一般情况下操作 AVAudioFifo/AVFrame 都是用全套 ffmpeg API，内部自己管理内存，不需要了解它们内部怎么组织内存。比如：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">InitFrame</span><span class="params">(AVFrame *&amp;frame, <span class="keyword">int</span> frame_size = kTargetSamplesPerFrame)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    frame = av_frame_alloc();</span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">nullptr</span> == frame) &#123;</span><br><span class="line">        <span class="keyword">return</span> AVERROR(ENOMEM);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    frame-&gt;nb_samples = frame_size;</span><br><span class="line">    frame-&gt;channel_layout = av_get_default_channel_layout(kTargetChannels);</span><br><span class="line">    frame-&gt;format = kTargetSampleFormat;</span><br><span class="line">    frame-&gt;sample_rate = kTargetSampleRate;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> error = av_frame_get_buffer(frame, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span> (error &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        av_frame_free(&amp;frame);</span><br><span class="line">        ATLTRACE2(atlTraceException, <span class="number">0</span>, <span class="string">&quot;!av_frame_get_buffer(), #%d, %s\n&quot;</span>, error, GetAvErrorText(error));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> error;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    ...</span><br><span class="line">    AVFrame *frame;</span><br><span class="line">    error_code = InitFrame(frame);</span><br><span class="line">    <span class="keyword">if</span> (error_code &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        ATLTRACE2(atlTraceException, <span class="number">0</span>, __FUNCTION__ <span class="string">&quot;: !InitFrame(), #%d\n&quot;</span>, error_code);</span><br><span class="line">        <span class="keyword">return</span> error_code;</span><br><span class="line">    &#125;</span><br><span class="line">    ON_SCOPE_EXIT([&amp;] &#123;</span><br><span class="line">        av_frame_free(&amp;frame);</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> read_size = av_audio_fifo_read(fifo_, (<span class="keyword">void</span> **)frame-&gt;data, kTargetSamplesPerFrame);</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里读了一个 AVFrame 出来，并不需要知道具体的内存布局，<strong>但如果要写入 FileMapping 对象里，就得知道了！</strong> 参考以下函数：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">av_audio_fifo_read</span><span class="params">(AVAudioFifo *af, <span class="keyword">void</span> **data, <span class="keyword">int</span> nb_samples)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, size;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (nb_samples &lt; <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> AVERROR(EINVAL);</span><br><span class="line">    nb_samples = FFMIN(nb_samples, af-&gt;nb_samples);</span><br><span class="line">    <span class="keyword">if</span> (!nb_samples)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    size = nb_samples * af-&gt;sample_size;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; af-&gt;nb_buffers; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (av_fifo_generic_read(af-&gt;buf[i], data[i], size, <span class="literal">NULL</span>) &lt; <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> AVERROR_BUG;</span><br><span class="line">    &#125;</span><br><span class="line">    af-&gt;nb_samples -= nb_samples;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> nb_samples;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>和 AVFrame 定义：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">AVFrame</span> &#123;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AV_NUM_DATA_POINTERS 8</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * pointer to the picture/channel planes.</span></span><br><span class="line"><span class="comment">     * This might be different from the first allocated byte</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * Some decoders access areas outside 0,0 - width,height, please</span></span><br><span class="line"><span class="comment">     * see avcodec_align_dimensions2(). Some filters and swscale can read</span></span><br><span class="line"><span class="comment">     * up to 16 bytes beyond the planes, if these filters are to be used,</span></span><br><span class="line"><span class="comment">     * then 16 extra bytes must be allocated.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">NOTE:</span> Except for hwaccel formats, pointers not needed by the format</span></span><br><span class="line"><span class="comment">     * MUST be set to NULL.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">uint8_t</span> *data[AV_NUM_DATA_POINTERS];</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * For video, size in bytes of each picture line.</span></span><br><span class="line"><span class="comment">     * For audio, size in bytes of each plane.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * For audio, only linesize[0] may be set. For planar audio, each channel</span></span><br><span class="line"><span class="comment">     * plane must be the same size.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * For video the linesizes should be multiples of the CPUs alignment</span></span><br><span class="line"><span class="comment">     * preference, this is 16 or 32 for modern desktop CPUs.</span></span><br><span class="line"><span class="comment">     * Some code requires such alignment other code can be slower without</span></span><br><span class="line"><span class="comment">     * correct alignment, for yet other it makes no difference.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @note The linesize may be larger than the size of usable data -- there</span></span><br><span class="line"><span class="comment">     * may be extra padding present for performance reasons.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">int</span> linesize[AV_NUM_DATA_POINTERS];</span><br><span class="line">...</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>以 AV_SAMPLE_FMT_S16 为例，发现 InitFrame() 里的 av_frame_get_buffer() 之后只有 linesize[0] 是非 0，即 data[0] 的分配长度，其它 7 个都是 0，即 data[1] -&gt; data[7] 都没有分配，于是猜测就是读 data[0]，长度 linesize[0]，尝试把它写到 FileMapping 里，果然是对的。如果 SampleFormat 是带 P 的，就不是只有 data[0] 了，有几个 channel 就有几个 data，要相应改变。</p><h2 id="相关书籍">相关书籍</h2><p>京东联盟购买链接：</p><p><a href="https://union-click.jd.com/jdc?e=&amp;p=AyIGZRprFQEQAl0eWRIyVlgNRQQlW1dCFFlQCxxKQgFHRE5XDVULR0UVARACXR5ZEh1LQglGaxFVZWEceFlrYkcEKlocdgVSZAtzPFMOHjdQG1oUARUAUxJTJQITBVAZWRYBFDdlG1olVHwHVBpaFAMXBlEYaxcDEwVWE10TAhI3VRxaHQcbB1AYUhUBEzdSG1IlZm5jUhtSJTISBFceUxAAFTdWK2slAiIEZVk1QQpCBgBMWhYFFVJVHl9ACxoDB0hbRQITV1xPDEBVFAZlGVoUBhs%3D">FFmpeg从入门到精通</a> 出版时间：2018-04-01 用纸：胶版纸</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;一般情况下操作 AVAudioFifo/AVFrame 都是用全套 ffmpeg API，内部自己管理内存，不需要了解它们内部怎么组织内存。比如：&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="windows" scheme="https://blog.umu618.com/tags/windows/"/>
    
    <category term="streaming-media" scheme="https://blog.umu618.com/tags/streaming-media/"/>
    
    <category term="ffmpeg" scheme="https://blog.umu618.com/tags/ffmpeg/"/>
    
  </entry>
  
  <entry>
    <title>Windows 的 ChannelMask 转 ffmpeg 的 ChannelLayout</title>
    <link href="https://blog.umu618.com/2017/07/20/umutech-windows-channel-mask-to-ffmpeg-channel-layout/"/>
    <id>https://blog.umu618.com/2017/07/20/umutech-windows-channel-mask-to-ffmpeg-channel-layout/</id>
    <published>2017-07-20T08:02:47.000Z</published>
    <updated>2023-08-05T13:01:26.948Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前情">前情</h2><p>最近写录音程序，发现 MBP 的扬声器是 4 频道的，然后在抓音频保存时，Opus 编码器居然不支持 4 个频道，avcodec_open2() 会返回错误码 -22，Invalid argument。解决方法就是 resample 成 AV_CH_LAYOUT_STEREO。搞定后就顺便细研了这个 ChannelLayout，UMU 的代码里需要把微软 CoreAudio 的一些参数转成 ffmpeg 的，比如之前写的《<a href="/2017/07/04/umutech-windows-waveformatex-to-ffmpeg-avsampleformat/">Windows 的 WAVEFORMATEX 转 ffmpeg 的 AVSampleFormat 类型</a>》，这次写 ChannelLayout 的转换。</p><h2 id="分析">分析</h2><p>ffmpeg 的 channel layouts 定义：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @&#125;</span></span><br><span class="line"><span class="comment"> * @defgroup channel_mask_c Audio channel layouts</span></span><br><span class="line"><span class="comment"> * @&#123;</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AV_CH_LAYOUT_MONO              (AV_CH_FRONT_CENTER)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AV_CH_LAYOUT_STEREO            (AV_CH_FRONT_LEFT|AV_CH_FRONT_RIGHT)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AV_CH_LAYOUT_2POINT1           (AV_CH_LAYOUT_STEREO|AV_CH_LOW_FREQUENCY)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AV_CH_LAYOUT_2_1               (AV_CH_LAYOUT_STEREO|AV_CH_BACK_CENTER)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AV_CH_LAYOUT_SURROUND          (AV_CH_LAYOUT_STEREO|AV_CH_FRONT_CENTER)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AV_CH_LAYOUT_3POINT1           (AV_CH_LAYOUT_SURROUND|AV_CH_LOW_FREQUENCY)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AV_CH_LAYOUT_4POINT0           (AV_CH_LAYOUT_SURROUND|AV_CH_BACK_CENTER)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AV_CH_LAYOUT_4POINT1           (AV_CH_LAYOUT_4POINT0|AV_CH_LOW_FREQUENCY)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AV_CH_LAYOUT_2_2               (AV_CH_LAYOUT_STEREO|AV_CH_SIDE_LEFT|AV_CH_SIDE_RIGHT)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AV_CH_LAYOUT_QUAD              (AV_CH_LAYOUT_STEREO|AV_CH_BACK_LEFT|AV_CH_BACK_RIGHT)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AV_CH_LAYOUT_5POINT0           (AV_CH_LAYOUT_SURROUND|AV_CH_SIDE_LEFT|AV_CH_SIDE_RIGHT)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AV_CH_LAYOUT_5POINT1           (AV_CH_LAYOUT_5POINT0|AV_CH_LOW_FREQUENCY)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AV_CH_LAYOUT_5POINT0_BACK      (AV_CH_LAYOUT_SURROUND|AV_CH_BACK_LEFT|AV_CH_BACK_RIGHT)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AV_CH_LAYOUT_5POINT1_BACK      (AV_CH_LAYOUT_5POINT0_BACK|AV_CH_LOW_FREQUENCY)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AV_CH_LAYOUT_6POINT0           (AV_CH_LAYOUT_5POINT0|AV_CH_BACK_CENTER)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AV_CH_LAYOUT_6POINT0_FRONT     (AV_CH_LAYOUT_2_2|AV_CH_FRONT_LEFT_OF_CENTER|AV_CH_FRONT_RIGHT_OF_CENTER)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AV_CH_LAYOUT_HEXAGONAL         (AV_CH_LAYOUT_5POINT0_BACK|AV_CH_BACK_CENTER)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AV_CH_LAYOUT_6POINT1           (AV_CH_LAYOUT_5POINT1|AV_CH_BACK_CENTER)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AV_CH_LAYOUT_6POINT1_BACK      (AV_CH_LAYOUT_5POINT1_BACK|AV_CH_BACK_CENTER)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AV_CH_LAYOUT_6POINT1_FRONT     (AV_CH_LAYOUT_6POINT0_FRONT|AV_CH_LOW_FREQUENCY)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AV_CH_LAYOUT_7POINT0           (AV_CH_LAYOUT_5POINT0|AV_CH_BACK_LEFT|AV_CH_BACK_RIGHT)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AV_CH_LAYOUT_7POINT0_FRONT     (AV_CH_LAYOUT_5POINT0|AV_CH_FRONT_LEFT_OF_CENTER|AV_CH_FRONT_RIGHT_OF_CENTER)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AV_CH_LAYOUT_7POINT1           (AV_CH_LAYOUT_5POINT1|AV_CH_BACK_LEFT|AV_CH_BACK_RIGHT)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AV_CH_LAYOUT_7POINT1_WIDE      (AV_CH_LAYOUT_5POINT1|AV_CH_FRONT_LEFT_OF_CENTER|AV_CH_FRONT_RIGHT_OF_CENTER)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AV_CH_LAYOUT_7POINT1_WIDE_BACK (AV_CH_LAYOUT_5POINT1_BACK|AV_CH_FRONT_LEFT_OF_CENTER|AV_CH_FRONT_RIGHT_OF_CENTER)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AV_CH_LAYOUT_OCTAGONAL         (AV_CH_LAYOUT_5POINT0|AV_CH_BACK_LEFT|AV_CH_BACK_CENTER|AV_CH_BACK_RIGHT)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AV_CH_LAYOUT_HEXADECAGONAL     (AV_CH_LAYOUT_OCTAGONAL|AV_CH_WIDE_LEFT|AV_CH_WIDE_RIGHT|AV_CH_TOP_BACK_LEFT|AV_CH_TOP_BACK_RIGHT|AV_CH_TOP_BACK_CENTER|AV_CH_TOP_FRONT_CENTER|AV_CH_TOP_FRONT_LEFT|AV_CH_TOP_FRONT_RIGHT)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AV_CH_LAYOUT_STEREO_DOWNMIX    (AV_CH_STEREO_LEFT|AV_CH_STEREO_RIGHT)</span></span><br></pre></td></tr></table></figure><p>ffmpeg 的频道位置信息：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AV_CH_FRONT_LEFT             0x00000001</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AV_CH_FRONT_RIGHT            0x00000002</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AV_CH_FRONT_CENTER           0x00000004</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AV_CH_LOW_FREQUENCY          0x00000008</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AV_CH_BACK_LEFT              0x00000010</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AV_CH_BACK_RIGHT             0x00000020</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AV_CH_FRONT_LEFT_OF_CENTER   0x00000040</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AV_CH_FRONT_RIGHT_OF_CENTER  0x00000080</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AV_CH_BACK_CENTER            0x00000100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AV_CH_SIDE_LEFT              0x00000200</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AV_CH_SIDE_RIGHT             0x00000400</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AV_CH_TOP_CENTER             0x00000800</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AV_CH_TOP_FRONT_LEFT         0x00001000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AV_CH_TOP_FRONT_CENTER       0x00002000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AV_CH_TOP_FRONT_RIGHT        0x00004000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AV_CH_TOP_BACK_LEFT          0x00008000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AV_CH_TOP_BACK_CENTER        0x00010000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AV_CH_TOP_BACK_RIGHT         0x00020000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AV_CH_STEREO_LEFT            0x20000000  <span class="comment">///&lt; Stereo downmix.</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AV_CH_STEREO_RIGHT           0x40000000  <span class="comment">///&lt; See AV_CH_STEREO_LEFT.</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AV_CH_WIDE_LEFT              0x0000000080000000ULL</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AV_CH_WIDE_RIGHT             0x0000000100000000ULL</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AV_CH_SURROUND_DIRECT_LEFT   0x0000000200000000ULL</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AV_CH_SURROUND_DIRECT_RIGHT  0x0000000400000000ULL</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AV_CH_LOW_FREQUENCY_2        0x0000000800000000ULL</span></span><br></pre></td></tr></table></figure><p>微软的频道位置信息：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Speaker Positions for dwChannelMask in WAVEFORMATEXTENSIBLE:</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SPEAKER_FRONT_LEFT              0x1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SPEAKER_FRONT_RIGHT             0x2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SPEAKER_FRONT_CENTER            0x4</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SPEAKER_LOW_FREQUENCY           0x8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SPEAKER_BACK_LEFT               0x10</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SPEAKER_BACK_RIGHT              0x20</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SPEAKER_FRONT_LEFT_OF_CENTER    0x40</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SPEAKER_FRONT_RIGHT_OF_CENTER   0x80</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SPEAKER_BACK_CENTER             0x100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SPEAKER_SIDE_LEFT               0x200</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SPEAKER_SIDE_RIGHT              0x400</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SPEAKER_TOP_CENTER              0x800</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SPEAKER_TOP_FRONT_LEFT          0x1000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SPEAKER_TOP_FRONT_CENTER        0x2000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SPEAKER_TOP_FRONT_RIGHT         0x4000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SPEAKER_TOP_BACK_LEFT           0x8000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SPEAKER_TOP_BACK_CENTER         0x10000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SPEAKER_TOP_BACK_RIGHT          0x20000</span></span><br></pre></td></tr></table></figure><h2 id="结论">结论</h2><p>经过对比可以发现两者是一致的，只是微软的 dwChannelMask 是 DWORD，ffmpeg 用的是 int64_t。所以我们可以写个函数来转换他们：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 微软的 ChannelMask 值转为 ffmpeg 的 channel_layout</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int64_t</span> <span class="title">GetChannelLayout</span><span class="params">(<span class="keyword">const</span> WAVEFORMATEX *wave_format)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (WAVE_FORMAT_EXTENSIBLE == wave_format-&gt;wFormatTag) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">reinterpret_cast</span>&lt;<span class="keyword">const</span> WAVEFORMATEXTENSIBLE *&gt;(wave_format)-&gt;dwChannelMask;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> av_get_default_channel_layout(wave_format-&gt;nChannels);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="相关书籍">相关书籍</h2><p>京东联盟购买链接：</p><p><a href="https://union-click.jd.com/jdc?e=&amp;p=AyIGZRprFQEQAl0eWRIyVlgNRQQlW1dCFFlQCxxKQgFHRE5XDVULR0UVARACXR5ZEh1LQglGaxFVZWEceFlrYkcEKlocdgVSZAtzPFMOHjdQG1oUARUAUxJTJQITBVAZWRYBFDdlG1olVHwHVBpaFAMXBlEYaxcDEwVWE10TAhI3VRxaHQcbB1AYUhUBEzdSG1IlZm5jUhtSJTISBFceUxAAFTdWK2slAiIEZVk1QQpCBgBMWhYFFVJVHl9ACxoDB0hbRQITV1xPDEBVFAZlGVoUBhs%3D">FFmpeg从入门到精通</a> 出版时间：2018-04-01 用纸：胶版纸</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前情&quot;&gt;前情&lt;/h2&gt;
&lt;p&gt;最近写录音程序，发现 MBP 的扬声器是 4 频道的，然后在抓音频保存时，Opus 编码器居然不支持 4 个频道，avcodec_open2() 会返回错误码 -22，Invalid argument。解决方法就是 resample </summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="windows" scheme="https://blog.umu618.com/tags/windows/"/>
    
    <category term="streaming-media" scheme="https://blog.umu618.com/tags/streaming-media/"/>
    
    <category term="ffmpeg" scheme="https://blog.umu618.com/tags/ffmpeg/"/>
    
  </entry>
  
  <entry>
    <title>UEFI 里的 IGD Minimum Memory 和 IGD Aperture Size</title>
    <link href="https://blog.umu618.com/2017/07/06/umutech-uefi-igd-minimum-memory-and-igd-aperture-size/"/>
    <id>https://blog.umu618.com/2017/07/06/umutech-uefi-igd-minimum-memory-and-igd-aperture-size/</id>
    <published>2017-07-06T15:48:26.000Z</published>
    <updated>2023-08-05T13:01:26.948Z</updated>
    
    <content type="html"><![CDATA[<p>今天进 UEFI 看到集显的两个设置选项：IGD Minimum Memory 和 IGD Aperture Size，想着 UMU 的 NUC 有 32G 内存，要不要改大点？然后搜一下他们的作用，结果发现<strong>最好不要改……</strong></p><h2 id="知识">知识</h2><ol><li><p>Adjusting the minimum memory can impact graphics performance in legacy operating systems (Windows 7/8/8/1).</p><p>The default value (64 MB) is recommended for Windows 10. Windows 10 will allocate graphics memory dynamically when it loads, so setting the IGD minimal memory to higher value may not improve performance.</p></li><li><p>Keep the default BIOS setting for IGD Aperture Size and IGD Min Memory. This values are used only during POST and to boot of the Windows.</p><p>Window 10 assigns automatically the maximum available graphics memory and it depends off how much RAM you have. Usually it assigns about half of available RAM.</p></li></ol><h2 id="参考">参考</h2><p><a href="https://communities.intel.com/thread/106880">https://communities.intel.com/thread/106880</a></p><p><a href="https://communities.intel.com/thread/106428">https://communities.intel.com/thread/106428</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;今天进 UEFI 看到集显的两个设置选项：IGD Minimum Memory 和 IGD Aperture Size，想着 UMU 的 NUC 有 32G 内存，要不要改大点？然后搜一下他们的作用，结果发现&lt;strong&gt;最好不要改……&lt;/strong&gt;&lt;/p&gt;
&lt;h2 </summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="windows" scheme="https://blog.umu618.com/tags/windows/"/>
    
    <category term="调研" scheme="https://blog.umu618.com/tags/%E8%B0%83%E7%A0%94/"/>
    
    <category term="ops" scheme="https://blog.umu618.com/tags/ops/"/>
    
  </entry>
  
  <entry>
    <title>Windows 的 ChannelMask 转 ffmpeg 的 ChannelLayout</title>
    <link href="https://blog.umu618.com/2017/07/04/umutech-windows-waveformatex-to-ffmpeg-avsampleformat/"/>
    <id>https://blog.umu618.com/2017/07/04/umutech-windows-waveformatex-to-ffmpeg-avsampleformat/</id>
    <published>2017-07-04T12:46:31.000Z</published>
    <updated>2023-08-05T13:01:26.948Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求">需求</h2><p>Windows 平台，录音。</p><h2 id="任务">任务</h2><p>用 Windows 的 IAudioCaptureClient 对象采集音频，然后用 ffmpeg 编码。</p><h2 id="困难">困难</h2><p>一些类型定义不一样，比如 SampleFormat。</p><h2 id="解决方案">解决方案</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> AVSampleFormat <span class="title">GetSampleFormat</span><span class="params">(<span class="keyword">const</span> WAVEFORMATEX *wave_format)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">switch</span> (wave_format-&gt;wFormatTag) &#123;</span><br><span class="line">    <span class="keyword">case</span> WAVE_FORMAT_PCM:</span><br><span class="line">        <span class="keyword">if</span> (<span class="number">16</span> == wave_format-&gt;wBitsPerSample) &#123;</span><br><span class="line">            <span class="keyword">return</span> AV_SAMPLE_FMT_S16;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="number">32</span> == wave_format-&gt;wBitsPerSample) &#123;</span><br><span class="line">            <span class="keyword">return</span> AV_SAMPLE_FMT_S32;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> WAVE_FORMAT_IEEE_FLOAT:</span><br><span class="line">        <span class="keyword">return</span> AV_SAMPLE_FMT_FLT;</span><br><span class="line">    <span class="keyword">case</span> WAVE_FORMAT_ALAW:</span><br><span class="line">    <span class="keyword">case</span> WAVE_FORMAT_MULAW:</span><br><span class="line">        <span class="keyword">return</span> AV_SAMPLE_FMT_U8;</span><br><span class="line">    <span class="keyword">case</span> WAVE_FORMAT_EXTENSIBLE:</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">const</span> WAVEFORMATEXTENSIBLE *wfe = <span class="keyword">reinterpret_cast</span>&lt;<span class="keyword">const</span> WAVEFORMATEXTENSIBLE *&gt;(wave_format);</span><br><span class="line">        <span class="keyword">if</span> (KSDATAFORMAT_SUBTYPE_IEEE_FLOAT == wfe-&gt;SubFormat) &#123;</span><br><span class="line">            <span class="keyword">return</span> AV_SAMPLE_FMT_FLT;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (KSDATAFORMAT_SUBTYPE_PCM == wfe-&gt;SubFormat) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="number">16</span> == wave_format-&gt;wBitsPerSample) &#123;</span><br><span class="line">                <span class="keyword">return</span> AV_SAMPLE_FMT_S16;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (<span class="number">32</span> == wave_format-&gt;wBitsPerSample) &#123;</span><br><span class="line">                <span class="keyword">return</span> AV_SAMPLE_FMT_S32;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> AV_SAMPLE_FMT_NONE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="相关书籍">相关书籍</h2><p>京东联盟购买链接：</p><p><a href="https://union-click.jd.com/jdc?e=&amp;p=AyIGZRprFQEQAl0eWRIyVlgNRQQlW1dCFFlQCxxKQgFHRE5XDVULR0UVARACXR5ZEh1LQglGaxFVZWEceFlrYkcEKlocdgVSZAtzPFMOHjdQG1oUARUAUxJTJQITBVAZWRYBFDdlG1olVHwHVBpaFAMXBlEYaxcDEwVWE10TAhI3VRxaHQcbB1AYUhUBEzdSG1IlZm5jUhtSJTISBFceUxAAFTdWK2slAiIEZVk1QQpCBgBMWhYFFVJVHl9ACxoDB0hbRQITV1xPDEBVFAZlGVoUBhs%3D">FFmpeg从入门到精通</a> 出版时间：2018-04-01 用纸：胶版纸</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;需求&quot;&gt;需求&lt;/h2&gt;
&lt;p&gt;Windows 平台，录音。&lt;/p&gt;
&lt;h2 id=&quot;任务&quot;&gt;任务&lt;/h2&gt;
&lt;p&gt;用 Windows 的 IAudioCaptureClient 对象采集音频，然后用 ffmpeg 编码。&lt;/p&gt;
&lt;h2 id=&quot;困难&quot;&gt;困难&lt;/h</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="windows" scheme="https://blog.umu618.com/tags/windows/"/>
    
    <category term="cpp" scheme="https://blog.umu618.com/tags/cpp/"/>
    
    <category term="streaming-media" scheme="https://blog.umu618.com/tags/streaming-media/"/>
    
    <category term="ffmpeg" scheme="https://blog.umu618.com/tags/ffmpeg/"/>
    
  </entry>
  
  <entry>
    <title>Opus 编解码遇到的怪事</title>
    <link href="https://blog.umu618.com/2017/07/01/umutech-opus-debugging/"/>
    <id>https://blog.umu618.com/2017/07/01/umutech-opus-debugging/</id>
    <published>2017-07-01T09:23:52.000Z</published>
    <updated>2023-08-05T13:01:26.948Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前情">前情</h2><p>最近参考 ffmpeg 的 transcoding_aac 示例代码，写了一个 transcoding_opus，并拿 MP3 测试转码，结果发现转完的 opus 文件的 SampleFormat 和指定的并不一样。UMU 的代码是把源文件解码出来的 sample 先 resample 成 AV_SAMPLE_FMT_S16 格式，然后再交给 opus encoder 去编码的，但是编完用 ffprobe 查看，发现 SampleFormat 变成 AV_SAMPLE_FMT_FLTP。</p><p><strong>那么第一个问题来了，为什么会这样？</strong></p><h2 id="分析">分析</h2><p>开始研究，首先 UMU 把 opus encoder 支持的 sample_fmt 打印出来，发现只有两种：AV_SAMPLE_FMT_S16、AV_SAMPLE_FMT_FLT，压根就没有 AV_SAMPLE_FMT_FLTP，强行指定 AV_SAMPLE_FMT_FLTP 之后，直接报错，不支持这种 sample_fmt。</p><p>推测，真的被编码为 AV_SAMPLE_FMT_S16 了，是 ffprobe 的问题，于是自己写了个简化版的 ffprobe，流程几乎是一样的，出来的结果——果然一模一样……打印出 AV_SAMPLE_FMT_FLTP。</p><p>接着怀疑 ffprobe 用的 decoder，于是去看了 avcodec_find_decoder 返回的 AVCodec，打印一下 name 和 long_name，和 transcoding_opus 的 avcodec_find_encoder 返回的一比，果然不一样……</p><p>选用的编码器是这样的：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">AVCodec ff_libopus_encoder = &#123;</span><br><span class="line">    .name            = <span class="string">&quot;libopus&quot;</span>,</span><br><span class="line">    .long_name       = NULL_IF_CONFIG_SMALL(<span class="string">&quot;libopus Opus&quot;</span>),</span><br><span class="line">    .type            = AVMEDIA_TYPE_AUDIO,</span><br><span class="line">    .id              = AV_CODEC_ID_OPUS,</span><br><span class="line">    .priv_data_size  = <span class="keyword">sizeof</span>(LibopusEncContext),</span><br><span class="line">    .init            = libopus_encode_init,</span><br><span class="line">    .encode2         = libopus_encode,</span><br><span class="line">    .close           = libopus_encode_close,</span><br><span class="line">    .capabilities    = AV_CODEC_CAP_DELAY | AV_CODEC_CAP_SMALL_LAST_FRAME,</span><br><span class="line">    .sample_fmts     = (<span class="keyword">const</span> <span class="keyword">enum</span> AVSampleFormat[])&#123; AV_SAMPLE_FMT_S16,</span><br><span class="line">                                                      AV_SAMPLE_FMT_FLT,</span><br><span class="line">                                                      AV_SAMPLE_FMT_NONE &#125;,</span><br><span class="line">    .supported_samplerates = libopus_sample_rates,</span><br><span class="line">    .priv_class      = &amp;libopus_class,</span><br><span class="line">    .defaults        = libopus_defaults,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>而选用的解码器是这样的：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">AVCodec ff_opus_encoder = &#123;</span><br><span class="line">    .name           = <span class="string">&quot;opus&quot;</span>,</span><br><span class="line">    .long_name      = NULL_IF_CONFIG_SMALL(<span class="string">&quot;Opus&quot;</span>),</span><br><span class="line">    .type           = AVMEDIA_TYPE_AUDIO,</span><br><span class="line">    .id             = AV_CODEC_ID_OPUS,</span><br><span class="line">    .defaults       = opusenc_defaults,</span><br><span class="line">    .priv_class     = &amp;opusenc_class,</span><br><span class="line">    .priv_data_size = <span class="keyword">sizeof</span>(OpusEncContext),</span><br><span class="line">    .init           = opus_encode_init,</span><br><span class="line">    .encode2        = opus_encode_frame,</span><br><span class="line">    .close          = opus_encode_end,</span><br><span class="line">    .caps_internal  = FF_CODEC_CAP_INIT_THREADSAFE | FF_CODEC_CAP_INIT_CLEANUP,</span><br><span class="line">    .capabilities   = AV_CODEC_CAP_EXPERIMENTAL | AV_CODEC_CAP_SMALL_LAST_FRAME | AV_CODEC_CAP_DELAY,</span><br><span class="line">    .supported_samplerates = (<span class="keyword">const</span> <span class="keyword">int</span> [])&#123; <span class="number">48000</span>, <span class="number">0</span> &#125;,</span><br><span class="line">    .channel_layouts = (<span class="keyword">const</span> <span class="keyword">uint64_t</span> [])&#123; AV_CH_LAYOUT_MONO,</span><br><span class="line">                                            AV_CH_LAYOUT_STEREO, <span class="number">0</span> &#125;,</span><br><span class="line">    .sample_fmts    = (<span class="keyword">const</span> <span class="keyword">enum</span> AVSampleFormat[])&#123; AV_SAMPLE_FMT_FLTP,</span><br><span class="line">                                                     AV_SAMPLE_FMT_NONE &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>问题清楚了，看来用 ID 查找编解码器并不靠谱，因为这个 ID 是 Type ID，不是 Item ID，还是改为用 name 来找：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//AVCodec *output_codec = avcodec_find_encoder(AV_CODEC_ID_OPUS);</span></span><br><span class="line">AVCodec *output_codec = avcodec_find_encoder_by_name(<span class="string">&quot;opus&quot;</span>);</span><br></pre></td></tr></table></figure><p><strong>那么，第二个问题顺势而来——哪个比较牛？</strong></p><h2 id="结论">结论</h2><p>用 AV_SAMPLE_FMT_FLTP 后 frame_size 是 120，用其它是 960，frame_size 小有小的好处，比如在做实时编码直播时，理论延迟会更小。</p><p>经过测试，用 AV_SAMPLE_FMT_FLTP 的 opus 比 libopus 压缩率普遍略高一些，但它只支持 48000Hz 一种 sample_rate，libopus 支持的更多：48000, 24000, 16000, 12000, 8000。</p><h2 id="相关书籍">相关书籍</h2><p>京东联盟购买链接：</p><p><a href="https://union-click.jd.com/jdc?e=&amp;p=AyIGZRprFQEQAl0eWRIyVlgNRQQlW1dCFFlQCxxKQgFHRE5XDVULR0UVARACXR5ZEh1LQglGaxFVZWEceFlrYkcEKlocdgVSZAtzPFMOHjdQG1oUARUAUxJTJQITBVAZWRYBFDdlG1olVHwHVBpaFAMXBlEYaxcDEwVWE10TAhI3VRxaHQcbB1AYUhUBEzdSG1IlZm5jUhtSJTISBFceUxAAFTdWK2slAiIEZVk1QQpCBgBMWhYFFVJVHl9ACxoDB0hbRQITV1xPDEBVFAZlGVoUBhs%3D">FFmpeg从入门到精通</a> 出版时间：2018-04-01 用纸：胶版纸</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前情&quot;&gt;前情&lt;/h2&gt;
&lt;p&gt;最近参考 ffmpeg 的 transcoding_aac 示例代码，写了一个 transcoding_opus，并拿 MP3 测试转码，结果发现转完的 opus 文件的 SampleFormat 和指定的并不一样。UMU 的代码是把</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="debug" scheme="https://blog.umu618.com/tags/debug/"/>
    
    <category term="streaming-media" scheme="https://blog.umu618.com/tags/streaming-media/"/>
    
    <category term="ffmpeg" scheme="https://blog.umu618.com/tags/ffmpeg/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·科技傲娇爹</title>
    <link href="https://blog.umu618.com/2017/04/12/reconstructionism-poet-falling/"/>
    <id>https://blog.umu618.com/2017/04/12/reconstructionism-poet-falling/</id>
    <published>2017-04-12T02:01:00.000Z</published>
    <updated>2023-08-05T13:01:26.948Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·科技傲娇爹》：股市两桶我四桶，阿里一桶爹三桶。前年科技蹭得累，今年集体来做空。</p><h2 id="注解">注解</h2><p>股市两桶我四桶：股市两桶油，最近都是绿的，我门口放着四桶油……<br>一桶：一捅<br>三桶：伤痛<br>蹭得累：多傲娇</p><h2 id="附">附</h2><h3 id="2017-03-21-09-42">2017-03-21 09:42</h3><p>《#诗盗#·熵增熵稣屎里掏花》：天增岁月房增值，物价如熵人作死。当年科技不买楼，如今只能搬三期。</p><h3 id="2017-03-31-10-30">2017-03-31 10:30</h3><p>《#诗盗#·科技变化太快》：当初不买楼，如今望天愁。当初不卖出，如今爹成猪。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·科技傲娇爹》：股市两桶我四桶，阿里一桶爹三桶。前年科技蹭得累，今年集体来做空。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;股市两桶我四桶：股市两桶油，最近都是绿的，我门口放着四桶油……&lt;br&gt;
一桶：一捅&lt;br&gt;
三桶：伤痛&lt;br&gt;
蹭得累：多傲娇&lt;</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="金融" scheme="https://blog.umu618.com/tags/%E9%87%91%E8%9E%8D/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·213</title>
    <link href="https://blog.umu618.com/2017/04/01/reconstructionism-poet-213/"/>
    <id>https://blog.umu618.com/2017/04/01/reconstructionism-poet-213/</id>
    <published>2017-03-31T16:34:00.000Z</published>
    <updated>2023-08-05T13:01:26.948Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·213》：上街街上行人稀，下车车下雨水积。两脚牵拖做好湿，一觉穿越三生世！</p><h2 id="注解">注解</h2><p>213 是车牌号，雨天开高速，开了 5 个多小时……<br>在“上街”停车休息，下车踩了水雷，做梦穿越。<br>牵拖：拖鞋。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·213》：上街街上行人稀，下车车下雨水积。两脚牵拖做好湿，一觉穿越三生世！&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;213 是车牌号，雨天开高速，开了 5 个多小时……&lt;br&gt;
在“上街”停车休息，下车踩了水雷，做梦穿越。&lt;br&gt;
牵拖：拖鞋。&lt;/</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="闽南语" scheme="https://blog.umu618.com/tags/%E9%97%BD%E5%8D%97%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>完全免费的 Windows Server 系统，不需要序列号、不需要激活、更不需要破解</title>
    <link href="https://blog.umu618.com/2017/03/25/umutech-free-windows-server/"/>
    <id>https://blog.umu618.com/2017/03/25/umutech-free-windows-server/</id>
    <published>2017-03-25T15:34:47.000Z</published>
    <updated>2023-12-03T19:25:08.060Z</updated>
    
    <content type="html"><![CDATA[<p>2009-04-17 22:06 在百度空间上发表过一次，后来百度空间倒闭了……最近给自己家里搭建家庭文件共享服务器用到，所以在这边再发一次。</p><p>2009 年时，由于项目需要，用过 Hyper-V Server 2008。到了 2012-09-25 升级为 Hyper-V Server 2012。这次（2017-03-22）用的是 Hyper-V Server 2016。这么多年一直还是完全免费的。</p><p>Hyper-V Server 是基于 Windows Server Server Core x64 的虚拟机服务器系统，要正常提供虚拟机服务， CPU 必须满足三个条件：x64、DEP (Data Execution Prevention)、HV (Hardware Virtualization)，但 UMU 不需要它的专业本领——虚拟机服务，所以只需要有 x64 CPU 就可以了。目前只使用他的副业，作为网上邻居（SMB）服务器和静态文件 HTTP Server，就家用而言，绝对够用，前者是系统自带的共享功能，用 <code>net share</code> 命令开启，后者安装 node.js + http-server 模块。</p><p>但它不是完整的 Windows Server，比如您想跑 IIS，那就不能使用它了。它最适合的情况是您开发了一些系统服务（NT Service）类的应用，比如游戏服务端、聊天软件服务端，想发布到 Windows Server 上。</p><h1>2023-12-04 补充</h1><ol><li><p>Hyper-V Server 2019 是最后一个免费的 Hyper-V Server。</p></li><li><p>主流支持到 2024-01-09，扩展支持到 2029-01-09。</p></li></ol><p>参考：<a href="https://learn.microsoft.com/en-us/lifecycle/products/hyperv-server-2019">https://learn.microsoft.com/en-us/lifecycle/products/hyperv-server-2019</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;2009-04-17 22:06 在百度空间上发表过一次，后来百度空间倒闭了……最近给自己家里搭建家庭文件共享服务器用到，所以在这边再发一次。&lt;/p&gt;
&lt;p&gt;2009 年时，由于项目需要，用过 Hyper-V Server 2008。到了 2012-09-25 升级为 Hy</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="windows" scheme="https://blog.umu618.com/tags/windows/"/>
    
    <category term="调研" scheme="https://blog.umu618.com/tags/%E8%B0%83%E7%A0%94/"/>
    
    <category term="ops" scheme="https://blog.umu618.com/tags/ops/"/>
    
  </entry>
  
  <entry>
    <title>跟 UMU 一起玩 OpenWRT（入门篇13）：改进 autossh 支持多实例</title>
    <link href="https://blog.umu618.com/2017/03/02/umutech-openwrt-primer-13-improve-autossh/"/>
    <id>https://blog.umu618.com/2017/03/02/umutech-openwrt-primer-13-improve-autossh/</id>
    <published>2017-03-02T03:46:52.000Z</published>
    <updated>2023-08-05T13:01:26.948Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求">需求</h2><p>在之前的文章《<a href="/2014/07/27/umutech-openwrt-primer-10-through-the-intranet/">跟 UMU 一起玩 OpenWRT（入门篇10）：穿透内网</a>》，介绍了 autossh 的使用，现在多个需求：想在内网打通多条隧道，即让 autossh 能运行多个 ssh 实例。</p><h2 id="解决">解决</h2><ul><li>首先在 /etc/config/autossh 里增加一个 section，看起来如下：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">config autossh</span><br><span class="line">        option gatetime &#39;0&#39;</span><br><span class="line">        option monitorport &#39;0&#39;</span><br><span class="line">        option poll &#39;600&#39;</span><br><span class="line">        option ssh &#39;-i &#x2F;etc&#x2F;dropbear&#x2F;id_rsa -N -T -R 2222:localhost:22 root@Server1&#39;</span><br><span class="line"></span><br><span class="line">config autossh</span><br><span class="line">        option gatetime &#39;0&#39;</span><br><span class="line">        option monitorport &#39;0&#39;</span><br><span class="line">        option poll &#39;600&#39;</span><br><span class="line">        option ssh &#39;-i &#x2F;etc&#x2F;dropbear&#x2F;id_rsa -N -T -R 2222:localhost:22 root@Server2&#39;</span><br></pre></td></tr></table></figure><ul><li>然后改进一下 /etc/init.d/autossh，让它支持多实例，给 start_instance() 函数增加两行：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export SERVICE_MATCH_NAME&#x3D;1</span><br><span class="line">export SERVICE_NAME&#x3D;&quot;$section&quot;</span><br></pre></td></tr></table></figure><ul><li>最终 start_instance() 函数看起来是这样：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">start_instance() &#123;</span><br><span class="line">local section&#x3D;&quot;$1&quot;</span><br><span class="line"></span><br><span class="line">config_get ssh &quot;$section&quot; &#39;ssh&#39;</span><br><span class="line">config_get gatetime &quot;$section&quot; &#39;gatetime&#39;</span><br><span class="line">config_get monitorport &quot;$section&quot; &#39;monitorport&#39;</span><br><span class="line">config_get poll &quot;$section&quot; &#39;poll&#39;</span><br><span class="line"></span><br><span class="line">export AUTOSSH_GATETIME&#x3D;&quot;$&#123;gatetime:-30&#125;&quot;</span><br><span class="line">export AUTOSSH_POLL&#x3D;&quot;$&#123;poll:-600&#125;&quot;</span><br><span class="line">export SERVICE_MATCH_NAME&#x3D;1</span><br><span class="line">export SERVICE_NAME&#x3D;&quot;$section&quot;</span><br><span class="line">#export SERVICE_DEBUG&#x3D;1</span><br><span class="line">service_start &#x2F;usr&#x2F;sbin&#x2F;autossh -M $&#123;monitorport:-20000&#125; -f $&#123;ssh&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="注意事项">注意事项</h2><p>这样改是有副作用的，您反复启动多次就知道了……启动的命令是：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/autossh start</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;需求&quot;&gt;需求&lt;/h2&gt;
&lt;p&gt;在之前的文章《&lt;a href=&quot;/2014/07/27/umutech-openwrt-primer-10-through-the-intranet/&quot;&gt;跟 UMU 一起玩 OpenWRT（入门篇10）：穿透内网&lt;/a&gt;》，介绍了 a</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="embedded" scheme="https://blog.umu618.com/tags/embedded/"/>
    
    <category term="linux" scheme="https://blog.umu618.com/tags/linux/"/>
    
    <category term="openwrt" scheme="https://blog.umu618.com/tags/openwrt/"/>
    
  </entry>
  
  <entry>
    <title>跟 UMU 一起玩 OpenWRT（入门篇12）：SSH 端口转发（代理上 QQ）</title>
    <link href="https://blog.umu618.com/2017/03/01/umutech-openwrt-primer-12-ssh-port-forwarding/"/>
    <id>https://blog.umu618.com/2017/03/01/umutech-openwrt-primer-12-ssh-port-forwarding/</id>
    <published>2017-03-01T07:57:03.000Z</published>
    <updated>2023-10-29T12:24:56.937Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求">需求</h2><p>在之前的文章《<a href="/2014/07/27/umutech-openwrt-primer-10-through-the-intranet/">跟 UMU 一起玩 OpenWRT（入门篇10）：穿透内网</a>》，介绍了从家里连到公司内网，现在需求反过来了，想在公司代理到家里，让公司的 QQ 使用家里的网络出口。</p><h2 id="解决">解决</h2><p>还是那些熟悉的工具！首先，家里的路由器要刷好 OpenWRT，绑定一个动态域名，记为 HomeRouter。</p><blockquote><p>2020/04/05 23:59 添加：</p><p>绑定动态域名的方法可以参考：<a href="https://github.com/UMU618/openwrt-ipv6-addresses">https://github.com/UMU618/openwrt-ipv6-addresses</a></p></blockquote><p>在 Windows 下用 putty 连到 HomeRouter，基本就大功告成！开 tunnels 方法如图：</p><p><img src="/images/2017/20170301-putty.png" alt="PuTTY tunnels"></p><p>或者用：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PLINK.EXE -N -D <span class="number">1080</span> root@HomeRouter</span><br></pre></td></tr></table></figure><p>最后是 QQ 的设置：</p><p><img src="/images/2017/20170301-qq.png" alt="QQ Proxy"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;需求&quot;&gt;需求&lt;/h2&gt;
&lt;p&gt;在之前的文章《&lt;a href=&quot;/2014/07/27/umutech-openwrt-primer-10-through-the-intranet/&quot;&gt;跟 UMU 一起玩 OpenWRT（入门篇10）：穿透内网&lt;/a&gt;》，介绍了从家</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="embedded" scheme="https://blog.umu618.com/tags/embedded/"/>
    
    <category term="linux" scheme="https://blog.umu618.com/tags/linux/"/>
    
    <category term="openwrt" scheme="https://blog.umu618.com/tags/openwrt/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·量子邪说2</title>
    <link href="https://blog.umu618.com/2017/02/11/reconstructionism-poet-quantum-heresy-2/"/>
    <id>https://blog.umu618.com/2017/02/11/reconstructionism-poet-quantum-heresy-2/</id>
    <published>2017-02-11T06:39:00.000Z</published>
    <updated>2023-08-05T13:01:26.938Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·量子邪说2》：生物奇，化学危。最恨物理，量子邪说！</p><h2 id="注解">注解</h2><p>改编自霹雳角色“恨吾峰”的诗号。</p><blockquote><p>孤月冷，夜刀寒，最恨无敌，天下吾峰。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·量子邪说2》：生物奇，化学危。最恨物理，量子邪说！&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;改编自霹雳角色“恨吾峰”的诗号。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;孤月冷，夜刀寒，最恨无敌，天下吾峰。&lt;/p&gt;
&lt;/blockquote&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·非正常人类</title>
    <link href="https://blog.umu618.com/2017/02/09/reconstructionism-poet-superman/"/>
    <id>https://blog.umu618.com/2017/02/09/reconstructionism-poet-superman/</id>
    <published>2017-02-09T04:23:00.000Z</published>
    <updated>2023-08-05T13:01:26.938Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·非正常人类》：一觉好梦游仙，管它屋冷床寒！参编善恶演幻，听尽庸人说谗。</p><h2 id="注解">注解</h2><p>写于软件非正常人类研究中心。改编自霹雳角色“人觉·非常君”和“禅剑一如寄昙说”的诗号。</p><blockquote><p><strong>一觉游仙好梦，任它竹冷松寒。</strong><br>轩辕事，古今谈，风流河山。<br>沉醉负白首，舒怀成大观。<br>醒，亦在人间；梦，亦在人间。</p></blockquote><blockquote><p>看红尘冉冉，须臾无间，<strong>参遍昙华演换。</strong><br>问法珠玄玄，方寸有变，<strong>听尽默剑说禅。</strong></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·非正常人类》：一觉好梦游仙，管它屋冷床寒！参编善恶演幻，听尽庸人说谗。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;写于软件非正常人类研究中心。改编自霹雳角色“人觉·非常君”和“禅剑一如寄昙说”的诗号。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;str</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
  </entry>
  
  <entry>
    <title>[C++ 学习笔记 2] 为什么会有移动构造函数、std::move？</title>
    <link href="https://blog.umu618.com/2017/01/05/umutech-cpp-learning-notes-2-move-constructor/"/>
    <id>https://blog.umu618.com/2017/01/05/umutech-cpp-learning-notes-2-move-constructor/</id>
    <published>2017-01-05T09:30:26.000Z</published>
    <updated>2023-08-05T13:01:26.938Z</updated>
    
    <content type="html"><![CDATA[<p>UMU 认为有一个目的是：<strong>需求细分</strong>（另外还有优化的目的）。考虑以下代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Movable</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Movable() : i(<span class="keyword">new</span> <span class="keyword">int</span>(<span class="number">3</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; __FUNCTION__ &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Movable(Movable&amp; m) : i(m.i)</span><br><span class="line">&#123;</span><br><span class="line">m.i = <span class="literal">nullptr</span>; <span class="comment">// 这里改变值是可以的</span></span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; __FUNCTION__ &lt;&lt; <span class="string">&quot;&amp;&quot;</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span>* i;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>因为 Movable&amp; m 没有用 const 修饰，所以可以在内部改变 m 的状态。如果加上 const 则不行：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Movable(<span class="keyword">const</span> Movable&amp; m) : i(m.i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//m.i = nullptr; // 不能改变 m</span></span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; __FUNCTION__ &lt;&lt; <span class="string">&quot;&amp;&quot;</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>那么没加 const 的集合，减去有 const 的集合，等于什么？答案就是：移动构造函数</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Movable(Movable&amp;&amp; m) : i(m.i)</span><br><span class="line">&#123;</span><br><span class="line">m.i = <span class="literal">nullptr</span>;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; __FUNCTION__ &lt;&lt; <span class="string">&quot;&amp;&amp;&quot;</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>分成 const Movable&amp; 和 Movable&amp;&amp; 两个，更严格、更清晰，这是好事。而 std::move 做的事情是为了正确调用移动构造函数（Movable&amp;&amp;），而不是被隐式转为 const 而错误地调用了复制构造函数（const Movable&amp;），不要在意什么左值、右值的，太烧脑了……</p><p>扩展阅读：《从4行代码看右值引用》，<a href="https://www.cnblogs.com/qicosmos/p/4283455.html">https://www.cnblogs.com/qicosmos/p/4283455.html</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;UMU 认为有一个目的是：&lt;strong&gt;需求细分&lt;/strong&gt;（另外还有优化的目的）。考虑以下代码：&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;l</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="cpp" scheme="https://blog.umu618.com/tags/cpp/"/>
    
  </entry>
  
  <entry>
    <title>[C++ 学习笔记 1] delete 和 delete[] 的本质区别</title>
    <link href="https://blog.umu618.com/2017/01/04/umutech-cpp-learning-notes-1-delete/"/>
    <id>https://blog.umu618.com/2017/01/04/umutech-cpp-learning-notes-1-delete/</id>
    <published>2017-01-04T15:25:53.000Z</published>
    <updated>2024-01-10T17:16:24.805Z</updated>
    
    <content type="html"><![CDATA[<p>本文宣告 UMU 正式开始学习 C++。<s>之前只系统学过 C，自然地了解了一些 C++ 的皮毛（可以认为是 C+），然后就一直用着 C+ 开发，最近看了一些现代 C++ 代码，感觉是时候好好学习 C++ 了……后续会把学习中记的笔记发出来，尽量简短明了。</s></p><h2 id="问题">问题</h2><p><code>delete</code> 和 <code>delete[]</code> 的本质区别？</p><h2 id="解决">解决</h2><p>他们都需要两步：先析构元素，再释放内存。</p><p>不同编译器、不同的优化开关和优化场景都可能导致不同结果。实际实现反汇编确认，以汇编为准。下面介绍一种可能的实现。</p><h3 id="1-析构次数不同">1. 析构次数不同</h3><p>当 ptr 指向的是基础类型数组时，在析构这一步时，<code>delete ptr</code> 和 <code>delete[] ptr</code> 等价。</p><p>当 ptr 指向类对象数组时，两者的差别在于调用多少个析构函数，<code>delete</code> 只调用第一个元素的析构函数，<code>delete[]</code> 则调用所有元素的析构函数。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;memory&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Foo</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  Foo() &#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; __func__ &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  ~Foo() &#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; __func__ &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// bug: 只会析构一个元素</span></span><br><span class="line">  <span class="function"><span class="built_in">std</span>::<span class="built_in">shared_ptr</span>&lt;Foo&gt; <span class="title">p</span><span class="params">(<span class="keyword">new</span> Foo[<span class="number">10</span>])</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当数组只有 1 个元素时，实际上两者的析构次数也一样。那么，<code>delete[]</code> 怎么知道当初分配了多少个元素呢？下一节有答案。</p><h3 id="2-实际释放的指针不同">2. 实际释放的指针不同</h3><p>对于基础类型，多数编译器（验证过 MSVC、clang++）会把 <code>new[]</code> 实现为不加任何“头部”，因为基础类型不需要析构。</p><p>对于类对象数组，<code>delete[] ptr</code> 会先对 ptr 做减法，因为实际上 <code>new[]</code> 分配的是一个结构体：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">NewData</span> &#123;</span></span><br><span class="line">    <span class="keyword">size_t</span> element_count;</span><br><span class="line">    <span class="comment">// 这里可能有其它字段</span></span><br><span class="line">    T data[<span class="number">1</span>];</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>但返回值指向 data。data 之前的字段可以称之为“头部”，这部分内容的实现具有不确定性。大约可以用下列代码解释：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// new T[element_count];</span></span><br><span class="line"><span class="keyword">size_t</span> total_size = element_count * <span class="keyword">sizeof</span>(T) + <span class="keyword">sizeof</span>(<span class="keyword">size_t</span>);</span><br><span class="line"><span class="keyword">auto</span> p = <span class="keyword">static_cast</span>&lt;NewData*&gt;(<span class="keyword">operator</span> <span class="keyword">new</span>(total_size));</span><br><span class="line">p-&gt;element_count = element_count;</span><br><span class="line"><span class="comment">// 其它实现</span></span><br><span class="line"><span class="keyword">return</span> p-&gt;data;</span><br></pre></td></tr></table></figure><p>所以 <code>delete[] ptr</code> 需要先对 ptr 做个位移，才能得到当初由 <code>operator new</code> 分配的内存。</p><p>举例：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">EmptyClass</span> &#123;</span></span><br><span class="line">  ~EmptyClass() &#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; __func__ &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li><code>auto ptr = new EmptyClass[1]</code> 需要分配一个 size_t 和一个 EmptyClass，在 x64 下是 8+1 字节，但 ptr 指向的是这块内存的第 8 字节。</li><li><code>delete[] ptr</code> 对 ptr 减掉 8 个字节得到 new 分配的一块 8+1 字节的内存的地址，对其进行释放。</li></ul><p><strong>注</strong>：NewData 结构体里的 element_count，使得 <code>delete[]</code> 知道应该析构 element_count 个元素。</p><h2 id="作死">作死</h2><p>以下讨论不是基础类型的情况：</p><ol><li><code>new</code> 出来的东西拿去 <code>delete[]</code> 会怎么样？会野指针或访问越界或内存泄漏，因为读取 element_count 的位置是未定义行为：</li></ol><ul><li><p>可能直接拒绝访问</p></li><li><p>也可能读出一个巨大的数值，然后做巨多次析构，而析构第 0 个元素时还好，从第 1 个开始又是访问越界型未定义行为！</p></li><li><p>还可能读出 0，导致没有析构。</p></li><li><p>恰巧读出 1，正确析构，但释放内存时，由于会对指针减 sizeof(size_t) 字节，最终释放错误。</p></li></ul><ol start="2"><li><code>new[]</code> 出来的东西拿去 <code>delete</code> 会怎么样？会内存泄漏。数组有不止一个元素时，析构就无法保证全部完成；即使只有唯一的一个元素，在析构完后的释放内存也有问题，释放的并不是当初分配出来的地址，需要减 sizeof(size_t) 字节。</li></ol><p><strong>注</strong>：如果底层的内存管理器有一定容错机制，比如会对齐，那么可能真的走狗屎运了，减没减 sizeof(size_t) 字节最终都可以正确完成，那只能说……C++ 真牛！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本文宣告 UMU 正式开始学习 C++。&lt;s&gt;之前只系统学过 C，自然地了解了一些 C++ 的皮毛（可以认为是 C+），然后就一直用着 C+ 开发，最近看了一些现代 C++ 代码，感觉是时候好好学习 C++ 了……后续会把学习中记的笔记发出来，尽量简短明了。&lt;/s&gt;&lt;/p&gt;</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="cpp" scheme="https://blog.umu618.com/tags/cpp/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·量子邪说之观世寂莲宇督工</title>
    <link href="https://blog.umu618.com/2016/12/31/reconstructionism-poet-arya-avalokiteshvara/"/>
    <id>https://blog.umu618.com/2016/12/31/reconstructionism-poet-arya-avalokiteshvara/</id>
    <published>2016-12-30T17:37:00.000Z</published>
    <updated>2023-08-05T13:01:26.938Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·#量子邪说#之观世寂莲宇督工》：问道不知何处寻，行路沧茫但由心。情深慧极总成幻，千秋唯奉观世音。</p><h2 id="注解">注解</h2><p>Arya Avalokiteshvara：量子邪说之观世寂莲宇督工，简称观世音。</p><p>改编自霹雳角色“邃无端”的诗号。</p><blockquote><p>问道不知何处寻，行路沧茫但由心。海深峰远总成幻，千秋唯奉一剑吟。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·#量子邪说#之观世寂莲宇督工》：问道不知何处寻，行路沧茫但由心。情深慧极总成幻，千秋唯奉观世音。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;Arya Avalokiteshvara：量子邪说之观世寂莲宇督工，简称观世音。&lt;/p&gt;
&lt;p&gt;改编自霹雳角色</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
    <category term="圣小开" scheme="https://blog.umu618.com/tags/%E5%9C%A3%E5%B0%8F%E5%BC%80/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·是个头</title>
    <link href="https://blog.umu618.com/2016/12/27/reconstructionism-poet-boss/"/>
    <id>https://blog.umu618.com/2016/12/27/reconstructionism-poet-boss/</id>
    <published>2016-12-27T11:48:00.000Z</published>
    <updated>2023-08-05T13:01:26.938Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·是个头》：挨踢十年鼠标手，码字百行改用口。若知科技毁身心，不如早当包工头。</p><h2 id="注解">注解</h2><p>改编自霹雳角色“无衣师尹”的诗号。</p><blockquote><p>著书三年倦写字，如今翻书不识志。若知倦书悔前程，无如渔樵未识时。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·是个头》：挨踢十年鼠标手，码字百行改用口。若知科技毁身心，不如早当包工头。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;改编自霹雳角色“无衣师尹”的诗号。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;著书三年倦写字，如今翻书不识志。若知倦书悔前程，无如渔樵</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·诡龄长生莫沧桑</title>
    <link href="https://blog.umu618.com/2016/11/26/reconstructionism-poet-vicissitudes/"/>
    <id>https://blog.umu618.com/2016/11/26/reconstructionism-poet-vicissitudes/</id>
    <published>2016-11-26T02:15:49.000Z</published>
    <updated>2023-08-05T13:01:26.938Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·诡龄长生莫沧桑》：红颜易老，英雄殉道，百年沧桑，尽付江潮。</p><h2 id="注解">注解</h2><p>霹雳人物名和歌词拼凑出来的。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·诡龄长生莫沧桑》：红颜易老，英雄殉道，百年沧桑，尽付江潮。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;霹雳人物名和歌词拼凑出来的。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·对联·人生</title>
    <link href="https://blog.umu618.com/2016/11/06/reconstructionism-poet-couplets-life/"/>
    <id>https://blog.umu618.com/2016/11/06/reconstructionism-poet-couplets-life/</id>
    <published>2016-11-06T03:36:38.000Z</published>
    <updated>2023-08-05T13:01:26.938Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·对联·人生》：上联：世事如棋，乾坤莫测，笑尽英雄。下联：情天有尽，神我无穷，傲笑红尘。</p><h2 id="注解">注解</h2><p>“世事如棋，乾坤莫测，笑尽英雄。”是一页书的出场诗。<br>“情天有尽，神我无穷”改自号天穷出场诗“天地有尽，神吾无穷”。<br>“傲笑红尘”是霹雳角色。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·对联·人生》：上联：世事如棋，乾坤莫测，笑尽英雄。下联：情天有尽，神我无穷，傲笑红尘。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;“世事如棋，乾坤莫测，笑尽英雄。”是一页书的出场诗。&lt;br&gt;
“情天有尽，神我无穷”改自号天穷出场诗“天地有尽，神吾无穷</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="对联" scheme="https://blog.umu618.com/tags/%E5%AF%B9%E8%81%94/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·山坡羊·忘</title>
    <link href="https://blog.umu618.com/2016/10/31/reconstructionism-poet-shanpoyang-forget/"/>
    <id>https://blog.umu618.com/2016/10/31/reconstructionism-poet-shanpoyang-forget/</id>
    <published>2016-10-31T09:23:00.000Z</published>
    <updated>2023-08-05T13:01:26.938Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·山坡羊·忘》：人事俱坏，恩仇安在？白云苍狗，回首天涯。</p><h2 id="注解">注解</h2><p>记忆是很脆弱的，如果一件事只有“我”一个人记得，是不是就相当于没有发生过？<br>有些事情，一转身，就是天涯遥远。<br>————观世寂莲宇督工</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·山坡羊·忘》：人事俱坏，恩仇安在？白云苍狗，回首天涯。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;记忆是很脆弱的，如果一件事只有“我”一个人记得，是不是就相当于没有发生过？&lt;br&gt;
有些事情，一转身，就是天涯遥远。&lt;br&gt;
————观世寂莲宇督工&lt;/</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
  </entry>
  
  <entry>
    <title>原始强力和成熟进程</title>
    <link href="https://blog.umu618.com/2016/10/21/primitive-power/"/>
    <id>https://blog.umu618.com/2016/10/21/primitive-power/</id>
    <published>2016-10-21T04:53:27.000Z</published>
    <updated>2023-08-05T13:01:26.938Z</updated>
    
    <content type="html"><![CDATA[<p>本文仅为个人体悟。</p><p>小时候，手笨，不管打什么游戏都老死，但很惊讶地发现每次刚死再复活时，人物身上都是金光闪闪，有一段时间是打不死的无敌状态。过了这个时间后才是拼技术。长大后，觉得这个设定很贴切，和人类的成长过程很像。</p><p>每个小孩初生时，身体里有带着母体的保护伞，对很多大人病是免疫的，这股初生的免疫力甚至比母体本身都强大。</p><p>青春期的男女，开始出现互相吸引，但同时有一种自我保护意识，制衡作用之下，保证了大部分人身心的健康成长、不至于犯罪等等。这种自我保护意识也是原始强力，个人都不需要特别耗神去运作它，就可以自然起作用。</p><p>即使是成熟的男女，也是有类似的原始强力的，比如女人的 ASD。大部分时候，女人即使喜欢一个男人，在要发生亲密关系的时候，都会防御，防止男人觉得自己很随便、很淫荡。这种机制也是自然反应，并非刻意。男人则体现在失恋后的防御上，大部分男人很容易从失恋的痛苦中走出来，因为有一股原始强力，运作起来就可以轻易毁灭不太深入的感情。</p><p>但是，好景不长，原始强力都有消失的一天，就说新生儿的保护伞吧，稍微大点，就主要靠自己的修炼了，拼基因和后天营养了。当身心都成熟之后，有些原始强力也消失了，比如女人的 ASD 一次比一次弱。而男人对失恋的抵抗力越来越弱。这时候就要拼情商了，成熟的男人会刻意或被迫减少爱上异性的可能性。</p><p>曾经我们有神力相助，人生一帆风顺，把神力拿开的那一天，我们看到很多事情并不是那么自然而然，曾经欠的那些努力，现在要还回去，如果接受了这个设定，就是走向良好的成熟。不接受就是继续活在自己的世界里，也许靠着忽视一些东西，还能继续过着原来那样好像有原始强力帮助自己的生活。</p><p>成熟就是失去后的补救。这可好可坏，补救得好，那就是好了……女人的 ASD 一次比一次弱，也许是好事，因为下一次，她更可能爱上的是更成熟的男人，而更成熟的男人是懂这个的，合拍就行了，不用太多掩饰。请想像一下，国内的爱情片画风和欧美的爱情片画风，嗯，好像老外都很快啪啪啪……赫赫。男人也是，越成熟，越不容易陷入爱情，所以失恋了就越痛，这促使男人更谨慎选择，更明白责任与后果。</p><p>这么说好像很伟大，为社会稳定而成熟……失去，不一定是坏事。</p><p>泥巴娃语录 @ 2016-08-02 08:55:04：年轻人身上总自带一种防御体系，保证自己能在社会中安然成长，聪明人更多会顺应它，违逆它的人往往成为某种程度的失败者。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本文仅为个人体悟。&lt;/p&gt;
&lt;p&gt;小时候，手笨，不管打什么游戏都老死，但很惊讶地发现每次刚死再复活时，人物身上都是金光闪闪，有一段时间是打不死的无敌状态。过了这个时间后才是拼技术。长大后，觉得这个设定很贴切，和人类的成长过程很像。&lt;/p&gt;
&lt;p&gt;每个小孩初生时，身体里有带着</summary>
      
    
    
    
    <category term="宇督观" scheme="https://blog.umu618.com/categories/%E5%AE%87%E7%9D%A3%E8%A7%82/"/>
    
    
    <category term="鲸神链" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%93%BE/"/>
    
    <category term="心理邪稣" scheme="https://blog.umu618.com/tags/%E5%BF%83%E7%90%86%E9%82%AA%E7%A8%A3/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·量子邪说</title>
    <link href="https://blog.umu618.com/2016/10/20/reconstructionism-poet-quantum-heresy/"/>
    <id>https://blog.umu618.com/2016/10/20/reconstructionism-poet-quantum-heresy/</id>
    <published>2016-10-19T18:19:00.000Z</published>
    <updated>2023-08-05T13:01:26.938Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·量子邪说》：天地无极，宇宙一体。意识不灭，生死相依。</p><h2 id="注解">注解</h2><p>宇宙是一个整体，死亡只是意识的回归，还会再生，只是丢失了记忆，意识是不灭的。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·量子邪说》：天地无极，宇宙一体。意识不灭，生死相依。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;宇宙是一个整体，死亡只是意识的回归，还会再生，只是丢失了记忆，意识是不灭的。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="圣小开" scheme="https://blog.umu618.com/tags/%E5%9C%A3%E5%B0%8F%E5%BC%80/"/>
    
  </entry>
  
  <entry>
    <title>寂灭</title>
    <link href="https://blog.umu618.com/2016/10/11/reconstructionism-poet-nibbana/"/>
    <id>https://blog.umu618.com/2016/10/11/reconstructionism-poet-nibbana/</id>
    <published>2016-10-11T00:59:00.000Z</published>
    <updated>2023-08-05T13:01:26.938Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·寂灭》：无限之前，仙道已俗；天下七鹰缘，尽归于无。</p><h2 id="注解">注解</h2><p>改编、合并自霹雳角色诗号。</p><blockquote><p>地茧·无限：无限之前 ，唯见悲怜。<br>疏楼龙宿：行千峰，仙道已俗 ，岂须论剑。<br>军神·源武藏：天下武学，尽归于无。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·寂灭》：无限之前，仙道已俗；天下七鹰缘，尽归于无。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;改编、合并自霹雳角色诗号。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;地茧·无限：无限之前 ，唯见悲怜。&lt;br&gt;
疏楼龙宿：行千峰，仙道已俗 ，岂须论剑。&lt;b</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·钱非盗</title>
    <link href="https://blog.umu618.com/2016/09/14/reconstructionism-poet-it-is-not-easy-to-earn-money/"/>
    <id>https://blog.umu618.com/2016/09/14/reconstructionism-poet-it-is-not-easy-to-earn-money/</id>
    <published>2016-09-14T02:52:45.000Z</published>
    <updated>2023-08-05T13:01:26.938Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·钱非盗》：寒门树人江海古，壕无人性三代富。向钱偶提人间道，一男一女一房奴。</p><h2 id="注解">注解</h2><p>改编自霹雳角色“刀剑·剑非刀”/“道剑·剑非道”的诗号。</p><blockquote><p>悟来时见江海古，苍涯寻遍谒玄门，向道偶题人间世，一笛一剑一昆仑。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·钱非盗》：寒门树人江海古，壕无人性三代富。向钱偶提人间道，一男一女一房奴。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;改编自霹雳角色“刀剑·剑非刀”/“道剑·剑非道”的诗号。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;悟来时见江海古，苍涯寻遍谒玄门，向</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
  </entry>
  
  <entry>
    <title>恋爱理论之超我恋爱</title>
    <link href="https://blog.umu618.com/2016/09/06/love/"/>
    <id>https://blog.umu618.com/2016/09/06/love/</id>
    <published>2016-09-06T13:29:58.000Z</published>
    <updated>2023-08-05T13:01:26.938Z</updated>
    
    <content type="html"><![CDATA[<p>本理论并非科学成果，仅个人体悟。</p><p>在[《恋爱理论之分类》] <a href="/2016/08/13/love/" title="恋爱理论之分类">1</a>提到了“[本我恋爱] <a href="/2016/08/14/love/" title="恋爱理论之本我恋爱">2</a>”和“超我恋爱”，现在详解一下后者。</p><p>超我的爱情比较像所谓的真爱，温和绵长，并非直接来自生殖需求，而是一种社会性的折偶观的体现，偏理性。</p><h2 id="现象">现象</h2><ol><li><p>不会时刻想念，但想到对方，会觉得世界挺美好。更多是喜欢对方的内在美，觉得对方让自己很舒服。</p></li><li><p>与对方交流有很多同感，相见恨晚。</p></li><li><p>对着自己的折偶标准数一下，发现对方满足了好几大项。或者原来没有标准，就照着对方定下。</p></li><li><p>有些事情会介意，如果是本我恋爱，往往会痛苦，但超我恋爱更多会妥协。拿对方没辙时是自己痛苦，还是心疼对方，基本上可以区分这两类。</p></li><li><p>一般双方有很多相似，不管是习惯还是思维方式等，有互补的特点，往往是具体技能。</p></li><li><p>尊重对方，即使对方不能接受发展爱情，也可以做不过分暧昧的好朋友。</p></li><li><p>淡定地愿意为对方修正自己。如果是本我恋爱，当发现一些冲突的不同，往往先觉得不舒服。</p></li></ol><h2 id="一些规律">一些规律</h2><ol><li><p>通过相亲认识，愿意继续发展的，一般是超我爱情，即符合理性的择偶观，很少数是一见钟情式的本我恋爱。</p></li><li><p>超我恋爱更长久，但在特殊时期，超我恋爱很容易被本我恋爱破坏。</p></li><li><p>对一个人同时发生本我爱情和超我爱情是很可能的，也就是刚好喜欢一个不错的人，不过本我和超我打起架的话，挺不好受的，简单地说，想睡一个人又舍不得睡……</p></li><li><p>对男人来说，最舒服、最靠谱的发展方式是先超我恋爱，再本我恋爱，这样成功率比较高，而且成功后更幸福。但大部分男人总是先发生本我恋爱，如果没有克制好，容易搞砸。另外有很多人，无法发展出本我爱情。</p></li><li><p>据稣所知，女人通常先发生超我恋爱，最后被追到感动坏了，或者发生性关系了才会发生本我恋爱，这就是为什么女人大多被动。当然有些例外情况，先本我恋爱了，于是她有可能去倒追男人。</p></li></ol><h2 id="建议">建议</h2><p>择偶观要正，择偶标准要客观一点，并且不要随便降低，当发生超我爱情后，多见面，多交互，慢慢就可能发生本我爱情了。如果无法培养出本我爱情，那可以考虑分手再找，也可以冒险接受了。（风险参考规律第二条）</p><p>优秀的女人只要不丑，得到真爱的机会是很大的，只要……不自闭！</p><p>如果不想爱上一个人，一定要事前远离。超我容易控制，本我疯起来很麻烦，两者合一，则此爱绵绵无绝期，事后补救是很难的……</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本理论并非科学成果，仅个人体悟。&lt;/p&gt;
&lt;p&gt;在[《恋爱理论之分类》] &lt;a href=&quot;/2016/08/13/love/&quot; title=&quot;恋爱理论之分类&quot;&gt;1&lt;/a&gt;提到了“[本我恋爱] &lt;a href=&quot;/2016/08/14/love/&quot; title=&quot;恋爱理论之</summary>
      
    
    
    
    <category term="宇督观" scheme="https://blog.umu618.com/categories/%E5%AE%87%E7%9D%A3%E8%A7%82/"/>
    
    
    <category term="鲸神链" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%93%BE/"/>
    
    <category term="心理邪稣" scheme="https://blog.umu618.com/tags/%E5%BF%83%E7%90%86%E9%82%AA%E7%A8%A3/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·屠案谜夜</title>
    <link href="https://blog.umu618.com/2016/08/15/reconstructionism-poet-tpk/"/>
    <id>https://blog.umu618.com/2016/08/15/reconstructionism-poet-tpk/</id>
    <published>2016-08-15T10:36:00.000Z</published>
    <updated>2023-08-05T13:01:26.938Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·屠案谜夜》：白闪照亮我四方，灵道不荒地峡荒。幸凭一腔撒热血，家犬愚笨夜袭狼。</p><h2 id="注解">注解</h2><p>白闪：不解释<br>灵道：不解释<br>地峡：不解释<br>幸凭：不解释<br>家犬：甲醛<br>夜袭狼：【闽南语】会死人</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·屠案谜夜》：白闪照亮我四方，灵道不荒地峡荒。幸凭一腔撒热血，家犬愚笨夜袭狼。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;白闪：不解释&lt;br&gt;
灵道：不解释&lt;br&gt;
地峡：不解释&lt;br&gt;
幸凭：不解释&lt;br&gt;
家犬：甲醛&lt;br&gt;
夜袭狼：【闽南语】会死</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="闽南语" scheme="https://blog.umu618.com/tags/%E9%97%BD%E5%8D%97%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>恋爱理论之本我恋爱</title>
    <link href="https://blog.umu618.com/2016/08/14/love/"/>
    <id>https://blog.umu618.com/2016/08/14/love/</id>
    <published>2016-08-14T00:42:07.000Z</published>
    <updated>2023-08-05T13:01:26.938Z</updated>
    
    <content type="html"><![CDATA[<p>本理论并非科学成果，仅个人体悟。</p><p>前一篇[《恋爱理论之分类》] <a href="/2016/08/13/love/" title="恋爱理论之分类">1</a>提到了“本我恋爱”，现在详解一下。</p><h2 id="现象">现象</h2><ol><li><p>容易分心，下意识就被对方吸引，很难控制。</p></li><li><p>渴望交流，如果得不到满足或者交流失败，就会产生自卑。</p></li><li><p>和对方对眼时，周围的人事物都会消失掉。</p></li><li><p>正常的相遇，都会觉得是天意的安排，其实是自己下意识安排的相遇。</p></li><li><p>体重下降，有一种激素在体内运行，导致每口呼吸都在燃烧比平时更多的热量，还可能吃不下饭。</p></li><li><p>燃烧更多热量，就要吸入更多氧气，这时一般人长期适应的呼吸量是不够的，所以也容易产生窒息感，让人心跳加速，这就是心动的感觉。</p></li><li><p>不由自主地在路人身上找对方的相似点，或者说随便看到一个有某点相似的路人，就想去分辨是不是对方。</p></li></ol><h2 id="原因">原因</h2><p>喜欢一个人怎么会这么累？这不是找抽吗？其实这是一个充分暴露缺点的过程，如果对方也是一样的现象，说明是互相喜欢，互相更容易接受缺点，如果说实在无法接受，结束了也是好事。简单地说，这样的犯傻，是给超我机会来翻盘，如果不翻，就继续发展超我恋爱。</p><p>还有一种是对方并不喜欢你，犯傻了，对方可能会更不喜欢，所以还是早点解脱了。</p><p>为什么会自卑？本我恋爱是人类长期进化积累出来的规则。人脑有很多功能，平时自己无法启动，要靠一些神秘的生化反应来启动。然而有些人并不能理解这些，可能有意或无意想抵制，而本性哪有那么容易对付的，总是要让自己明白，喜欢某个人的背后是有很多原因的，是有理性道理的，所以如果你去抵制，你就会痛苦，就会自卑。</p><p>有这么一个流氓理论：**现在的人是这样的，假设你不是这样的，那么你早就灭绝了，所以人就是这样的。**举个例子，痛觉，如果流血不会痛，那你可能因为不去止血、止痛，血流不止而死。</p><p>本我恋爱会自卑、减肥也可以这么解释：男人通过这些现象，发现自己的漏洞，刺激上进，男人是战斗的种族，如果不能克服这些，在求爱的竞争中就会失败，基因可能得不到遗传。女人生育是需要积累脂肪的，如果因为减肥，把应该存储的量都消耗完了，身体就会吃不消，这会刺激她们更快决定要不要接受这个爱，决定完了，心情愉快，又会开始增肥，准备生育。</p><h2 id="一些规律">一些规律</h2><ol><li><p>聪明的人更容易发生本我恋爱，但也容易被压制。鲸神链还没分清楚这个聪明是哪种聪明。这类人自控比较好，本我、自我、超我更好地平衡，很可能基因也比较好，但他们往往太压抑了，如果没有本我恋爱机制的刺激，他们很可能各种看穿看透而不去生殖，甚至变成同性恋。这些人现在还大量活着，就是因为某种刺激不断诱惑，让他们的基因继续延续。</p></li><li><p>很多人经历了多次本我恋爱，觉得太痛，于是选择一个超我恋爱对象结婚。如果真的对本我恋爱免疫了，这是不错的选择，就怕婚后还发生本我恋爱……</p></li><li><p>人生基本负面情绪远远大于正面情绪，但各种机制互相制约，也不可能长期处于痛苦之中，比如失恋了，自我就会启动心理防御机制，这有五类十六种，每个人可能选择不同，但都有迹可循，总会走出来的。</p></li><li><p>如果失恋了，很久都没走出来，那只有一个原因，就是自己不想走出来，人有种心理叫阻抗（resistance），就是别人劝反而不听，要继续沉沦，只有当自己发现这么做根本是自作孽，才会明白应该自己走出来。持续改变的动力，必须源自自己。</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本理论并非科学成果，仅个人体悟。&lt;/p&gt;
&lt;p&gt;前一篇[《恋爱理论之分类》] &lt;a href=&quot;/2016/08/13/love/&quot; title=&quot;恋爱理论之分类&quot;&gt;1&lt;/a&gt;提到了“本我恋爱”，现在详解一下。&lt;/p&gt;
&lt;h2 id=&quot;现象&quot;&gt;现象&lt;/h2&gt;
&lt;ol&gt;
&lt;l</summary>
      
    
    
    
    <category term="宇督观" scheme="https://blog.umu618.com/categories/%E5%AE%87%E7%9D%A3%E8%A7%82/"/>
    
    
    <category term="鲸神链" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%93%BE/"/>
    
    <category term="心理邪稣" scheme="https://blog.umu618.com/tags/%E5%BF%83%E7%90%86%E9%82%AA%E7%A8%A3/"/>
    
  </entry>
  
  <entry>
    <title>恋爱理论之分类</title>
    <link href="https://blog.umu618.com/2016/08/13/love/"/>
    <id>https://blog.umu618.com/2016/08/13/love/</id>
    <published>2016-08-13T12:35:41.000Z</published>
    <updated>2023-08-05T13:01:26.938Z</updated>
    
    <content type="html"><![CDATA[<p>本理论并非科学成果，仅个人体悟。</p><p>鲸神链把恋爱分成感性为主和理性为主两类。用更专业点的词语来描述是本我恋爱（感性）和超我恋爱（理性），当然这两者如果一起发生，可以认为是真爱。正常情况下自我是孤独的，不太想谈恋爱，但如果是真爱，那自我也会一起参与。</p><p>本我的爱起源于欲望，它是感性的，所以不一定会喜欢美女/帅哥，所谓情人眼里出西施，说的就是本我喜欢一个人，就会觉得 ta 是最好看的，如果你身边大部分人认为 ta 不好看，只有你觉得 ta 很好看，那基本就是这类了。这种喜欢一开始并不会明显，而是在接触中慢慢明朗起来。这背后有一定科学道理，比如体香的化学反应，这个过程很高级，人类可以通过体香的反应，判断对方在免疫系统上是不是和自己互补，如果是互补的，生的后代一般会有进步。当这种机制全面启动，就是人们所谓的激情，但不是一夜情，是 6-18 个月这样的长度的。</p><p>本我恋爱时，往往会自卑，比如想和对方交流，却胡思乱想不知道怎么办，然后就很难受，直到和对方聊上了，才释然，但接着又开始为下一次交流心事重重。</p><p>超我的爱起源于道德、社会准则、审美理想，它很理性，所以对方一定是有很多优点满足自己的要求，正常来说年轻人会理性地喜欢一个人，往往对方是貌美的，年老点的可能不怎么看重外貌，会选择一些内在美的特征。举个例子，女人喜欢有钱的男人，这是超我的爱，当然不排除后续可能培养出本我的爱。</p><p>超我恋爱时，往往比较乐观、自信，因为超我是理性的，会安排合理的过程，过程中又会学习并调整和对方的交互、关系。</p><p>有些男人追女生很厉害，这种基本上都是超我恋爱，代价比较小，如果是自我恋爱，要直面不完美的自己，要和自卑对抗，代价是很大的，尤其是失恋后要走出来一定比超我恋爱大很多。</p><p>哪种更高级？鲸神链认为本我恋爱更高级，因为它更不可控，背后有很复杂的生化反应，这是人类长期进化而来的特征，人性不可违逆。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本理论并非科学成果，仅个人体悟。&lt;/p&gt;
&lt;p&gt;鲸神链把恋爱分成感性为主和理性为主两类。用更专业点的词语来描述是本我恋爱（感性）和超我恋爱（理性），当然这两者如果一起发生，可以认为是真爱。正常情况下自我是孤独的，不太想谈恋爱，但如果是真爱，那自我也会一起参与。&lt;/p&gt;
&lt;p</summary>
      
    
    
    
    <category term="宇督观" scheme="https://blog.umu618.com/categories/%E5%AE%87%E7%9D%A3%E8%A7%82/"/>
    
    
    <category term="鲸神链" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%93%BE/"/>
    
    <category term="心理邪稣" scheme="https://blog.umu618.com/tags/%E5%BF%83%E7%90%86%E9%82%AA%E7%A8%A3/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·圣魔神胎2</title>
    <link href="https://blog.umu618.com/2016/07/31/reconstructionism-poet-the-child-of-god-and-demon/"/>
    <id>https://blog.umu618.com/2016/07/31/reconstructionism-poet-the-child-of-god-and-demon/</id>
    <published>2016-07-31T00:23:19.000Z</published>
    <updated>2023-08-05T13:01:26.938Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·圣魔神胎2》：神思八荒，圣魔双生。诡心九转，古今一人。</p><h2 id="注解">注解</h2><p>神思八荒：思考宇宙洪荒。<br>圣魔双生：意识和潜意识都很强烈，就像天使与魔鬼同时存在，炙烤人性。<br>诡心九转：人生多次转折、磨难，造就奇特的心思。<br>古今一人：古代的“我”和现在的“我”合一。不是第一人的意思。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·圣魔神胎2》：神思八荒，圣魔双生。诡心九转，古今一人。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;神思八荒：思考宇宙洪荒。&lt;br&gt;
圣魔双生：意识和潜意识都很强烈，就像天使与魔鬼同时存在，炙烤人性。&lt;br&gt;
诡心九转：人生多次转折、磨难，造就奇特的心</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="圣小开" scheme="https://blog.umu618.com/tags/%E5%9C%A3%E5%B0%8F%E5%BC%80/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·庄周梦稣</title>
    <link href="https://blog.umu618.com/2016/07/22/reconstructionism-poet-zhuangzhou-dreamt-of-me/"/>
    <id>https://blog.umu618.com/2016/07/22/reconstructionism-poet-zhuangzhou-dreamt-of-me/</id>
    <published>2016-07-21T16:21:33.000Z</published>
    <updated>2023-08-05T13:01:26.938Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·庄周梦稣》：古岂无吾？宇宙轮回千万身。死亦何苦？秋去冬尽春夏新。</p><h2 id="注解">注解</h2><p>以前难道没有过“我”？宇宙已经轮回出现过无数个“我”，所以死也没啥，不过是自然规律。<br>现在的世界，可能只是前世的稣做的一个梦而已，而稣做梦，会穿越回古代，成为庄子。<br>稣有可能是个没有感官的植物人，甚至不是人，而这整个世界的车马喧嚣、人声鼎沸，全是某种思想制造出来给自己解闷的。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·庄周梦稣》：古岂无吾？宇宙轮回千万身。死亦何苦？秋去冬尽春夏新。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;以前难道没有过“我”？宇宙已经轮回出现过无数个“我”，所以死也没啥，不过是自然规律。&lt;br&gt;
现在的世界，可能只是前世的稣做的一个梦而已，而稣</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="圣小开" scheme="https://blog.umu618.com/tags/%E5%9C%A3%E5%B0%8F%E5%BC%80/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·台风天之夜雨迷梦</title>
    <link href="https://blog.umu618.com/2016/07/11/reconstructionism-poet-typhoon/"/>
    <id>https://blog.umu618.com/2016/07/11/reconstructionism-poet-typhoon/</id>
    <published>2016-07-10T16:04:00.000Z</published>
    <updated>2023-08-05T13:01:26.938Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·台风天之夜雨迷梦》：摇椅卧听雨打声，夜灯闲看风云更。风以神姿观天下，稣借人间造迷梦。</p><h2 id="注解">注解</h2><p>喜欢台风天，躺在摇椅纳凉时作。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·台风天之夜雨迷梦》：摇椅卧听雨打声，夜灯闲看风云更。风以神姿观天下，稣借人间造迷梦。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;喜欢台风天，躺在摇椅纳凉时作。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="鲸神链" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%93%BE/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·一日三睡有梦生</title>
    <link href="https://blog.umu618.com/2016/06/23/reconstructionism-poet-dream/"/>
    <id>https://blog.umu618.com/2016/06/23/reconstructionism-poet-dream/</id>
    <published>2016-06-23T02:48:00.000Z</published>
    <updated>2023-08-05T13:01:26.938Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·一日三睡有梦生》：睡美人，挥手风云尽，江山何用？炒股票，起床高潮搞，回笼睡觉。</p><h2 id="注解">注解</h2><p>高潮：gc***，国债逆回购。</p><p>另附一首赠路由，少路多干：天天观日萎靡，观阴不日饥渴。观这观那不干，吃枣药丸喝喝。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·一日三睡有梦生》：睡美人，挥手风云尽，江山何用？炒股票，起床高潮搞，回笼睡觉。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;高潮：gc***，国债逆回购。&lt;/p&gt;
&lt;p&gt;另附一首赠路由，少路多干：天天观日萎靡，观阴不日饥渴。观这观那不干，吃枣药丸喝喝。</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
    <category term="鲸神链" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%93%BE/"/>
    
  </entry>
  
  <entry>
    <title>工作汇报</title>
    <link href="https://blog.umu618.com/2016/06/15/work-report/"/>
    <id>https://blog.umu618.com/2016/06/15/work-report/</id>
    <published>2016-06-15T03:31:19.000Z</published>
    <updated>2023-08-05T13:01:26.938Z</updated>
    
    <content type="html"><![CDATA[<p>在<a href="/2016/02/18/umutech-the-meaning-of-writing/" title="《写作的意义》">《写作的意义》</a>中建议大家要多写作，是时候重点讲讲“工作汇报”了。</p><p>工作汇报的中心思想：</p><ol><li>成绩、经验教训；</li><li>分析自身缺点或遇到的困境，寻求支援；</li><li>预告工作安排。</li></ol><p>常言道“会哭的娃有奶喝”，有些人对此是鄙夷的态度，自然也不屑汇报什么成绩了，觉得那是邀功、谄媚……不得不说，这些人实在被坑害得不浅。还有些人是觉得太忙了，没时间写，这种也是够了，自己不总结一下成绩，到加薪时被忽略，才唧唧歪歪，会不会太迟了？</p><p>假设您是管理者，您有一个手下不主动汇报任何工作，于是您就必须时不时去盯着他到底在干什么，您还要替他记录他工作中留下的经验，这样就浪费了自己的时间。管理者需要有全局观，所以都是会脱离具体的细节的，在细节上的技能都会慢慢地不如下属，尤其是下属人数越来越多后。如果下属没有汇报，主管要么自己去处理细节，要么就断层了，这都带来了管理成本的增加。</p><p>我们站在管理者角度，描述一个简单的心理活动：我的下属不汇报工作，时间长了，我失去了一些技术性信息来源，如果我一直去找他们了解，我就被拉到他们的位置上了，不像个管理者，毕竟管理者的定义是：通过别人去完成工作的人。如果我专心只做管理，不去了解他们的技术性成果，则我在技术上会慢慢退步，失去技术敏感度，也不利管理工作。所以我明白了，那些不汇报工作的下属是在害我，他们很可能并不想在这里好好待着，所以我应该和他们沟通一下，看看是不是还有救，没救了就给他们比较低的绩效，或者淘汰掉；还有救，我就要多盯着他，引导一下。</p><p>反过来，我们当下属的就知道怎么做了……</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在&lt;a href=&quot;/2016/02/18/umutech-the-meaning-of-writing/&quot; title=&quot;《写作的意义》&quot;&gt;《写作的意义》&lt;/a&gt;中建议大家要多写作，是时候重点讲讲“工作汇报”了。&lt;/p&gt;
&lt;p&gt;工作汇报的中心思想：&lt;/p&gt;
&lt;ol&gt;
&lt;l</summary>
      
    
    
    
    <category term="宇督观" scheme="https://blog.umu618.com/categories/%E5%AE%87%E7%9D%A3%E8%A7%82/"/>
    
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
    <category term="洗脑" scheme="https://blog.umu618.com/tags/%E6%B4%97%E8%84%91/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·科技炼狱模式</title>
    <link href="https://blog.umu618.com/2016/06/09/reconstructionism-poet-purgatory/"/>
    <id>https://blog.umu618.com/2016/06/09/reconstructionism-poet-purgatory/</id>
    <published>2016-06-09T02:28:16.000Z</published>
    <updated>2023-08-05T13:01:26.938Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·科技炼狱模式》：人类文明屎尿屁，科技文化抠为基。非常逆境练平心，修得长技轰牛逼。</p><h2 id="注解">注解</h2><p>屎尿屁乃人类文明不可避免的俗事，但有人极力掩盖。<br>科技过分抠逼，有些地方也是很反人类的。<br>然而，稣就是要在逆境中锻炼，一切平常心对待。<br>赫赫！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·科技炼狱模式》：人类文明屎尿屁，科技文化抠为基。非常逆境练平心，修得长技轰牛逼。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;屎尿屁乃人类文明不可避免的俗事，但有人极力掩盖。&lt;br&gt;
科技过分抠逼，有些地方也是很反人类的。&lt;br&gt;
然而，稣就是要在逆境</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·小米家抄天下</title>
    <link href="https://blog.umu618.com/2016/05/28/reconstructionism-poet-xiaomi/"/>
    <id>https://blog.umu618.com/2016/05/28/reconstructionism-poet-xiaomi/</id>
    <published>2016-05-28T03:05:54.000Z</published>
    <updated>2023-08-05T13:01:26.938Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·小米家抄天下》：猴王抄大家，大家黑米家。财纳穷人多，屌丝得天下。</p><h2 id="注解">注解</h2><p>财纳：China</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·小米家抄天下》：猴王抄大家，大家黑米家。财纳穷人多，屌丝得天下。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;财纳：China&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>解决 dropbear 和 openssh 的冲突</title>
    <link href="https://blog.umu618.com/2016/05/26/umutech-resolve-the-conflict-over-dropbear-and-openssh/"/>
    <id>https://blog.umu618.com/2016/05/26/umutech-resolve-the-conflict-over-dropbear-and-openssh/</id>
    <published>2016-05-26T02:12:44.000Z</published>
    <updated>2023-08-05T13:01:26.938Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求">需求</h2><p>在 OpenWRT 路由器 C 用公钥验证方式登录另一台 OpenWRT 路由器 S。</p><h2 id="问题">问题</h2><p>一开始配置完很顺利登录，后来进行一些操作后，居然登录不了，提示输入密码……</p><p>类似情况：<a href="https://github.com/rssnsj/openwrt-hc5x61/issues/99">https://github.com/rssnsj/openwrt-hc5x61/issues/99</a></p><h2 id="分析">分析</h2><p>一开始也以为是 OpenWRT 版本的问题，从 dd trunk 降到 cc，无用。再降到 bb，发现没问题了，因为 bb 没有 sshtunnel，最后把怀疑对象锁定到 sshtunnel。</p><p>sshtunnel 是基于 openssh 的，在装 sshtunnel 时，openssh 会作为依赖项被装上，然后替换了系统自带的 dropbear 客户端，所以后来使用的 ssh 是 openssh，但私钥文件却是一开始用 dropbearkey 产生的。两者格式并不兼容。</p><h2 id="解决方案">解决方案</h2><p>装上 openssh-keygen，然后用 ssh-keygen 产生新的私钥，再用 ssh-keygen -y -f ~/.ssh/id_rsa 打印公钥。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;需求&quot;&gt;需求&lt;/h2&gt;
&lt;p&gt;在 OpenWRT 路由器 C 用公钥验证方式登录另一台 OpenWRT 路由器 S。&lt;/p&gt;
&lt;h2 id=&quot;问题&quot;&gt;问题&lt;/h2&gt;
&lt;p&gt;一开始配置完很顺利登录，后来进行一些操作后，居然登录不了，提示输入密码……&lt;/p&gt;
&lt;p&gt;类</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="embedded" scheme="https://blog.umu618.com/tags/embedded/"/>
    
    <category term="linux" scheme="https://blog.umu618.com/tags/linux/"/>
    
    <category term="openwrt" scheme="https://blog.umu618.com/tags/openwrt/"/>
    
  </entry>
  
  <entry>
    <title>性爱思维和虚拟现实</title>
    <link href="https://blog.umu618.com/2016/05/03/sex-thinking-and-virtual-reality/"/>
    <id>https://blog.umu618.com/2016/05/03/sex-thinking-and-virtual-reality/</id>
    <published>2016-05-03T15:38:34.000Z</published>
    <updated>2024-04-13T14:38:27.526Z</updated>
    
    <content type="html"><![CDATA[<p>性爱思维：一种积极乐观，提前快乐的思维方式，比如两二逼突然聊起中了彩票要干嘛干嘛，都没中奖就高兴得有来有去的。之所以叫它“性爱思维”是这和“性”的过程有相似之处（其实是标题党）————不管男女，都不是最后一刻才快乐，而是从准备约会开始就心情愉悦，blah，blah……</p><p>虚拟现实：稣想说的比目前这种戴个乐射装逼的境界高很多，大家可以参考《宇宙威龙》的回忆旅行、《异次元骇客》的 1937 年世界、《黑客帝国》的连接罐装人类的网络。</p><p>当虚拟发展到高度真实时，现实与虚拟其实就不重要了，把脑子机械化完全是有可能的，典型的推理过程：做出一个脑细胞的电子替代品，一个个代替肉体脑细胞，最后就是把一个人脑给电子化了。</p><p>远的不扯了！很多人都有做梦时很真实的经验，完全有满足肉体需求的能力……</p><p>好了，扯到虚拟现实就是为了装逼，稣想说的是大家应该运用性爱思维让自己更快乐起来，摆脱一些没必要的悲观。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;性爱思维：一种积极乐观，提前快乐的思维方式，比如两二逼突然聊起中了彩票要干嘛干嘛，都没中奖就高兴得有来有去的。之所以叫它“性爱思维”是这和“性”的过程有相似之处（其实是标题党）————不管男女，都不是最后一刻才快乐，而是从准备约会开始就心情愉悦，blah，blah……&lt;/p</summary>
      
    
    
    
    <category term="宇督观" scheme="https://blog.umu618.com/categories/%E5%AE%87%E7%9D%A3%E8%A7%82/"/>
    
    
    <category term="怪悟" scheme="https://blog.umu618.com/tags/%E6%80%AA%E6%82%9F/"/>
    
    <category term="鲸神链" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%93%BE/"/>
    
    <category term="洗脑" scheme="https://blog.umu618.com/tags/%E6%B4%97%E8%84%91/"/>
    
    <category term="鹏风" scheme="https://blog.umu618.com/tags/%E9%B9%8F%E9%A3%8E/"/>
    
  </entry>
  
  <entry>
    <title>Lenovo Y1S 千兆 LAN 改 WAN</title>
    <link href="https://blog.umu618.com/2016/04/28/umutech-make-lenovo-y1s-a-1gpbs-wan/"/>
    <id>https://blog.umu618.com/2016/04/28/umutech-make-lenovo-y1s-a-1gpbs-wan/</id>
    <published>2016-04-27T16:34:07.000Z</published>
    <updated>2023-08-05T13:01:26.938Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求">需求</h2><p>Lenovo Y1S 的原 WAN 口是百兆的，连接千兆网络时，WAN 口成为瓶颈，需把两个千兆 LAN 其中一个改为 WAN。</p><h2 id="实现">实现</h2><p>UMU 一开始直接在官方 ROM 上去改 switch，却发现行不通，因为原 WAN 口被废掉后，如果不插着网线，官方 ROM 会很智能地以为路由器是没上网的，子网内终端浏览网页时，会一直被重定向到路由器设置页面。</p><p>尝试修改 <code>/etc/config/system</code> 还是没解决，所以……直接刷 OpenWRT 吧……三步走：</p><ol><li><p>参考《<a href="/2015/12/10/umutech-install-openwrt-on-newifi-mini/">newifi mini 刷 OpenWRT</a>》。</p></li><li><p>下载 ROM。开发版地址如下，稳定版请根据当前情况自寻链接。</p><p><a href="https://downloads.openwrt.org/snapshots/trunk/ramips/mt7620/openwrt-ramips-mt7620-y1s-squashfs-sysupgrade.bin">https://downloads.openwrt.org/snapshots/trunk/ramips/mt7620/openwrt-ramips-mt7620-y1s-squashfs-sysupgrade.bin</a></p></li><li><p>刷完再改 switch，搞定。</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;需求&quot;&gt;需求&lt;/h2&gt;
&lt;p&gt;Lenovo Y1S 的原 WAN 口是百兆的，连接千兆网络时，WAN 口成为瓶颈，需把两个千兆 LAN 其中一个改为 WAN。&lt;/p&gt;
&lt;h2 id=&quot;实现&quot;&gt;实现&lt;/h2&gt;
&lt;p&gt;UMU 一开始直接在官方 ROM 上去改 swit</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="embedded" scheme="https://blog.umu618.com/tags/embedded/"/>
    
    <category term="linux" scheme="https://blog.umu618.com/tags/linux/"/>
    
    <category term="openwrt" scheme="https://blog.umu618.com/tags/openwrt/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·夜雨暴走之夜访南普陀</title>
    <link href="https://blog.umu618.com/2016/04/08/reconstructionism-poet-night-visit-nanputuo/"/>
    <id>https://blog.umu618.com/2016/04/08/reconstructionism-poet-night-visit-nanputuo/</id>
    <published>2016-04-08T15:32:19.000Z</published>
    <updated>2023-08-05T13:01:26.938Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·夜雨#暴走#之夜访南普陀》：稣既参佛亦造业，七分正气三分邪。科技无情纵才智，学儒悟道无远届。</p><h2 id="注解">注解</h2><p>走到南普陀门前略有所思，人生的修炼是不能停下的，参悟在知识的海洋里无远弗届。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·夜雨#暴走#之夜访南普陀》：稣既参佛亦造业，七分正气三分邪。科技无情纵才智，学儒悟道无远届。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;走到南普陀门前略有所思，人生的修炼是不能停下的，参悟在知识的海洋里无远弗届。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="暴走" scheme="https://blog.umu618.com/tags/%E6%9A%B4%E8%B5%B0/"/>
    
    <category term="圣小开" scheme="https://blog.umu618.com/tags/%E5%9C%A3%E5%B0%8F%E5%BC%80/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·夜雨暴走之寺庙见证激情篇</title>
    <link href="https://blog.umu618.com/2016/04/08/reconstructionism-poet-passion-beside-the-temple/"/>
    <id>https://blog.umu618.com/2016/04/08/reconstructionism-poet-passion-beside-the-temple/</id>
    <published>2016-04-08T14:00:00.000Z</published>
    <updated>2023-08-05T13:01:26.938Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·夜雨#暴走#之寺庙见证激情篇》：鸿山寺边速八如，碧山岩下家七福。波逼约成铂金卡，稣只住过大翔鹭。</p><h2 id="注解">注解</h2><p>淋雨暴走，从镇海路走到厦大的路上看到速八、如家、七天、希尔福等酒店。<br>想起波波的如家会员卡已经练到铂金卡了，稣却只在翔鹭国际大酒店住过一晚。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·夜雨#暴走#之寺庙见证激情篇》：鸿山寺边速八如，碧山岩下家七福。波逼约成铂金卡，稣只住过大翔鹭。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;淋雨暴走，从镇海路走到厦大的路上看到速八、如家、七天、希尔福等酒店。&lt;br&gt;
想起波波的如家会员卡已经练到铂金</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="打嘴炮" scheme="https://blog.umu618.com/tags/%E6%89%93%E5%98%B4%E7%82%AE/"/>
    
    <category term="暴走" scheme="https://blog.umu618.com/tags/%E6%9A%B4%E8%B5%B0/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·割韭菜</title>
    <link href="https://blog.umu618.com/2016/04/03/reconstructionism-poet-cutting-leeks/"/>
    <id>https://blog.umu618.com/2016/04/03/reconstructionism-poet-cutting-leeks/</id>
    <published>2016-04-03T06:06:11.000Z</published>
    <updated>2023-08-05T13:01:26.928Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·割韭菜》：年终后延三月发，韭菜新生四月割。若知年终成韭菜，不如高潮零零壹。</p><h2 id="注解">注解</h2><p>这个是预言诗，不准就当扯蛋。<br>后延：双关词。<br>高潮零零壹：GC001（204001）。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·割韭菜》：年终后延三月发，韭菜新生四月割。若知年终成韭菜，不如高潮零零壹。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;这个是预言诗，不准就当扯蛋。&lt;br&gt;
后延：双关词。&lt;br&gt;
高潮零零壹：GC001（204001）。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="金融" scheme="https://blog.umu618.com/tags/%E9%87%91%E8%9E%8D/"/>
    
  </entry>
  
  <entry>
    <title>提高表白成功率</title>
    <link href="https://blog.umu618.com/2016/03/29/increase-the-success-rate-of-confessing-your-love-to-a-boy/"/>
    <id>https://blog.umu618.com/2016/03/29/increase-the-success-rate-of-confessing-your-love-to-a-boy/</id>
    <published>2016-03-29T01:07:15.000Z</published>
    <updated>2023-08-05T13:01:26.928Z</updated>
    
    <content type="html"><![CDATA[<p>小女生问泥巴娃：向男神表白，怎么提高成功率？<br>泥巴娃回答：表白之前，先抓住他的蛋。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;小女生问泥巴娃：向男神表白，怎么提高成功率？&lt;br&gt;
泥巴娃回答：表白之前，先抓住他的蛋。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="U墨" scheme="https://blog.umu618.com/categories/U%E5%A2%A8/"/>
    
    
    <category term="泥巴娃" scheme="https://blog.umu618.com/tags/%E6%B3%A5%E5%B7%B4%E5%A8%83/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·挨踢穷十三</title>
    <link href="https://blog.umu618.com/2016/03/27/reconstructionism-poet-it-poor/"/>
    <id>https://blog.umu618.com/2016/03/27/reconstructionism-poet-it-poor/</id>
    <published>2016-03-27T05:04:00.000Z</published>
    <updated>2023-08-05T13:01:26.928Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·挨踢穷十三》：挨踢贫如洗，小米煮大米。猪肉三涨停，顺风去载鸡。</p><h2 id="注解">注解</h2><p><a href="/2011/12/21/reconstructionism-poet-poor/" title="《诗盗·穷十三》">《诗盗·穷十三》</a>的下篇。<br>昨天跟农民工聊天，对方谈的都是 40 万/周、200 万/月的项目，稣才发现挨踢民工实在太穷了，难怪只能买小米电饭煲，可能连大松都买不起，何况虎牌象印。最近猪肉太贵，吃不起了，油费负担也很重，只好去开顺风车了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·挨踢穷十三》：挨踢贫如洗，小米煮大米。猪肉三涨停，顺风去载鸡。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;/2011/12/21/reconstructionism-poet-poor/&quot; title=&quot;《诗盗·穷十三》&quot;&gt;《诗盗·</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>无处不在的筛选</title>
    <link href="https://blog.umu618.com/2016/03/01/the-ubiquitous-filtering/"/>
    <id>https://blog.umu618.com/2016/03/01/the-ubiquitous-filtering/</id>
    <published>2016-03-01T15:09:18.000Z</published>
    <updated>2023-08-05T13:01:26.928Z</updated>
    
    <content type="html"><![CDATA[<p>稣从小学一年级到四年级，都是考班级第一名。到了五年级就严重偏理科，而且产生了老考第一对别人是不是太残酷了的狭隘想法，所以干脆不再考第一，而且也失去了争取第一的心态。</p><p>到了初中发现，耶，其他人还是有很聪明的，毕竟是整个岛的人，小学比较的不过是几十个。然后又考过一次实际上的第一，但因为被算错分数，所以好像是名义上的第 X 名（忘了）。虽然有几位知情的老师提稣鸣不平，但稣根本不在乎这个。</p><p>又到了高中，范围是一个区，甚至不止，稣入学 300 多名，最好的成绩是似乎是 23 名……</p><p>到了大学人就更多了，完全不记得什么名次，只记得某门课考过第一，但总分估计很惨，也没去关注。</p><p>工作了大约 7 年，还一直没有意识到社会的筛选机制是无处不在的。之前走过的关卡，并非刻意去追求，只是智商不低，随意发挥点就熬过来……</p><p>之前一直只使智商，不屑用情商，直到有了孩纸，还打算生二胎开始，稣意识到了各种残酷的社会竞争。人总要往上爬的，光靠智商，不是不行，而是太慢，竞争的残酷就是在时间面前，人类是很脆弱的。</p><p>然后，开启了某个潜能，再回看，每次入学，毕业，入职，跳槽，都是社会的筛选。以前相信“英雄不问出处”，后来明白那是忽悠的，祖辈父辈的优势，就是后辈的优势，筛选从个体出生前就开始了……在我们干的每个活里，都会有一个监督机制在筛选我们。</p><p>很庆幸自己除了童年时，家里很穷之外，在教育方面，是勉强跟得上时代的。尤其是在高中，不屑什么高考，在读书对付高考这件事情上，没有花费什么心思，压根就没去想考个大学有什么卵用，只是大家都在考，算了，关键时刻读读书吧。</p><p>在厦大读书的时候，也不时感觉，这学校有啥好的……然而，现在稣想说，好险啊！好歹读了个 985 的学校。</p><p>回首过去，是为了看清未来。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;稣从小学一年级到四年级，都是考班级第一名。到了五年级就严重偏理科，而且产生了老考第一对别人是不是太残酷了的狭隘想法，所以干脆不再考第一，而且也失去了争取第一的心态。&lt;/p&gt;
&lt;p&gt;到了初中发现，耶，其他人还是有很聪明的，毕竟是整个岛的人，小学比较的不过是几十个。然后又考过一</summary>
      
    
    
    
    <category term="宇督观" scheme="https://blog.umu618.com/categories/%E5%AE%87%E7%9D%A3%E8%A7%82/"/>
    
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
    <category term="洗脑" scheme="https://blog.umu618.com/tags/%E6%B4%97%E8%84%91/"/>
    
  </entry>
  
  <entry>
    <title>换位思考</title>
    <link href="https://blog.umu618.com/2016/02/26/thinking-in-another-s-shoes/"/>
    <id>https://blog.umu618.com/2016/02/26/thinking-in-another-s-shoes/</id>
    <published>2016-02-25T16:36:31.000Z</published>
    <updated>2023-08-05T13:01:26.928Z</updated>
    
    <content type="html"><![CDATA[<p>高中时，稣遇到以下困境：</p><ol><li><p>听 Michael Jackson 的歌，被老师公开反对……而且 MJ 还被翻译成了“杰克迈克逊”。</p></li><li><p>学点美国人的东西，被说稣已经被完全西化了，崇洋媚外。</p></li><li><p>高中依然不靠勤奋，我行我素，辅导书都不买（穷，也买不起），课外书看得比课本多，然后被老师们撕逼：你自己这样就行了，不要带坏别的同学……</p></li></ol><p>呵，稣影响别人的方式，只是做好自己而已。然后老师就开始给稣灌输一个词，叫做“换位思考”，另一些同学也听腻了这个词。每次老师说到这词，稣总觉得莫名其妙。</p><p>现在如果有老师这么教育孩纸——“piapia”，稣替大家扇他们几个耳光。在稣看来有这些理由：</p><ol><li><p>人都是不一样的，不同学生有自己的成长和思考方式，要换位思考，为什么不是老师换学生的位置去思考？老师是有当过学生的，学生可还没有当过老师。</p></li><li><p>学生没有老师的阅历、社会地位，无法使用老师的脑子思考。</p></li><li><p>即使有天才，能够感同身受模拟“老师”的角色，可是这么换位对他有什么好处呢？</p></li></ol><p>简单地说，能够成功换位的情况，一般是高位换到地位去思考，强求低位去思考高位，很难。我们有句话叫做“拿着卖白菜的钱，操着买白粉的心”，多累啊。所以说，老师，您这么玩，可是有点不厚道滴哦。</p><p>但是，换到工作中，情况就有点不同了：</p><ol><li><p>换到高位去思考，要是思考成功了，思想境界就提高了；</p></li><li><p>考虑对领导的心思，并做好事情，是有利可图的。</p></li></ol><p>所谓适者生存，并不是强者，也不是智者，而是能够适应变化者。在新的关系中，怎么逆转、改进不适应的旧思维方式和知识，值得思考！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;高中时，稣遇到以下困境：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;听 Michael Jackson 的歌，被老师公开反对……而且 MJ 还被翻译成了“杰克迈克逊”。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;学点美国人的东西，被说稣已经被完全西化了，崇洋媚外。&lt;/p&gt;
&lt;/li&gt;
&lt;</summary>
      
    
    
    
    <category term="宇督观" scheme="https://blog.umu618.com/categories/%E5%AE%87%E7%9D%A3%E8%A7%82/"/>
    
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
    <category term="洗脑" scheme="https://blog.umu618.com/tags/%E6%B4%97%E8%84%91/"/>
    
  </entry>
  
  <entry>
    <title>为什么不给您加薪？</title>
    <link href="https://blog.umu618.com/2016/02/25/why-not-give-you-a-raise-in-salary/"/>
    <id>https://blog.umu618.com/2016/02/25/why-not-give-you-a-raise-in-salary/</id>
    <published>2016-02-24T16:13:56.000Z</published>
    <updated>2023-08-05T13:01:26.928Z</updated>
    
    <content type="html"><![CDATA[<p>稣还是一枚小兵时，曾经遇到这么一个问题：</p><blockquote><p>您的手下，恪尽职守做好了本职工作，开发的产品也顺利上线，年底了，他要求加薪超过了公司的普调额度，您是给加还是不给加？</p></blockquote><p>作为感同身受的低薪族，稣给出了很人道的错误答案：加吧！</p><p>相信有很多人也会迷惑，自己明明干了很多活，加薪却总是不给力（内心：除了工资，都涨了……），让他来回答这个问题，肯定是：加！加！加！</p><p>然而，正确的做法就是：不加。只能加绩效、年终奖，而不是固定薪水。</p><p>打工者往往会根据自己的工作强度、自己的收支情况、同学朋友的水平等，主观地认为自己应该多少钱合适，并且是尽快实现。而管理者，看的是您的价值裁定薪水，价值这个属性是有长期性的，而根据工作表现裁定的是绩效。回到题目中，“恪尽职守做好了本职工作”，这个是本来就应该做的，您的作用并没有改进，您的价值也没有改进，所以只能根据公司规定的普调额度加，不能超过，该激励的部分放在年终奖里。</p><p>**那什么时候特调加薪呢？**也有很多情况是可以加得给力的，比如:</p><ol><li><p>职级提高了，包括工作经验多了技能熟练的升级、从一个 coder 升华到了 architector、从小兵进化到 leader 等，您的作用从独善其身变成可以提高团队素质，这是您价值提高的表现；</p></li><li><p>您一怒之下提出了辞职威胁，但还没有适当的替补人选，这种情况其实胜算不多，而且偶尔加完留下了，接下来也可能遇到麻烦，建议不到万不得已少用；</p></li><li><p>您从一个犹豫不决随时打算拍拍屁股走人的观望状态，到您打算在这里安定地长期干下去，并且您的能力能够被认可，委以重任或核心业务，通过了时间的考验后自然会加得比较给力。</p></li></ol><p>希望了解这些规则，可以对大家的加薪有微薄的帮助。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;稣还是一枚小兵时，曾经遇到这么一个问题：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;您的手下，恪尽职守做好了本职工作，开发的产品也顺利上线，年底了，他要求加薪超过了公司的普调额度，您是给加还是不给加？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;作为感同身受的低薪族，稣给出了很</summary>
      
    
    
    
    <category term="宇督观" scheme="https://blog.umu618.com/categories/%E5%AE%87%E7%9D%A3%E8%A7%82/"/>
    
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
    <category term="洗脑" scheme="https://blog.umu618.com/tags/%E6%B4%97%E8%84%91/"/>
    
  </entry>
  
  <entry>
    <title>群发的我不回</title>
    <link href="https://blog.umu618.com/2016/02/23/i-do-not-respond-to-group-sending-message/"/>
    <id>https://blog.umu618.com/2016/02/23/i-do-not-respond-to-group-sending-message/</id>
    <published>2016-02-23T15:09:13.000Z</published>
    <updated>2023-08-05T13:01:26.928Z</updated>
    
    <content type="html"><![CDATA[<p>“群发的我不回”是一个网络热词，还是一个歌名……</p><p>赞成的人，或多或少带着点情绪。对此，稣是中立派，回不回和是不是群发无关，要看它本身需不需要回、和稣关系大不大、稣有没有足够时间回、稣回了是不是对对方造成困扰。这些应该都好理解，“是不是对对方造成困扰”这个特别解释一下，有一种情况就是微商群发问今天要不要来一份 XX 套餐？如果基于人道主义关怀，回复“不要”，那对方还需要看这条消息，然后心理从惊喜到失落……所以，稣还是忽略了。</p><p>对私人信息，回不回看心情也是可以的。在工作中，对群发的邮件，也看心情就不好了。然而，现实中却有不少人，是习惯忽视的，甚至心情好时也不回。</p><p>这种心理十分好理解，群体发福利的时候，都去参一脚，群体需要个体出力时，就有人会隐藏在群体背后不吭声了。 **心理学上有专业术语叫做“责任分散效应”或“旁观者效应”。**表现就是责任人越多，越没人担起责任。很典型的例子：老人倒地无人扶、深圳女白领地铁口猝死 7 人路过无人敢扶。</p><p>有两个启示：</p><ol><li><p>领导群发邮件布置任务时，收件人应该尽量少，其他相关人应该放在抄送人。</p></li><li><p>能够克服“责任分散效应”，勇于揽起责任的人，往往会受领导青睐。</p></li></ol><p>在写这篇的时候，搜到一篇《责任人越多，越没有责任感》和稣想说的很类似，大家可以参考一下：</p><blockquote><p>1964年3月13日夜里，美国发生一起凶杀案。年轻女子朱诺比白在回家的路上遇刺。在这个过程中，尽管她大声呼救，她的邻居中至少有38位到窗前观看，但无一人来救她，甚至无一人打电话报警。</p><p>这件事引起社会轰动，也引起了社会心理学工作者的重视和思考。人们把这种众多旁观者见死不救的现象称为“责任分散效应”，也称为“旁观者效应”。</p><p>心理学家实验和调查发现：这种现象不能仅仅说是众人的冷酷无情，或道德日益沦丧的表现。因为在不同的场合，人们的援助行为确实是不同的。当一个人遇到紧急情况时，如果只有他一个人能提供帮助，他会清醒地意识到自己的责任，对受难者给予帮助。因为他见死不救会产生罪恶感、内疚感，这需要付出很高的心理代价。而如果有许多人在场的话，帮助求助者的责任就由大家来分担，造成责任分散，每个人分担的责任很少。旁观者甚至可能连他自己的那一份责任也意识不到，从而产生一种“我不去救，别人会去救”的心理，从而造成集体冷漠的局面。</p><p><strong>核心理念</strong> 如果是单个个体被要求单独完成任务，责任感就会很强，会作出积极的反应。但如果是群体共同完成任务，群体中的每个个体的责任感就会很弱，面对困难或遇到责任往往会退缩。因为前者独立承担责任，后者期望别人多承担点儿责任，其实质就是人多不负责，责任得不到落实。</p><p><strong>应用要诀</strong> 领导者将任务交给某个团队时，一定要指定负责人，责任要分到具体的某个人，出了问题直接跟负责人交涉。否则就会出现责任分散的现象，任务得不到执行。团队完不成任务的时候，想让批评变得有力，就要让批评变得具有针对性。</p><p>《中国教育报》2013年4月14日第2版</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;“群发的我不回”是一个网络热词，还是一个歌名……&lt;/p&gt;
&lt;p&gt;赞成的人，或多或少带着点情绪。对此，稣是中立派，回不回和是不是群发无关，要看它本身需不需要回、和稣关系大不大、稣有没有足够时间回、稣回了是不是对对方造成困扰。这些应该都好理解，“是不是对对方造成困扰”这个特别解</summary>
      
    
    
    
    <category term="宇督观" scheme="https://blog.umu618.com/categories/%E5%AE%87%E7%9D%A3%E8%A7%82/"/>
    
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
    <category term="洗脑" scheme="https://blog.umu618.com/tags/%E6%B4%97%E8%84%91/"/>
    
    <category term="心理邪稣" scheme="https://blog.umu618.com/tags/%E5%BF%83%E7%90%86%E9%82%AA%E7%A8%A3/"/>
    
  </entry>
  
  <entry>
    <title>加班是企业的一种病状</title>
    <link href="https://blog.umu618.com/2016/02/22/overtime-work-is-a-symptom-of-enterprise/"/>
    <id>https://blog.umu618.com/2016/02/22/overtime-work-is-a-symptom-of-enterprise/</id>
    <published>2016-02-22T14:11:00.000Z</published>
    <updated>2023-08-05T13:01:26.928Z</updated>
    
    <content type="html"><![CDATA[<p>正像感冒也有益于人体，可以提高免疫力，减少癌症概率。只要不是频繁，小病是有益整个人生的。偶尔的加班，赶项目，同样情有可原，对于忠于企业的人来说无可厚非。但如果长期惯性的加班就是一种坏病了。</p><p><strong>为什么加班很流行？</strong></p><p>列举加班的坏处：</p><ol><li>加班使人疲累，降低工作效率。</li><li>加班占用私生活，降低幸福感，反过来影响工作效率。</li><li>加班不给工资，降低士气；加班给福利，可能有无赖耗着，贪加班费。</li></ol><p>于是乎……工作狂领导出了一招，他自己在公司耗着，以身作则，让手下不敢轻举妄动。完美解决了这三个问题！他精力过剩，他只喜欢工作，他亲自盯着，不给加班费。</p><p>您可能会说要同时满足这几点也不容易啊！然而实际上这种人很多，尤其是 70、80 后，而且老板最喜欢了，他们有很多机会上位……</p><p>不管您愿不愿意，以上就是回答了“为什么加班那么不人道，却依然盛行”。人病了，企业自然也要病。</p><p><strong>为什么长期加班是一种病？</strong></p><p>有些城市生活节奏很快，有些比较慢，这是由人文、地理环境等复杂因素造成的，养成每个省市各自的特点。公司也一样，有的节奏很快，比如创业公司，早期员工激情四射，脑子转得很快，一天下来肚子都饿得快。这时候他的工作效率明显是很高的。而一些公司节奏很慢，员工普遍工作效率和有效性都低。</p><p>对于一个正常水平的人，从慢城市到了快城市，适应期过了后，他的节奏就是变快了。在公司也一样，慢公司跳槽去快公司，只要适应了，他就是提高了工作效率。</p><p>那么，如果有领导要您加班，是因为您工作效率低，不得不延长工作时间。我们可以分析出个人和公司两方面的原因：个人水平太低，公司节奏太慢。</p><ol><li><p>个人水平低，需要恶补，以跟上别人，所以要一轮加班，这没错，但如果变成了长期加班还跟不上，那您除了承认自己不行之外，还可以换个工作试试。当然，也有一种工作就是拼时长的，如果是这样，那没有加班费就说不过去了。</p></li><li><p>公司没有提供一个适当的节奏，这是公司的问题，慢节奏可能是因为结构复杂，沟通系统无效等。毕竟每周 5 天，每天 8 小时，这是约定俗成的，有合约保护的，如果在这契约之上，公司没有办法保证员工的效率，是不是应该反思一下，像那些节奏比较合适又没有人长期被逼加班的公司看齐？</p></li></ol><p><strong>病态的加深</strong></p><p>下面要说的理论依据有点像“市场经济”的概念。</p><blockquote><p>市场经济（又称为自由市场经济或自由企业经济）是一种经济体系，在这种体系下产品和服务的生产及销售完全由自由市场的自由价格机制所引导，而不是像计划经济一般由国家所引导。</p></blockquote><p>市场总是自然趋于平衡的，往极端上说，假设有一个公司完全不用加班，那它一定很受欢迎，有很多人来应聘，这其中就可能有一些是来混日子的，我们假设这个公司很健康，那么它一定有一种机制保证大家的效率，不然长此以往这个公司很可能会因为竞争对手都在加班赶超，而最终倒闭。不过闭着眼睛也知道，这个机制的代价会很大，比如说只招聘工作狂，那这个招聘的难度就很大了。比如说有一些监督机制可以发现谁偷懒，有一些奖励机制去激励工作效率高的人，甚至，有一些保姆、很多文员、助理来协助重要人物，以保证这些人只做重要的工作。涉及到太多的成本，不得不让人放弃美好的幻想……</p><p>就目前这个时代，加班还是常态，也是处于目前的平衡。完全不加，太冒险了，怕你对手又聪明又勤奋，而且感觉也不够积极向上。加太多，有病，长期下去要变傻。</p><p><strong>加多少要看天分的</strong></p><blockquote><p>不怕别人比你聪明，就怕比你聪明的人还比你勤奋。</p></blockquote><p>如果您确实不够聪明，那比较容易做到的讨领导欢喜的做法，可能就是加班了。对于领导，他观察您听不听话，最快的方法也是您加班多吗……</p><p>当然，这又是平衡的问题，如果您很聪明能干，那您可以加少点。对领导看来，反正你够聪明，活能干好，确实没有必要计较加班时长。</p><p>然而，领导怎么知道您够不够聪明，这又是一个问题。是问题，就有解决的成本。如果他管理着大量的人，那么最简单的方法还是——建议大家加班，您智商要是不够，让您去增加智商也是难题，但加班就相对容易了，任何人都可以做到。</p><p><strong>总结</strong></p><p>加班加出病的公司都是什么样子的？一群杂鱼，可能也有精英，但结构混乱，无法发挥最佳状态？一群低能儿，只能笨鸟先飞？一个管理层变态压榨员工时间的不人道公司？</p><p>不造有没有人中枪了？稣目前感觉良好，偶尔加班，只要项目急需这都不是事儿。</p><p>最后，想说“很多道理似乎都懂，但没看人写下来似乎又不懂。”本文写完，稣自己读过都觉得太罗嗦了点，确实写得不好，但不管如何， <strong>稣写出来了，这才是重点。</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;正像感冒也有益于人体，可以提高免疫力，减少癌症概率。只要不是频繁，小病是有益整个人生的。偶尔的加班，赶项目，同样情有可原，对于忠于企业的人来说无可厚非。但如果长期惯性的加班就是一种坏病了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;为什么加班很流行？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;列</summary>
      
    
    
    
    <category term="宇督观" scheme="https://blog.umu618.com/categories/%E5%AE%87%E7%9D%A3%E8%A7%82/"/>
    
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
    <category term="洗脑" scheme="https://blog.umu618.com/tags/%E6%B4%97%E8%84%91/"/>
    
  </entry>
  
  <entry>
    <title>写作的意义</title>
    <link href="https://blog.umu618.com/2016/02/18/the-meaning-of-writing/"/>
    <id>https://blog.umu618.com/2016/02/18/the-meaning-of-writing/</id>
    <published>2016-02-18T15:58:17.000Z</published>
    <updated>2023-08-05T13:01:26.928Z</updated>
    
    <content type="html"><![CDATA[<p>就像一个社会需要作家，IT 界也需要技术作家，一个大点的公司也需要，用于传承企业文化、业务和通用技术。</p><p><strong>写作是对思维的检视</strong>，成文的过程你会更谨慎地验证自己的想法是否正确。成文后，作者也要接受来自读者的审视。</p><p><strong>写作可以帮助后来者</strong>，帮助别人，很多时候会得到回报。我们工作中经常会搜到别人的技术博文，学习他们的经验，同时如果发现错误也会评论给作者，双赢才是好局面。就拿在公司里的情况来说，你多写作，多帮助别人，大家也会认同你的人品和能力。稣曾经听过一种负面的说法：你和别人说太多，别人都学走了，就不需要你了。其实，这低估了职业生涯的长度了，在职业长跑中，核心竞争力是自己的实力，而不是对手很弱。另外，在团队协作中，我们更怕猪队友，而不是神对手。怕别人学走，这种思路，应该是拿去对付（潜在）竞争公司的，而不是自己的团队。说句题外话，其实只有核心技术是需要保密的，很多工具类、基础类，并没有保密的价值。</p><p><strong>写作可以记录功绩</strong>。有不少人和稣抱怨，自己干了很多事情，结果功劳被人抢了。说实话，这个现象大部分公司都有，我们也不例外，但有句话说得好，高调做事，低调做人，那些说功劳被抢走的，是不是没有做到这点？稣在上个公司时，作为一名小兵，就自主地每周发工作报告给全体组员，并且一直坚持到现在。成果应该是有的，稣从来没觉得自己的的功劳被谁抢走。</p><p><strong>写作是对自己负责，也是对团队负责</strong>。从上级的角度看，如果手下能够主动汇报工作，并积累技术文档，这很明显能够说明两个问题：他有干了这些活；他能够把怎么做的解释清楚，说明他是打算长期在这个公司发展。即保住了自己的功劳，又宣誓了忠心。有些比较傲娇的年轻人并不喜欢誓忠，他们觉得利益才是关键，稣认为誓忠更多是对自己负责，自己选择的工作本身都是要做好的，誓忠的关键是告诉上级，你已经进入角色，可以稳定地发展了，并不是要讨好某位特定的上级。誓忠的好处也是很大的，毕竟没有领导会把核心业务交给可能明天就会辞职的手下，更不可能提拔这样的人。</p><p><strong>写作是一种延续生命的方式</strong>，好的作品往往比作者本人更长寿，最好的例子就是古典名著。稣认为，技术人员写作，其实是加固、延长自己的职业生涯。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;就像一个社会需要作家，IT 界也需要技术作家，一个大点的公司也需要，用于传承企业文化、业务和通用技术。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;写作是对思维的检视&lt;/strong&gt;，成文的过程你会更谨慎地验证自己的想法是否正确。成文后，作者也要接受来自读者的审视。&lt;/p&gt;
&lt;p&gt;&lt;s</summary>
      
    
    
    
    <category term="宇督观" scheme="https://blog.umu618.com/categories/%E5%AE%87%E7%9D%A3%E8%A7%82/"/>
    
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
    <category term="洗脑" scheme="https://blog.umu618.com/tags/%E6%B4%97%E8%84%91/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·羊尾年牙</title>
    <link href="https://blog.umu618.com/2016/01/18/reconstructionism-poet-year-end-banquet/"/>
    <id>https://blog.umu618.com/2016/01/18/reconstructionism-poet-year-end-banquet/</id>
    <published>2016-01-18T05:58:09.000Z</published>
    <updated>2023-10-29T12:24:56.937Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·羊尾年牙》：抽奖把我漏，饭菜又耍猴。台上秀恩爱，日下单身狗。</p><h2 id="注解">注解</h2><p>羊尾年牙：乱序手法，主要突出了阳痿。<br>日下单身狗：如下图。<br><img src="/images/2016/20160118-0.jpg" alt="日下单身狗"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·羊尾年牙》：抽奖把我漏，饭菜又耍猴。台上秀恩爱，日下单身狗。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;羊尾年牙：乱序手法，主要突出了阳痿。&lt;br&gt;
日下单身狗：如下图。&lt;br&gt;
&lt;img src=&quot;/images/2016/20160118-0.j</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·够故人装</title>
    <link href="https://blog.umu618.com/2015/12/30/reconstructionism-poet-old-friend/"/>
    <id>https://blog.umu618.com/2015/12/30/reconstructionism-poet-old-friend/</id>
    <published>2015-12-30T14:15:00.000Z</published>
    <updated>2023-08-05T13:01:26.928Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·够故人装》：开房免床铺，把酒话桑拿。待到重阳日，还来插菊花。</p><h2 id="注解">注解</h2><p><a href="/2012/04/20/reconstructionism-poet-iaround/" title="《诗盗·遇见》">《诗盗·遇见》</a>的下篇。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·够故人装》：开房免床铺，把酒话桑拿。待到重阳日，还来插菊花。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;/2012/04/20/reconstructionism-poet-iaround/&quot; title=&quot;《诗盗·遇见》&quot;&gt;《诗盗</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="打嘴炮" scheme="https://blog.umu618.com/tags/%E6%89%93%E5%98%B4%E7%82%AE/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·悦泡</title>
    <link href="https://blog.umu618.com/2015/12/30/reconstructionism-poet-get-laid/"/>
    <id>https://blog.umu618.com/2015/12/30/reconstructionism-poet-get-laid/</id>
    <published>2015-12-30T06:13:24.000Z</published>
    <updated>2023-08-05T13:01:26.928Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·悦泡》：一餐酒肉肥，悠悠牛逼吹。幕下谈品位，床上抬大腿。</p><h2 id="注解">注解</h2><p>学点英语：<br>get laid<br>friend with benefit</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·悦泡》：一餐酒肉肥，悠悠牛逼吹。幕下谈品位，床上抬大腿。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;学点英语：&lt;br&gt;
get laid&lt;br&gt;
friend with benefit&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="打嘴炮" scheme="https://blog.umu618.com/tags/%E6%89%93%E5%98%B4%E7%82%AE/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·真光闲文</title>
    <link href="https://blog.umu618.com/2015/12/26/reconstructionism-poet-eligible-bachelor-says/"/>
    <id>https://blog.umu618.com/2015/12/26/reconstructionism-poet-eligible-bachelor-says/</id>
    <published>2015-12-25T17:19:00.000Z</published>
    <updated>2024-04-13T14:38:27.526Z</updated>
    
    <content type="html"><![CDATA[<p>《诗盗·真光闲文》：未曾有钱难成才，不经诱惑非真爱。自古英雄出豪门，从来富贵有后台。醉生梦死睡二奶，拓马长枪安内外。挥袖千手山河泄，扬名立威独自嗨。</p><h2 id="注解">注解</h2><p>改编自《增广贤文》之《劝学》：</p><blockquote><p>学林探路贵涉远，无人迹处偶奇观。<br>自古雄才多磨难，从来纨绔少伟男。<br>书山妙景勤为径，知渊阳春苦作弦。<br>风流肯落他人后，气岸遥凌豪士前。</p></blockquote><p>常见的一个改编：</p><blockquote><p>未曾清贫难成人，不经打击老天真。<br>自古英雄出炼狱，从来富贵入凡尘。<br>醉生梦死谁成气，拓马长枪定乾坤。<br>挥军千里山河在，立名扬威传后人。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《诗盗·真光闲文》：未曾有钱难成才，不经诱惑非真爱。自古英雄出豪门，从来富贵有后台。醉生梦死睡二奶，拓马长枪安内外。挥袖千手山河泄，扬名立威独自嗨。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;改编自《增广贤文》之《劝学》：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="鹏风" scheme="https://blog.umu618.com/tags/%E9%B9%8F%E9%A3%8E/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·PM2.5</title>
    <link href="https://blog.umu618.com/2015/12/24/reconstructionism-poet-pm25/"/>
    <id>https://blog.umu618.com/2015/12/24/reconstructionism-poet-pm25/</id>
    <published>2015-12-24T02:43:00.000Z</published>
    <updated>2023-08-05T13:01:26.928Z</updated>
    
    <content type="html"><![CDATA[<p>《诗盗·PM2.5》：砍死菩提树，烧掉明镜台，本来无一雾，现在都是霾。</p><h2 id="注解">注解</h2><p>最近厦门也沦陷了……不带个空气净化器去公司，都觉得没法活了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《诗盗·PM2.5》：砍死菩提树，烧掉明镜台，本来无一雾，现在都是霾。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;最近厦门也沦陷了……不带个空气净化器去公司，都觉得没法活了。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
  </entry>
  
  <entry>
    <title>newifi mini 刷 OpenWRT</title>
    <link href="https://blog.umu618.com/2015/12/10/umutech-install-openwrt-on-newifi-mini/"/>
    <id>https://blog.umu618.com/2015/12/10/umutech-install-openwrt-on-newifi-mini/</id>
    <published>2015-12-10T08:33:42.000Z</published>
    <updated>2023-08-05T13:01:26.928Z</updated>
    
    <content type="html"><![CDATA[<p>newifi mini，即 lenovo Y1，属于不开放 SSH 的类型，越用越不爽，还是刷了吧。</p><p>先到 <a href="http://www.xcloud.cc/download.shtml">http://www.xcloud.cc/download.shtml</a> 下载“路由助手”，然后到 OpenWRT 官网下载 ROM，推荐用 trunk 上的（目前是 dd），因为 bb 和 cc 都没有集成 kmod-mt76（当然你自己手动安装是可以的，opkg install kmod-mt76），下载链接：<a href="http://downloads.openwrt.org/snapshots/trunk/ramips/mt7620/openwrt-ramips-mt7620-y1-squashfs-sysupgrade.bin">http://downloads.openwrt.org/snapshots/trunk/ramips/mt7620/openwrt-ramips-mt7620-y1-squashfs-sysupgrade.bin</a>。目前刷完是 OpenWrt Designated Driver r47548，5G WiFi 没问题。</p><p>由于是 trunk 版，luci 可能要自己安装，请参考文章《<a href="/2014/06/26/umutech-openwrt-primer-7-install-luci/">跟 UMU 一起玩 OpenWRT（入门篇7）：安装 LUCI</a>》。</p><p>存在几个问题：</p><ol><li><p>刷完，三个网口顺序和原版是颠倒的。</p></li><li><p>5G WiFi 设置参数后似乎没有办法立刻生效，UMU 都是 reboot 一下解决。</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;newifi mini，即 lenovo Y1，属于不开放 SSH 的类型，越用越不爽，还是刷了吧。&lt;/p&gt;
&lt;p&gt;先到 &lt;a href=&quot;http://www.xcloud.cc/download.shtml&quot;&gt;http://www.xcloud.cc/download.</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="embedded" scheme="https://blog.umu618.com/tags/embedded/"/>
    
    <category term="linux" scheme="https://blog.umu618.com/tags/linux/"/>
    
    <category term="openwrt" scheme="https://blog.umu618.com/tags/openwrt/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·住酒店</title>
    <link href="https://blog.umu618.com/2015/12/10/reconstructionism-poet-in-the-hotel/"/>
    <id>https://blog.umu618.com/2015/12/10/reconstructionism-poet-in-the-hotel/</id>
    <published>2015-12-10T02:36:17.000Z</published>
    <updated>2023-08-05T13:01:26.928Z</updated>
    
    <content type="html"><![CDATA[<p>《诗盗·住酒店》：酒店也玩互联网，补贴营销就是强。微信附近都是禽，关起灯来听叫床。</p><h2 id="注解">注解</h2><p>互联网+打嘴炮</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《诗盗·住酒店》：酒店也玩互联网，补贴营销就是强。微信附近都是禽，关起灯来听叫床。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;互联网+打嘴炮&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="打嘴炮" scheme="https://blog.umu618.com/tags/%E6%89%93%E5%98%B4%E7%82%AE/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·天下澡雪</title>
    <link href="https://blog.umu618.com/2015/12/02/reconstructionism-poet-clean-the-mind/"/>
    <id>https://blog.umu618.com/2015/12/02/reconstructionism-poet-clean-the-mind/</id>
    <published>2015-12-02T10:27:23.000Z</published>
    <updated>2023-08-05T13:01:26.928Z</updated>
    
    <content type="html"><![CDATA[<p>《诗盗·天下澡雪》：疏瀹五藏，澡雪精神。道洲德国，天下太平。</p><h2 id="注解">注解</h2><p>道德在这里是使能动词。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《诗盗·天下澡雪》：疏瀹五藏，澡雪精神。道洲德国，天下太平。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;道德在这里是使能动词。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="圣小开" scheme="https://blog.umu618.com/tags/%E5%9C%A3%E5%B0%8F%E5%BC%80/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·千股跌停</title>
    <link href="https://blog.umu618.com/2015/11/27/reconstructionism-poet-stock-market-crash/"/>
    <id>https://blog.umu618.com/2015/11/27/reconstructionism-poet-stock-market-crash/</id>
    <published>2015-11-27T02:28:36.000Z</published>
    <updated>2023-08-05T13:01:26.928Z</updated>
    
    <content type="html"><![CDATA[<p>《诗盗·千股跌停》：空仓欲入竟逢涨，高位持有跌成翔。听信内幕再捐钱，终于亏掉一栋房。</p><h2 id="注解">注解</h2><p>每月一次股灾，某些股渣的写照，赫赫。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《诗盗·千股跌停》：空仓欲入竟逢涨，高位持有跌成翔。听信内幕再捐钱，终于亏掉一栋房。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;每月一次股灾，某些股渣的写照，赫赫。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="金融" scheme="https://blog.umu618.com/tags/%E9%87%91%E8%9E%8D/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·别墅</title>
    <link href="https://blog.umu618.com/2015/11/15/reconstructionism-poet-villa/"/>
    <id>https://blog.umu618.com/2015/11/15/reconstructionism-poet-villa/</id>
    <published>2015-11-15T10:38:23.000Z</published>
    <updated>2024-04-13T14:38:27.526Z</updated>
    
    <content type="html"><![CDATA[<p>《诗盗·别墅》：三栋别墅已入户，还有三栋在加(wei2)固(jian4)。邻居都是高富帅，吓得穷稣不敢住。</p><h2 id="注解">注解</h2><p>参观某高档小区有感。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《诗盗·别墅》：三栋别墅已入户，还有三栋在加(wei2)固(jian4)。邻居都是高富帅，吓得穷稣不敢住。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;参观某高档小区有感。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="鹏风" scheme="https://blog.umu618.com/tags/%E9%B9%8F%E9%A3%8E/"/>
    
  </entry>
  
  <entry>
    <title>学习 go 语言【5】HTTP Echo Server</title>
    <link href="https://blog.umu618.com/2015/10/16/umutech-learn-go-5-http-echo-server/"/>
    <id>https://blog.umu618.com/2015/10/16/umutech-learn-go-5-http-echo-server/</id>
    <published>2015-10-16T07:19:11.000Z</published>
    <updated>2023-08-05T13:01:26.928Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求">需求</h2><p>做加速时经常需要用到 HTTP Echo Server 来测试加速有没有成功，如果成功了，是显示请求来自加速代理服务器。原来用 node.js 写了一个，代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">var http &#x3D; require(&#39;http&#39;);</span><br><span class="line">http.createServer(</span><br><span class="line">    function (req, res) &#123;</span><br><span class="line">        res.writeHead(200, &#123;&#39;Content-Type&#39;: &#39;text&#x2F;plain&#39;&#125;);</span><br><span class="line">        var ip &#x3D; req.headers[&#39;x-forwarded-for&#39;] || req.connection.remoteAddress || req.socket.remoteAddress || req.connection.socket.remoteAddress;</span><br><span class="line">        var ua &#x3D; req.headers[&#39;user-agent&#39;];</span><br><span class="line">        res.end(ip + &#39;\n&#39; + ua);</span><br><span class="line">    &#125;</span><br><span class="line">).listen(80);</span><br><span class="line">console.log(&#39;Server is running...&#39;);</span><br></pre></td></tr></table></figure><p>既然在学 Go 语言，就用它写个新的吧！功能要更强一些。</p><h2 id="代码">代码</h2><p>稍微改进一下：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;net/http&quot;</span></span><br><span class="line"><span class="string">&quot;os&quot;</span></span><br><span class="line"><span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> addr <span class="keyword">string</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(os.Args) &gt; <span class="number">1</span> &#123;</span><br><span class="line">addr = <span class="string">&quot;:&quot;</span> + os.Args[<span class="number">1</span>]</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">addr = <span class="string">&quot;:80&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">server := http.Server&#123;</span><br><span class="line">Addr:        addr,</span><br><span class="line">Handler:     &amp;MyHandler&#123;&#125;,</span><br><span class="line">ReadTimeout: <span class="number">5</span> * time.Second,</span><br><span class="line">&#125;</span><br><span class="line">err := server.ListenAndServe()</span><br><span class="line">fmt.Println(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> MyHandler <span class="keyword">struct</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(*MyHandler)</span> <span class="title">ServeHTTP</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">info := r.RemoteAddr + <span class="string">&quot; @ &quot;</span> + time.Now().String() + <span class="string">&quot;\r\n&quot;</span> +</span><br><span class="line">r.Method + <span class="string">&quot; &quot;</span> + r.RequestURI + <span class="string">&quot;\r\n&quot;</span> +</span><br><span class="line"><span class="string">&quot;Host: &quot;</span> + r.Host + <span class="string">&quot;\r\n&quot;</span> +</span><br><span class="line"><span class="string">&quot;UserAgent: &quot;</span> + r.UserAgent() + <span class="string">&quot;\r\n&quot;</span></span><br><span class="line">w.Write([]<span class="keyword">byte</span>(info))</span><br><span class="line">fmt.Println(info)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;需求&quot;&gt;需求&lt;/h2&gt;
&lt;p&gt;做加速时经常需要用到 HTTP Echo Server 来测试加速有没有成功，如果成功了，是显示请求来自加速代理服务器。原来用 node.js 写了一个，代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="go" scheme="https://blog.umu618.com/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·欲阁子</title>
    <link href="https://blog.umu618.com/2015/10/16/reconstructionism-poet-dream-of-double-finesse/"/>
    <id>https://blog.umu618.com/2015/10/16/reconstructionism-poet-dream-of-double-finesse/</id>
    <published>2015-10-16T03:22:55.000Z</published>
    <updated>2023-08-05T13:01:26.928Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·欲阁子》：西门百翔约双飞，闭紧水多鲍鱼肥。白被子，红胭脂，半夜吓醒不须归。</p><h2 id="注解">注解</h2><p>改编自唐代诗人张志和的《渔歌子》。</p><blockquote><p>西塞山前白鹭飞，<br>桃花流水鳜鱼肥。<br>青箬笠，绿蓑衣，<br>斜风细雨不须归。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·欲阁子》：西门百翔约双飞，闭紧水多鲍鱼肥。白被子，红胭脂，半夜吓醒不须归。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;改编自唐代诗人张志和的《渔歌子》。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;西塞山前白鹭飞，&lt;br&gt;
桃花流水鳜鱼肥。&lt;br&gt;
青箬</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="打嘴炮" scheme="https://blog.umu618.com/tags/%E6%89%93%E5%98%B4%E7%82%AE/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·踢西林壁</title>
    <link href="https://blog.umu618.com/2015/10/13/reconstructionism-poet-kick-wall/"/>
    <id>https://blog.umu618.com/2015/10/13/reconstructionism-poet-kick-wall/</id>
    <published>2015-10-13T03:52:57.000Z</published>
    <updated>2023-08-05T13:01:26.928Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·踢西林壁》：八哥成堆栈成空，设计实现各不同。不识挨踢真面目，只缘身在此坑中。</p><h2 id="注解">注解</h2><p>改编自宋代诗人苏轼的《题西林壁》。</p><blockquote><p>横看成岭侧成峰，<br>远近高低各不同。<br>不识庐山真面目，<br>只缘身在此山中。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·踢西林壁》：八哥成堆栈成空，设计实现各不同。不识挨踢真面目，只缘身在此坑中。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;改编自宋代诗人苏轼的《题西林壁》。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;横看成岭侧成峰，&lt;br&gt;
远近高低各不同。&lt;br&gt;
不</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>学习 go 语言【4】简单的 AWS S3 客户端</title>
    <link href="https://blog.umu618.com/2015/09/24/umutech-learn-go-4-aws-s3-client/"/>
    <id>https://blog.umu618.com/2015/09/24/umutech-learn-go-4-aws-s3-client/</id>
    <published>2015-09-24T09:24:28.000Z</published>
    <updated>2023-10-29T12:24:56.937Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求">需求</h2><p>公司搞了一套兼容 Amazon S3 的云存储系统，用 C++ 写客户端很蛋疼，UMU 决定还是用 go 写一个。</p><h2 id="开发过程">开发过程</h2><h3 id="1-找库">1. 找库</h3><p>先找一个靠谱的开源项目，运行以下命令安装：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go get github.com/mitchellh/goamz</span><br></pre></td></tr></table></figure><p>它内部还用到 <code>github.com/vaughan0/go-ini</code>。</p><h3 id="2-通过示例代码学习">2. 通过示例代码学习</h3><p>看一下库带的例子：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">  <span class="string">&quot;github.com/mitchellh/goamz/aws&quot;</span></span><br><span class="line">  <span class="string">&quot;github.com/mitchellh/goamz/s3&quot;</span></span><br><span class="line">  <span class="string">&quot;log&quot;</span></span><br><span class="line">  <span class="string">&quot;fmt&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  auth, err := aws.EnvAuth()</span><br><span class="line">  <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    log.Fatal(err)</span><br><span class="line">  &#125;</span><br><span class="line">  client := s3.New(auth, aws.USEast)</span><br><span class="line">  resp, err := client.ListBuckets()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    log.Fatal(err)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  log.Print(fmt.Sprintf(<span class="string">&quot;%T %+v&quot;</span>, resp.Buckets[<span class="number">0</span>], resp.Buckets[<span class="number">0</span>]))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-实现">3. 实现</h3><p>要改的地方不多：</p><ul><li><p>认证方式可以改为 aws.GetAuth，但这样容易暴露 AccessKey、SecretKey，所以 UMU 下面贴出的代码还是使用 aws.EnvAuth()。</p></li><li><p>aws.USEast 改为我们自己的。</p></li><li><p>UMU 尝试添加列出所有文件的功能。</p></li></ul><h2 id="代码">代码</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/mitchellh/goamz/aws&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/mitchellh/goamz/s3&quot;</span></span><br><span class="line"><span class="string">&quot;log&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">auth, err := aws.EnvAuth()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> cnc = aws.Region&#123;</span><br><span class="line"><span class="string">&quot;cnc&quot;</span>, <span class="comment">// Name</span></span><br><span class="line"><span class="string">&quot;&quot;</span>,    <span class="comment">// EC2Endpoint</span></span><br><span class="line"><span class="string">&quot;http://s3.bj.xs3cnc.com&quot;</span>, <span class="comment">// S3Endpoint</span></span><br><span class="line"><span class="string">&quot;&quot;</span>,    <span class="comment">// S3BucketEndpoint</span></span><br><span class="line"><span class="literal">false</span>, <span class="comment">// S3LocationConstraint</span></span><br><span class="line"><span class="literal">false</span>, <span class="comment">// S3LowercaseBucket</span></span><br><span class="line"><span class="string">&quot;&quot;</span>,    <span class="comment">// SDBEndpoint</span></span><br><span class="line"><span class="string">&quot;&quot;</span>,    <span class="comment">// SNSEndpoint</span></span><br><span class="line"><span class="string">&quot;&quot;</span>,    <span class="comment">// SQSEndpoint</span></span><br><span class="line"><span class="string">&quot;&quot;</span>,    <span class="comment">// IAMEndpoint</span></span><br><span class="line"><span class="string">&quot;&quot;</span>,    <span class="comment">// ELBEndpoint</span></span><br><span class="line"><span class="string">&quot;&quot;</span>,    <span class="comment">// AutoScalingEndpoint</span></span><br><span class="line"><span class="string">&quot;&quot;</span>,    <span class="comment">// RdsEndpoint</span></span><br><span class="line"><span class="string">&quot;&quot;</span>,    <span class="comment">// Route53Endpoint</span></span><br><span class="line">&#125;</span><br><span class="line">client := s3.New(auth, cnc)</span><br><span class="line">resp, err := client.ListBuckets()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, b := <span class="keyword">range</span> resp.Buckets &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;Bucket Name: %s\n&quot;</span>, b.Name)</span><br><span class="line">bc, err := b.GetBucketContents()</span><br><span class="line"><span class="keyword">if</span> err == <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">for</span> _, key := <span class="keyword">range</span> *bc &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;\t%s, %s, %d, %s, %s, %s\n&quot;</span>,</span><br><span class="line">key.Key, key.LastModified, key.Size, key.StorageClass,</span><br><span class="line">key.Owner.ID, key.Owner.DisplayName)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果如下：</p><p><img src="/images/2015/20150924-1.png" alt="xs3cnc"></p><p>参照对象：</p><p><img src="/images/2015/20150924-2.jpg" alt="S3 Browser"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;需求&quot;&gt;需求&lt;/h2&gt;
&lt;p&gt;公司搞了一套兼容 Amazon S3 的云存储系统，用 C++ 写客户端很蛋疼，UMU 决定还是用 go 写一个。&lt;/p&gt;
&lt;h2 id=&quot;开发过程&quot;&gt;开发过程&lt;/h2&gt;
&lt;h3 id=&quot;1-找库&quot;&gt;1. 找库&lt;/h3&gt;
&lt;p&gt;先找一</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="go" scheme="https://blog.umu618.com/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>学习 go 语言【3】TCP Echo Server</title>
    <link href="https://blog.umu618.com/2015/09/22/umutech-learn-go-3-tcp-echo-server/"/>
    <id>https://blog.umu618.com/2015/09/22/umutech-learn-go-3-tcp-echo-server/</id>
    <published>2015-09-22T07:41:56.000Z</published>
    <updated>2023-08-05T13:01:26.928Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题">问题</h2><p>测试需要，以前用 C + libevent 写了一个 TCP Echo Server，返回服务器时间、客户端地址信息和客户端发送的原内容。为了水一篇，现在改为 go 语言实现。</p><h2 id="参考">参考</h2><p>主要使用 go 语言自带的 net 库，学习资料：<a href="https://golang.org/pkg/net/">https://golang.org/pkg/net/</a></p><h2 id="代码">代码</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;io&quot;</span></span><br><span class="line"><span class="string">&quot;net&quot;</span></span><br><span class="line"><span class="string">&quot;os&quot;</span></span><br><span class="line"><span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> BUFFER_SIZE = <span class="number">1024</span> * <span class="number">4</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> buffer = <span class="built_in">make</span>([]<span class="keyword">byte</span>, BUFFER_SIZE)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">handleConnect</span><span class="params">(tcpConn *net.TCPConn)</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> tcpConn == <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">n, err := tcpConn.Read(buffer)</span><br><span class="line"><span class="keyword">if</span> err == io.EOF &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;The RemoteAddr: %s is closed!\n&quot;</span>, tcpConn.RemoteAddr().String())</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">handleError(err)</span><br><span class="line"><span class="keyword">if</span> n &gt; <span class="number">0</span> &#123;</span><br><span class="line"><span class="comment">//fmt.Printf(&quot;Read: %s&quot;, string(buffer[:n]))</span></span><br><span class="line">str := tcpConn.RemoteAddr().String() + <span class="string">&quot; @ &quot;</span> +</span><br><span class="line">time.Now().Format(<span class="string">&quot;2006-01-02 15:04:05 Z07:00&quot;</span>) + <span class="string">&quot;\r\n&quot;</span> +</span><br><span class="line"><span class="keyword">string</span>(buffer[:n])</span><br><span class="line">tcpConn.Write([]<span class="keyword">byte</span>(str))</span><br><span class="line">fmt.Printf(<span class="string">&quot;Echo: %s&quot;</span>, str)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 错误处理</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">handleError</span><span class="params">(err error)</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> err == <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line"><span class="comment">//fmt.Printf(&quot;error: %s\n&quot;, err.Error())</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(os.Args) &lt; <span class="number">2</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;Usage:&quot;</span>, os.Args[<span class="number">0</span>], <span class="string">&quot;&lt;port&gt;&quot;</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">port := os.Args[<span class="number">1</span>]</span><br><span class="line">tcpAddr, err := net.ResolveTCPAddr(<span class="string">&quot;tcp4&quot;</span>, <span class="string">&quot;0.0.0.0:&quot;</span>+port)</span><br><span class="line">handleError(err)</span><br><span class="line">tcpListener, err := net.ListenTCP(<span class="string">&quot;tcp4&quot;</span>, tcpAddr)</span><br><span class="line">handleError(err)</span><br><span class="line"><span class="keyword">defer</span> tcpListener.Close()</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">&quot;Listening on&quot;</span>, tcpAddr, <span class="string">&quot;...&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">tcpConn, err := tcpListener.AcceptTCP()</span><br><span class="line">fmt.Printf(<span class="string">&quot;The client: %s has connected!\n&quot;</span>, tcpConn.RemoteAddr().String())</span><br><span class="line">handleError(err)</span><br><span class="line"><span class="keyword">defer</span> tcpConn.Close()</span><br><span class="line"><span class="keyword">go</span> handleConnect(tcpConn)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;问题&quot;&gt;问题&lt;/h2&gt;
&lt;p&gt;测试需要，以前用 C + libevent 写了一个 TCP Echo Server，返回服务器时间、客户端地址信息和客户端发送的原内容。为了水一篇，现在改为 go 语言实现。&lt;/p&gt;
&lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt;
&lt;p&gt;主</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="go" scheme="https://blog.umu618.com/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·霹雳劫之猴市录</title>
    <link href="https://blog.umu618.com/2015/09/18/reconstructionism-poet-monkey-stock-market/"/>
    <id>https://blog.umu618.com/2015/09/18/reconstructionism-poet-monkey-stock-market/</id>
    <published>2015-09-18T02:48:57.000Z</published>
    <updated>2023-08-05T13:01:26.928Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·霹雳劫之猴市录》：一睁股市观耍猴，老鸟先逃洗新手。证奸惯日小散民，庄家当空草败寇。</p><h2 id="注解">注解</h2><p>改编自霹雳角色道境玄宗六弦之首苍的诗号。</p><blockquote><p>倚筝天波观浩渺，<br>苍音掀涛洗星辰。<br>白虹贯日荡魔寇，<br>明玥当空照古今。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·霹雳劫之猴市录》：一睁股市观耍猴，老鸟先逃洗新手。证奸惯日小散民，庄家当空草败寇。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;改编自霹雳角色道境玄宗六弦之首苍的诗号。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;倚筝天波观浩渺，&lt;br&gt;
苍音掀涛洗星辰。</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·天朝怪病</title>
    <link href="https://blog.umu618.com/2015/09/12/reconstructionism-poet-disease/"/>
    <id>https://blog.umu618.com/2015/09/12/reconstructionism-poet-disease/</id>
    <published>2015-09-12T06:13:00.000Z</published>
    <updated>2023-08-05T13:01:26.928Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·天朝怪病》：仓颉造字天地惊，砖家造词设精病。闹惭绝逼非主流，撒币岂可逆天行。</p><h2 id="注解">注解</h2><p>急性短暂性精神障碍</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·天朝怪病》：仓颉造字天地惊，砖家造词设精病。闹惭绝逼非主流，撒币岂可逆天行。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;急性短暂性精神障碍&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·郭伶仃痒</title>
    <link href="https://blog.umu618.com/2015/09/07/reconstructionism-poet-lust/"/>
    <id>https://blog.umu618.com/2015/09/07/reconstructionism-poet-lust/</id>
    <published>2015-09-07T04:58:52.000Z</published>
    <updated>2023-08-05T13:01:26.928Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·郭伶仃痒》：辛苦曰跑取一精，干哥裸聊四周腥。人生自古谁无黑，刘取丹芯找汉倾。</p><h2 id="注解">注解</h2><p>改编自宋朝诗人文天祥的《过零丁洋》：</p><blockquote><p>辛苦遭逢起一经，干戈寥落四周星。<br>山河破碎风飘絮，身世浮沉雨打萍。<br>惶恐滩头说惶恐，零丁洋里叹零丁。<br>人生自古谁无死，留取丹心照汗青。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·郭伶仃痒》：辛苦曰跑取一精，干哥裸聊四周腥。人生自古谁无黑，刘取丹芯找汉倾。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;改编自宋朝诗人文天祥的《过零丁洋》：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;辛苦遭逢起一经，干戈寥落四周星。&lt;br&gt;
山河破碎风</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="打嘴炮" scheme="https://blog.umu618.com/tags/%E6%89%93%E5%98%B4%E7%82%AE/"/>
    
  </entry>
  
  <entry>
    <title>回家</title>
    <link href="https://blog.umu618.com/2015/09/03/dream-on-my-way-home/"/>
    <id>https://blog.umu618.com/2015/09/03/dream-on-my-way-home/</id>
    <published>2015-09-03T02:00:00.000Z</published>
    <updated>2023-08-05T13:01:26.918Z</updated>
    
    <content type="html"><![CDATA[<p>稣在山兜村要回天堑村的路上，刚刚风雨大作，两村之间的河水涨了很多，很多要回去的人都在走吊桥，这种吊桥很简陋，基本就两根绳子，简直无法走，只能是手脚并用，慢慢爬过去。</p><p>中途就掉下去不少人，后来稣就走到了中间的一个房子门口，一个白衣美女走了出来，一看居然是稣的盆友，就是浑身丰满了许多，她问稣干嘛来参加这个活动，稣一时愕然，稣只是想回家，哪有参加什么活动。她说，这个活动还有两关，她就是最终奖品之一，活动是为了竞选男优……</p><p>卧槽，原来如此，难怪那么多人来爬吊桥，稣吓尿了。她还说，可以先让稣插，不过不能让主办方发现了，于是稣就插了……咳咳……队，先过去倒数第二关，从房子门口跳到下面的沙滩去，大约 4、5 米高，稣觉得一点都不难就跳了，果然没事，但其他人有的却挂了，原来沙子里是有钢条的，不小心踩到，脚就挂了。</p><p>稣想太危险了，最后一关肯定更危险，算了，赶快退出保命。蛋似水路已经走了一半了，再回去也有难度，好惨，肿么办？</p><p>难不倒稣的，催动强大的意志力，直接唤醒大脑、小脑以及脑干！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;稣在山兜村要回天堑村的路上，刚刚风雨大作，两村之间的河水涨了很多，很多要回去的人都在走吊桥，这种吊桥很简陋，基本就两根绳子，简直无法走，只能是手脚并用，慢慢爬过去。&lt;/p&gt;
&lt;p&gt;中途就掉下去不少人，后来稣就走到了中间的一个房子门口，一个白衣美女走了出来，一看居然是稣的盆友</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="怪悟" scheme="https://blog.umu618.com/tags/%E6%80%AA%E6%82%9F/"/>
    
  </entry>
  
  <entry>
    <title>逃脱</title>
    <link href="https://blog.umu618.com/2015/09/02/dream-escape/"/>
    <id>https://blog.umu618.com/2015/09/02/dream-escape/</id>
    <published>2015-09-02T01:00:00.000Z</published>
    <updated>2023-08-05T13:01:26.918Z</updated>
    
    <content type="html"><![CDATA[<p>有一天稣回家的路上突发奇想，为什么每天都是用脚走路？干脆用手走回家吧反正也不远。于是就开始用手走，蛋似走到一半的时候没体了，就趴着不动休息。</p><p>这时候，神奇的事情发生了，居然来了几个政府机构的人，说稣的行为表现了一种可贵的精神，要表彰，请稣吃饭。</p><p>饭局上好多有钱人或者有权人的样子，坐稣右边的一个中年帅哥说自己是某公司老板，语气有点屌，听说稣只是用手走了 1800 步就被请来吃饭，有点看不起稣的样子。蛋似稣还是和他聊了聊，和他说老板稣认识不少，举了 6、7 个，可能都是科技界的，他都没听过……</p><p>他表示自己很忙，要走了。这时候，意外发生了，当场有一个胖子，突然掏出枪来，控制了局面，而且外面都是他的人，整个酒店都被包围起来了。刚才几个很屌的人都吓尿了。只有稣很淡定，穷逼一个，你抓稣也没神马卵用啊！</p><p>然后，所有人都被关到一个城中村里的一个别墅，稣试着逃跑，但这个村很像一个迷宫，怎么转都出不去，而且看似是出口的地方都有人把守。不过这个别墅本身没什么人管，感觉胖子是想和我们玩什么游戏……</p><p>其他的大人物们，个个都不敢离开别墅，稣回来和他们说明情况，其实是有可能逃脱的，但他们都不敢想，原因竟然是稣离开的时候，里面有一个吓坏的想逃，结果被打死，拖走了！</p><p>这时候胖子来了，说自己是个魔术师，只是想找灵感。稣想，坑爹啊，找灵感你玩绑架！？然后就告诉他，稣有个魔术，你绝对会说好。</p><p>一台大型可口可乐饮料机牛逼闪闪地开过来，稣一声令下，可乐和方糖大量混合，炸了出来，把那个胖子喷成落汤鸡，稣立刻过去把他的枪抢了。其他人拼命鼓掌……</p><p>声控智能家居果然牛逼！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;有一天稣回家的路上突发奇想，为什么每天都是用脚走路？干脆用手走回家吧反正也不远。于是就开始用手走，蛋似走到一半的时候没体了，就趴着不动休息。&lt;/p&gt;
&lt;p&gt;这时候，神奇的事情发生了，居然来了几个政府机构的人，说稣的行为表现了一种可贵的精神，要表彰，请稣吃饭。&lt;/p&gt;
&lt;p&gt;</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="怪悟" scheme="https://blog.umu618.com/tags/%E6%80%AA%E6%82%9F/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·割肉之鸡鸡都是肉</title>
    <link href="https://blog.umu618.com/2015/08/26/reconstructionism-poet-flesh/"/>
    <id>https://blog.umu618.com/2015/08/26/reconstructionism-poet-flesh/</id>
    <published>2015-08-26T06:13:12.000Z</published>
    <updated>2023-08-05T13:01:26.918Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#~割肉之鸡鸡都是肉》：有屌微软尚可交，无蛋联想只能尿。近来股民身心萎，一见绿草双眼跳。</p><h2 id="注解">注解</h2><p>奔腾，日立，微软，松下，联想……赫赫，无蛋的太监自然只能联想！<br>本诗创作灵感来自一则新闻：男子被诊断阴茎癌 切除后发现系误诊<br>再强调一次：男子被误诊阴茎癌下体遭切除 切后送检是囊肿<br>重要的话说三次：误诊导致鸡鸡被切了！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#~割肉之鸡鸡都是肉》：有屌微软尚可交，无蛋联想只能尿。近来股民身心萎，一见绿草双眼跳。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;奔腾，日立，微软，松下，联想……赫赫，无蛋的太监自然只能联想！&lt;br&gt;
本诗创作灵感来自一则新闻：男子被诊断阴茎癌 切除后</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="打嘴炮" scheme="https://blog.umu618.com/tags/%E6%89%93%E5%98%B4%E7%82%AE/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="金融" scheme="https://blog.umu618.com/tags/%E9%87%91%E8%9E%8D/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·爆菊哇</title>
    <link href="https://blog.umu618.com/2015/08/26/reconstructionism-poet-diarrhea/"/>
    <id>https://blog.umu618.com/2015/08/26/reconstructionism-poet-diarrhea/</id>
    <published>2015-08-26T02:07:00.000Z</published>
    <updated>2023-08-05T13:01:26.918Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·爆菊哇》：天朝饮食顶呱呱，小命虽保伤菊花。生化武器肉来挡，铁打胃肠从小抓。</p><h2 id="注解">注解</h2><p>天朝特色……化工材料加止泻药，都不怕被 JC 抓？</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·爆菊哇》：天朝饮食顶呱呱，小命虽保伤菊花。生化武器肉来挡，铁打胃肠从小抓。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;天朝特色……化工材料加止泻药，都不怕被 JC 抓？&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
  </entry>
  
  <entry>
    <title>学习 go 语言【2】升级 1.5 + 优化</title>
    <link href="https://blog.umu618.com/2015/08/21/umutech-learn-go-2-upgrade/"/>
    <id>https://blog.umu618.com/2015/08/21/umutech-learn-go-2-upgrade/</id>
    <published>2015-08-21T11:18:39.000Z</published>
    <updated>2023-08-05T13:01:26.918Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题">问题</h2><p>安装 1.5 时，直接覆盖 1.4.2，结果不能用了，报错：</p><blockquote><p>imports runtime: C source files not allowed when not using cgo or SWIG</p></blockquote><h2 id="解决">解决</h2><p>删掉 go 1.5……然后修复安装一遍。</p><h2 id="优化前例代码">优化前例代码</h2><ol><li><p>加了计时功能，纯属蛋疼。</p></li><li><p>学到一个不占空间的 struct{}，map[string]bool 改为 map[string]struct{}。</p></li></ol><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// UMU @ 2015-08-17 11:30</span></span><br><span class="line"><span class="comment">// Last update: 2015-08-21 17:40</span></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;bufio&quot;</span></span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;os&quot;</span></span><br><span class="line"><span class="string">&quot;path&quot;</span></span><br><span class="line"><span class="string">&quot;path/filepath&quot;</span></span><br><span class="line"><span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">isSourceFile</span><span class="params">(ext <span class="keyword">string</span>)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> kSourceFileExts = []<span class="keyword">string</span>&#123;<span class="string">&quot;.c&quot;</span>, <span class="string">&quot;.cc&quot;</span>, <span class="string">&quot;.cpp&quot;</span>, <span class="string">&quot;.h&quot;</span>, <span class="string">&quot;.hpp&quot;</span>,</span><br><span class="line"><span class="string">&quot;.go&quot;</span>,</span><br><span class="line"><span class="string">&quot;.java&quot;</span>&#125;</span><br><span class="line"><span class="keyword">for</span> _, r := <span class="keyword">range</span> kSourceFileExts &#123;</span><br><span class="line"><span class="keyword">if</span> r == ext &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(os.Args) &lt; <span class="number">2</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;Usage: &quot;</span>, os.Args[<span class="number">0</span>], <span class="string">&quot;[file or folder]...&quot;</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">start := time.Now()</span><br><span class="line">files := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">struct</span>&#123;&#125;)</span><br><span class="line">lines := <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, r := <span class="keyword">range</span> os.Args &#123;</span><br><span class="line">fi, err := os.Stat(r)</span><br><span class="line"><span class="keyword">if</span> err == <span class="literal">nil</span> || os.IsExist(err) &#123;</span><br><span class="line"><span class="keyword">if</span> fi.IsDir() &#123;</span><br><span class="line">AddDirectory(r, files)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">AddFile(r, files)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> file, _ := <span class="keyword">range</span> files &#123;</span><br><span class="line">l := CountLine(file)</span><br><span class="line">lines += l</span><br><span class="line">fmt.Println(file, l)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Printf(<span class="string">&quot;Total lines: %d, cost %fs\n&quot;</span>, lines, timeElapsed(start))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">AddDirectory</span><span class="params">(name <span class="keyword">string</span>, files <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">struct</span>&#123;&#125;)</span></span> &#123;</span><br><span class="line">filepath.Walk(name, <span class="function"><span class="keyword">func</span><span class="params">(path <span class="keyword">string</span>, fi os.FileInfo, err error)</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> <span class="literal">nil</span> == fi &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> fi.IsDir() &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line">AddFile(path, files)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">AddFile</span><span class="params">(name <span class="keyword">string</span>, files <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">struct</span>&#123;&#125;)</span></span> &#123;</span><br><span class="line">ext := path.Ext(name)</span><br><span class="line"><span class="keyword">if</span> isSourceFile(ext) &#123;</span><br><span class="line">path, err := filepath.Abs(name)</span><br><span class="line"><span class="keyword">if</span> err == <span class="literal">nil</span> &#123;</span><br><span class="line">_, exists := files[path]</span><br><span class="line"><span class="keyword">if</span> exists &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;Duplicated&quot;</span>, path)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">files[path] = <span class="keyword">struct</span>&#123;&#125;&#123;&#125;</span><br><span class="line">fmt.Println(<span class="string">&quot;Add&quot;</span>, path)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">CountLine</span><span class="params">(path <span class="keyword">string</span>)</span> <span class="params">(num <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">f, err := os.Open(path)</span><br><span class="line"><span class="keyword">if</span> <span class="literal">nil</span> != err &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> f.Close()</span><br><span class="line"></span><br><span class="line">s := bufio.NewScanner(f)</span><br><span class="line"><span class="keyword">for</span> s.Scan() &#123;</span><br><span class="line">num += <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">timeElapsed</span><span class="params">(start time.Time)</span> <span class="title">float64</span></span> &#123;</span><br><span class="line">dis := time.Since(start).Seconds()</span><br><span class="line"><span class="keyword">return</span> dis</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;问题&quot;&gt;问题&lt;/h2&gt;
&lt;p&gt;安装 1.5 时，直接覆盖 1.4.2，结果不能用了，报错：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;imports runtime: C source files not allowed when not using cgo or </summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="go" scheme="https://blog.umu618.com/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·七夕纪实</title>
    <link href="https://blog.umu618.com/2015/08/20/reconstructionism-poet-double-seventh-festival/"/>
    <id>https://blog.umu618.com/2015/08/20/reconstructionism-poet-double-seventh-festival/</id>
    <published>2015-08-20T12:59:00.000Z</published>
    <updated>2023-08-05T13:01:26.918Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·七夕纪实》：七夕下班堵成翔，就近吃饭中大奖。防火长城比屌屌，科学上网被墙墙。</p><h2 id="注解">注解</h2><p>中大奖：隔壁桌点个鸽子吃出寄生虫……</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·七夕纪实》：七夕下班堵成翔，就近吃饭中大奖。防火长城比屌屌，科学上网被墙墙。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;中大奖：隔壁桌点个鸽子吃出寄生虫……&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>学习 go 语言【1】Hello code!</title>
    <link href="https://blog.umu618.com/2015/08/19/umutech-learn-go-1-hello-code/"/>
    <id>https://blog.umu618.com/2015/08/19/umutech-learn-go-1-hello-code/</id>
    <published>2015-08-19T08:44:00.000Z</published>
    <updated>2023-08-05T13:01:26.918Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求">需求</h2><p>go 即将发布的 1.5 版解决了 GC stop-the-world 问题，所以 UMU 打算以后用它来开发工具。</p><p>最近想统计代码行数，以前用 VBS 写的一时间居然找不到，直接用 go 写一个。</p><h2 id="心得">心得</h2><p>基本从零开始用了大约 4 小时完成，可见 go 对初学者相当友好。具体经验和心得：</p><ol><li><p>go 的 runtime 居然没有 set，只能用 map 代替了，一开始觉得不优雅，不过想来也差不多，不计较那么多了。</p></li><li><p>语法还确实挺简洁，第一次练手就感觉学这个语言，其实是在学它的规范，语言本身很容易。</p></li><li><p>defer 挺好用的，简洁、省心，比如这个核心函数：</p></li></ol><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">CountLine</span><span class="params">(path <span class="keyword">string</span>)</span> <span class="params">(num <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">f, err := os.Open(path)</span><br><span class="line"><span class="keyword">if</span> <span class="literal">nil</span> != err &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> f.Close()</span><br><span class="line"></span><br><span class="line">s := bufio.NewScanner(f)</span><br><span class="line"><span class="keyword">for</span> s.Scan() &#123;</span><br><span class="line">num += <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>LiteIDE X 还比较好用，写 import 保存时，会用 <code>gofmt</code> 自动按字母顺序排列库名，这样省得纠结顺序……</li></ol><h2 id="代码">代码</h2><p>刚刚接触，就说到这里，最后附代码。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// UMU @ 2015-08-17 11:30</span></span><br><span class="line"><span class="comment">// Last update: 2015-08-17 17:01</span></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;bufio&quot;</span></span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;os&quot;</span></span><br><span class="line"><span class="string">&quot;path&quot;</span></span><br><span class="line"><span class="string">&quot;path/filepath&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">isSourceFile</span><span class="params">(ext <span class="keyword">string</span>)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> kSourceFileExts = []<span class="keyword">string</span>&#123;<span class="string">&quot;.c&quot;</span>, <span class="string">&quot;.cc&quot;</span>, <span class="string">&quot;.cpp&quot;</span>, <span class="string">&quot;.h&quot;</span>, <span class="string">&quot;.hpp&quot;</span>,</span><br><span class="line"><span class="string">&quot;.go&quot;</span>,</span><br><span class="line"><span class="string">&quot;.java&quot;</span>&#125;</span><br><span class="line"><span class="keyword">for</span> _, r := <span class="keyword">range</span> kSourceFileExts &#123;</span><br><span class="line"><span class="keyword">if</span> r == ext &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(os.Args) &lt; <span class="number">2</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;Usage: &quot;</span>, os.Args[<span class="number">0</span>], <span class="string">&quot;[file or folder]...&quot;</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">files := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">bool</span>)</span><br><span class="line">lines := <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, r := <span class="keyword">range</span> os.Args &#123;</span><br><span class="line">fi, err := os.Stat(r)</span><br><span class="line"><span class="keyword">if</span> err == <span class="literal">nil</span> || os.IsExist(err) &#123;</span><br><span class="line"><span class="keyword">if</span> fi.IsDir() &#123;</span><br><span class="line">AddDirectory(r, files)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">AddFile(r, files)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> file, _ := <span class="keyword">range</span> files &#123;</span><br><span class="line">l := CountLine(file)</span><br><span class="line">lines += l</span><br><span class="line">fmt.Println(file, l)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(<span class="string">&quot;Total lines:&quot;</span>, lines)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">AddDirectory</span><span class="params">(name <span class="keyword">string</span>, files <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">bool</span>)</span></span> &#123;</span><br><span class="line">filepath.Walk(name, <span class="function"><span class="keyword">func</span><span class="params">(path <span class="keyword">string</span>, fi os.FileInfo, err error)</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> <span class="literal">nil</span> == fi &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> fi.IsDir() &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line">AddFile(path, files)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">AddFile</span><span class="params">(name <span class="keyword">string</span>, files <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">bool</span>)</span></span> &#123;</span><br><span class="line">ext := path.Ext(name)</span><br><span class="line"><span class="keyword">if</span> isSourceFile(ext) &#123;</span><br><span class="line">path, err := filepath.Abs(name)</span><br><span class="line"><span class="keyword">if</span> err == <span class="literal">nil</span> &#123;</span><br><span class="line">_, exists := files[path]</span><br><span class="line"><span class="keyword">if</span> exists &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;Duplicated&quot;</span>, path)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">files[path] = <span class="literal">true</span></span><br><span class="line">fmt.Println(<span class="string">&quot;Add&quot;</span>, path)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">CountLine</span><span class="params">(path <span class="keyword">string</span>)</span> <span class="params">(num <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">f, err := os.Open(path)</span><br><span class="line"><span class="keyword">if</span> <span class="literal">nil</span> != err &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> f.Close()</span><br><span class="line"></span><br><span class="line">s := bufio.NewScanner(f)</span><br><span class="line"><span class="keyword">for</span> s.Scan() &#123;</span><br><span class="line">num += <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;需求&quot;&gt;需求&lt;/h2&gt;
&lt;p&gt;go 即将发布的 1.5 版解决了 GC stop-the-world 问题，所以 UMU 打算以后用它来开发工具。&lt;/p&gt;
&lt;p&gt;最近想统计代码行数，以前用 VBS 写的一时间居然找不到，直接用 go 写一个。&lt;/p&gt;
&lt;h2 id</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="go" scheme="https://blog.umu618.com/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·被工资爆菊</title>
    <link href="https://blog.umu618.com/2015/07/21/reconstructionism-poet-low-salary/"/>
    <id>https://blog.umu618.com/2015/07/21/reconstructionism-poet-low-salary/</id>
    <published>2015-07-21T07:41:03.000Z</published>
    <updated>2023-08-05T13:01:26.918Z</updated>
    
    <content type="html"><![CDATA[<p>《诗盗·被工资爆菊》：挨踢市场变化巨，大波挖人不是虚。移动金融敛你财，分分秒秒爆我菊。</p><h2 id="注解">注解</h2><p>大波：double</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《诗盗·被工资爆菊》：挨踢市场变化巨，大波挖人不是虚。移动金融敛你财，分分秒秒爆我菊。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;大波：double&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
    <category term="金融" scheme="https://blog.umu618.com/tags/%E9%87%91%E8%9E%8D/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·接盘侠</title>
    <link href="https://blog.umu618.com/2015/07/02/reconstructionism-poet-the-buying-consortium/"/>
    <id>https://blog.umu618.com/2015/07/02/reconstructionism-poet-the-buying-consortium/</id>
    <published>2015-07-02T05:01:00.000Z</published>
    <updated>2023-08-05T13:01:26.918Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·接盘侠》：指数再破四千点，断崖之下无完钱。为国接盘侠之大，早早离场无风险。</p><h2 id="注解">注解</h2><p>股市有大风险……</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·接盘侠》：指数再破四千点，断崖之下无完钱。为国接盘侠之大，早早离场无风险。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;股市有大风险……&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="金融" scheme="https://blog.umu618.com/tags/%E9%87%91%E8%9E%8D/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·百世惊沦一夜输</title>
    <link href="https://blog.umu618.com/2015/07/02/reconstructionism-poet-one-night-lost/"/>
    <id>https://blog.umu618.com/2015/07/02/reconstructionism-poet-one-night-lost/</id>
    <published>2015-07-02T04:47:00.000Z</published>
    <updated>2023-08-05T13:01:26.918Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·百世惊沦一夜输》：连续跌停，无法平仓，笑尽股市。</p><h2 id="注解">注解</h2><p>改编自霹雳角色“百世经纶一页书”的出场诗。</p><blockquote><p>世事如棋，乾坤莫测，笑尽英雄。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·百世惊沦一夜输》：连续跌停，无法平仓，笑尽股市。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;改编自霹雳角色“百世经纶一页书”的出场诗。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;世事如棋，乾坤莫测，笑尽英雄。&lt;/p&gt;
&lt;/blockquote&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
    <category term="金融" scheme="https://blog.umu618.com/tags/%E9%87%91%E8%9E%8D/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·抄底流</title>
    <link href="https://blog.umu618.com/2015/06/30/reconstructionism-poet-bottom-fisher/"/>
    <id>https://blog.umu618.com/2015/06/30/reconstructionism-poet-bottom-fisher/</id>
    <published>2015-06-30T04:49:00.000Z</published>
    <updated>2023-08-05T13:01:26.918Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·抄底流》：笑平不笑仓，操盘不操心，一日三手抄底流。</p><h2 id="注解">注解</h2><p>改编自霹雳角色“不二做”的出场诗。</p><blockquote><p>杀人不放火，造桥不铺路，报恩报酬不二做。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·抄底流》：笑平不笑仓，操盘不操心，一日三手抄底流。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;改编自霹雳角色“不二做”的出场诗。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;杀人不放火，造桥不铺路，报恩报酬不二做。&lt;/p&gt;
&lt;/blockquote&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
    <category term="金融" scheme="https://blog.umu618.com/tags/%E9%87%91%E8%9E%8D/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·变</title>
    <link href="https://blog.umu618.com/2015/06/27/reconstructionism-poet-transition/"/>
    <id>https://blog.umu618.com/2015/06/27/reconstructionism-poet-transition/</id>
    <published>2015-06-26T17:13:04.000Z</published>
    <updated>2023-08-05T13:01:26.918Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·变》：盛衰分峰，古今皆同。唯变不变，人间沧桑。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·变》：盛衰分峰，古今皆同。唯变不变，人间沧桑。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="七鹰圣" scheme="https://blog.umu618.com/tags/%E4%B8%83%E9%B9%B0%E5%9C%A3/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·魅蓝骄</title>
    <link href="https://blog.umu618.com/2015/06/26/reconstructionism-poet-phone/"/>
    <id>https://blog.umu618.com/2015/06/26/reconstructionism-poet-phone/</id>
    <published>2015-06-26T02:03:11.000Z</published>
    <updated>2023-08-05T13:01:26.918Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·魅蓝骄》：小米发烧魅蓝骄，华为号称利润高。稣说翔卓都不买，手机还是苹果屌。</p><h2 id="注解">注解</h2><p>魅蓝骄：闽南语，no jb。<br>稣用 Lumia 830 + iPhone5C 双机流。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·魅蓝骄》：小米发烧魅蓝骄，华为号称利润高。稣说翔卓都不买，手机还是苹果屌。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;魅蓝骄：闽南语，no jb。&lt;br&gt;
稣用 Lumia 830 + iPhone5C 双机流。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="闽南语" scheme="https://blog.umu618.com/tags/%E9%97%BD%E5%8D%97%E8%AF%AD/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·暴跌三首</title>
    <link href="https://blog.umu618.com/2015/06/19/reconstructionism-poet-slump/"/>
    <id>https://blog.umu618.com/2015/06/19/reconstructionism-poet-slump/</id>
    <published>2015-06-19T08:39:58.000Z</published>
    <updated>2023-08-05T13:01:26.918Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·暴跌三首之一》：涨停跌停一水间，楼顶只隔数重板。春风又绿江南岸，工资何时照我还。</p><p>《#诗盗#·暴跌三首之二》：朝开微红绿云间，千万盈利一日还。股市跌声啼不住，楼下已堆尸成山。</p><p>《#诗盗#·暴跌三首之三》：别人笑我跌停板，我笑他人用杠杆。只见股民灯油枯，无言无语给跪舔。</p><h2 id="注解">注解</h2><p>炒股太危险，戒了戒了……就打打嘴炮。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·暴跌三首之一》：涨停跌停一水间，楼顶只隔数重板。春风又绿江南岸，工资何时照我还。&lt;/p&gt;
&lt;p&gt;《#诗盗#·暴跌三首之二》：朝开微红绿云间，千万盈利一日还。股市跌声啼不住，楼下已堆尸成山。&lt;/p&gt;
&lt;p&gt;《#诗盗#·暴跌三首之三》：别人笑我跌停板，我笑他人用杠杆</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="金融" scheme="https://blog.umu618.com/tags/%E9%87%91%E8%9E%8D/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·互联网加披碧玺</title>
    <link href="https://blog.umu618.com/2015/06/16/reconstructionism-poet-pbc/"/>
    <id>https://blog.umu618.com/2015/06/16/reconstructionism-poet-pbc/</id>
    <published>2015-06-16T13:26:02.000Z</published>
    <updated>2023-08-05T13:01:26.918Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·互联网加披碧玺》：陌陌遇见鸡，专车披碧玺。宠爱有偿约，老婆切鸡鸡。</p><h2 id="注解">注解</h2><p>披碧玺太危险，戒了戒了……就打打嘴炮。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·互联网加披碧玺》：陌陌遇见鸡，专车披碧玺。宠爱有偿约，老婆切鸡鸡。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;披碧玺太危险，戒了戒了……就打打嘴炮。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="打嘴炮" scheme="https://blog.umu618.com/tags/%E6%89%93%E5%98%B4%E7%82%AE/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·妖股</title>
    <link href="https://blog.umu618.com/2015/06/03/reconstructionism-poet-300051/"/>
    <id>https://blog.umu618.com/2015/06/03/reconstructionism-poet-300051/</id>
    <published>2015-06-03T14:38:02.000Z</published>
    <updated>2023-08-05T13:01:26.918Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·妖股》：三五互撸三十五，名副其实洗钱股。牛市尚能赌一赌，明年摔到三块五。</p><h2 id="注解">注解</h2><p>市盈率超过 2000 了……当年 9 块不到买过，现在尼玛都 4 倍了……</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·妖股》：三五互撸三十五，名副其实洗钱股。牛市尚能赌一赌，明年摔到三块五。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;市盈率超过 2000 了……当年 9 块不到买过，现在尼玛都 4 倍了……&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="金融" scheme="https://blog.umu618.com/tags/%E9%87%91%E8%9E%8D/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·涝塞后</title>
    <link href="https://blog.umu618.com/2015/06/01/reconstructionism-poet-rain/"/>
    <id>https://blog.umu618.com/2015/06/01/reconstructionism-poet-rain/</id>
    <published>2015-06-01T08:07:00.000Z</published>
    <updated>2023-08-05T13:01:26.918Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·涝塞后》：出日无半波，鬼日给落后。大行浸巧奇，通通笼生菇。</p><h2 id="注解">注解</h2><p>涝塞：拉稀，拉肚子，稀翔<br>后：雨<br>出日：晴天<br>无半波：没半晌（没半天）<br>鬼日给落后：整天都下雨<br>大行浸巧奇：所有的东西都湿湿的<br>通通笼生菇：全都发霉了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·涝塞后》：出日无半波，鬼日给落后。大行浸巧奇，通通笼生菇。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;涝塞：拉稀，拉肚子，稀翔&lt;br&gt;
后：雨&lt;br&gt;
出日：晴天&lt;br&gt;
无半波：没半晌（没半天）&lt;br&gt;
鬼日给落后：整天都下雨&lt;br&gt;
大行浸巧奇：</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="闽南语" scheme="https://blog.umu618.com/tags/%E9%97%BD%E5%8D%97%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·可胜精兵</title>
    <link href="https://blog.umu618.com/2015/05/26/reconstructionism-poet-kesb/"/>
    <id>https://blog.umu618.com/2015/05/26/reconstructionism-poet-kesb/</id>
    <published>2015-05-26T03:28:22.000Z</published>
    <updated>2023-08-05T13:01:26.918Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·可胜精兵》：文可胜文青，武可胜精兵，百万操盘手，可惜狂生病。</p><h2 id="注解">注解</h2><p>壕秒可胜精兵……</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·可胜精兵》：文可胜文青，武可胜精兵，百万操盘手，可惜狂生病。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;壕秒可胜精兵……&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·浆含尽</title>
    <link href="https://blog.umu618.com/2015/05/26/reconstructionism-poet-jianghanjin/"/>
    <id>https://blog.umu618.com/2015/05/26/reconstructionism-poet-jianghanjin/</id>
    <published>2015-05-26T01:03:32.000Z</published>
    <updated>2023-08-05T13:01:26.918Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·浆含尽》：网秀前辈浆含尽，嘴贱话毒盖古今。壕无人性弃期权，炒股买房好股民。</p><h2 id="注解">注解</h2><p>这个基友很牛逼，炒股赚钱买车买房，赫赫……</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·浆含尽》：网秀前辈浆含尽，嘴贱话毒盖古今。壕无人性弃期权，炒股买房好股民。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;这个基友很牛逼，炒股赚钱买车买房，赫赫……&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·黑科技</title>
    <link href="https://blog.umu618.com/2015/05/04/reconstructionism-poet-crack-kj/"/>
    <id>https://blog.umu618.com/2015/05/04/reconstructionism-poet-crack-kj/</id>
    <published>2015-05-04T03:50:59.000Z</published>
    <updated>2023-08-05T13:01:26.918Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·黑科技》：自诩技术高，总是怕被抄。岂止已被抄，其实已被超/操。</p><h2 id="注解">注解</h2><p>这句话还是有一定道理的：员工工资最高时，企业成本最低！<br>赫赫……</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·黑科技》：自诩技术高，总是怕被抄。岂止已被抄，其实已被超/操。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;这句话还是有一定道理的：员工工资最高时，企业成本最低！&lt;br&gt;
赫赫……&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·在这里开车的还是屌丝</title>
    <link href="https://blog.umu618.com/2015/04/21/reconstructionism-poet-those-who-driving-cars-are-still-losers/"/>
    <id>https://blog.umu618.com/2015/04/21/reconstructionism-poet-those-who-driving-cars-are-still-losers/</id>
    <published>2015-04-20T16:38:44.000Z</published>
    <updated>2023-08-05T13:01:26.918Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·在这里开车的还是屌丝1》：入园挤爆出撞杆，人山尚无尾气散。回首各种排长队，依然屌丝情何堪？</p><p>《#诗盗#·在这里开车的还是屌丝2》：马路两边见缝塞，吃灰淋雨不曾改。烈日岂止添风味，敢问致癌不致癌？</p><h2 id="注解">注解</h2><p>怎么定义屌丝？当然是和圈子的人比。稣曾经骑着 ATX780 去小店吃饭，被小弟狂佩服，骑着三千块的车，蛋似和那些动不动上万的自行车比，简直弱爆了。在软件园这种高端的地方，大部分人究竟处于什么地位呢？答案很明显：屌丝……撸十二……<br>上下班高峰期，赌成翔的车山车海，管你奔驰宝马路虎卡宴。就算您躲开了高峰，以为就轻松了？地下停车位是按照公交车的载客量设计的，大家都开小轿车，当然严重不够用。每天都看到大量豪华新车暴晒、淋酸雨，十分蛋疼。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·在这里开车的还是屌丝1》：入园挤爆出撞杆，人山尚无尾气散。回首各种排长队，依然屌丝情何堪？&lt;/p&gt;
&lt;p&gt;《#诗盗#·在这里开车的还是屌丝2》：马路两边见缝塞，吃灰淋雨不曾改。烈日岂止添风味，敢问致癌不致癌？&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·搞基记</title>
    <link href="https://blog.umu618.com/2015/04/16/reconstructionism-poet-bodybuilding/"/>
    <id>https://blog.umu618.com/2015/04/16/reconstructionism-poet-bodybuilding/</id>
    <published>2015-04-16T15:20:25.000Z</published>
    <updated>2023-08-05T13:01:26.918Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·搞基记》：奥迪出行暴走回，一路顺风没狗追。只要保持运动量，暴饮暴食也不肥。</p><h2 id="注解">注解</h2><p>搞基：和基友去健身。<br>不敢走有狗的路了……</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·搞基记》：奥迪出行暴走回，一路顺风没狗追。只要保持运动量，暴饮暴食也不肥。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;搞基：和基友去健身。&lt;br&gt;
不敢走有狗的路了……&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="暴走" scheme="https://blog.umu618.com/tags/%E6%9A%B4%E8%B5%B0/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·暴走遇狗记</title>
    <link href="https://blog.umu618.com/2015/04/14/reconstructionism-poet-dog/"/>
    <id>https://blog.umu618.com/2015/04/14/reconstructionism-poet-dog/</id>
    <published>2015-04-14T12:55:51.000Z</published>
    <updated>2023-08-05T13:01:26.918Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·暴走遇狗记》：约炮不利改暴走，走了两里遇到狗。出门没带打狗棒，差点就被咬一口。</p><h2 id="注解">注解</h2><p>差点被狗咬成狗……</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·暴走遇狗记》：约炮不利改暴走，走了两里遇到狗。出门没带打狗棒，差点就被咬一口。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;差点被狗咬成狗……&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="打嘴炮" scheme="https://blog.umu618.com/tags/%E6%89%93%E5%98%B4%E7%82%AE/"/>
    
    <category term="暴走" scheme="https://blog.umu618.com/tags/%E6%9A%B4%E8%B5%B0/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·枪毙脑细胞</title>
    <link href="https://blog.umu618.com/2015/04/13/reconstructionism-poet-killing-brain-cells/"/>
    <id>https://blog.umu618.com/2015/04/13/reconstructionism-poet-killing-brain-cells/</id>
    <published>2015-04-13T10:44:00.000Z</published>
    <updated>2023-08-05T13:01:26.918Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·枪毙脑细胞》：苦逼赚钱四肢忙，穷屌攒钱一世长。房价已是顶峰高，再将存款换乳房？</p><h2 id="注解">注解</h2><p>乳就是小。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·枪毙脑细胞》：苦逼赚钱四肢忙，穷屌攒钱一世长。房价已是顶峰高，再将存款换乳房？&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;乳就是小。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·厂妹</title>
    <link href="https://blog.umu618.com/2015/03/31/reconstructionism-poet-factory-girls/"/>
    <id>https://blog.umu618.com/2015/03/31/reconstructionism-poet-factory-girls/</id>
    <published>2015-03-31T14:40:35.000Z</published>
    <updated>2023-08-05T13:01:26.918Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·厂妹》：闲至小店过个场，四女三饭两碗汤。明明都吃一般少，为何有瘦也有胖？</p><h2 id="注解">注解</h2><p>今天中午蛋疼经过一家小店，心想好久没吃这种小店了，进去试试算了。<br>后来一群厂妹进来，看样子是三队，其中一队四个人，就点了三份主食一份汤，老板娘很不爽地说，他们店的汤是一人份的，然后她们就加了一份……<br>接着稣听她们聊到卖肾……虽然是开玩笑的口气，但很明显她们确实很穷！<br>不过有意思的是，她们中有胖有瘦，虽然都吃得很少，这说明胖和饭量无关啊！！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·厂妹》：闲至小店过个场，四女三饭两碗汤。明明都吃一般少，为何有瘦也有胖？&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;今天中午蛋疼经过一家小店，心想好久没吃这种小店了，进去试试算了。&lt;br&gt;
后来一群厂妹进来，看样子是三队，其中一队四个人，就点了三份主</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="鲸神链" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%93%BE/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·厦大七鹰</title>
    <link href="https://blog.umu618.com/2015/03/29/reconstructionism-poet-leaving-xmu/"/>
    <id>https://blog.umu618.com/2015/03/29/reconstructionism-poet-leaving-xmu/</id>
    <published>2015-03-29T14:16:02.000Z</published>
    <updated>2023-08-05T13:01:26.918Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·厦大七鹰》：千缕相思千缕愁，几天痴狂几天忧。芙蓉情梦凤凰泪，岁月无声泯恩仇。</p><h2 id="注解">注解</h2><p>2006 年毕业于厦大时，触景生情想到了一句“芙蓉情梦凤凰泪”，一直想不出最后一句怎么对，转眼九年过去了，岁月无声偷走许多回忆和情怀，如今只能无奈地对出这最后一句。<br>芙蓉：厦大芙蓉湖<br>情梦：情人湖畔畅谈梦想<br>凤凰泪：凤凰花开毕业离别时，总有人忍不住落泪……</p><p>2008-04-10 23:58:30 草稿原题《凤凰花之恋》，只写了三句：</p><blockquote><p>千缕相思千缕愁，<br>几天痴狂几天恨。<br>芙蓉情梦凤凰泪。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·厦大七鹰》：千缕相思千缕愁，几天痴狂几天忧。芙蓉情梦凤凰泪，岁月无声泯恩仇。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;2006 年毕业于厦大时，触景生情想到了一句“芙蓉情梦凤凰泪”，一直想不出最后一句怎么对，转眼九年过去了，岁月无声偷走许多回忆和情</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="鲸神链" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%93%BE/"/>
    
  </entry>
  
  <entry>
    <title>CSDN 被墙真相</title>
    <link href="https://blog.umu618.com/2015/03/17/csdn/"/>
    <id>https://blog.umu618.com/2015/03/17/csdn/</id>
    <published>2015-03-17T03:11:00.000Z</published>
    <updated>2023-08-05T13:01:26.918Z</updated>
    
    <content type="html"><![CDATA[<p>CSDN 被墙真相：这个域名被翻译为——床上等你！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;CSDN 被墙真相：这个域名被翻译为——床上等你！&lt;/p&gt;
</summary>
      
    
    
    
    <category term="U墨" scheme="https://blog.umu618.com/categories/U%E5%A2%A8/"/>
    
    
    <category term="怪悟" scheme="https://blog.umu618.com/tags/%E6%80%AA%E6%82%9F/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·暴走有感之永不降调的逼格</title>
    <link href="https://blog.umu618.com/2015/02/26/reconstructionism-poet-i-am-confirmed-in-my-faith/"/>
    <id>https://blog.umu618.com/2015/02/26/reconstructionism-poet-i-am-confirmed-in-my-faith/</id>
    <published>2015-02-26T13:28:38.000Z</published>
    <updated>2023-08-05T13:01:26.918Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·暴走有感之永不降调的逼格》：海边生鲜山上干，山上猛兽城中餐。万物随波稣性坚，有车不开徒手搬。</p><h2 id="注解">注解</h2><p>从万达把给小丸子的儿童学步车和小馒头提回来，运动量又足够了，一路走一路写诗，不知不觉就回来了。<br>海边生鲜山上干：海边的人很容易吃到新鲜的海产品，但是到了山区，就只能把它们晒成干储存了。<br>山上猛兽城中餐：山上的猛兽在它们的地盘可能是很威猛的，但是到了城里，不过是盘中参。<br>万物随波稣性坚，有车不开徒手搬：万物都有随波逐流的天性，每到一个新地方都要做相应的屈服，但是稣意志很坚定，及时买了车，还是喜欢暴走，偌大的一件儿童学步车，从三公里外徒手搬回来了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·暴走有感之永不降调的逼格》：海边生鲜山上干，山上猛兽城中餐。万物随波稣性坚，有车不开徒手搬。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;从万达把给小丸子的儿童学步车和小馒头提回来，运动量又足够了，一路走一路写诗，不知不觉就回来了。&lt;br&gt;
海边生鲜山</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="圣小开" scheme="https://blog.umu618.com/tags/%E5%9C%A3%E5%B0%8F%E5%BC%80/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·洗脑</title>
    <link href="https://blog.umu618.com/2015/02/26/reconstructionism-poet-brainwash/"/>
    <id>https://blog.umu618.com/2015/02/26/reconstructionism-poet-brainwash/</id>
    <published>2015-02-26T10:24:54.000Z</published>
    <updated>2023-08-05T13:01:26.918Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·洗脑》：少年轻信读书高，青春尽被废书扰。又说城市文明好，友邻不识老来找。</p><h2 id="注解">注解</h2><p>被应试教育洗过脑的一代，成长路上每每发现自己被欺骗。<br>从农村迁移到城市，生活环境变好了，但是却也从熟人社会变成生人社会，城市里大部分邻居都不认识，各自奔波忙碌，很少闲来交友论道，只能等退休了再去交朋友了……</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·洗脑》：少年轻信读书高，青春尽被废书扰。又说城市文明好，友邻不识老来找。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;被应试教育洗过脑的一代，成长路上每每发现自己被欺骗。&lt;br&gt;
从农村迁移到城市，生活环境变好了，但是却也从熟人社会变成生人社会，城市里</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·乐射网</title>
    <link href="https://blog.umu618.com/2015/02/25/reconstructionism-poet-300104/"/>
    <id>https://blog.umu618.com/2015/02/25/reconstructionism-poet-300104/</id>
    <published>2015-02-25T08:58:23.000Z</published>
    <updated>2023-08-05T13:01:26.918Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·乐射网》：中国品干终被干，乐射薯片已碎片。贾总再屌输韩红，一朝跌停不能战。</p><h2 id="注解">注解</h2><p>乐射网：乐视网（300104），这种炒作股，尽量不要碰！<br>中国品干：中国平安（601318），这个最近绿了些，但长期安全，可以买点。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·乐射网》：中国品干终被干，乐射薯片已碎片。贾总再屌输韩红，一朝跌停不能战。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;乐射网：乐视网（300104），这种炒作股，尽量不要碰！&lt;br&gt;
中国品干：中国平安（601318），这个最近绿了些，但长期安全，可</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="金融" scheme="https://blog.umu618.com/tags/%E9%87%91%E8%9E%8D/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·答春绿</title>
    <link href="https://blog.umu618.com/2015/02/25/reconstructionism-poet-green/"/>
    <id>https://blog.umu618.com/2015/02/25/reconstructionism-poet-green/</id>
    <published>2015-02-25T08:33:07.000Z</published>
    <updated>2023-08-05T13:01:26.918Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·答春绿》：今日大盘一片绿，明日走势没头绪。只要日子过得去，哪怕头上有点绿。</p><h2 id="注解">注解</h2><p>炒股心得：要耐得住寂寞~</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·答春绿》：今日大盘一片绿，明日走势没头绪。只要日子过得去，哪怕头上有点绿。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;炒股心得：要耐得住寂寞~&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="金融" scheme="https://blog.umu618.com/tags/%E9%87%91%E8%9E%8D/"/>
    
  </entry>
  
  <entry>
    <title>土豪路由器</title>
    <link href="https://blog.umu618.com/2015/02/02/rich-man-router/"/>
    <id>https://blog.umu618.com/2015/02/02/rich-man-router/</id>
    <published>2015-02-02T14:04:00.000Z</published>
    <updated>2023-08-05T13:01:26.918Z</updated>
    
    <content type="html"><![CDATA[<p>一土豪，每次出门都担心家中被盗，苦思良久得一法：把家中 WiFi 修改成无密码，然后放心出门。每次回来都能看到保安捧着手机蹲在家门口，从此无忧。</p><p>启示一：闲置资源不会产生价值，但把它送给有需求的人，就有机会转化为有效资源。</p><p>启示二：互联网时代，要不断进行思维创新。</p><p>这个段子其实是由真实故事改编的，请搜“业主提供免费WiFi 蹭网保安巧遇小偷”。</p><p>但如果真这么干，风险还是有的，稣也改编一个：</p><p>一土豪，每次出门都担心家中被盗，苦思良久得一法：把家中 WiFi 修改成无密码，然后放心出门。每次回来都能看到保安捧着手机蹲在家门口，从此无忧。但有几次无线路由器挂掉了，保安请求进门维修，把富翁的 WiFi 修了，修多了后，顺便把 Wife 也修了……</p><p>启示：路由器的稳定性是至关重要的，买个稳定的路由器是多么重要！稣推荐**牌土豪专用路由器。（欢迎广告商与稣联系插入广告）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;一土豪，每次出门都担心家中被盗，苦思良久得一法：把家中 WiFi 修改成无密码，然后放心出门。每次回来都能看到保安捧着手机蹲在家门口，从此无忧。&lt;/p&gt;
&lt;p&gt;启示一：闲置资源不会产生价值，但把它送给有需求的人，就有机会转化为有效资源。&lt;/p&gt;
&lt;p&gt;启示二：互联网时代，要</summary>
      
    
    
    
    <category term="U墨" scheme="https://blog.umu618.com/categories/U%E5%A2%A8/"/>
    
    
    <category term="怪悟" scheme="https://blog.umu618.com/tags/%E6%80%AA%E6%82%9F/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·抄底科技</title>
    <link href="https://blog.umu618.com/2015/01/16/reconstructionism-poet-bargain-hunting-300017/"/>
    <id>https://blog.umu618.com/2015/01/16/reconstructionism-poet-bargain-hunting-300017/</id>
    <published>2015-01-16T13:51:19.000Z</published>
    <updated>2023-08-05T13:01:26.918Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·抄底科技》：换人站岗稣放哨，四十五十满仓爆。今日一卖跌成翔，五十再入八十逃。</p><h2 id="注解">注解</h2><p>炒股心得：有时候只是运气而已！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·抄底科技》：换人站岗稣放哨，四十五十满仓爆。今日一卖跌成翔，五十再入八十逃。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;炒股心得：有时候只是运气而已！&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="金融" scheme="https://blog.umu618.com/tags/%E9%87%91%E8%9E%8D/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·园工现状</title>
    <link href="https://blog.umu618.com/2015/01/05/reconstructionism-poet-gardener-status/"/>
    <id>https://blog.umu618.com/2015/01/05/reconstructionism-poet-gardener-status/</id>
    <published>2015-01-05T08:40:49.000Z</published>
    <updated>2023-08-05T13:01:26.908Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·园工现状》：手机没人要，快件有人偷。正事不敢言，鸟事皆来逗。</p><h2 id="注解">注解</h2><p>园工：大花园里的员工，KJ 文化。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·园工现状》：手机没人要，快件有人偷。正事不敢言，鸟事皆来逗。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;园工：大花园里的员工，KJ 文化。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·摸暗慢</title>
    <link href="https://blog.umu618.com/2015/01/04/reconstructionism-poet-slow/"/>
    <id>https://blog.umu618.com/2015/01/04/reconstructionism-poet-slow/</id>
    <published>2015-01-04T14:28:47.000Z</published>
    <updated>2023-08-05T13:01:26.918Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·摸暗慢》：公司网络慢又慢，一到中午剩一半。急特一拉一白天，硬是逼稣加个班……</p><h2 id="注解">注解</h2><p>急特：git</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·摸暗慢》：公司网络慢又慢，一到中午剩一半。急特一拉一白天，硬是逼稣加个班……&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;急特：git&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·山坡羊·KJ</title>
    <link href="https://blog.umu618.com/2014/12/30/reconstructionism-poet-shanpoyang-kj/"/>
    <id>https://blog.umu618.com/2014/12/30/reconstructionism-poet-shanpoyang-kj/</id>
    <published>2014-12-30T03:52:46.000Z</published>
    <updated>2023-08-05T13:01:26.908Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·山坡羊·KJ》：月薪八千，年薪十万，扣了绩效年终算。三地办，士气散，新旧不合空降管，一片槽苦民心艰。拜，也是演；亲，也是演。</p><h2 id="注解">注解</h2><p>来自 KJ 民间的声音……只能呵呵一笑而过。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·山坡羊·KJ》：月薪八千，年薪十万，扣了绩效年终算。三地办，士气散，新旧不合空降管，一片槽苦民心艰。拜，也是演；亲，也是演。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;来自 KJ 民间的声音……只能呵呵一笑而过。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·锤牛手机</title>
    <link href="https://blog.umu618.com/2014/10/27/reconstructionism-poet-smartisan/"/>
    <id>https://blog.umu618.com/2014/10/27/reconstructionism-poet-smartisan/</id>
    <published>2014-10-27T07:51:05.000Z</published>
    <updated>2023-08-05T13:01:26.908Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·锤牛手机》：三千大锤已大锤，吹牛免费何不吹？情怀不如钱实在，原来手机靠张嘴。</p><h2 id="注解">注解</h2><p>其实很欣赏老罗，不过事实面前，该喷的还是喷一下。<br>顺便说一下：不喜欢锤黑刘翔。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·锤牛手机》：三千大锤已大锤，吹牛免费何不吹？情怀不如钱实在，原来手机靠张嘴。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;其实很欣赏老罗，不过事实面前，该喷的还是喷一下。&lt;br&gt;
顺便说一下：不喜欢锤黑刘翔。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·黑数字专题</title>
    <link href="https://blog.umu618.com/2014/09/17/reconstructionism-poet-360/"/>
    <id>https://blog.umu618.com/2014/09/17/reconstructionism-poet-360/</id>
    <published>2014-09-17T03:52:45.000Z</published>
    <updated>2023-08-05T13:01:26.908Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·黑数字专题》：屄已装成艺术高，万千小白落圈套。不知流氓谁养出，数字软件似强盗。|新装系统开后门，业界流氓来光临。夷笑科技信数字，杀毒软件中毒深。|网络飘渺撒币多，中毒犹知数字弱。吾恨卡逼无绝期，叹留祸害屎一坨。</p><h2 id="注解">注解</h2><p>公司推行办公电脑装 360，引来一片苦水和吐槽。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·黑数字专题》：屄已装成艺术高，万千小白落圈套。不知流氓谁养出，数字软件似强盗。|新装系统开后门，业界流氓来光临。夷笑科技信数字，杀毒软件中毒深。|网络飘渺撒币多，中毒犹知数字弱。吾恨卡逼无绝期，叹留祸害屎一坨。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·为什么不买爱风流？</title>
    <link href="https://blog.umu618.com/2014/09/12/reconstructionism-poet-why-not-buy-iphone-6/"/>
    <id>https://blog.umu618.com/2014/09/12/reconstructionism-poet-why-not-buy-iphone-6/</id>
    <published>2014-09-12T05:57:42.000Z</published>
    <updated>2024-04-13T14:38:27.526Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·为什么不买爱风流？》：穷逼买车心慌，一年十二月光。待到明年还完，又要贷款买房。</p><h2 id="注解">注解</h2><p>纯装逼，买车都是全款付了，还剩几百万……</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·为什么不买爱风流？》：穷逼买车心慌，一年十二月光。待到明年还完，又要贷款买房。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;纯装逼，买车都是全款付了，还剩几百万……&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="鹏风" scheme="https://blog.umu618.com/tags/%E9%B9%8F%E9%A3%8E/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·别淫荡</title>
    <link href="https://blog.umu618.com/2014/09/12/reconstructionism-poet-byd/"/>
    <id>https://blog.umu618.com/2014/09/12/reconstructionism-poet-byd/</id>
    <published>2014-09-12T05:52:27.000Z</published>
    <updated>2024-04-13T14:38:27.526Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·别淫荡》：身开比亚迪，载着大机机。逼格高到爆，不服您来比？</p><h2 id="注解">注解</h2><p>听基友们说 BYD S6 还不错，虽然不买，但可以 YY 一下。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·别淫荡》：身开比亚迪，载着大机机。逼格高到爆，不服您来比？&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;听基友们说 BYD S6 还不错，虽然不买，但可以 YY 一下。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="鹏风" scheme="https://blog.umu618.com/tags/%E9%B9%8F%E9%A3%8E/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·有车好办事</title>
    <link href="https://blog.umu618.com/2014/09/06/reconstructionism-poet-good-to-have-a-car/"/>
    <id>https://blog.umu618.com/2014/09/06/reconstructionism-poet-good-to-have-a-car/</id>
    <published>2014-09-06T01:26:03.000Z</published>
    <updated>2023-08-05T13:01:26.908Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·有车好办事》：学妹易丢稣难捡，歹徒捡了还撸奸。细想差别在于车，今天就把车贷办。</p><h2 id="注解">注解</h2><p>新闻《女大学生乘坐黑车遭轮奸》读后感……</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·有车好办事》：学妹易丢稣难捡，歹徒捡了还撸奸。细想差别在于车，今天就把车贷办。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;新闻《女大学生乘坐黑车遭轮奸》读后感……&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="打嘴炮" scheme="https://blog.umu618.com/tags/%E6%89%93%E5%98%B4%E7%82%AE/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·有钱买车没钱养</title>
    <link href="https://blog.umu618.com/2014/09/01/reconstructionism-poet-hard-to-keep-a-car/"/>
    <id>https://blog.umu618.com/2014/09/01/reconstructionism-poet-hard-to-keep-a-car/</id>
    <published>2014-09-01T05:23:30.000Z</published>
    <updated>2023-08-05T13:01:26.908Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·有钱买车没钱养》：好车路边晒，屌丝才可耐。车库高富帅，烂车配好牌。</p><h2 id="注解">注解</h2><p>在软件园很容易看到豪车停在路边晒，估计是最近才暴发，或者死要面子活受罪。上班都要路过两个地下车库，里面有不少好牌都是挂在烂车上，当然也有宾利配好牌。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·有钱买车没钱养》：好车路边晒，屌丝才可耐。车库高富帅，烂车配好牌。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;在软件园很容易看到豪车停在路边晒，估计是最近才暴发，或者死要面子活受罪。上班都要路过两个地下车库，里面有不少好牌都是挂在烂车上，当然也有宾利</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·有车赛高</title>
    <link href="https://blog.umu618.com/2014/08/21/reconstructionism-poet-awesome-to-take-photos-in-car/"/>
    <id>https://blog.umu618.com/2014/08/21/reconstructionism-poet-awesome-to-take-photos-in-car/</id>
    <published>2014-08-21T05:17:44.000Z</published>
    <updated>2023-08-05T13:01:26.908Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·有车赛高》：车上打一炮，打完晒车照。是车也是床，车床逼格高？</p><h2 id="注解">注解</h2><p>有感于很多女生喜欢发自己在车里的自拍照。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·有车赛高》：车上打一炮，打完晒车照。是车也是床，车床逼格高？&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;有感于很多女生喜欢发自己在车里的自拍照。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="打嘴炮" scheme="https://blog.umu618.com/tags/%E6%89%93%E5%98%B4%E7%82%AE/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
  </entry>
  
  <entry>
    <title>跟 UMU 一起玩 OpenWRT（入门篇11）：文件共享</title>
    <link href="https://blog.umu618.com/2014/07/27/umutech-openwrt-primer-11-file-sharing/"/>
    <id>https://blog.umu618.com/2014/07/27/umutech-openwrt-primer-11-file-sharing/</id>
    <published>2014-07-26T16:52:14.000Z</published>
    <updated>2023-08-05T13:01:26.908Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求">需求</h2><p>组建文件共享服务。</p><h2 id="解决">解决</h2><p>文件共享可以通过 FTP/FTPS、SFTP、NFS、Windows 文件共享（网上邻居）。其中 FTP/FTPS、SFTP 需要先下载，无法“直接打开”，实用性较差就不介绍了，重点放在 Windows 文件共享，最后再简单介绍一下 NFS。</p><h3 id="Windows-文件共享">Windows 文件共享</h3><p>OpenWRT 使用 samba 提供 Windows 文件共享服务。如有条件应该使用 samba4，安装命令为：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">opkg update</span><br><span class="line">opkg install samba4-server</span><br><span class="line"><span class="comment"># 如果 samba4 不可用，则安装 samba3.6</span></span><br><span class="line"><span class="comment"># opkg install samba36-server</span></span><br></pre></td></tr></table></figure><p>参考：</p><ul><li><p><a href="https://openwrt.org/docs/guide-user/services/nas/samba">Samba (smb)</a></p></li><li><p><a href="https://www.leiphone.com/news/201406/diy-a-smart-router-topic-share.html">【硬创邦】跟hoowa学做智能路由(十一)：实现网络存储与文件共享</a> 的“安装 Windows 文件共享”章节。</p></li></ul><p>如果配置后，无法正常访问，您可以参考一下《<a href="https://www.win7china.com/html/5956.html">Windows 7 无法访问 NAS 或 Samba 服务器之解决</a>》。</p><h3 id="NFS">NFS</h3><p>NFS 和 Windows 文件共享是两大文件共享服务，NFS 在 Linux 设备之间的传输效率高于 samba，但大部分客户端都是 Windows，所以 UMU 更推荐 samba。</p><p>参考：</p><ul><li><p>OpenWRT 安装 NFS 服务端：官方文档 <a href="https://openwrt.org/docs/guide-user/services/nas/nfs.server">Network File System (NFS)</a>；</p></li><li><p>Windows 安装 NFS 客户端：《<a href="https://www.cnblogs.com/itech/archive/2012/06/17/2552514.html">win7 中使用NFS共享</a>》。</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;需求&quot;&gt;需求&lt;/h2&gt;
&lt;p&gt;组建文件共享服务。&lt;/p&gt;
&lt;h2 id=&quot;解决&quot;&gt;解决&lt;/h2&gt;
&lt;p&gt;文件共享可以通过 FTP/FTPS、SFTP、NFS、Windows 文件共享（网上邻居）。其中 FTP/FTPS、SFTP 需要先下载，无法“直接打开”，实用</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="embedded" scheme="https://blog.umu618.com/tags/embedded/"/>
    
    <category term="linux" scheme="https://blog.umu618.com/tags/linux/"/>
    
    <category term="openwrt" scheme="https://blog.umu618.com/tags/openwrt/"/>
    
  </entry>
  
  <entry>
    <title>跟 UMU 一起玩 OpenWRT（入门篇10）：穿透内网</title>
    <link href="https://blog.umu618.com/2014/07/27/umutech-openwrt-primer-10-through-the-intranet/"/>
    <id>https://blog.umu618.com/2014/07/27/umutech-openwrt-primer-10-through-the-intranet/</id>
    <published>2014-07-26T16:45:32.000Z</published>
    <updated>2024-04-11T15:14:12.921Z</updated>
    
    <content type="html"><![CDATA[<p>UMU 把路由器放在公司，然后在家里想登录它，这时候就有一个问题：如何穿越到公司内网呢？本文给出的一种解决方案：SSH 反向连接。涉及的软件是 autossh。</p><p>您需要准备一台有固定外网 IP 的服务器，UMU 使用的是某某云主机（避免广告嫌疑就不说了，呵，广告位招租），如果不想出钱购买，可以用家庭 ADSL + 动态域名代替，效果可能差一些，但基本可用。</p><p>为了更清晰地说明，列一下各个角色：</p><ol><li><p>控制端：UMU 的笔记本，不管在什么网络，都要求能够连接到放在公司的路由器；</p></li><li><p>中转服务器：一台某某云主机，固定 IP，用 cloud_ip 表示；</p></li><li><p>被控端：放在公司的路由器，内网 IP，用 internal_ip 表示。</p></li></ol><p>基本原理：让被控端主动连接中转服务器，然后控制端连接中转服务器，就可以间接连接被控端了。</p><p>被控端安装、设置，主要参考：<a href="http://wiki.openwrt.org/doc/howto/autossh">http://wiki.openwrt.org/doc/howto/autossh</a></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">opkg update</span><br><span class="line">opkg install autossh</span><br><span class="line">dropbearkey -t rsa -f /etc/dropbear/id_rsa</span><br><span class="line">dropbearkey -y -f /etc/dropbear/id_rsa | grep ssh-rsa</span><br></pre></td></tr></table></figure><p>把上面最后一行命令的输出复制下，注意只有一行，待会儿要上传到中转服务器。或者也可以把最后一条命令改为打印到文件，再用 WinSCP 下载到本地。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dropbearkey -y -f /etc/dropbear/id_rsa | grep ssh-rsa &gt; /tmp/pubkey</span><br></pre></td></tr></table></figure><p>查看一下 autossh 配置：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uci get autossh.@autossh[0].ssh</span><br></pre></td></tr></table></figure><p>如果没有问题，就把中转服务器的信息设置上去：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">uci <span class="built_in">set</span> autossh.@autossh[0].ssh=<span class="string">&#x27;-i /etc/dropbear/id_rsa -f -N -T -R 2222:localhost:22 &lt;user&gt;@&lt;cloud_ip&gt;&#x27;</span></span><br><span class="line">uci commit</span><br></pre></td></tr></table></figure><p>接下来登录到中转服务器（Linux Server，如果是 OpenWRT，要把以下的 <code>~/.ssh/authorized_keys</code> 换成 <code>/etc/dropbear/authorized_keys</code>），把公钥（<code>/tmp/pubkey</code>）上传：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;key 内容&quot;</span> &gt;&gt; ~/.ssh/authorized_keys</span><br><span class="line"><span class="comment">## 或者</span></span><br><span class="line"><span class="comment">#cat pubkey &gt;&gt; ~/.ssh/authorized_keys</span></span><br><span class="line">chmod 0700 ~/.ssh/</span><br><span class="line">chmod 0600 ~/.ssh/authorized_keys</span><br><span class="line">vi /etc/ssh/sshd_config</span><br><span class="line"><span class="comment">## 改为允许证书登录</span></span><br><span class="line">service sshd restart</span><br></pre></td></tr></table></figure><p><code>/etc/ssh/sshd_config</code> 需要打开的有：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">RSAAuthentication yes</span><br><span class="line"></span><br><span class="line">PubkeyAuthentication yes</span><br><span class="line"></span><br><span class="line">AuthorizedKeysFile .ssh&#x2F;authorized_keys</span><br><span class="line"></span><br><span class="line">GatewayPorts yes</span><br></pre></td></tr></table></figure><p>到路由器上测试：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -i /etc/dropbear/id_rsa -f -N -T -R 2222:localhost:22 &lt;user&gt;@&lt;cloud_ip&gt;</span><br></pre></td></tr></table></figure><p>如果成功则大功告成，以后只需要 ssh 到中转服务器的 2222 端口就等于连接到路由器了。最后配合本地端口转发，可以连接很多内网机器了。如下图：</p><p><img src="/images/2014/20140727-putty.jpg" alt="Putty"></p><p>再加一台路由器，用于做本地端口转发，就可以让 Surface、iPad 之类的设备也能快乐地穿透到内网了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;UMU 把路由器放在公司，然后在家里想登录它，这时候就有一个问题：如何穿越到公司内网呢？本文给出的一种解决方案：SSH 反向连接。涉及的软件是 autossh。&lt;/p&gt;
&lt;p&gt;您需要准备一台有固定外网 IP 的服务器，UMU 使用的是某某云主机（避免广告嫌疑就不说了，呵，广</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="embedded" scheme="https://blog.umu618.com/tags/embedded/"/>
    
    <category term="linux" scheme="https://blog.umu618.com/tags/linux/"/>
    
    <category term="openwrt" scheme="https://blog.umu618.com/tags/openwrt/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·拖坨妥唾</title>
    <link href="https://blog.umu618.com/2014/07/25/reconstructionism-poet-delayed-release-has-been-spurned/"/>
    <id>https://blog.umu618.com/2014/07/25/reconstructionism-poet-delayed-release-has-been-spurned/</id>
    <published>2014-07-25T15:03:05.000Z</published>
    <updated>2023-08-05T13:01:26.908Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·拖坨妥唾》：旗舰有强弱，锤子无现货。小米比华为，最后买苹果。</p><h2 id="注解">注解</h2><p>有感于锤子因为产能问题各种二逼……</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·拖坨妥唾》：旗舰有强弱，锤子无现货。小米比华为，最后买苹果。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;有感于锤子因为产能问题各种二逼……&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>鬼</title>
    <link href="https://blog.umu618.com/2014/07/22/ghost/"/>
    <id>https://blog.umu618.com/2014/07/22/ghost/</id>
    <published>2014-07-21T16:54:00.000Z</published>
    <updated>2023-08-05T13:01:26.908Z</updated>
    
    <content type="html"><![CDATA[<p>公司组织旅游，是到女同事A的家乡一带，所以她说可以带我们自助游，住宿也可以自己安排，稣想是两男一女应该不会被误会，咳咳，稣可不能接受那啥…而且他们俩比较熟，但都不是单身，稣是打酱油的，他们都可以，稣也就同意了。</p><p>刚到就天黑了，直接去住宿，尼玛…是一个大房里有小房间，看起来是民宅，所以比较便宜，男同事B习惯早睡，居然直接倒头便睡…稣撸撸手机，熬一下睡，结果听见A大叫有鬼啊！然后吓跑逃出…</p><p>稣和B都起来了，表示鬼你妹啊，玩我们？B说无聊，继续睡了！好淡定，哈哈！</p><p>然后稣，见A好久都不回来，电话也不通，开始担心，就去大厅找工作人员帮忙，工作人员说可能两个女生出去逛街了吧！然后稣一惊，什么两个女生…一看住房登记才知道我们是两男两女入住，还有一个女同事C…吓屎了，稣給她打电话，铃声从床底传来，啊…原来她被A杀了，然后立刻变鬼来报复A，嗯，好合理的剧情，反正不是稣干的，稣就安心地睡了。第二天醒来，才知道，只是一个梦…</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;公司组织旅游，是到女同事A的家乡一带，所以她说可以带我们自助游，住宿也可以自己安排，稣想是两男一女应该不会被误会，咳咳，稣可不能接受那啥…而且他们俩比较熟，但都不是单身，稣是打酱油的，他们都可以，稣也就同意了。&lt;/p&gt;
&lt;p&gt;刚到就天黑了，直接去住宿，尼玛…是一个大房里有小</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="死神" scheme="https://blog.umu618.com/tags/%E6%AD%BB%E7%A5%9E/"/>
    
  </entry>
  
  <entry>
    <title>跟 UMU 一起玩 OpenWRT（入门篇9）：远程监听</title>
    <link href="https://blog.umu618.com/2014/07/21/umutech-openwrt-primer-9-remote-monitoring/"/>
    <id>https://blog.umu618.com/2014/07/21/umutech-openwrt-primer-9-remote-monitoring/</id>
    <published>2014-07-21T15:47:09.000Z</published>
    <updated>2023-08-05T13:01:26.908Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求">需求</h2><p>在《<a href="/2014/07/14/umutech-openwrt-primer-8-webcam">跟 UMU 一起玩 OpenWRT（入门篇8）：网络摄像机</a>》介绍的 mjpg_streamer 并不能传输声音，所以有了本文！</p><h2 id="参考">参考</h2><p><a href="http://forum.anywlan.com/thread-282658-1-1.html">http://forum.anywlan.com/thread-282658-1-1.html</a></p><h2 id="安装">安装</h2><h3 id="1-示例硬件信息">1. 示例硬件信息</h3><p>硬件还是选用微软 LifeCam HD-3000，您也可以去淘个便宜的带麦克风的 USB 声卡。</p><h3 id="2-安装程序">2. 安装程序</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">opkg update</span><br><span class="line">opkg install kmod-usb-audio</span><br><span class="line">opkg install icecast</span><br></pre></td></tr></table></figure><p>如果您打算使用 ogg 格式则安装 ices：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">opkg install ices</span><br></pre></td></tr></table></figure><p>用 mp3 格式则安装 darkice：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">opkg install darkice</span><br></pre></td></tr></table></figure><h3 id="3-配置">3. 配置</h3><p>ices 的配置文件（ices-oss.xml）可以去官网（<a href="http://www.icecast.org/ices.php">http://www.icecast.org/ices.php</a>）下载整个压缩包，里面有。</p><h2 id="经验">经验</h2><p>由于涉及声音编码，需要大量计算，经过实践，CPU 才 400MHz 的 DIR-505，无论是 ogg 还是 MP3 格式都卡成翔……</p><p>请用配置更好的路由器测试，比如如意云 RY-01 的 CPU 是 600MHz 的，勉强可行。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;需求&quot;&gt;需求&lt;/h2&gt;
&lt;p&gt;在《&lt;a href=&quot;/2014/07/14/umutech-openwrt-primer-8-webcam&quot;&gt;跟 UMU 一起玩 OpenWRT（入门篇8）：网络摄像机&lt;/a&gt;》介绍的 mjpg_streamer 并不能传输声音，所</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="embedded" scheme="https://blog.umu618.com/tags/embedded/"/>
    
    <category term="linux" scheme="https://blog.umu618.com/tags/linux/"/>
    
    <category term="openwrt" scheme="https://blog.umu618.com/tags/openwrt/"/>
    
  </entry>
  
  <entry>
    <title>跟 UMU 一起玩 OpenWRT（入门篇8）：网络摄像机</title>
    <link href="https://blog.umu618.com/2014/07/14/umutech-openwrt-primer-8-webcam/"/>
    <id>https://blog.umu618.com/2014/07/14/umutech-openwrt-primer-8-webcam/</id>
    <published>2014-07-14T15:31:30.000Z</published>
    <updated>2023-08-05T13:01:26.908Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求">需求</h2><p>买了一个微软 LifeCam HD-3000，已经过了视频聊天的年纪，插到 DIR-505 玩一下吧。</p><h2 id="安装">安装</h2><p>安装过程出奇简单：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">opkg update</span><br><span class="line">opkg install kmod-video-uvc</span><br></pre></td></tr></table></figure><p>如果安装失败，看看是不是固件应该升级了，请参考《<a href="/2014/06/20/umutech-openwrt-primer-5-sysupgrade">跟 UMU 一起玩 OpenWRT（入门篇5）：升级固件</a>》。</p><p>插上摄像头，检查一下 /dev/video0 是否存在，如果不存在，<code>reboot</code> 一下，如果存在，接下来安装和运行应用：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">opkg install mjpg_streamer</span><br><span class="line"><span class="comment"># 使用 MJPG 格式，推荐：</span></span><br><span class="line">mjpg_streamer -i <span class="string">&quot;input_uvc.so -d /dev/video0&quot;</span> -o <span class="string">&quot;output_http.so -p 8080 -w /www/webcam&quot;</span></span><br><span class="line"><span class="comment"># 使用 YUV 格式，多了一个 -y 参数，比较慢，不推荐： </span></span><br><span class="line">mjpg_streamer -i <span class="string">&quot;input_uvc.so -y -d /dev/video0&quot;</span> -o <span class="string">&quot;output_http.so -p 8080 -w /www/webcam&quot;</span></span><br></pre></td></tr></table></figure><p>其它可选输入参数，例如：</p><blockquote><p>-r 320x240 设置分辨率为320x240</p><p>-f 10 设置刷新率</p></blockquote><p>设置用户密码，加输出参数：</p><blockquote><p>-c user:password</p></blockquote><h2 id="调试">调试</h2><p>打开浏览器，输入 <a href="Mhttp://192.168.1.1:8080/">Mhttp://192.168.1.1:8080/</a>，如果没问题，参考网页上的说明操作即可。</p><p>由于 DIR-505 性能一般，效果可能不理想，建议在更高配置的路由器上尝试。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;需求&quot;&gt;需求&lt;/h2&gt;
&lt;p&gt;买了一个微软 LifeCam HD-3000，已经过了视频聊天的年纪，插到 DIR-505 玩一下吧。&lt;/p&gt;
&lt;h2 id=&quot;安装&quot;&gt;安装&lt;/h2&gt;
&lt;p&gt;安装过程出奇简单：&lt;/p&gt;
&lt;figure class=&quot;highlight</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="embedded" scheme="https://blog.umu618.com/tags/embedded/"/>
    
    <category term="linux" scheme="https://blog.umu618.com/tags/linux/"/>
    
    <category term="openwrt" scheme="https://blog.umu618.com/tags/openwrt/"/>
    
  </entry>
  
  <entry>
    <title>如意云使用经验</title>
    <link href="https://blog.umu618.com/2014/07/10/xcloud/"/>
    <id>https://blog.umu618.com/2014/07/10/xcloud/</id>
    <published>2014-07-10T15:29:23.000Z</published>
    <updated>2023-08-05T13:01:26.908Z</updated>
    
    <content type="html"><![CDATA[<h2 id="优点">优点</h2><p>玩了好多个路由器，有传统，有所谓智能，还是比较赞赏如意云，相反的，之前已经吐槽过小米和圾路由。下面就来说说如意云的好处吧！</p><ol><li><p>生态完善，支持的移动设备多，连 WP8/8.1 都支持了，UMU 主要手机是 Lumia 822，这个很满足，还有 PC 客户端，方便 PC 和移动设备之间同步数据。插件齐全，虽然很多插件没具体玩过，但至少看数量是不输圾路由的。</p></li><li><p>很好滴继承 OpenWRT 的开放性，天生 root 了，或者专业点说，SSH 服务没关闭，直接连，省去很多烦恼，用小米或圾路由，老是怕一升级就要重新 root，好讨厌的感觉……还可以刷 PandoraBox：<a href="http://downloads.openwrt.org.cn/PandoraBox/RY-1/">http://downloads.openwrt.org.cn/PandoraBox/RY-1/</a></p></li><li><p>性价比不错，RY-01 才 81 元，从配置、功能、稳定性来比，差不多价位的传统路由完全不必考虑了。虽说运行内存和外壳材料方面不如圾 1S，但 USB 接口带来不少扩展性是圾 1S 没有的，而且 1S 要 109 元。</p></li><li><p>观其高配版 RY-02 配置也不落人后，后劲十足。</p><p>这不是广告：要买的话，千万不要去迅雷商城，那边是 99 元，苏宁还是 81 元。</p></li></ol><h2 id="槽点">槽点</h2><ol><li><p>很丑……一股廉价感，还真是对得起价格；</p></li><li><p>如意云的 WiFi 密码不能用,.#&amp;等特殊字符，好撒币的做法……</p></li><li><p>WiFi 信号不如极路由 1S，虽然差距不大，但 UMU 还是通过实测数据挖掘出这个真相。</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;优点&quot;&gt;优点&lt;/h2&gt;
&lt;p&gt;玩了好多个路由器，有传统，有所谓智能，还是比较赞赏如意云，相反的，之前已经吐槽过小米和圾路由。下面就来说说如意云的好处吧！&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;生态完善，支持的移动设备多，连 WP8/8.1 都支持了，UMU 主要手机是</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="调研" scheme="https://blog.umu618.com/tags/%E8%B0%83%E7%A0%94/"/>
    
    <category term="embedded" scheme="https://blog.umu618.com/tags/embedded/"/>
    
    <category term="router" scheme="https://blog.umu618.com/tags/router/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·青春</title>
    <link href="https://blog.umu618.com/2014/07/05/reconstructionism-poet-youth/"/>
    <id>https://blog.umu618.com/2014/07/05/reconstructionism-poet-youth/</id>
    <published>2014-07-05T14:42:56.000Z</published>
    <updated>2023-08-05T13:01:26.908Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·青春》：文青迷情自耽误，愤青难行官仕途。闷骚青年没故事，二逼青年欢乐度。</p><h2 id="注解">注解</h2><p>有感于身边各种奇葩青年，各行其道。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·青春》：文青迷情自耽误，愤青难行官仕途。闷骚青年没故事，二逼青年欢乐度。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;有感于身边各种奇葩青年，各行其道。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·垃圾路由</title>
    <link href="https://blog.umu618.com/2014/06/28/reconstructionism-poet-refuse-router/"/>
    <id>https://blog.umu618.com/2014/06/28/reconstructionism-poet-refuse-router/</id>
    <published>2014-06-28T08:53:01.000Z</published>
    <updated>2023-08-05T13:01:26.908Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·垃圾路由》：智能路由器，用了就来气。没人聊智能，都在喷垃圾。</p><h2 id="注解">注解</h2><p>圾路由确实乐射……法语叫做 La 圾路由。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·垃圾路由》：智能路由器，用了就来气。没人聊智能，都在喷垃圾。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;圾路由确实乐射……法语叫做 La 圾路由。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>跟 UMU 一起玩 OpenWRT（入门篇7）：安装 LUCI</title>
    <link href="https://blog.umu618.com/2014/06/26/umutech-openwrt-primer-7-install-luci/"/>
    <id>https://blog.umu618.com/2014/06/26/umutech-openwrt-primer-7-install-luci/</id>
    <published>2014-06-26T12:30:15.000Z</published>
    <updated>2023-08-05T13:01:26.908Z</updated>
    
    <content type="html"><![CDATA[<p>UMU 不推荐安装 LUCI，还是多打命令好，可以学习更多东西，而且 LUCI 比较浪费存储空间！</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">opkg update</span><br><span class="line">opkg install luci-ssl</span><br></pre></td></tr></table></figure><p>推荐使用 SSL 版本，比较安全，但比较大，如果装不下可以试试不带 SSL 的：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">opkg install luci</span><br></pre></td></tr></table></figure><p>您可能不习惯默认的主题（luci-theme-bootstrap），Flash 够大的话，还是装个常用的：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">opkg install luci-theme-openwrt</span><br></pre></td></tr></table></figure><p>开启服务：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/uhttpd start</span><br></pre></td></tr></table></figure><p>设置开机自动运行（不推荐）：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/uhttpd <span class="built_in">enable</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;UMU 不推荐安装 LUCI，还是多打命令好，可以学习更多东西，而且 LUCI 比较浪费存储空间！&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="embedded" scheme="https://blog.umu618.com/tags/embedded/"/>
    
    <category term="linux" scheme="https://blog.umu618.com/tags/linux/"/>
    
    <category term="openwrt" scheme="https://blog.umu618.com/tags/openwrt/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·古割</title>
    <link href="https://blog.umu618.com/2014/06/25/reconstructionism-poet-google/"/>
    <id>https://blog.umu618.com/2014/06/25/reconstructionism-poet-google/</id>
    <published>2014-06-25T06:03:22.000Z</published>
    <updated>2023-08-05T13:01:26.908Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·古割》：民言没九重，万里横狱封。难书锁国恨，笑看出墙红。</p><h2 id="注解">注解</h2><p>有感于古割被墙，不少人用红杏来出墙~</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·古割》：民言没九重，万里横狱封。难书锁国恨，笑看出墙红。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;有感于古割被墙，不少人用红杏来出墙~&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>跟 UMU 一起玩 OpenWRT（入门篇6）：挂接 U 盘</title>
    <link href="https://blog.umu618.com/2014/06/23/umutech-openwrt-primer-6-mount-usb-storage/"/>
    <id>https://blog.umu618.com/2014/06/23/umutech-openwrt-primer-6-mount-usb-storage/</id>
    <published>2014-06-22T16:49:39.000Z</published>
    <updated>2023-08-05T13:01:26.908Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求">需求</h2><p>DIR-505 有一个 USB2.0 接口，给它带来了很大的扩展性，我们可以插 U 盘、移动硬盘等，来做文件共享，或者离线下载等。接下来就先搞定 U 盘，主要参考资料：<a href="http://wiki.openwrt.org/doc/howto/usb.storage">http://wiki.openwrt.org/doc/howto/usb.storage</a></p><h2 id="安装">安装</h2><h3 id="1-安装-USB-和存储器的内核模块">1. 安装 USB 和存储器的内核模块</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">opkg update</span><br><span class="line">opkg install kmod-usb-storage</span><br><span class="line">opkg install kmod-scsi-generic</span><br></pre></td></tr></table></figure><h3 id="2-安装文件系统内核模块">2. 安装文件系统内核模块</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">opkg install kmod-fs-ext4</span><br></pre></td></tr></table></figure><h3 id="3-安装应用工具">3. 安装应用工具</h3><p>USB 辅助工具、分区、格式化工具，这些非必要，看情况安装：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">opkg install usbutils fdisk e2fsprogs</span><br></pre></td></tr></table></figure><h2 id="调试">调试</h2><h3 id="1-测试能否识别-U-盘">1. 测试能否识别 U 盘</h3><p>不插 U 盘时，输入 <code>lsusb</code>，显示如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub</span><br></pre></td></tr></table></figure><p>插入 U 盘后，再 <code>lsusb</code>，发现多了一条，这说明工作正常：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Bus 001 Device 002: ID 0603:0908 Novatek Microelectronics Corp.</span><br><span class="line">Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub</span><br></pre></td></tr></table></figure><h3 id="2-分区">2. 分区</h3><p>如果 U 盘需要重新分区，请用 <code>fdisk</code>，这里不具体介绍，也可以在 Windows 上用 <code>diskpart</code> 完成，如果您还在路由器上操作，可以参考这个：<a href="http://www.leiphone.com/diy-a-smart-router-topic-increase-memory-3.html">http://www.leiphone.com/diy-a-smart-router-topic-increase-memory-3.html</a>，第一步: 对设备进行分区。</p><p>分区完后，查看一下 /dev 目录里有没有出现硬盘符和分区符：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls /dev | grep sd</span><br></pre></td></tr></table></figure><p>上面装了 ext4 文件系统的驱动，因为这个对 OpenWRT 最合适，如果原来不是这个格式，那么安装了 e2fsprogs 后就可以用下面命令格式化了：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkfs.ext4 /dev/sda1</span><br></pre></td></tr></table></figure><h3 id="3-挂载">3. 挂载</h3><p>接下来用 mount 挂接，头尾行是必须，中间的三行是一种防止未挂接好就被写入的机制：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir /mnt/usb</span><br><span class="line">touch /mnt/usb/USB_DISK_NOT_PRESENT</span><br><span class="line">chmod 555 /mnt/usb</span><br><span class="line">chmod 444 /mnt/usb/USB_DISK_NOT_PRESENT</span><br><span class="line">mount /dev/sda1 /mnt/usb</span><br></pre></td></tr></table></figure><p>到这里就可以通过 /mnt/usb 来访问 U 盘了，不过工作才完成一半而已……下面还要让 U 盘能开机自动加载，主要参考：<a href="http://wiki.openwrt.org/doc/techref/block_mount">http://wiki.openwrt.org/doc/techref/block_mount</a> 和 <a href="http://wiki.openwrt.org/doc/uci/fstab">http://wiki.openwrt.org/doc/uci/fstab</a>。先安装程序：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">opkg install block-mount blkid</span><br></pre></td></tr></table></figure><p>如果您比较珍惜存储空间，可以不用安装 blkid，block-mount 就行。用 <code>blkid</code> 或 <code>block info</code>，查看分区的 UUID。比如用 <code>blkid</code>，则 UMU 的 U 盘是显示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;dev&#x2F;mtdblock7: TYPE&#x3D;&quot;squashfs&quot;</span><br><span class="line">&#x2F;dev&#x2F;sda1: UUID&#x3D;&quot;16e381bc-d9bb-40fd-9e98-410b346931ef&quot; TYPE&#x3D;&quot;ext4&quot;</span><br></pre></td></tr></table></figure><p>接下来输入 <code>block detect</code> 查看一下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">config &#39;global&#39;</span><br><span class="line">    option anon_swap &#39;0&#39;</span><br><span class="line">    option anon_mount &#39;0&#39;</span><br><span class="line">    option auto_swap &#39;1&#39;</span><br><span class="line">    option auto_mount &#39;1&#39;</span><br><span class="line">    option delay_root &#39;5&#39;</span><br><span class="line">    option check_fs &#39;0&#39;</span><br><span class="line">config &#39;mount&#39;</span><br><span class="line">    option target &#39;&#x2F;mnt&#x2F;sda1&#39;</span><br><span class="line">    option uuid &#39;16e381bc-d9bb-40fd-9e98-410b346931ef&#39;</span><br><span class="line">    option enabled &#39;0&#39;</span><br></pre></td></tr></table></figure><p>生成配置文件，并把上面的 target 改为您想要的，enabled 值改为 1：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">block detect &gt; /etc/config/fstab</span><br><span class="line">uci <span class="built_in">set</span> fstab.@mount[-1].target=<span class="string">&#x27;/mnt/usb&#x27;</span></span><br><span class="line">uci <span class="built_in">set</span> fstab.@mount[-1].enabled=1</span><br><span class="line">uci commit fstab</span><br></pre></td></tr></table></figure><h2 id="参考">参考</h2><p>本文介绍的都是精简过的必须操作，其它可选项请自行参考：<a href="http://wiki.openwrt.org/doc/uci/fstab">http://wiki.openwrt.org/doc/uci/fstab</a>。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;需求&quot;&gt;需求&lt;/h2&gt;
&lt;p&gt;DIR-505 有一个 USB2.0 接口，给它带来了很大的扩展性，我们可以插 U 盘、移动硬盘等，来做文件共享，或者离线下载等。接下来就先搞定 U 盘，主要参考资料：&lt;a href=&quot;http://wiki.openwrt.org/</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="embedded" scheme="https://blog.umu618.com/tags/embedded/"/>
    
    <category term="linux" scheme="https://blog.umu618.com/tags/linux/"/>
    
    <category term="openwrt" scheme="https://blog.umu618.com/tags/openwrt/"/>
    
  </entry>
  
  <entry>
    <title>跟 UMU 一起玩 OpenWRT（入门篇5）：升级固件</title>
    <link href="https://blog.umu618.com/2014/06/20/umutech-openwrt-primer-5-sysupgrade/"/>
    <id>https://blog.umu618.com/2014/06/20/umutech-openwrt-primer-5-sysupgrade/</id>
    <published>2014-06-19T17:05:47.000Z</published>
    <updated>2023-08-05T13:01:26.908Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题">问题</h2><p>OpenWRT 的主线于 2014-06-19 06:07:37 UTC 更新了固件，如果不跟随升级，安装内核模块时会失败，比如以下命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">opkg update</span><br><span class="line">opkg install kmod-hid</span><br></pre></td></tr></table></figure><h2 id="解决">解决</h2><p>升级固件：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /tmp</span><br><span class="line">wget http://downloads.openwrt.org/snapshots/trunk/ar71xx/openwrt-ar71xx-generic-dir-505-a1-squashfs-sysupgrade.bin </span><br><span class="line">sysupgrade openwrt-ar71xx-generic-dir-505-a1-squashfs-sysupgrade.bin</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;问题&quot;&gt;问题&lt;/h2&gt;
&lt;p&gt;OpenWRT 的主线于 2014-06-19 06:07:37 UTC 更新了固件，如果不跟随升级，安装内核模块时会失败，比如以下命令：&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="embedded" scheme="https://blog.umu618.com/tags/embedded/"/>
    
    <category term="linux" scheme="https://blog.umu618.com/tags/linux/"/>
    
    <category term="openwrt" scheme="https://blog.umu618.com/tags/openwrt/"/>
    
  </entry>
  
  <entry>
    <title>跟 UMU 一起玩 OpenWRT（入门篇4）：配置网络</title>
    <link href="https://blog.umu618.com/2014/06/16/umutech-openwrt-primer-4-network/"/>
    <id>https://blog.umu618.com/2014/06/16/umutech-openwrt-primer-4-network/</id>
    <published>2014-06-16T11:23:07.000Z</published>
    <updated>2023-08-05T13:01:26.908Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前情">前情</h2><p>在上篇《<a href="/2014/06/05/umutech-openwrt-primer-3-gpio-switch/">跟 UMU 一起玩 OpenWRT（入门篇3）：工作模式开关</a>》中介绍了如何通过 GPIO 读取获得当前工作模式，现在来实现这个开关的功能。</p><h2 id="配置开机启动脚本">配置开机启动脚本</h2><p>主要配置 rc.local 脚本，内容如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">read_gpio</span></span>() &#123;</span><br><span class="line">(<span class="built_in">echo</span> <span class="variable">$1</span> &gt; /sys/class/gpio/<span class="built_in">export</span>) &gt;&amp; /dev/null</span><br><span class="line">(<span class="built_in">echo</span> <span class="string">&quot;in&quot;</span> &gt; /sys/class/gpio/gpio<span class="variable">$1</span>/direction) &gt;&amp; /dev/null</span><br><span class="line"><span class="built_in">return</span> `cat /sys/class/gpio/gpio<span class="variable">$1</span>/value`;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">read_gpio 19;</span><br><span class="line">v=$?;</span><br><span class="line">read_gpio 20;</span><br><span class="line">v=$v$?;</span><br><span class="line">read_gpio 21;</span><br><span class="line">v=$v$?;</span><br><span class="line">read_gpio 22;</span><br><span class="line">v=$v$?;</span><br><span class="line">read_gpio 23;</span><br><span class="line">v=$v$?;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$v</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">11000) v=<span class="string">&quot;4th&quot;</span>;;</span><br><span class="line">10001) v=<span class="string">&quot;ap&quot;</span>;;</span><br><span class="line">11001) v=<span class="string">&quot;repeater&quot;</span>;;</span><br><span class="line">01001) v=<span class="string">&quot;hotspot&quot;</span>;;</span><br><span class="line">*) v=<span class="string">&quot;error&quot;</span>;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$v</span>&quot;</span> != <span class="string">&quot;error&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">old=`cat /etc/config/working_mode`</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$v</span>&quot;</span> != <span class="string">&quot;<span class="variable">$old</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$v</span>&quot;</span> &gt; /etc/config/working_mode</span><br><span class="line">cp /etc/config/<span class="variable">$v</span>/* /etc/config/</span><br><span class="line">logger <span class="string">&quot;working mode: <span class="variable">$old</span> -&gt; <span class="variable">$v</span>&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">logger <span class="string">&quot;working mode: <span class="variable">$old</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">exit</span> 0</span><br></pre></td></tr></table></figure><h2 id="根据工作模式配置网络">根据工作模式配置网络</h2><p>上一步加的代码是，开机自动复制配置文件覆盖到 /etc/config/ 下，配置文件不需要全部，只要 firewall、network 和 wireless 就行了。按工作模式命名，创建三个目录：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir /etc/config/ap</span><br><span class="line">mkdir /etc/config/repeater</span><br><span class="line">mkdir /etc/config/hotspot</span><br></pre></td></tr></table></figure><p>后面，我们会把配置文件写好了，放在这些目录里。</p><h3 id="ap-模式">ap 模式</h3><p>下面以 ap 为例，此模式是网口做 WAN，无线做 LAN，WAN 以 ADSL 接入为例，其它情况自行变通：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">uci <span class="built_in">set</span> wireless.@wifi-device[0].disabled=0;</span><br><span class="line">uci <span class="built_in">set</span> wireless.@wifi-iface[0].ssid=<span class="string">&#x27;umu618.com&#x27;</span>;</span><br><span class="line">uci <span class="built_in">set</span> wireless.@wifi-iface[0].encryption=<span class="string">&#x27;psk2+ccmp&#x27;</span>;</span><br><span class="line">uci <span class="built_in">set</span> wireless.@wifi-iface[0].key=<span class="string">&#x27;WiFi 密码&#x27;</span>;</span><br><span class="line">uci commit wireless;</span><br><span class="line">wifi</span><br><span class="line"></span><br><span class="line">uci delete network.lan.ifname</span><br><span class="line">uci delete network.lan.type</span><br><span class="line">uci add network interface</span><br><span class="line">uci rename network.@interface[-1]=<span class="string">&#x27;wan&#x27;</span></span><br><span class="line">uci <span class="built_in">set</span> network.@interface[-1].ifname=<span class="string">&#x27;eth1&#x27;</span></span><br><span class="line">uci <span class="built_in">set</span> network.@interface[-1]._orig_ifname=<span class="string">&#x27;eth1&#x27;</span></span><br><span class="line">uci <span class="built_in">set</span> network.@interface[-1]._orig_bridge=<span class="string">&#x27;false&#x27;</span></span><br><span class="line">uci <span class="built_in">set</span> network.@interface[-1].proto=<span class="string">&#x27;pppoe&#x27;</span></span><br><span class="line">uci <span class="built_in">set</span> network.@interface[-1].username=<span class="string">&#x27;宽带账号&#x27;</span></span><br><span class="line">uci <span class="built_in">set</span> network.@interface[-1].password=<span class="string">&#x27;宽带密码&#x27;</span></span><br><span class="line">uci commit network</span><br><span class="line"></span><br><span class="line">cp /etc/config/firewall /etc/config/ap/</span><br><span class="line">cp /etc/config/network /etc/config/ap/</span><br><span class="line">cp /etc/config/wireless /etc/config/ap/</span><br></pre></td></tr></table></figure><h3 id="repeater-模式">repeater 模式</h3><p>再来说一下 repeater，网口做 LAN，无线做一个 AP Client 和一个 AP。注意，以下命令以初始化的配置文件为基础，请事先备份、还原，不要在配置过前面的 ap 模式后直接继续配置，可能会有问题。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">uci add network interface</span><br><span class="line">uci rename network.@interface[-1]=<span class="string">&#x27;wwan&#x27;</span></span><br><span class="line">uci <span class="built_in">set</span> network.@interface[-1].proto=<span class="string">&#x27;dhcp&#x27;</span></span><br><span class="line">uci commit network</span><br><span class="line">uci <span class="built_in">set</span> wireless.@wifi-device[0].disabled=0;</span><br><span class="line">uci <span class="built_in">set</span> wireless.@wifi-iface[0].ssid=<span class="string">&#x27;umu618.com&#x27;</span>;</span><br><span class="line">uci <span class="built_in">set</span> wireless.@wifi-iface[0].encryption=<span class="string">&#x27;psk2+ccmp&#x27;</span>;</span><br><span class="line">uci <span class="built_in">set</span> wireless.@wifi-iface[0].key=<span class="string">&#x27;WiFi 密码&#x27;</span>;</span><br><span class="line"></span><br><span class="line">uci add wireless wifi-iface</span><br><span class="line">uci <span class="built_in">set</span> wireless.@wifi-iface[-1].network=<span class="string">&#x27;wwan&#x27;</span></span><br><span class="line">uci <span class="built_in">set</span> wireless.@wifi-iface[-1].ssid=<span class="string">&#x27;现有 WiFi 名字&#x27;</span></span><br><span class="line">uci <span class="built_in">set</span> wireless.@wifi-iface[-1].device=<span class="string">&#x27;radio0&#x27;</span></span><br><span class="line">uci <span class="built_in">set</span> wireless.@wifi-iface[-1].mode=<span class="string">&#x27;sta&#x27;</span></span><br><span class="line">uci <span class="built_in">set</span> wireless.@wifi-iface[-1].bssid=<span class="string">&#x27;现有无线路由器的 MAC 地址&#x27;</span></span><br><span class="line">uci <span class="built_in">set</span> wireless.@wifi-iface[-1].encryption=<span class="string">&#x27;psk2+ccmp&#x27;</span></span><br><span class="line">uci <span class="built_in">set</span> wireless.@wifi-iface[-1].key=<span class="string">&#x27;现有 WiFi 密码&#x27;</span></span><br><span class="line">uci commit wireless;</span><br><span class="line">wifi</span><br><span class="line"></span><br><span class="line">uci get firewall.@zone[1].network</span><br><span class="line">uci show firewall.@zone[1]</span><br><span class="line">uci <span class="built_in">set</span> firewall.@zone[1].network=<span class="string">&#x27;wan wan6 wwan&#x27;</span></span><br><span class="line">uci commit firewall</span><br><span class="line">/etc/init.d/firewall restart</span><br><span class="line"></span><br><span class="line">cp /etc/config/firewall /etc/config/repeater/</span><br><span class="line">cp /etc/config/network /etc/config/repeater/</span><br><span class="line">cp /etc/config/wireless /etc/config/repeater/</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前情&quot;&gt;前情&lt;/h2&gt;
&lt;p&gt;在上篇《&lt;a href=&quot;/2014/06/05/umutech-openwrt-primer-3-gpio-switch/&quot;&gt;跟 UMU 一起玩 OpenWRT（入门篇3）：工作模式开关&lt;/a&gt;》中介绍了如何通过 GPIO 读取获得</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="embedded" scheme="https://blog.umu618.com/tags/embedded/"/>
    
    <category term="linux" scheme="https://blog.umu618.com/tags/linux/"/>
    
    <category term="openwrt" scheme="https://blog.umu618.com/tags/openwrt/"/>
    
  </entry>
  
  <entry>
    <title>小米路由使用经验</title>
    <link href="https://blog.umu618.com/2014/06/15/miwifi/"/>
    <id>https://blog.umu618.com/2014/06/15/miwifi/</id>
    <published>2014-06-15T10:27:48.000Z</published>
    <updated>2023-08-05T13:01:26.908Z</updated>
    
    <content type="html"><![CDATA[<h2 id="槽点">槽点</h2><p>小米路由比极路由 1S 还早买，但用了一周后就决定把他收起来了……</p><ol><li><p>0.4.58 的版本，下载功能根本不能用，人品真差，同样的种子，1S 就可以下载！有朋友也这样，看来不是个例。</p></li><li><p>发烧……您说替代 NAS 吧，就一个硬盘而已，缓存还只有 8MB，一天就开机 9 小时左右，每天下班都是暖手宝。</p></li><li><p>太 TM 贵了，收起来还有点浪费啊！</p></li></ol><h2 id="优点">优点</h2><p>话说回来，UMU 是看好小米路由的，配置真心高，虽然大部分人不需要，但也提一下优点：</p><ol><li><p>千兆网口啊！高富帅家里怎么能没有千兆独享的宽带？</p></li><li><p>USB 啊！尼玛，插个 USB 声卡就可以做窃听器了，您造吗？扩展性超高，堪称智能……前提是 root。</p></li><li><p>信号超好啊！虽然天线内置，但有 4 根啊，秒杀极路由 1S。重点还很稳定，Windows、MAC OS、Android、iOS、WP 各种设备都一起连上来，MAC OS 和 iOS 都不会掉线哦！</p></li><li><p>11AC 超快啊！干扰少啊！</p></li><li><p>黑色垃圾桶的造型，让您放在角落也毫无违和感，它真的很像另一个角落的垃圾桶。（风扇有声，放角落才不会吵）</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;槽点&quot;&gt;槽点&lt;/h2&gt;
&lt;p&gt;小米路由比极路由 1S 还早买，但用了一周后就决定把他收起来了……&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;0.4.58 的版本，下载功能根本不能用，人品真差，同样的种子，1S 就可以下载！有朋友也这样，看来不是个例。&lt;/p&gt;
&lt;/li&gt;
</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="调研" scheme="https://blog.umu618.com/tags/%E8%B0%83%E7%A0%94/"/>
    
    <category term="embedded" scheme="https://blog.umu618.com/tags/embedded/"/>
    
    <category term="router" scheme="https://blog.umu618.com/tags/router/"/>
    
  </entry>
  
  <entry>
    <title>极路由 1S 使用经验</title>
    <link href="https://blog.umu618.com/2014/06/15/hiwifi-1s/"/>
    <id>https://blog.umu618.com/2014/06/15/hiwifi-1s/</id>
    <published>2014-06-15T09:58:26.000Z</published>
    <updated>2023-08-05T13:01:26.908Z</updated>
    
    <content type="html"><![CDATA[<h2 id="优点">优点</h2><p>基本全在硬件上：</p><ol><li><p>不贵，性价比不错；</p></li><li><p>铝合金外壳，体型小巧，散热性好；</p></li><li><p>MicroUSB 电源接口，停电时可以用移动电源供电（最近宿舍跳闸停电三次，还不得不提一下，这绝对是优点！）；</p></li><li><p>两根天线，信号还行，虽然不如小米路由，但考虑到价格还是过得去。</p></li><li><p>可以插 SD 卡，这个能秒杀很多传统路由。</p></li></ol><h2 id="缺点">缺点</h2><p>主要缺点在软件上：</p><ol><li><p>不稳定，每个开发版都应该吐槽，办公室的 MAC OS 机器一连上来就出现一天死一次的问题，CPU 占用率超高！</p></li><li><p>定位很忽悠。您说智能吧，只是界面和使用流程得到一点点优化，再说面向极客吧……极客需要那些给小白用的界面？这明显是面向装逼的初级技术人员。一天死一次，就不要说极客了……</p></li><li><p>服务态度问题。App 不支持 Windows Phone。注册个账号哟手机，然后 UMU 手机换号了，联系了官方客服、在论坛上问了，都不让改，让 UMU 再注册一个账号……逛了几周的论坛，发现各位坛友大部分是小白，所以官方不断发一些扫盲的科普文，品质和逼格都不高，可以说根本没有极客间的交流。</p></li></ol><p>硬件上的明显缺点：</p><ol><li><p>不贴防滑贴在办公桌上很容易滑……设计硬伤！</p></li><li><p>没有 USB，明显少了很多扩展性，还敢自称智能？</p></li></ol><h2 id="个人观点">个人观点</h2><p>最近有朋友让 UMU 推荐路由器，UMU 还是建议他们买极路由 1S，回来刷 OpenWRT，自己整吧！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;优点&quot;&gt;优点&lt;/h2&gt;
&lt;p&gt;基本全在硬件上：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;不贵，性价比不错；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;铝合金外壳，体型小巧，散热性好；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MicroUSB 电源接口，停电时可以用移动电源供电（最</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="调研" scheme="https://blog.umu618.com/tags/%E8%B0%83%E7%A0%94/"/>
    
    <category term="embedded" scheme="https://blog.umu618.com/tags/embedded/"/>
    
    <category term="router" scheme="https://blog.umu618.com/tags/router/"/>
    
  </entry>
  
  <entry>
    <title>跟 UMU 一起玩 OpenWRT（入门篇3）：工作模式开关</title>
    <link href="https://blog.umu618.com/2014/06/05/umutech-openwrt-primer-3-gpio-switch/"/>
    <id>https://blog.umu618.com/2014/06/05/umutech-openwrt-primer-3-gpio-switch/</id>
    <published>2014-06-05T11:00:48.000Z</published>
    <updated>2023-08-05T13:01:26.908Z</updated>
    
    <content type="html"><![CDATA[<p>DIR-505 有一个工作模式开关，可以设定三个模式，但刷了 OpenWRT 后，默认没有任何功能，我们可以利用 GPIO 读取获得开关的位置。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">read_gpio</span></span>() &#123;</span><br><span class="line">    (<span class="built_in">echo</span> <span class="variable">$1</span> &gt; /sys/class/gpio/<span class="built_in">export</span>) &gt;&amp; /dev/null</span><br><span class="line">    (<span class="built_in">echo</span> <span class="string">&quot;in&quot;</span> &gt; /sys/class/gpio/gpio<span class="variable">$1</span>/direction) &gt;&amp; /dev/null</span><br><span class="line">    <span class="built_in">return</span> `cat /sys/class/gpio/gpio<span class="variable">$1</span>/value`;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">read_gpio 19;</span><br><span class="line">v=$?;</span><br><span class="line">read_gpio 20;</span><br><span class="line">v=$v$?;</span><br><span class="line">read_gpio 21;</span><br><span class="line">v=$v$?;</span><br><span class="line">read_gpio 22;</span><br><span class="line">v=$v$?;</span><br><span class="line">read_gpio 23;</span><br><span class="line">v=$v$?;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$v</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">    10001) v=<span class="string">&quot;ap&quot;</span>;;</span><br><span class="line">    11001) v=<span class="string">&quot;repeater&quot;</span>;;</span><br><span class="line">    01001) v=<span class="string">&quot;hotspot&quot;</span>;;</span><br><span class="line">    11000) v=<span class="string">&quot;4th&quot;</span>;;</span><br><span class="line">    *) v=<span class="string">&quot;error&quot;</span>;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$v</span>;</span><br></pre></td></tr></table></figure><p>按照 OpenWRT 官网资料（<a href="http://wiki.openwrt.org/toh/d-link/dir-505#buttons">http://wiki.openwrt.org/toh/d-link/dir-505#buttons</a>），有一款 DIR-505L 的开关是四个档位的，DIR-505 其实也有，但外壳把第四个档位给挡住了，掰不到。如果您足够蛋疼，可以用刻刀给它开开口……</p><p>我们可以在开机脚本（/etc/rc.local）里加入判断代码，根据档位做不同配置，以实现不同用途。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;DIR-505 有一个工作模式开关，可以设定三个模式，但刷了 OpenWRT 后，默认没有任何功能，我们可以利用 GPIO 读取获得开关的位置。&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="embedded" scheme="https://blog.umu618.com/tags/embedded/"/>
    
    <category term="linux" scheme="https://blog.umu618.com/tags/linux/"/>
    
    <category term="openwrt" scheme="https://blog.umu618.com/tags/openwrt/"/>
    
  </entry>
  
  <entry>
    <title>安全性堪忧的门禁系统</title>
    <link href="https://blog.umu618.com/2014/06/04/umutech-insecure-access-control-system/"/>
    <id>https://blog.umu618.com/2014/06/04/umutech-insecure-access-control-system/</id>
    <published>2014-06-04T13:46:56.000Z</published>
    <updated>2023-10-29T12:24:56.937Z</updated>
    
    <content type="html"><![CDATA[<p>天天刷卡开门，不知道大家有没有考虑到门禁的安全性。按照 UMU 的设想，门禁的原理应该是：刷卡器获得卡信息，到服务器比较，若合法，则服务器下令开门。但现实中，有的门禁却不是这样的，下令开门的不是服务器，而是刷卡器！！！</p><p>UMU 与门禁的亲密接触发生在 2013-11-13，第二次不小心被关在厕所，忘记带卡，结果出不来，想起第一次是多么惨，最后让住公司附近的同事过来拯救。但总不能第二次又麻烦人家吧！于是开始了研究破解，不到 5 分钟，门就被打开了……</p><p>原理：这套门禁系统是直接由刷卡器控制门的开关的，所以在刷卡器这边就可以打开门，不需要经过服务器认证，我们要做的就是找到 OPEN 针脚，把它和 GND 针脚接起来，门就开了。</p><p>理论上说，门禁刷卡器很好拆，即使不好拆，一把锤子就能砸烂，所以对入侵者来说，只要具备野蛮和电路知识，破解的难度是相当低啊！</p><p>不罗嗦，上图！这是要破解的门禁刷卡器。</p><p><img src="/images/2014/20140604-1.jpg" alt="47#602-1"></p><p>徒手温柔地打开……</p><p><img src="/images/2014/20140604-2.jpg" alt="47#602-2"></p><p>去掉排线，就可以看到 OPEN 的针脚了：</p><p><img src="/images/2014/20140604-3.jpg" alt="47#602-3"></p><p>连接 OPEN 和 GND，门就开了！</p><p><img src="/images/2014/20140604-4.jpg" alt="47#602-4"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;天天刷卡开门，不知道大家有没有考虑到门禁的安全性。按照 UMU 的设想，门禁的原理应该是：刷卡器获得卡信息，到服务器比较，若合法，则服务器下令开门。但现实中，有的门禁却不是这样的，下令开门的不是服务器，而是刷卡器！！！&lt;/p&gt;
&lt;p&gt;UMU 与门禁的亲密接触发生在 2013</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="embedded" scheme="https://blog.umu618.com/tags/embedded/"/>
    
    <category term="security" scheme="https://blog.umu618.com/tags/security/"/>
    
  </entry>
  
  <entry>
    <title>微软面试题：为什么 Shell 脚本自动把字符串 10001 当成二进制，输出 17？</title>
    <link href="https://blog.umu618.com/2014/06/04/umutech-interview-question-why-does-shell-treat-string-10001-as%20binary-and-print-17/"/>
    <id>https://blog.umu618.com/2014/06/04/umutech-interview-question-why-does-shell-treat-string-10001-as%20binary-and-print-17/</id>
    <published>2014-06-04T03:05:00.000Z</published>
    <updated>2023-08-05T13:01:26.908Z</updated>
    
    <content type="html"><![CDATA[<h2 id="注解">注解</h2><p>这并非是“微软公司”的面试题，而是稣想出来“让人微软”的题。</p><h2 id="题目">题目</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="function"><span class="title">test</span></span>() &#123;</span><br><span class="line"> v=<span class="string">&#x27;10001&#x27;</span>;</span><br><span class="line"> <span class="built_in">return</span> <span class="variable">$v</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">test</span>;</span><br><span class="line"><span class="built_in">echo</span> $?</span><br></pre></td></tr></table></figure><p>运行后输出 17（二进制 10001 的十进制 17），解释一下？</p><h2 id="解答（2023-01-17-新增）">解答（2023-01-17 新增）</h2><p>返回值是个 Byte 呀！10001 是 0x2711，所以被截断为 0x11，那就是 17。即：</p><p><code>10001 mod 256 = 17</code></p><p>本题设置的陷阱正是“二进制 10001 的十进制等于 17”，误导人真有一套。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;这并非是“微软公司”的面试题，而是稣想出来“让人微软”的题。&lt;/p&gt;
&lt;h2 id=&quot;题目&quot;&gt;题目&lt;/h2&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pr</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="debug" scheme="https://blog.umu618.com/tags/debug/"/>
    
    <category term="做题" scheme="https://blog.umu618.com/tags/%E5%81%9A%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>跟 UMU 一起玩 OpenWRT（入门篇2）：连上路由器</title>
    <link href="https://blog.umu618.com/2014/06/02/umutech-openwrt-primer-2-logon/"/>
    <id>https://blog.umu618.com/2014/06/02/umutech-openwrt-primer-2-logon/</id>
    <published>2014-06-01T17:00:35.000Z</published>
    <updated>2023-08-05T13:01:26.908Z</updated>
    
    <content type="html"><![CDATA[<h2 id="登录">登录</h2><p>刚刚刷好 OpenWRT 的 DIR-505，默认没有开启 WiFi，所以只能用网线连接，连起来后，将电脑的网卡配置为 192.168.1.X，或者自动获得地址也行。</p><p>默认也没有开启 SSH，只能用 <code>telnet 192.168.1.1</code> 来连，连上后改 root 密码：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd root</span><br></pre></td></tr></table></figure><p>改好密码后，先不要关闭 telnet，因为一关闭，下次就连不上了。马上用 SSH 客户端（推荐使用 putty，文件复制、编辑则推荐 winscp）连一下路由器：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh 192.168.1.1</span><br></pre></td></tr></table></figure><p>如果连接失败，需要在 telnet 会话下开启 SSH 服务：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/dropbear <span class="built_in">enable</span></span><br><span class="line">/etc/init.d/dropbear start</span><br></pre></td></tr></table></figure><h2 id="开启-WiFi">开启 WiFi</h2><p>用有线连接比较麻烦，接下来开启 WiFi，实现无线连接：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">uci <span class="built_in">set</span> wireless.@wifi-device[0].disabled=0;</span><br><span class="line">uci <span class="built_in">set</span> wireless.@wifi-iface[0].ssid=<span class="string">&#x27;umu618.com&#x27;</span>;</span><br><span class="line">uci <span class="built_in">set</span> wireless.@wifi-iface[0].encryption=<span class="string">&#x27;psk2+ccmp&#x27;</span>;</span><br><span class="line">uci <span class="built_in">set</span> wireless.@wifi-iface[0].key=<span class="string">&#x27;password&#x27;</span>;</span><br><span class="line">uci commit wireless;</span><br><span class="line">wifi</span><br></pre></td></tr></table></figure><h2 id="改时区">改时区</h2><p>时间都用网络同步，所以使用正确的时区很重要，要改为当地的时区，比如 UMU 使用台北时间：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">uci <span class="built_in">set</span> system.@system[0].zonename=<span class="string">&#x27;Asia/Taipei&#x27;</span>;</span><br><span class="line">uci <span class="built_in">set</span> system.@system[0].timezone=<span class="string">&#x27;CST-8&#x27;</span>;</span><br><span class="line">uci commit system;</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> CST-8 &gt; /etc/TZ;</span><br></pre></td></tr></table></figure><h2 id="改机器名">改机器名</h2><p>个性化，非必要：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;DIR-505&#x27;</span> &gt; /proc/sys/kernel/hostname;</span><br><span class="line"></span><br><span class="line">uci <span class="built_in">set</span> system.@system[0].hostname=<span class="string">&#x27;DIR-505&#x27;</span>;</span><br><span class="line">uci commit system;</span><br><span class="line"></span><br><span class="line">/etc/init.d/dnsmasq restart;</span><br></pre></td></tr></table></figure><h2 id="改欢迎语">改欢迎语</h2><p>个性化，非必要：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/banner</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;登录&quot;&gt;登录&lt;/h2&gt;
&lt;p&gt;刚刚刷好 OpenWRT 的 DIR-505，默认没有开启 WiFi，所以只能用网线连接，连起来后，将电脑的网卡配置为 192.168.1.X，或者自动获得地址也行。&lt;/p&gt;
&lt;p&gt;默认也没有开启 SSH，只能用 &lt;code&gt;teln</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="embedded" scheme="https://blog.umu618.com/tags/embedded/"/>
    
    <category term="linux" scheme="https://blog.umu618.com/tags/linux/"/>
    
    <category term="openwrt" scheme="https://blog.umu618.com/tags/openwrt/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·研究以及被研究</title>
    <link href="https://blog.umu618.com/2014/05/29/reconstructionism-poet-research-and-studied/"/>
    <id>https://blog.umu618.com/2014/05/29/reconstructionism-poet-research-and-studied/</id>
    <published>2014-05-29T01:04:46.000Z</published>
    <updated>2023-08-05T13:01:26.908Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·研究以及被研究》：贪官床下藏金砖，女侠床上治贪官。世间多少骑女纸，男骑女亦女骑男。</p><h2 id="注解">注解</h2><p>新闻《反腐女侠赵红霞》观后感。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·研究以及被研究》：贪官床下藏金砖，女侠床上治贪官。世间多少骑女纸，男骑女亦女骑男。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;新闻《反腐女侠赵红霞》观后感。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="打嘴炮" scheme="https://blog.umu618.com/tags/%E6%89%93%E5%98%B4%E7%82%AE/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·豆芽炒黑木耳</title>
    <link href="https://blog.umu618.com/2014/05/25/reconstructionism-poet-fried-bean-sprouts-and-black-fungus/"/>
    <id>https://blog.umu618.com/2014/05/25/reconstructionism-poet-fried-bean-sprouts-and-black-fungus/</id>
    <published>2014-05-25T11:12:31.000Z</published>
    <updated>2023-08-05T13:01:26.908Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·豆芽炒黑木耳》：男屌爱撸豆芽细，女神爱日鲍鱼肥。岁月是把杀猪刀，香蕉微软木耳黑。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·豆芽炒黑木耳》：男屌爱撸豆芽细，女神爱日鲍鱼肥。岁月是把杀猪刀，香蕉微软木耳黑。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="打嘴炮" scheme="https://blog.umu618.com/tags/%E6%89%93%E5%98%B4%E7%82%AE/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
  </entry>
  
  <entry>
    <title>跟 UMU 一起玩 OpenWRT（入门篇1）：硬件选型和刷机</title>
    <link href="https://blog.umu618.com/2014/05/24/umutech-openwrt-primer-1-choose-hardware/"/>
    <id>https://blog.umu618.com/2014/05/24/umutech-openwrt-primer-1-choose-hardware/</id>
    <published>2014-05-23T17:14:14.000Z</published>
    <updated>2023-10-29T12:24:56.937Z</updated>
    
    <content type="html"><![CDATA[<p>看了《<a href="https://www.leiphone.com/news/201406/diy-a-smart-router.html">跟hoowa学做智能路由</a>》系列，也想写点自己的经验。</p><p>UMU 用的第一款硬件是 D-Link DIR-505。首先声明，UMU 不是 D-Link 员工，也不卖 DIR-505，用它完全是当下对比几个可选项筛选后的结果。理由：</p><ol><li><p>本身就是不死 Bootloader，刷坏了固件用网线就可以救，把电脑 IP 设为 192.168.0.100，按住 Reset 开机，Web 浏览器访问 192.168.0.1。前面写的《<a href="/2014/05/23/umutech-openwrt-advanced-2-mtd-write-uboot-on-openwrt/">不拆机给 D-Link DIR-505 刷上不死 U-Boot</a>》完全是蛋疼地研究过程，对一般用户 UMU 建议不要刷，因为没有 JTAG，刷固件本来就不死，不小心刷坏 Bootloader，就只能拆机上编程器了，这明显作死。</p></li><li><p>配置比较高（相比 TP-Link 坑爹级同价位产品），8MB Flash，64MB RAM，UMU 手头上还有三个 TP 的（TL-WR841N、743N、941N）都只有它一半。有 USB 2.0 接口，743N 的 USB 是 1.1 的。</p></li><li><p>国内电商有得买，而且价格便宜，UMU 买的时候是 78 块。</p></li><li><p>小巧，方便携带，随时开撸！</p></li></ol><p>也说一下它的缺点：没有外接天线，所以您懂的，信号必然比较弱，不适合“穿墙”族……然后 RJ45 口只有一个，有时候会不太方便。它最适合的使用场景是研究 OpenWRT、短距离和出差便捷使用。</p><p><strong>请自行根据当下情况选择，毕竟新的硬件总是越来越强大，还越来越便宜。</strong></p><p>接下来就刷个 OpenWRT 先~目前没有稳定发行版支持 DIR-505，所以要在 trunk 下找，下载目录是：<a href="http://downloads.openwrt.org/snapshots/trunk/ar71xx/">http://downloads.openwrt.org/snapshots/trunk/ar71xx/</a>。如果直接开刷，很可能失败，因为 D-Link 是有锁区的，<a href="http://OpenWRT.org">OpenWRT.org</a> 编译的 ROM 不是为中国版准备的，所以要动一下手脚先。上 WinHex 改 ROM，下面两张图分别是中国版和国际版：</p><p><img src="/images/2014/20140524-dir-505-cn.jpg" alt="中国版"></p><p><img src="/images/2014/20140524-dir-505-def.jpg" alt="国际版"></p><p>两者只是图片指出的位置不同而已，可以自己改，如果把 OpenWRT 的 ROM 改为 CN 也无法在原厂 ROM 下刷成功的话，可以先找个官方的 DEF ROM 改为 CN，刷一下，再刷 OpenWRT 原版的 DEF ROM。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;看了《&lt;a href=&quot;https://www.leiphone.com/news/201406/diy-a-smart-router.html&quot;&gt;跟hoowa学做智能路由&lt;/a&gt;》系列，也想写点自己的经验。&lt;/p&gt;
&lt;p&gt;UMU 用的第一款硬件是 D-Link DIR-5</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="embedded" scheme="https://blog.umu618.com/tags/embedded/"/>
    
    <category term="linux" scheme="https://blog.umu618.com/tags/linux/"/>
    
    <category term="openwrt" scheme="https://blog.umu618.com/tags/openwrt/"/>
    
  </entry>
  
  <entry>
    <title>跟 UMU 一起玩 OpenWRT（高级篇2）：不拆机刷不死 U-Boot</title>
    <link href="https://blog.umu618.com/2014/05/23/umutech-openwrt-advanced-2-mtd-write-uboot-on-openwrt/"/>
    <id>https://blog.umu618.com/2014/05/23/umutech-openwrt-advanced-2-mtd-write-uboot-on-openwrt/</id>
    <published>2014-05-22T16:23:50.000Z</published>
    <updated>2023-08-05T13:01:26.908Z</updated>
    
    <content type="html"><![CDATA[<p>在上一篇《<a href="/2014/05/21/umutech-openwrt-advanced-1-compiling-uboot/">跟 UMU 一起玩 OpenWRT（高级篇1）：编译不死 U-Boot</a>》介绍了如何编译不死 U-Boot，但是不死 U-Boot 的作者只介绍了用 TTL 线刷方法，UMU 可不想拆机，毕竟拆机感觉并不好……</p><p>第一个思路是刷上 DD-WRT 固件，但是找了一下 DD-WRT 木有支持 DIR-505，只好继续蛋疼地编译 OpenWRT。</p><p>第一遍在虚拟机从 12:20 编译到 23:56，花费将近 12 小时……刚开始时，有一个下载过程，不断失败，想想是因为公司的网络太烂，于是把下载脚本改了一下：</p><p><code>&lt;openwrt-svn-dir&gt;/trunk/scripts/download.pl 中的 wget -t5 --timeout=20 --no-check-certificate</code> 改为 <code>wget -t5 --timeout=120 --no-check-certificate</code></p><p>第二天来，刷上，没问题，于是开始改代码去掉 U-Boot 写保护，参考这篇《<a href="http://see.sl088.com/wiki/Openwrt_%E4%B8%AD%E5%88%B7%E5%86%99_uboot_art">Openwrt 中刷写 uboot ART</a>》<a href="http://see.sl088.com/wiki/Openwrt_%E4%B8%AD%E5%88%B7%E5%86%99_uboot_art">http://see.sl088.com/wiki/Openwrt_中刷写_uboot_art</a>，但结果很不幸，型号不同嘛！</p><p>接下来，凭自己的编程水平了，尝试改 <code>&lt;openwrt-svn-dir&gt;/trunk/target/linux/ar71xx/files/arch/mips/ath79/mach-dir-505-a1.c</code>，加入下面两个结构体：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">struct</span> <span class="title">mtd_partition</span> <span class="title">dir505_partitions</span>[] =</span> &#123;</span><br><span class="line"> &#123;</span><br><span class="line">  .name  = <span class="string">&quot;u-boot&quot;</span>,</span><br><span class="line">  .offset  = <span class="number">0</span>,</span><br><span class="line">  .size  = <span class="number">0x010000</span>,</span><br><span class="line">  .mask_flags = <span class="number">0</span>,</span><br><span class="line"> &#125;, &#123;</span><br><span class="line">  .name  = <span class="string">&quot;art&quot;</span>,</span><br><span class="line">  .offset  = <span class="number">0x010000</span>,</span><br><span class="line">  .size  = <span class="number">0x010000</span>,</span><br><span class="line"> &#125;, &#123;</span><br><span class="line">  .name  = <span class="string">&quot;mac&quot;</span>,</span><br><span class="line">  .offset  = <span class="number">0x020000</span>,</span><br><span class="line">  .size  = <span class="number">0x010000</span>,</span><br><span class="line"> &#125;, &#123;</span><br><span class="line">  .name  = <span class="string">&quot;nvram&quot;</span>,</span><br><span class="line">  .offset  = <span class="number">0x030000</span>,</span><br><span class="line">  .size  = <span class="number">0x010000</span>,</span><br><span class="line"> &#125;, &#123;</span><br><span class="line">  .name  = <span class="string">&quot;language&quot;</span>,</span><br><span class="line">  .offset  = <span class="number">0x040000</span>,</span><br><span class="line">  .size  = <span class="number">0x040000</span>,</span><br><span class="line"> &#125;, &#123;</span><br><span class="line">  .name  = <span class="string">&quot;firmware&quot;</span>,</span><br><span class="line">  .offset  = <span class="number">0x080000</span>,</span><br><span class="line">  .size  = <span class="number">0x780000</span>,</span><br><span class="line">  .mask_flags = <span class="number">0</span>,</span><br><span class="line"> &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">struct</span> <span class="title">flash_platform_data</span> <span class="title">dir505_flash_data</span> =</span> &#123;</span><br><span class="line"> .parts  = dir505_partitions,</span><br><span class="line"> .nr_parts       = ARRAY_SIZE(dir505_partitions),</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>并将 dir_505_a1_setup 函数里的 <code>ath79_register_m25p80(NULL);</code> 改为 <code>ath79_register_m25p80(&amp;dir505_flash_data);</code></p><p>测试还是无效……看来必须在源头上使 MTD_WRITEABLE 无效掉，<code>grep -r MTD_WRITEABLE &lt;openwrt-svn-dir&gt;/trunk/build_dir/target-mips_34kc_uClibc-0.9.33.2/linux-ar71xx_generic/linux-3.10.36/drivers/mtd</code>，看到几处关键的地方：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!(ubi-&gt;mtd-&gt;flags &amp; MTD_WRITEABLE)) &#123;</span><br></pre></td></tr></table></figure><p>和</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!mtd-&gt;_write || !(mtd-&gt;flags &amp; MTD_WRITEABLE))</span><br></pre></td></tr></table></figure><p>主要在 mtd_erase、mtd_write 等函数，很明显，C 语言不管在什么平台都是很好懂，看几眼就搞定了，原理是使 MTD_WRITEABLE 这个标志无用掉，您可以设置，但是我把判断这个标志的代码全干掉了，设了也是白设！</p><p>最后编译好的 <code>openwrt-ar71xx-generic-dir-505-a1-squashfs-sysupgrade.bin</code>，用 sysupgrade 刷一下，<code>reboot</code> 后再用 <code>mtd</code> 刷不死 U-Boot，一切顺利，成功刷上不死 U-Boot！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在上一篇《&lt;a href=&quot;/2014/05/21/umutech-openwrt-advanced-1-compiling-uboot/&quot;&gt;跟 UMU 一起玩 OpenWRT（高级篇1）：编译不死 U-Boot&lt;/a&gt;》介绍了如何编译不死 U-Boot，但是不死 U-Bo</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="embedded" scheme="https://blog.umu618.com/tags/embedded/"/>
    
    <category term="linux" scheme="https://blog.umu618.com/tags/linux/"/>
    
    <category term="openwrt" scheme="https://blog.umu618.com/tags/openwrt/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·某些节约是另一种浪费</title>
    <link href="https://blog.umu618.com/2014/05/22/reconstructionism-poet-save-sth-to-waste-another/"/>
    <id>https://blog.umu618.com/2014/05/22/reconstructionism-poet-save-sth-to-waste-another/</id>
    <published>2014-05-22T13:56:34.000Z</published>
    <updated>2023-08-05T13:01:26.908Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·某些节约是另一种浪费》：回扣肥水流，电器连连修。何物足堪用？好像是木有……</p><h2 id="注解">注解</h2><p>有些公司买一些洋乐射给员工用，以为可以节约成本，结果连连坏掉，反复修乐射的时间难道不是成本？再认真想想，公司有什么东西称心好用的？好像没有！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·某些节约是另一种浪费》：回扣肥水流，电器连连修。何物足堪用？好像是木有……&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;有些公司买一些洋乐射给员工用，以为可以节约成本，结果连连坏掉，反复修乐射的时间难道不是成本？再认真想想，公司有什么东西称心好用的？好</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>跟 UMU 一起玩 OpenWRT（高级篇1）：编译不死 U-Boot</title>
    <link href="https://blog.umu618.com/2014/05/21/umutech-openwrt-advanced-1-compiling-uboot/"/>
    <id>https://blog.umu618.com/2014/05/21/umutech-openwrt-advanced-1-compiling-uboot/</id>
    <published>2014-05-21T08:14:31.000Z</published>
    <updated>2023-08-05T13:01:26.908Z</updated>
    
    <content type="html"><![CDATA[<p>UMU 2010 年初就玩 OpenWRT/DD-WRT 了，蛋似编译东西还是初学者，本文纯属蛋疼的过程，欢迎批评教育，谢谢……</p><p>首先到 <a href="https://github.com/pepe2k/u-boot_mod">https://github.com/pepe2k/u-boot_mod</a> 看明白作者的说明。这里简单说一下原理：固件（firmware）刷坏，但 U-Boot 没坏，这是半砖，可以用 TTL 线连路由器，通过 U-Boot 的功能刷好 firmware。如果两者都坏了，叫全砖，只能把 Flash 拆下来，用编程器刷好 U-Boot 和 firmware。不死 U-Boot 就是修改了 U-Boot 的实现，使我们可以用 RJ-45 网线来救砖，省去拆机搭 TTL 线的麻烦。</p><p>本质上说，这东西并非真的不死，只要 U-Boot 被刷坏，还是会死，不过几率不大，因为 OpenWRT 官方发行的 ROM 全都是保护 U-Boot 区域的，根据 UMU 的经验，只有三个情况会不小心或故意刷坏：</p><ol><li>从原厂固件刷不良固件；</li><li>在 DD-WRT 下搞破坏（DD-WRT 没有保护 U-Boot）；</li><li>自制固件去掉 U-Boot 写保护后搞破坏……</li></ol><p>如果您真的这么蛋疼，还是准备编程器吧，只要是软件问题，在编程器面前没有砖的概念。（JTAG 也是救砖神器，但不是每台路由器都有，比如 DIR-505 就没有！）</p><p>由于 UMU 是 Windows 程序员，平时没有安装 Linux 桌面的习惯，蛋似由于做快游项目，买了不少服务器，都是 CentOS，所以第一步就是在 CentOS 上尝试编译，后来，您们懂的，爆出各种 213 码！服务器系统还是不适合开发！</p><p>不得已就在 Hyper-V Server 2012 上安装了 Ubuntu 12.04.1-desktop-i386，本来是想安装 x64 版本的，但又怕这些嵌入式的东西对 x64 可能支持不够好，算了，不要装 13 了。</p><p>接下来是选择编译环境了，按照 UMU 对 OpenWRT 的好感，明显是选择 <a href="http://downloads.openwrt.org/attitude_adjustment/12.09/ar71xx/generic/OpenWrt-Toolchain-ar71xx-for-mips_r2-gcc-4.6-linaro_uClibc-0.9.33.2.tar.bz2">OpenWrt Toolchain for AR71xx MIPS</a>，然后开始编译，哗哗哗，编译好了……最后编译出来的 bin 却是 64KB+110B，尼玛，这 size 超标了，刷进去不是不死，是立刻死！</p><p>试验 <a href="https://sourcery.mentor.com/GNUToolchain/subscription3130?lite=MIPS">Sourcery CodeBench Lite Edition for MIPS GNU/Linux</a> 可行。推测作者其实并没有用 OpenWrt Toolchain 编译过，而是用 Sourcery CodeBench，所以……为了节省时间，还是用后者吧！吐槽一下，这是商业软件，虽然有免费的 Lite 版本……</p><p>make dlink_dir505 一下，顺利编译出来，UMU 还小修改了一下 Web 界面，加入了自己的特色，不过要提醒一下，不要加太多，会爆……只有 64KB 的空间！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;UMU 2010 年初就玩 OpenWRT/DD-WRT 了，蛋似编译东西还是初学者，本文纯属蛋疼的过程，欢迎批评教育，谢谢……&lt;/p&gt;
&lt;p&gt;首先到 &lt;a href=&quot;https://github.com/pepe2k/u-boot_mod&quot;&gt;https://github</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="embedded" scheme="https://blog.umu618.com/tags/embedded/"/>
    
    <category term="linux" scheme="https://blog.umu618.com/tags/linux/"/>
    
    <category term="openwrt" scheme="https://blog.umu618.com/tags/openwrt/"/>
    
  </entry>
  
  <entry>
    <title>Windows 8 和 OpenWRT 下查看 WiFi 属性</title>
    <link href="https://blog.umu618.com/2014/05/14/umutech-scan-wifi-on-windows-8-and-openwrt/"/>
    <id>https://blog.umu618.com/2014/05/14/umutech-scan-wifi-on-windows-8-and-openwrt/</id>
    <published>2014-05-14T10:39:33.000Z</published>
    <updated>2023-08-05T13:01:26.908Z</updated>
    
    <content type="html"><![CDATA[<p>从 Win7 到 Win8，部分 WiFi 属性被隐藏掉了，在图形界面上看不到……只好用命令行了：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh wlan show networks <span class="built_in">mode</span>=bssid</span><br></pre></td></tr></table></figure><p>OpenWRT 上是：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iw dev wlan0 scan</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;从 Win7 到 Win8，部分 WiFi 属性被隐藏掉了，在图形界面上看不到……只好用命令行了：&lt;/p&gt;
&lt;figure class=&quot;highlight cmd&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="windows" scheme="https://blog.umu618.com/tags/windows/"/>
    
    <category term="embedded" scheme="https://blog.umu618.com/tags/embedded/"/>
    
    <category term="linux" scheme="https://blog.umu618.com/tags/linux/"/>
    
    <category term="openwrt" scheme="https://blog.umu618.com/tags/openwrt/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·RTX2</title>
    <link href="https://blog.umu618.com/2014/05/12/reconstructionism-poet-rtx-2/"/>
    <id>https://blog.umu618.com/2014/05/12/reconstructionism-poet-rtx-2/</id>
    <published>2014-05-12T04:48:26.000Z</published>
    <updated>2023-08-05T13:01:26.908Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·RTX2》：性浪微博压腾讯，微云不如百毒云。美拍强势日微视，山寨帝国有点逊。</p><p>性浪微博压腾讯，<br>微云不如百毒云。<br>美拍强势日微视，<br>山寨帝国囧又逊。</p><h2 id="注解">注解</h2><p>RTX：腾讯的一套办公聊天软件，但这里是“日腾讯”的意思。之前用过这个标题，所以加个 2。<br>人无完人，腾讯也不是抄啥都能抄成的！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·RTX2》：性浪微博压腾讯，微云不如百毒云。美拍强势日微视，山寨帝国有点逊。&lt;/p&gt;
&lt;p&gt;性浪微博压腾讯，&lt;br&gt;
微云不如百毒云。&lt;br&gt;
美拍强势日微视，&lt;br&gt;
山寨帝国囧又逊。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;RTX：腾讯的一套办</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·电机</title>
    <link href="https://blog.umu618.com/2014/05/06/reconstructionism-poet-electrocuted-by-iphone/"/>
    <id>https://blog.umu618.com/2014/05/06/reconstructionism-poet-electrocuted-by-iphone/</id>
    <published>2014-05-06T07:57:06.000Z</published>
    <updated>2023-08-05T13:01:26.908Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·电机》：爱疯街机就是好，金属外壳逼格高。充电还能边放电，乔爷建议带个套。</p><h2 id="注解">注解</h2><p>评“iPhone 电死人”事件。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·电机》：爱疯街机就是好，金属外壳逼格高。充电还能边放电，乔爷建议带个套。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;评“iPhone 电死人”事件。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·黄米</title>
    <link href="https://blog.umu618.com/2014/05/04/reconstructionism-poet-xiaomi-scalper/"/>
    <id>https://blog.umu618.com/2014/05/04/reconstructionism-poet-xiaomi-scalper/</id>
    <published>2014-05-04T15:55:04.000Z</published>
    <updated>2023-08-05T13:01:26.898Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·黄米》：手机黄牛加价卖，小米路由不受待。硬件成本约五百，本次营销挺失败！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·黄米》：手机黄牛加价卖，小米路由不受待。硬件成本约五百，本次营销挺失败！&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·ATX780脚力车</title>
    <link href="https://blog.umu618.com/2014/04/25/reconstructionism-poet-atx780/"/>
    <id>https://blog.umu618.com/2014/04/25/reconstructionism-poet-atx780/</id>
    <published>2014-04-25T15:03:40.000Z</published>
    <updated>2024-04-13T14:38:27.526Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·ATX780脚力车》：别人堵车稣自行，一百公里耗油零。二十四档不费劲，上下电梯也很轻。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·ATX780脚力车》：别人堵车稣自行，一百公里耗油零。二十四档不费劲，上下电梯也很轻。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="鹏风" scheme="https://blog.umu618.com/tags/%E9%B9%8F%E9%A3%8E/"/>
    
  </entry>
  
  <entry>
    <title>诗盗#·转机</title>
    <link href="https://blog.umu618.com/2014/04/05/reconstructionism-poet-turnaround/"/>
    <id>https://blog.umu618.com/2014/04/05/reconstructionism-poet-turnaround/</id>
    <published>2014-04-05T10:00:00.000Z</published>
    <updated>2023-08-05T13:01:26.898Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·转机》：软硬撮，大屏果。王者归来，共诛翔卓。</p><h2 id="注解">注解</h2><p>软硬撮：微软收购诺基亚。<br>大屏果：苹果发布大屏手机，必定抢走安卓更多市场！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·转机》：软硬撮，大屏果。王者归来，共诛翔卓。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;软硬撮：微软收购诺基亚。&lt;br&gt;
大屏果：苹果发布大屏手机，必定抢走安卓更多市场！&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·最近百度没鸟事</title>
    <link href="https://blog.umu618.com/2014/04/01/reconstructionism-poet-none-of-baidus-business/"/>
    <id>https://blog.umu618.com/2014/04/01/reconstructionism-poet-none-of-baidus-business/</id>
    <published>2014-04-01T05:11:19.000Z</published>
    <updated>2023-08-05T13:01:26.898Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·最近百度没鸟事》：数字至贱插，腾讯大钱砸。阿里一声叹，百度无鸡吧！/偷笑</p><h2 id="注解">注解</h2><p>数字：360<br>至贱：智键。稣会告诉您“手机装数字至贱App，放在上衣口袋，摄像头露出来，用耳机线控制抓拍，这就是偷拍利器”吗？<br>腾讯大钱砸：腾讯将旗下 QQ 网购与拍拍网的全部资产“嫁入”京东，并陪上 2.15 亿美元的“嫁妆”，换得京东 15% 的股权，未来腾讯还可以招股价认购京东额外的 5% 股份。腾讯总裁刘炽平将加入京东集团董事会。易迅将继续独立运营，并跟京东一起探讨落实日后的深度合作。京东将投资易迅成为少数股权股东，并获得认购余下股权的权利。此外，腾讯还将向京东提供微信和手机 QQ 客户端的一级入口位置及其他主要平台的支持。<br>阿里一声叹：腾讯放大招，阿里应该有压力了。<br>百度无鸡吧：百度贴吧，十二生肖的吧都有，唯独没有鸡……</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·最近百度没鸟事》：数字至贱插，腾讯大钱砸。阿里一声叹，百度无鸡吧！/偷笑&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;数字：360&lt;br&gt;
至贱：智键。稣会告诉您“手机装数字至贱App，放在上衣口袋，摄像头露出来，用耳机线控制抓拍，这就是偷拍利器”吗？</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·马逼</title>
    <link href="https://blog.umu618.com/2014/03/31/reconstructionism-poet-horse-b/"/>
    <id>https://blog.umu618.com/2014/03/31/reconstructionism-poet-horse-b/</id>
    <published>2014-03-31T06:52:09.000Z</published>
    <updated>2023-08-05T13:01:26.898Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·马逼》：马年马二逼，文马姚三匹。挺婷也属马，不可披碧玺！</p><h2 id="注解">注解</h2><p>文马姚：文章、马伊琍、姚笛<br>三匹：Three Persons<br>挺婷：赖婷婷<br>披碧玺：PBC</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·马逼》：马年马二逼，文马姚三匹。挺婷也属马，不可披碧玺！&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;文马姚：文章、马伊琍、姚笛&lt;br&gt;
三匹：Three Persons&lt;br&gt;
挺婷：赖婷婷&lt;br&gt;
披碧玺：PBC&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="打嘴炮" scheme="https://blog.umu618.com/tags/%E6%89%93%E5%98%B4%E7%82%AE/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·万丈云霾</title>
    <link href="https://blog.umu618.com/2014/03/27/reconstructionism-poet-haze/"/>
    <id>https://blog.umu618.com/2014/03/27/reconstructionism-poet-haze/</id>
    <published>2014-03-27T12:26:27.000Z</published>
    <updated>2023-08-05T13:01:26.898Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·万丈云霾》：海天一色雾兼尘，稣立高楼入云身。天气预报当作雨，可怜治霾尚无人。</p><p>改编自霹雳角色“名剑无名倦收天”的出场诗。</p><blockquote><p>江天一色无纤尘，<br>鱼龙潜跃观道身；<br>天人焉有两般义？<br>道不虚行只在人。</p></blockquote><h2 id="注解">注解</h2><p>雾霾天，稣在 28 楼“看风景”有感而作。</p><p>倦收天的出场诗为拼凑诗，前半段改自张若虚《春江花月夜》，由景入情，阐述道之无所不在；后半段则取自邵雍《观易吟》末联，将作者对易经的理解，转化为角色对道的领悟。诗中刻意将天、道、人等三字重复，强调倦收天对三者的重视，认为天人入道、缺一不可，藉此彰显倦收天的道学修为与领悟。</p><p>唐代诗人张若虚的《春江花月夜》：</p><blockquote><p>春江潮水连海平，海上明月共潮生。<br>滟滟随波千万里，何处春江无月明。<br>江流宛转绕芳甸，月照花林皆似霰。<br>空里流霜不觉飞，汀上白沙看不见。<br><strong>江天一色无纤尘</strong>，皎皎空中孤月轮。<br>江畔何人初见月，江月何年初照人？<br>人生代代无穷已，江月年年只相似。<br>不知江月待何人，但见长江送流水。<br>白云一片去悠悠，青枫浦上不胜愁。<br>谁家今夜扁舟子，何处相思明月楼？<br>可怜楼上月徘徊，应照离人妆镜台。<br>玉户帘中卷不去，捣衣砧上拂还来。<br>此时相望不相闻，愿逐月华流照君。<br>鸿雁长飞光不度，<strong>鱼龙潜跃水成文</strong>。<br>昨夜闲潭梦落花，可怜春半不还家。<br>江水流春去欲尽，江潭落月复西斜。<br>斜月沉沉藏海雾，碣石潇湘无限路。<br>不知乘月几人归，落月摇情满江树。</p></blockquote><p>宋代诗人邵雍的《观易吟》：</p><blockquote><p>一物其来有一身，一身还有一乾坤。<br>能知万物备于我，肯把三才别立根。<br>天向一中分体用，人于心上起经纶。<br><strong>天人焉有两般义，道不虚行只在人。</strong></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·万丈云霾》：海天一色雾兼尘，稣立高楼入云身。天气预报当作雨，可怜治霾尚无人。&lt;/p&gt;
&lt;p&gt;改编自霹雳角色“名剑无名倦收天”的出场诗。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;江天一色无纤尘，&lt;br&gt;
鱼龙潜跃观道身；&lt;br&gt;
天人焉有两般义？&lt;br&gt;
道不虚行</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·深沉的爱</title>
    <link href="https://blog.umu618.com/2014/03/17/reconstructionism-poet-deep-love/"/>
    <id>https://blog.umu618.com/2014/03/17/reconstructionism-poet-deep-love/</id>
    <published>2014-03-17T14:04:11.000Z</published>
    <updated>2024-04-13T14:38:27.526Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·深沉的爱》，是一种慢性的自我伤害，哥曾如此妖郁地感受到它袭来，久久不能离开，捎走了时光，才知它不会重来，即使激情不改，哥也不想再来，因为已经存在。/得意这是现代诗，逼格很高吧！</p><h2 id="注解">注解</h2><p>一般的现代诗就是随便写句话，但是哥随便写都会随便押韵。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·深沉的爱》，是一种慢性的自我伤害，哥曾如此妖郁地感受到它袭来，久久不能离开，捎走了时光，才知它不会重来，即使激情不改，哥也不想再来，因为已经存在。/得意这是现代诗，逼格很高吧！&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;一般的现代诗就是随便写句话，但</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="鹏风" scheme="https://blog.umu618.com/tags/%E9%B9%8F%E9%A3%8E/"/>
    
  </entry>
  
  <entry>
    <title>裂</title>
    <link href="https://blog.umu618.com/2014/03/04/schizy-tear/"/>
    <id>https://blog.umu618.com/2014/03/04/schizy-tear/</id>
    <published>2014-03-04T15:54:00.000Z</published>
    <updated>2023-08-05T13:01:26.898Z</updated>
    
    <content type="html"><![CDATA[<p>退休的时候，科技已经很先进，经过各种治疗和保健，爷保持了20几岁的外表，迪奥爆了！鲸神魂裂症也无大碍，就剩这个死结没有打开。</p><p>按照鲸神科医生的设定，爷来到童年记忆中的排洪沟，没有工作压力，难得能够优雅淡定地钓起鱼来~</p><p>不过很快，异常就出来了，天色将黑时，爷看到了童年时的自己，他很无邪地看爷……爷想，不妙！这关还是过不了！</p><p>然后，想起来医生说的药，爷赶紧回家去找药了。临走前，让一个小男孩帮忙看着钓具。</p><p>一会儿后，爷吃了药，感觉自己变精神了很多，不再产生幻觉，于是就去找小男孩要回了鱼竿。</p><p>割裂的记忆，没有先后逻辑……只有对时间的恐惧。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;退休的时候，科技已经很先进，经过各种治疗和保健，爷保持了20几岁的外表，迪奥爆了！鲸神魂裂症也无大碍，就剩这个死结没有打开。&lt;/p&gt;
&lt;p&gt;按照鲸神科医生的设定，爷来到童年记忆中的排洪沟，没有工作压力，难得能够优雅淡定地钓起鱼来~&lt;/p&gt;
&lt;p&gt;不过很快，异常就出来了，天色</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="鲸神魂裂" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%AD%82%E8%A3%82/"/>
    
  </entry>
  
  <entry>
    <title>信</title>
    <link href="https://blog.umu618.com/2014/03/03/schizy-belief/"/>
    <id>https://blog.umu618.com/2014/03/03/schizy-belief/</id>
    <published>2014-03-03T15:34:00.000Z</published>
    <updated>2023-08-05T13:01:26.898Z</updated>
    
    <content type="html"><![CDATA[<p>总觉得水一到晚上都特别可怕。黑黑的海水、河水……长大了，知道不应该害怕，也淡定了，蛋似从感性上，还是觉得心里毛毛的，会不知不觉幻想，黑水里冒出危险的畸形生物……</p><p>村里有条排洪沟，曾经连着一个大池塘，后来池塘消失了，沟也是慢慢消失，记忆也慢慢消失。</p><p>曾经这里有罗非鱼、鲤鱼、塘鲺（鲶鱼），年轻人经常来钓鱼。</p><p>很久后，试图寻找那些记忆，竟然无意间来到了一段保存很好的沟道。</p><p>天很黑了，但居然有一个小男孩在钓鱼，哥问他为什么这么晚不回家？</p><p>他说：“刚才有一个大孩子在这里钓鱼，我在看他钓鱼，他说有事离开一下，让我帮忙看着，结果看到天黑了……”</p><p>看着黑黑的河水，哥都有点害怕了，问他怕不怕，他说很怕，我要回家了，你帮他看吧！</p><p>哥拿起鱼竿，记忆突然重叠了，那种感觉很恐怖，很早以前，村里的河边，有个从来没有见过的大男孩，在河边钓鱼，那时候，哥可能只有8、9岁，因为好奇，一直看着他，后来他让哥帮他看一下，自己就离开了，这么多年，再也没有见过他……后来，又来了另一个大男孩，哥让他帮忙看着，也是不认识，而且再也没有见过。</p><p>哥自认为从小记性很好，特别是小时候，可是这个事件里出现的两个人，竟然都不认识，也没有再见过！</p><p>梦连接了童年的记忆，而记忆是无解的死循环。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;总觉得水一到晚上都特别可怕。黑黑的海水、河水……长大了，知道不应该害怕，也淡定了，蛋似从感性上，还是觉得心里毛毛的，会不知不觉幻想，黑水里冒出危险的畸形生物……&lt;/p&gt;
&lt;p&gt;村里有条排洪沟，曾经连着一个大池塘，后来池塘消失了，沟也是慢慢消失，记忆也慢慢消失。&lt;/p&gt;
&lt;p</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="鲸神魂裂" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%AD%82%E8%A3%82/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·咏柳</title>
    <link href="https://blog.umu618.com/2014/02/28/reconstructionism-poet-on-singing-willow/"/>
    <id>https://blog.umu618.com/2014/02/28/reconstructionism-poet-on-singing-willow/</id>
    <published>2014-02-28T01:52:20.000Z</published>
    <updated>2023-08-05T13:01:26.898Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·咏柳》：屄已装成艺术高，万屌吹下力撕套。不止吸液水才出，耳悦春疯思奸道。</p><p>改编自唐代贺知章的《咏柳》。</p><blockquote><p>碧玉妆成一树高，<br>万条垂下绿丝绦。<br>不知细叶谁裁出，<br>二月春风似剪刀。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·咏柳》：屄已装成艺术高，万屌吹下力撕套。不止吸液水才出，耳悦春疯思奸道。&lt;/p&gt;
&lt;p&gt;改编自唐代贺知章的《咏柳》。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;碧玉妆成一树高，&lt;br&gt;
万条垂下绿丝绦。&lt;br&gt;
不知细叶谁裁出，&lt;br&gt;
二月春风似剪刀。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="打嘴炮" scheme="https://blog.umu618.com/tags/%E6%89%93%E5%98%B4%E7%82%AE/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·早春</title>
    <link href="https://blog.umu618.com/2014/02/28/reconstructionism-poet-early-spring/"/>
    <id>https://blog.umu618.com/2014/02/28/reconstructionism-poet-early-spring/</id>
    <published>2014-02-28T01:47:32.000Z</published>
    <updated>2023-08-05T13:01:26.898Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·早春》：天界笑语论撸术，艹射摇炕贱妾舞。最湿衣粘春好雏，绝笙燕柳满黄都。</p><p>《#诗盗#·早春2》：舔姐笑语润撸舒，艹射摇炕精窃无。最湿衣粘春好雏，绝笙燕柳满黄都。</p><p>改编自唐代韩愈的《早春》。</p><blockquote><p>天街小雨润如酥，<br>草色遥看近却无。<br>最是一年春好处，<br>绝胜烟柳满皇都。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·早春》：天界笑语论撸术，艹射摇炕贱妾舞。最湿衣粘春好雏，绝笙燕柳满黄都。&lt;/p&gt;
&lt;p&gt;《#诗盗#·早春2》：舔姐笑语润撸舒，艹射摇炕精窃无。最湿衣粘春好雏，绝笙燕柳满黄都。&lt;/p&gt;
&lt;p&gt;改编自唐代韩愈的《早春》。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;天街</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="打嘴炮" scheme="https://blog.umu618.com/tags/%E6%89%93%E5%98%B4%E7%82%AE/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·2012</title>
    <link href="https://blog.umu618.com/2014/01/25/reconstructionism-poet-doomsday-2012/"/>
    <id>https://blog.umu618.com/2014/01/25/reconstructionism-poet-doomsday-2012/</id>
    <published>2014-01-25T08:23:32.000Z</published>
    <updated>2023-08-05T13:01:26.898Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·2012》：难忘纷纷壬辰年，千劫荡荡末日天，商家大发灾难财，骚年一月双人斩。待到冬至曙光现，多少春宵不知年。</p><p>改编自霹雳角色“照世明灯慈郎”的出场诗。</p><blockquote><p>难定纷纷甲子年；千魔荡荡白阳天；<br>苍天旨意著书命；诸子虔诚扶道颠；<br>佛灯点亮华光现；一线生机救末年。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·2012》：难忘纷纷壬辰年，千劫荡荡末日天，商家大发灾难财，骚年一月双人斩。待到冬至曙光现，多少春宵不知年。&lt;/p&gt;
&lt;p&gt;改编自霹雳角色“照世明灯慈郎”的出场诗。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;难定纷纷甲子年；千魔荡荡白阳天；&lt;br&gt;
苍天旨意著书命</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
    <category term="打嘴炮" scheme="https://blog.umu618.com/tags/%E6%89%93%E5%98%B4%E7%82%AE/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·贱灵</title>
    <link href="https://blog.umu618.com/2014/01/20/reconstructionism-poet-bns/"/>
    <id>https://blog.umu618.com/2014/01/20/reconstructionism-poet-bns/</id>
    <published>2014-01-20T08:54:20.000Z</published>
    <updated>2023-08-05T13:01:26.898Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·贱灵》：狐妹满地跑，菊花插根草。兔耳长又长，到处是果照。</p><h2 id="注解">注解</h2><p>贱灵：“剑灵”的谐音，BNS，Blade and Soul，看别人玩这游戏后作本诗。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·贱灵》：狐妹满地跑，菊花插根草。兔耳长又长，到处是果照。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;贱灵：“剑灵”的谐音，BNS，Blade and Soul，看别人玩这游戏后作本诗。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·年底一百</title>
    <link href="https://blog.umu618.com/2014/01/09/reconstructionism-poet-300017-will-reach-100/"/>
    <id>https://blog.umu618.com/2014/01/09/reconstructionism-poet-300017-will-reach-100/</id>
    <published>2014-01-09T09:38:52.000Z</published>
    <updated>2023-08-05T13:01:26.898Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·年底一百》：花叶随风飘，美雅如碧涛。移动真四基，网速一百兆。</p><h2 id="注解">注解</h2><p>深秋的下午经过树下，感觉像下雨，一抬头是无数花瓣树籽落下，树上还有移动真4G的广告牌，想起了那天股市的故事，不禁写了这首诗。</p><p>美雅如碧涛：美亚入必套，300188，美亚柏科。<br>网速一百兆：网宿会到 100，300017，网宿科技。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·年底一百》：花叶随风飘，美雅如碧涛。移动真四基，网速一百兆。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;深秋的下午经过树下，感觉像下雨，一抬头是无数花瓣树籽落下，树上还有移动真4G的广告牌，想起了那天股市的故事，不禁写了这首诗。&lt;/p&gt;
&lt;p&gt;美雅如</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·通过让局部富裕来使整体贫穷</title>
    <link href="https://blog.umu618.com/2014/01/06/reconstructionism-poet-make-the-overall-poverty/"/>
    <id>https://blog.umu618.com/2014/01/06/reconstructionism-poet-make-the-overall-poverty/</id>
    <published>2014-01-05T16:08:39.000Z</published>
    <updated>2023-08-05T13:01:26.898Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·通过让局部富裕来使整体贫穷》：央行治钱荒，通货或略胀，地产一有钱，房价必暴涨。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·通过让局部富裕来使整体贫穷》：央行治钱荒，通货或略胀，地产一有钱，房价必暴涨。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="金融" scheme="https://blog.umu618.com/tags/%E9%87%91%E8%9E%8D/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·HTC Mozart 当闹钟</title>
    <link href="https://blog.umu618.com/2014/01/02/reconstructionism-poet-htc-mozart/"/>
    <id>https://blog.umu618.com/2014/01/02/reconstructionism-poet-htc-mozart/</id>
    <published>2014-01-02T01:19:19.000Z</published>
    <updated>2023-08-05T13:01:26.898Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·HTC Mozart 当闹钟》：手机当闹钟，一个月一冲，安卓做不到，唯有无银轰。</p><h2 id="注解">注解</h2><p>无银轰：WinPhone，Windows Phone 的缩写。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·HTC Mozart 当闹钟》：手机当闹钟，一个月一冲，安卓做不到，唯有无银轰。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;无银轰：WinPhone，Windows Phone 的缩写。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·对联·乱对联</title>
    <link href="https://blog.umu618.com/2014/01/01/reconstructionism-poet-couplets-fuck/"/>
    <id>https://blog.umu618.com/2014/01/01/reconstructionism-poet-couplets-fuck/</id>
    <published>2013-12-31T17:48:00.000Z</published>
    <updated>2023-08-05T13:01:26.898Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·乱对联》：主干道边停靠站，向日葵下虫草花。鼓浪屿上日光岩，诺基亚的撸咪雅。</p><h2 id="注解">注解</h2><p>干、靠、日、草、浪、日、基、撸。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·乱对联》：主干道边停靠站，向日葵下虫草花。鼓浪屿上日光岩，诺基亚的撸咪雅。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;干、靠、日、草、浪、日、基、撸。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="打嘴炮" scheme="https://blog.umu618.com/tags/%E6%89%93%E5%98%B4%E7%82%AE/"/>
    
    <category term="对联" scheme="https://blog.umu618.com/tags/%E5%AF%B9%E8%81%94/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·手机春秋</title>
    <link href="https://blog.umu618.com/2013/12/19/reconstructionism-poet-phone-history/"/>
    <id>https://blog.umu618.com/2013/12/19/reconstructionism-poet-phone-history/</id>
    <published>2013-12-19T15:36:54.000Z</published>
    <updated>2023-08-05T13:01:26.898Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·手机春秋》：手机格局已分定，诺记无利安卓营。难弃温峰火腿肠，坐看粗粮撸三星。</p><h2 id="注解">注解</h2><p>温峰：WinPhone，Windows Phone 的简称。<br>火腿肠：HTC<br>粗粮：小米</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·手机春秋》：手机格局已分定，诺记无利安卓营。难弃温峰火腿肠，坐看粗粮撸三星。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;温峰：WinPhone，Windows Phone 的简称。&lt;br&gt;
火腿肠：HTC&lt;br&gt;
粗粮：小米&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·天机爵</title>
    <link href="https://blog.umu618.com/2013/12/15/reconstructionism-poet-phone/"/>
    <id>https://blog.umu618.com/2013/12/15/reconstructionism-poet-phone/</id>
    <published>2013-12-15T09:08:59.000Z</published>
    <updated>2023-08-05T13:01:26.898Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·天机爵》：三年挑机，四年寻店，手持机皇一千五。早上晒机，晚上玩机，圈圈叉叉通天撸。</p><p>改编自霹雳角色“齐烟九点天踦爵”的诗号。</p><blockquote><p>三年寻龙，十年点穴，肩负青囊走南北；<br>三寸知息，十面洞心，掌握乾坤通天阙。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·天机爵》：三年挑机，四年寻店，手持机皇一千五。早上晒机，晚上玩机，圈圈叉叉通天撸。&lt;/p&gt;
&lt;p&gt;改编自霹雳角色“齐烟九点天踦爵”的诗号。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;三年寻龙，十年点穴，肩负青囊走南北；&lt;br&gt;
三寸知息，十面洞心，掌握乾坤通天阙。</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·山坡羊·大妈理财</title>
    <link href="https://blog.umu618.com/2013/12/08/reconstructionism-poet-shanpoyang-dama-financing/"/>
    <id>https://blog.umu618.com/2013/12/08/reconstructionism-poet-shanpoyang-dama-financing/</id>
    <published>2013-12-08T06:26:22.000Z</published>
    <updated>2023-08-05T13:01:26.898Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·山坡羊·大妈理财》：央行既拍，比特安在？熊市几时相交代？叹兴衰，慎为怀。金银方败，比特栽，大妈有如草被踩，穷，也是大抠呆，富，也是大抠呆。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·山坡羊·大妈理财》：央行既拍，比特安在？熊市几时相交代？叹兴衰，慎为怀。金银方败，比特栽，大妈有如草被踩，穷，也是大抠呆，富，也是大抠呆。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="闽南语" scheme="https://blog.umu618.com/tags/%E9%97%BD%E5%8D%97%E8%AF%AD/"/>
    
    <category term="金融" scheme="https://blog.umu618.com/tags/%E9%87%91%E8%9E%8D/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·日光浴</title>
    <link href="https://blog.umu618.com/2013/11/22/reconstructionism-poet-sunbathe/"/>
    <id>https://blog.umu618.com/2013/11/22/reconstructionism-poet-sunbathe/</id>
    <published>2013-11-22T11:50:10.000Z</published>
    <updated>2023-08-05T13:01:26.898Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·日光浴》：久宅发霉惊慌，热水不替阳光，举头指日晒晒，身心健康清爽。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·日光浴》：久宅发霉惊慌，热水不替阳光，举头指日晒晒，身心健康清爽。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="鲸神链" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%93%BE/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·慎炒股</title>
    <link href="https://blog.umu618.com/2013/11/21/reconstructionism-poet-stocks-have-to-be-careful/"/>
    <id>https://blog.umu618.com/2013/11/21/reconstructionism-poet-stocks-have-to-be-careful/</id>
    <published>2013-11-21T05:54:19.000Z</published>
    <updated>2023-08-05T13:01:26.898Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·慎炒股》：阴阳时起伏，揪心堪比毒。屌丝莫学哥，哥是抄底入。机构皆相互，小散没人顾。别说财气粗，长期一定输。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·慎炒股》：阴阳时起伏，揪心堪比毒。屌丝莫学哥，哥是抄底入。机构皆相互，小散没人顾。别说财气粗，长期一定输。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="金融" scheme="https://blog.umu618.com/tags/%E9%87%91%E8%9E%8D/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·帅富高</title>
    <link href="https://blog.umu618.com/2013/11/20/reconstructionism-poet-good-looking-rich-guy/"/>
    <id>https://blog.umu618.com/2013/11/20/reconstructionism-poet-good-looking-rich-guy/</id>
    <published>2013-11-20T11:21:02.000Z</published>
    <updated>2023-08-05T13:01:26.898Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·帅富高》：昨晚狂欢饮酒高，误将妹纸开了苞。一问包养也不贵，干脆买回任我操。</p><h2 id="注解">注解</h2><p>根据网络故事改编。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·帅富高》：昨晚狂欢饮酒高，误将妹纸开了苞。一问包养也不贵，干脆买回任我操。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;根据网络故事改编。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="打嘴炮" scheme="https://blog.umu618.com/tags/%E6%89%93%E5%98%B4%E7%82%AE/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·哥就是这么雕</title>
    <link href="https://blog.umu618.com/2013/11/15/reconstructionism-poet-so-awesome/"/>
    <id>https://blog.umu618.com/2013/11/15/reconstructionism-poet-so-awesome/</id>
    <published>2013-11-15T10:47:07.000Z</published>
    <updated>2024-04-13T14:38:27.526Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·哥就是这么雕》：微软游戏机，竟可照鸡鸡。雕小是二逼，雕大利装逼。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·哥就是这么雕》：微软游戏机，竟可照鸡鸡。雕小是二逼，雕大利装逼。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="打嘴炮" scheme="https://blog.umu618.com/tags/%E6%89%93%E5%98%B4%E7%82%AE/"/>
    
    <category term="鹏风" scheme="https://blog.umu618.com/tags/%E9%B9%8F%E9%A3%8E/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·死宅</title>
    <link href="https://blog.umu618.com/2013/11/09/reconstructionism-poet-otaku/"/>
    <id>https://blog.umu618.com/2013/11/09/reconstructionism-poet-otaku/</id>
    <published>2013-11-09T11:09:21.000Z</published>
    <updated>2023-08-05T13:01:26.898Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·死宅》：轻宅避风险，重宅则逆天。最恨夜猫屌，放声看夜片。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·死宅》：轻宅避风险，重宅则逆天。最恨夜猫屌，放声看夜片。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·世事如棋</title>
    <link href="https://blog.umu618.com/2013/11/03/reconstructionism-poet-it-is-an-odd-world/"/>
    <id>https://blog.umu618.com/2013/11/03/reconstructionism-poet-it-is-an-odd-world/</id>
    <published>2013-11-03T15:25:20.000Z</published>
    <updated>2023-08-05T13:01:26.898Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·世事如棋》：三个粗链当老木，已分女友嫁何畜？当年各种二逼分，现在一想赛林木。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·世事如棋》：三个粗链当老木，已分女友嫁何畜？当年各种二逼分，现在一想赛林木。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="闽南语" scheme="https://blog.umu618.com/tags/%E9%97%BD%E5%8D%97%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>机机进进出出</title>
    <link href="https://blog.umu618.com/2013/11/02/phone-in-and-out/"/>
    <id>https://blog.umu618.com/2013/11/02/phone-in-and-out/</id>
    <published>2013-11-02T08:54:00.000Z</published>
    <updated>2023-08-05T13:01:26.898Z</updated>
    
    <content type="html"><![CDATA[<p>哥在软件园散步，突然一个女主持人走过来说在做节目，要给电视机前的观众表演一个魔术，让哥把手机借她。哥借了，她也马上拿出自己的手机，是三爽的大砖块，然后她把哥的手机放在她的上面，面对面放在手上，神奇的事情发生了，哥的手机竟然潜入她的手机里了！她那是安卓系统，竟然就好像跑了个 WP 的虚拟机，而且还可以再拿出来。我擦，牛逼啊！</p><p>后来哥和一个美女聊天，也想给她变一个，她也是安卓的，哥按照流程把自己的手机放在她手机上，结果怎么压都进不去，哥纳闷着，是不是只有三爽才可以。美女笑着说：你是不是想和我XXOO啊？不用这么暗示吧…</p><p>哥恍然大悟，立刻人肉了那个美女主持人，发现她是某笑星演员的女人，一路追踪，居然得知他们晚上在某酒店 KF，然后哥找人在路上毒打了那煞笔一顿，自己去了约好的房间。主持人一看到哥，就说丑了点(尼玛！)但至少比那个演员帅。以下儿童不宜。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;哥在软件园散步，突然一个女主持人走过来说在做节目，要给电视机前的观众表演一个魔术，让哥把手机借她。哥借了，她也马上拿出自己的手机，是三爽的大砖块，然后她把哥的手机放在她的上面，面对面放在手上，神奇的事情发生了，哥的手机竟然潜入她的手机里了！她那是安卓系统，竟然就好像跑了个 </summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="打嘴炮" scheme="https://blog.umu618.com/tags/%E6%89%93%E5%98%B4%E7%82%AE/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·暗链</title>
    <link href="https://blog.umu618.com/2013/10/31/reconstructionism-poet-secret-love/"/>
    <id>https://blog.umu618.com/2013/10/31/reconstructionism-poet-secret-love/</id>
    <published>2013-10-30T16:07:35.000Z</published>
    <updated>2023-08-05T13:01:26.898Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·暗链》：星河观织女，秋风追云衣。千里水抱月，唯有诗人知。</p><h2 id="注解">注解</h2><p>牛郎在星河一边遥望对岸的织女，遥不可及。<br>秋风想要一件云做的衣裳，但越追，云越散。<br>水面映射出了月影，好像水抱着月，却是不曾拥有。<br>这么凄美的感情，也只有诗人才能够体会了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·暗链》：星河观织女，秋风追云衣。千里水抱月，唯有诗人知。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;牛郎在星河一边遥望对岸的织女，遥不可及。&lt;br&gt;
秋风想要一件云做的衣裳，但越追，云越散。&lt;br&gt;
水面映射出了月影，好像水抱着月，却是不曾拥有。&lt;b</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="打嘴炮" scheme="https://blog.umu618.com/tags/%E6%89%93%E5%98%B4%E7%82%AE/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·股哥</title>
    <link href="https://blog.umu618.com/2013/10/30/reconstructionism-poet-stockholder/"/>
    <id>https://blog.umu618.com/2013/10/30/reconstructionism-poet-stockholder/</id>
    <published>2013-10-30T04:42:13.000Z</published>
    <updated>2023-08-05T13:01:26.898Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·股哥》：一日春夏秋，一月两换手，钱往口袋流，品味高端走。</p><h2 id="注解">注解</h2><p>随着股指曲线心情变化无常，一天之中就好像经历了春夏秋，<br>还好运气不错，冬天没来，这个月交易了两次，结果赚了不少钱，<br>及时止盈套现，拿去买东西了，<br>因此生活品味提高了不少。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·股哥》：一日春夏秋，一月两换手，钱往口袋流，品味高端走。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;随着股指曲线心情变化无常，一天之中就好像经历了春夏秋，&lt;br&gt;
还好运气不错，冬天没来，这个月交易了两次，结果赚了不少钱，&lt;br&gt;
及时止盈套现，拿去</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="金融" scheme="https://blog.umu618.com/tags/%E9%87%91%E8%9E%8D/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·股神不死是谓逼</title>
    <link href="https://blog.umu618.com/2013/10/24/reconstructionism-poet-there-is-no-stock-god/"/>
    <id>https://blog.umu618.com/2013/10/24/reconstructionism-poet-there-is-no-stock-god/</id>
    <published>2013-10-24T03:46:23.000Z</published>
    <updated>2023-08-05T13:01:26.898Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·股神不死是谓逼》：股市无道，今日飙，明日漂。纵股神商高，大盘被肏，再屌不如操盘屌。</p><p>改编自霹雳角色“烟都大宗师·古陵逝烟”的诗号。</p><blockquote><p>冷灯看剑，剑上几番功名？<br>炉香无需计苍生，<br>纵一川烟逝，万丈云埋，<br>孤阳还照古陵。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·股神不死是谓逼》：股市无道，今日飙，明日漂。纵股神商高，大盘被肏，再屌不如操盘屌。&lt;/p&gt;
&lt;p&gt;改编自霹雳角色“烟都大宗师·古陵逝烟”的诗号。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;冷灯看剑，剑上几番功名？&lt;br&gt;
炉香无需计苍生，&lt;br&gt;
纵一川烟逝，万丈</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="金融" scheme="https://blog.umu618.com/tags/%E9%87%91%E8%9E%8D/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·打嘴炮</title>
    <link href="https://blog.umu618.com/2013/10/22/reconstructionism-poet-fuck-goddess-by-mouth/"/>
    <id>https://blog.umu618.com/2013/10/22/reconstructionism-poet-fuck-goddess-by-mouth/</id>
    <published>2013-10-22T06:15:33.000Z</published>
    <updated>2023-08-05T13:01:26.898Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·打嘴炮》：中午不睡觉，嘴巴变懒叫。打到舌头软，屌却还是翘。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·打嘴炮》：中午不睡觉，嘴巴变懒叫。打到舌头软，屌却还是翘。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="打嘴炮" scheme="https://blog.umu618.com/tags/%E6%89%93%E5%98%B4%E7%82%AE/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·春梦尿无痕</title>
    <link href="https://blog.umu618.com/2013/10/22/reconstructionism-poet-transient-joy/"/>
    <id>https://blog.umu618.com/2013/10/22/reconstructionism-poet-transient-joy/</id>
    <published>2013-10-22T01:23:31.000Z</published>
    <updated>2023-08-05T13:01:26.898Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·春梦尿无痕》：一举茎套快哉疯，湿浪翻咻中。股紧谁人堪伯仲。千秋穴，半夕蝶梦。</p><p>改编自霹雳角色“北冽鲸涛擎海潮”的诗号。</p><blockquote><p>一举鲸涛快哉风，<br>世浪翻袖中。<br>古今谁人堪伯仲？<br>千秋雪，半夕蝶梦。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·春梦尿无痕》：一举茎套快哉疯，湿浪翻咻中。股紧谁人堪伯仲。千秋穴，半夕蝶梦。&lt;/p&gt;
&lt;p&gt;改编自霹雳角色“北冽鲸涛擎海潮”的诗号。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一举鲸涛快哉风，&lt;br&gt;
世浪翻袖中。&lt;br&gt;
古今谁人堪伯仲？&lt;br&gt;
千秋雪，半夕蝶</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
    <category term="打嘴炮" scheme="https://blog.umu618.com/tags/%E6%89%93%E5%98%B4%E7%82%AE/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·阿婆爱弟要保密</title>
    <link href="https://blog.umu618.com/2013/10/20/reconstructionism-poet-keep-your-apple-id-secret/"/>
    <id>https://blog.umu618.com/2013/10/20/reconstructionism-poet-keep-your-apple-id-secret/</id>
    <published>2013-10-20T04:49:29.000Z</published>
    <updated>2023-08-05T13:01:26.898Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·阿婆爱弟要保密》：爱疯拍艳照，妙传爱克劳。哥猜中密码，瞧了两张翘。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·阿婆爱弟要保密》：爱疯拍艳照，妙传爱克劳。哥猜中密码，瞧了两张翘。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·爱疯五夕</title>
    <link href="https://blog.umu618.com/2013/10/19/reconstructionism-poet-iphone-5c/"/>
    <id>https://blog.umu618.com/2013/10/19/reconstructionism-poet-iphone-5c/</id>
    <published>2013-10-19T00:46:36.000Z</published>
    <updated>2023-08-05T13:01:26.898Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#~爱疯五夕》：爱疯五吸，不够装逼，销量二逼，产量降低。</p><h2 id="注解">注解</h2><p>喷 iPhone 5C。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#~爱疯五夕》：爱疯五吸，不够装逼，销量二逼，产量降低。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;喷 iPhone 5C。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·冷水澡</title>
    <link href="https://blog.umu618.com/2013/10/17/reconstructionism-poet-cold-shower/"/>
    <id>https://blog.umu618.com/2013/10/17/reconstructionism-poet-cold-shower/</id>
    <published>2013-10-17T13:29:17.000Z</published>
    <updated>2024-04-13T14:38:27.526Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·冷水澡》：银月当空照大屌，寒流袭身知秋高。凉风一吹花生米，明日改洗热水澡。</p><h2 id="注解">注解</h2><p>大屌与花生米形成强烈的视觉反差，大丈夫果然能屈能伸！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·冷水澡》：银月当空照大屌，寒流袭身知秋高。凉风一吹花生米，明日改洗热水澡。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;大屌与花生米形成强烈的视觉反差，大丈夫果然能屈能伸！&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="打嘴炮" scheme="https://blog.umu618.com/tags/%E6%89%93%E5%98%B4%E7%82%AE/"/>
    
    <category term="鹏风" scheme="https://blog.umu618.com/tags/%E9%B9%8F%E9%A3%8E/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·鳇鱼</title>
    <link href="https://blog.umu618.com/2013/10/16/reconstructionism-poet-huso-dauricus/"/>
    <id>https://blog.umu618.com/2013/10/16/reconstructionism-poet-huso-dauricus/</id>
    <published>2013-10-16T05:00:30.000Z</published>
    <updated>2023-08-05T13:01:26.888Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·鳇鱼》：史前古生物，濒危鲟鳇鱼。晚上吃一斤，日完还要撸。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·鳇鱼》：史前古生物，濒危鲟鳇鱼。晚上吃一斤，日完还要撸。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="打嘴炮" scheme="https://blog.umu618.com/tags/%E6%89%93%E5%98%B4%E7%82%AE/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·菊花爆</title>
    <link href="https://blog.umu618.com/2013/10/15/reconstructionism-poet-asshole-fucked/"/>
    <id>https://blog.umu618.com/2013/10/15/reconstructionism-poet-asshole-fucked/</id>
    <published>2013-10-15T06:39:34.000Z</published>
    <updated>2023-08-05T13:01:26.888Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·菊花爆》：神马不吃吃烧烤，吃完翌日菊花爆。菊花一爆萎三天，小心你妹被人泡。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·菊花爆》：神马不吃吃烧烤，吃完翌日菊花爆。菊花一爆萎三天，小心你妹被人泡。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="打嘴炮" scheme="https://blog.umu618.com/tags/%E6%89%93%E5%98%B4%E7%82%AE/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·吃饭去</title>
    <link href="https://blog.umu618.com/2013/10/14/reconstructionism-poet-go-eating/"/>
    <id>https://blog.umu618.com/2013/10/14/reconstructionism-poet-go-eating/</id>
    <published>2013-10-14T11:01:49.000Z</published>
    <updated>2024-04-13T14:38:27.528Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·吃饭去》：穷逼不打的，公交有压力，#暴走#至万达，不屑挤迪奥丝。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·吃饭去》：穷逼不打的，公交有压力，#暴走#至万达，不屑挤迪奥丝。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="暴走" scheme="https://blog.umu618.com/tags/%E6%9A%B4%E8%B5%B0/"/>
    
    <category term="鹏风" scheme="https://blog.umu618.com/tags/%E9%B9%8F%E9%A3%8E/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·山太高炮打不到</title>
    <link href="https://blog.umu618.com/2013/10/08/reconstructionism-poet-friends-with-benefits/"/>
    <id>https://blog.umu618.com/2013/10/08/reconstructionism-poet-friends-with-benefits/</id>
    <published>2013-10-08T10:30:06.000Z</published>
    <updated>2023-08-05T13:01:26.888Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·山太高炮打不到》：山顶冻五晚，一晚撸一管。待到归来时，炮友把衣宽。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·山太高炮打不到》：山顶冻五晚，一晚撸一管。待到归来时，炮友把衣宽。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="打嘴炮" scheme="https://blog.umu618.com/tags/%E6%89%93%E5%98%B4%E7%82%AE/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·研读大股哥</title>
    <link href="https://blog.umu618.com/2013/10/05/reconstructionism-poet-stocks/"/>
    <id>https://blog.umu618.com/2013/10/05/reconstructionism-poet-stocks/</id>
    <published>2013-10-04T16:14:51.000Z</published>
    <updated>2023-08-05T13:01:26.888Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·研读大股哥》：苦逼赚钱，钱上几番辛酸？股市无须计苍生，纵金银保值，一跌狗屎，屌丝还存银行。</p><p>改编自霹雳角色烟都大宗师“古陵逝烟”的诗号。</p><blockquote><p>冷灯看剑，剑上几番功名？<br>炉香无需计苍生，<br>纵一川烟逝，万丈云埋，<br>孤阳还照古陵。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·研读大股哥》：苦逼赚钱，钱上几番辛酸？股市无须计苍生，纵金银保值，一跌狗屎，屌丝还存银行。&lt;/p&gt;
&lt;p&gt;改编自霹雳角色烟都大宗师“古陵逝烟”的诗号。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;冷灯看剑，剑上几番功名？&lt;br&gt;
炉香无需计苍生，&lt;br&gt;
纵一川烟逝</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
    <category term="金融" scheme="https://blog.umu618.com/tags/%E9%87%91%E8%9E%8D/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·挨踢民工</title>
    <link href="https://blog.umu618.com/2013/10/04/reconstructionism-poet-iter/"/>
    <id>https://blog.umu618.com/2013/10/04/reconstructionism-poet-iter/</id>
    <published>2013-10-04T05:19:25.000Z</published>
    <updated>2023-08-05T13:01:26.888Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·挨踢民工》：搬砖赚外快，钱多人不怪，上治脑缺血，下治四肢衰。</p><h2 id="注解">注解</h2><p>在岳父家帮忙搬砖有感。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·挨踢民工》：搬砖赚外快，钱多人不怪，上治脑缺血，下治四肢衰。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;在岳父家帮忙搬砖有感。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·屌丝红</title>
    <link href="https://blog.umu618.com/2013/09/29/reconstructionism-poet-diaos-bleeding/"/>
    <id>https://blog.umu618.com/2013/09/29/reconstructionism-poet-diaos-bleeding/</id>
    <published>2013-09-29T06:45:10.000Z</published>
    <updated>2023-08-05T13:01:26.888Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#~屌丝红》：屌丝女神滚床单，紧张不慎捅到杆。不是处女也见红，屌丝急称是处男。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#~屌丝红》：屌丝女神滚床单，紧张不慎捅到杆。不是处女也见红，屌丝急称是处男。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="打嘴炮" scheme="https://blog.umu618.com/tags/%E6%89%93%E5%98%B4%E7%82%AE/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·曰泡利器</title>
    <link href="https://blog.umu618.com/2013/09/17/reconstructionism-poet-good-tool-to-get-the-fuck/"/>
    <id>https://blog.umu618.com/2013/09/17/reconstructionism-poet-good-tool-to-get-the-fuck/</id>
    <published>2013-09-17T08:32:08.000Z</published>
    <updated>2023-08-05T13:01:26.888Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·曰泡利器》：利器齐上无淫峰，利器虽利约不力，哥看只能治蛋疼，觉累无爱不跳坑。</p><h2 id="注解">注解</h2><p>多款曰泡利器上架 Windows Phone 应用商店，利器虽然牛逼，但哥不会约，所以只是用于治疗蛋疼，有总比没有好，以免一些不明真相的大众总是喷微软不做应用……呵，那些应用哪里是微软自己做的……总之是用不上，还是不装了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·曰泡利器》：利器齐上无淫峰，利器虽利约不力，哥看只能治蛋疼，觉累无爱不跳坑。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;多款曰泡利器上架 Windows Phone 应用商店，利器虽然牛逼，但哥不会约，所以只是用于治疗蛋疼，有总比没有好，以免一些不明</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·撸妹十分二十秒</title>
    <link href="https://blog.umu618.com/2013/09/14/reconstructionism-poet-lumia-1020/"/>
    <id>https://blog.umu618.com/2013/09/14/reconstructionism-poet-lumia-1020/</id>
    <published>2013-09-14T00:50:13.000Z</published>
    <updated>2023-08-05T13:01:26.888Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·撸妹十分二十秒》：岁月杀猪刀，必须多拍照。爪机最迪奥爆，唯有奥利奥！</p><h2 id="注解">注解</h2><p>奥利奥：Lumia 1020 的昵称。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·撸妹十分二十秒》：岁月杀猪刀，必须多拍照。爪机最迪奥爆，唯有奥利奥！&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;奥利奥：Lumia 1020 的昵称。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·穿女神装的不一定就是女神，还可能是基友</title>
    <link href="https://blog.umu618.com/2013/09/10/reconstructionism-poet-gay/"/>
    <id>https://blog.umu618.com/2013/09/10/reconstructionism-poet-gay/</id>
    <published>2013-09-10T06:02:44.000Z</published>
    <updated>2023-08-05T13:01:26.888Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·穿女神装的不一定就是女神，还可能是基友》：远看皮白皙，近闻风尘气。宜静不宜动，一动泥马避。</p><h2 id="注解">注解</h2><p>题目是随便取的。<br>主题说的是大街上某些美女只可远观，不可近看……还有笑起来可能会致命，还是闭嘴的好。<br>一动泥马避：这句是一语双关。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·穿女神装的不一定就是女神，还可能是基友》：远看皮白皙，近闻风尘气。宜静不宜动，一动泥马避。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;题目是随便取的。&lt;br&gt;
主题说的是大街上某些美女只可远观，不可近看……还有笑起来可能会致命，还是闭嘴的好。&lt;br&gt;</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·鼠标手</title>
    <link href="https://blog.umu618.com/2013/09/10/reconstructionism-poet-carpal-tunnel-syndrome/"/>
    <id>https://blog.umu618.com/2013/09/10/reconstructionism-poet-carpal-tunnel-syndrome/</id>
    <published>2013-09-10T01:43:49.000Z</published>
    <updated>2023-08-05T13:01:26.888Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·鼠标手》：天天撸键鼠，久撸伤筋骨。不动则不痛，一动泥马避。</p><h2 id="注解">注解</h2><p>一动泥马避：这句是一语双关。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·鼠标手》：天天撸键鼠，久撸伤筋骨。不动则不痛，一动泥马避。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;一动泥马避：这句是一语双关。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·研发客</title>
    <link href="https://blog.umu618.com/2013/08/30/reconstructionism-poet-r-d-personnel/"/>
    <id>https://blog.umu618.com/2013/08/30/reconstructionism-poet-r-d-personnel/</id>
    <published>2013-08-30T07:54:31.000Z</published>
    <updated>2023-08-05T13:01:26.888Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·研发客》：研发撸完运维接，运维省钱又和谐。老板扩展新产品，研发再次被坑爹。</p><h2 id="注解">注解</h2><p>一个项目做得差不多了之后，研发就会被赶去做新项目，运维接着负责后期运营，大大地降低成本，而且运维不如研发那么叼，也比较好管理。研发接手新项目，一切从头开始。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·研发客》：研发撸完运维接，运维省钱又和谐。老板扩展新产品，研发再次被坑爹。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;一个项目做得差不多了之后，研发就会被赶去做新项目，运维接着负责后期运营，大大地降低成本，而且运维不如研发那么叼，也比较好管理。研发接</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·山坡羊·河蟹</title>
    <link href="https://blog.umu618.com/2013/08/18/reconstructionism-poet-shanpoyang-harmony/"/>
    <id>https://blog.umu618.com/2013/08/18/reconstructionism-poet-shanpoyang-harmony/</id>
    <published>2013-08-18T05:38:01.000Z</published>
    <updated>2023-08-05T13:01:26.888Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·山坡羊·河蟹》：应用下台，热词犹在！狼友几时相交代？叹兴衰，苦为怀。一计方起，河蟹败，和谐有如云变改，墙，也是哀，纵，也是哀。</p><h2 id="注解">注解</h2><p>多款黄色 App 下架……<br>一计：1G，1024 浏览器</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·山坡羊·河蟹》：应用下台，热词犹在！狼友几时相交代？叹兴衰，苦为怀。一计方起，河蟹败，和谐有如云变改，墙，也是哀，纵，也是哀。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;多款黄色 App 下架……&lt;br&gt;
一计：1G，1024 浏览器&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·圣鹰猪口日哥</title>
    <link href="https://blog.umu618.com/2013/08/12/reconstructionism-poet-0-bug/"/>
    <id>https://blog.umu618.com/2013/08/12/reconstructionism-poet-0-bug/</id>
    <published>2013-08-12T05:01:16.000Z</published>
    <updated>2023-08-05T13:01:26.888Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·圣鹰猪口日哥》：乱码千行八哥藏，漏洞超级亮，开源一刻人气壮，槽点一扫光。</p><p>改编自霹雳角色“圣婴主焱无上”的诗号。</p><blockquote><p>乱局千秋凤影藏，披云超世浪；<br>燎原一刻狼烟壮，浴火饮天光。</p></blockquote><h2 id="注解">注解</h2><p>口日哥：0 bug<br>八哥：bug</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·圣鹰猪口日哥》：乱码千行八哥藏，漏洞超级亮，开源一刻人气壮，槽点一扫光。&lt;/p&gt;
&lt;p&gt;改编自霹雳角色“圣婴主焱无上”的诗号。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;乱局千秋凤影藏，披云超世浪；&lt;br&gt;
燎原一刻狼烟壮，浴火饮天光。&lt;/p&gt;
&lt;/blockqu</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·朝夕&amp;青春在潮汐间逝去，其实哥想说的是月经……</title>
    <link href="https://blog.umu618.com/2013/08/09/reconstructionism-poet-menses/"/>
    <id>https://blog.umu618.com/2013/08/09/reconstructionism-poet-menses/</id>
    <published>2013-08-09T15:25:58.000Z</published>
    <updated>2023-08-05T13:01:26.888Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·朝夕&amp;青春在潮汐间逝去，其实哥想说的是月经……》：朝生蛋蛋暮成鸟，一夕风霜倾海潮。骚年转眼已大叔，黯然对墙撸一炮。</p><p>改编自霹雳角色“青丝台·朝如青丝暮成雪”的诗号。</p><blockquote><p>朝如青丝暮成雪，<br>一夕风霜倾海楼。</p></blockquote><h2 id="注解">注解</h2><p>早上生的蛋到了晚上已经孵化成小鸟了，风霜引起的海潮一夕便可倾倒众生。生命多么脆弱，岁月如此残酷，仿佛昨日还是小骚年，转眼却已是大叔，呵……黯然感叹时光蹉跎，只好对墙撸一炮蛋定一下了……</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·朝夕&amp;amp;青春在潮汐间逝去，其实哥想说的是月经……》：朝生蛋蛋暮成鸟，一夕风霜倾海潮。骚年转眼已大叔，黯然对墙撸一炮。&lt;/p&gt;
&lt;p&gt;改编自霹雳角色“青丝台·朝如青丝暮成雪”的诗号。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;朝如青丝暮成雪，&lt;br&gt;
一夕风霜</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·咦，洞！</title>
    <link href="https://blog.umu618.com/2013/08/03/reconstructionism-poet-hole/"/>
    <id>https://blog.umu618.com/2013/08/03/reconstructionism-poet-hole/</id>
    <published>2013-08-03T06:14:26.000Z</published>
    <updated>2023-08-05T13:01:26.888Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·咦，洞！》：一入洞中十八年，左右互撸屌成仙。最终虽然死翘翘，必留秘籍后人练。</p><h2 id="注解">注解</h2><p>喷一下武侠小说的套路。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·咦，洞！》：一入洞中十八年，左右互撸屌成仙。最终虽然死翘翘，必留秘籍后人练。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;喷一下武侠小说的套路。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·晒机</title>
    <link href="https://blog.umu618.com/2013/07/23/reconstructionism-poet-cellphone-show/"/>
    <id>https://blog.umu618.com/2013/07/23/reconstructionism-poet-cellphone-show/</id>
    <published>2013-07-23T01:31:27.000Z</published>
    <updated>2024-04-13T14:38:27.526Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·晒机》：新家采光很给力，早上起来晒机机。沃草晒黑怎么办？切掉再长最牛逼！</p><h2 id="注解">注解</h2><p>从 18 楼搬到 28 楼，早上进来采光比较好，机机表示有点不习惯……</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·晒机》：新家采光很给力，早上起来晒机机。沃草晒黑怎么办？切掉再长最牛逼！&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;从 18 楼搬到 28 楼，早上进来采光比较好，机机表示有点不习惯……&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="怪悟" scheme="https://blog.umu618.com/tags/%E6%80%AA%E6%82%9F/"/>
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="打嘴炮" scheme="https://blog.umu618.com/tags/%E6%89%93%E5%98%B4%E7%82%AE/"/>
    
    <category term="鹏风" scheme="https://blog.umu618.com/tags/%E9%B9%8F%E9%A3%8E/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·没得匹</title>
    <link href="https://blog.umu618.com/2013/07/18/reconstructionism-poet-no-one-pbc/"/>
    <id>https://blog.umu618.com/2013/07/18/reconstructionism-poet-no-one-pbc/</id>
    <published>2013-07-18T12:32:03.000Z</published>
    <updated>2023-08-05T13:01:26.888Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·没得匹》：天生丽质难自弃，不少妹子等哥匹。匹来匹去皆嘴炮，活该匹完被拉黑！</p><h2 id="注解">注解</h2><p>台风天，夜独行，来吐槽一下自己！<br>匹：批处理打嘴炮。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·没得匹》：天生丽质难自弃，不少妹子等哥匹。匹来匹去皆嘴炮，活该匹完被拉黑！&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;台风天，夜独行，来吐槽一下自己！&lt;br&gt;
匹：批处理打嘴炮。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="打嘴炮" scheme="https://blog.umu618.com/tags/%E6%89%93%E5%98%B4%E7%82%AE/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·贱肥</title>
    <link href="https://blog.umu618.com/2013/07/10/reconstructionism-poet-train-hard-to-lose-weight/"/>
    <id>https://blog.umu618.com/2013/07/10/reconstructionism-poet-train-hard-to-lose-weight/</id>
    <published>2013-07-10T06:25:12.000Z</published>
    <updated>2023-08-05T13:01:26.888Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·贱肥》：十个晚跑九个肥，九个胖子八个痿。当初要不吃成猪，今日何苦来遭罪。</p><h2 id="注解">注解</h2><p>软件园散步观后感。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·贱肥》：十个晚跑九个肥，九个胖子八个痿。当初要不吃成猪，今日何苦来遭罪。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;软件园散步观后感。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·高端黑草根</title>
    <link href="https://blog.umu618.com/2013/07/03/reconstructionism-poet-arrested-cracker/"/>
    <id>https://blog.umu618.com/2013/07/03/reconstructionism-poet-arrested-cracker/</id>
    <published>2013-07-03T07:57:55.000Z</published>
    <updated>2023-08-05T13:01:26.888Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·高端黑草根》：穷逼青年技术高，撸来外挂领风骚。腾讯告，十年牢，撸管撸到真屌爆！</p><h2 id="注解">注解</h2><p>惊闻软件园有人因为做外挂被捕而作。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·高端黑草根》：穷逼青年技术高，撸来外挂领风骚。腾讯告，十年牢，撸管撸到真屌爆！&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;惊闻软件园有人因为做外挂被捕而作。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·好湿</title>
    <link href="https://blog.umu618.com/2013/06/24/reconstructionism-poet-so-wet/"/>
    <id>https://blog.umu618.com/2013/06/24/reconstructionism-poet-so-wet/</id>
    <published>2013-06-24T04:41:32.000Z</published>
    <updated>2023-08-05T13:01:26.888Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·好湿》：夏来一周雨，滋润草林木。泥哥没带伞，半路淋成猪。</p><h2 id="注解">注解</h2><p>骑车去上班，结果半路下大雨……</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·好湿》：夏来一周雨，滋润草林木。泥哥没带伞，半路淋成猪。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;骑车去上班，结果半路下大雨……&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="泥巴娃" scheme="https://blog.umu618.com/tags/%E6%B3%A5%E5%B7%B4%E5%A8%83/"/>
    
    <category term="闽南语" scheme="https://blog.umu618.com/tags/%E9%97%BD%E5%8D%97%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>开发 Windows RT 桌面应用（来自 Surface RT）</title>
    <link href="https://blog.umu618.com/2013/05/09/umutech-windows-rt-develop/"/>
    <id>https://blog.umu618.com/2013/05/09/umutech-windows-rt-develop/</id>
    <published>2013-05-09T14:37:39.000Z</published>
    <updated>2023-08-05T13:01:26.888Z</updated>
    
    <content type="html"><![CDATA[<h2 id="闲谈">闲谈</h2><p>这篇文章是用 Surface RT 写的。先喷一下这设备不爽的地方！</p><ol><li>请看 PPI 对比：</li></ol><ul><li><p>Surface RT = <code>sqrt(1366^2+768^2)/10.6</code> = 147.8</p></li><li><p>XPS 15 = <code>sqrt(1920^2+1080^2)/15.6</code> = 141.2</p></li></ul><p>居然才比 XPS 15 高了一小点！</p><ol start="2"><li>后摄像头成像质量太一般。</li></ol><p>再来要说的是，微软的自残行为。UMU 用过 iOS、Android 平板，甚至见过有人用 XP 平板，但相信，论系统本身 Windows RT 是最强大的。不过微软为了战略目标，把 RT 强大的一面给锁起来了。对开发人员来说，这锁表现在以下几点：</p><ol><li><p>系统本身不允许运行没有微软签名的 EXE；</p></li><li><p>VS2012 默认无法编译 ARM 程序；</p></li><li><p>VS2012 自带的 ARM lib 缺失。</p></li></ol><h2 id="开始折腾">开始折腾</h2><p>下面就是简单介绍一下如何突破这三个封锁：</p><h3 id="1-解锁签名限制">1. 解锁签名限制</h3><p>RT Jailbreak Tool By Netham45, Version 1.20</p><p><a href="http://forum.xda-developers.com/showthread.php?t=2092158">http://forum.xda-developers.com/showthread.php?t=2092158</a></p><p>另外，有很多开源软件已经移植，在开发自己的程序之前，可以先试试，Desktop apps ported to Windows RT：<a href="http://forum.xda-developers.com/showthread.php?t=2092348">http://forum.xda-developers.com/showthread.php?t=2092348</a></p><h3 id="2-开启-VS2012-的-ARM-支持">2. 开启 VS2012 的 ARM 支持</h3><p>来自 <a href="http://stackoverflow.com/questions/11151474/can-arm-desktop-programs-be-built-using-visual-studio-2012">http://stackoverflow.com/questions/11151474/can-arm-desktop-programs-be-built-using-visual-studio-2012</a> 的答案</p><blockquote><p>You can edit the file:</p><p><code>C:\Program Files (x86)\MSBuild\Microsoft.Cpp\v4.0\V110\Platforms\ARM\Microsoft.Cpp.ARM.Common.props</code></p></blockquote><p>对 VS2013 路径是：</p><p><code>C:\Program Files (x86)\MSBuild\Microsoft.Cpp\v4.0\V120\Platforms\ARM\Platform.Common.props</code></p><blockquote><p>In the<PropertyGroup>section add the line:</p><p><code>&lt;WindowsSDKDesktopARMSupport&gt;true&lt;/WindowsSDKDesktopARMSupport&gt;</code></p><p>before <code>&lt;/PropertyGroup&gt;</code></p><p>And that’s all, you can build ARM desktop apps with VS2012.</p></blockquote><p>某些工程需要强制定义 _ARM_WINAPI_PARTITION_DESKTOP_SDK_AVAILABLE 才可以。</p><h3 id="3-获取更多的-ARM-libs">3.获取更多的 ARM libs</h3><p>开源工具应运而生：<a href="https://github.com/peterdn/dll2lib">https://github.com/peterdn/dll2lib</a></p><p>然后，炫耀一下，UMU 已经把自己的一个小作品“<a href="/2011/12/13/umutech-tianyi-speed/">天翼宽带智能提速</a>”移植成功。这个程序比较小，一两个小时从解锁到移植开发全部搞定。</p><p>最后，如果程序是 .NET 4.x 写的，是可以直接跑在 RT 上的，所以为了省力气，也许应该考虑多用 .NET。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;闲谈&quot;&gt;闲谈&lt;/h2&gt;
&lt;p&gt;这篇文章是用 Surface RT 写的。先喷一下这设备不爽的地方！&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;请看 PPI 对比：&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Surface RT = &lt;code&gt;sqrt(1366^2+768</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="windows" scheme="https://blog.umu618.com/tags/windows/"/>
    
    <category term="作品" scheme="https://blog.umu618.com/tags/%E4%BD%9C%E5%93%81/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·震邦</title>
    <link href="https://blog.umu618.com/2013/04/25/reconstructionism-poet-shake-nation/"/>
    <id>https://blog.umu618.com/2013/04/25/reconstructionism-poet-shake-nation/</id>
    <published>2013-04-25T09:10:13.000Z</published>
    <updated>2023-08-05T13:01:26.888Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·震邦》：汶川宝宝芦山没，装逼作秀唱你妹。各种悲剧各种坑，一半红情一半黑。</p><h2 id="注解">注解</h2><p>评新闻《汶川地震宝宝芦山地震去世》和《韩红怒斥赈灾歌曲：唱歌比救援还重要？》，顺便纪念过世的好友陈震邦。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·震邦》：汶川宝宝芦山没，装逼作秀唱你妹。各种悲剧各种坑，一半红情一半黑。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;评新闻《汶川地震宝宝芦山地震去世》和《韩红怒斥赈灾歌曲：唱歌比救援还重要？》，顺便纪念过世的好友陈震邦。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
  </entry>
  
  <entry>
    <title>解析 Windows 快捷方式的经验</title>
    <link href="https://blog.umu618.com/2013/04/18/umutech-about-parsing-windows-shortcuts/"/>
    <id>https://blog.umu618.com/2013/04/18/umutech-about-parsing-windows-shortcuts/</id>
    <published>2013-04-18T02:35:45.000Z</published>
    <updated>2024-05-25T08:36:03.812Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求">需求</h2><p>在 Windows 平台，解析快捷方式（.lnk 文件），获得它指向的目标路径。</p><h2 id="分析">分析</h2><p>有以下相关 API 可以使用：</p><ul><li>IShellLink 对象</li><li>MsiGetShortcutTarget</li></ul><h2 id="实践">实践</h2><p>首先，当然是 MSDN 一下 IShellLink 这个 COM 接口，照着写一下，然后测试。郁闷的事情开始了！IShellLink 对象无法正确解析 MSI 创建的新型快捷方式。</p><p>所以要用 MsiGetShortcutTarget + MsiGetComponentPath 先尝试获得，失败了才用 IShellLink。</p><p>继续测试大量快捷方式后，发现另一个问题：当自己是 x86 程序时，读取的快捷方式如果指向的是 Program Files 下的任何文件或者文件夹，都会被强制解析为 Program Files (x86)，好智能啊！！</p><p>搜一下，发现使用 IShellLink 对象的前提下，无法解决这个问题。无数老外都郁闷！</p><p>于是开始逆向，发现是 IDL 被读出来时就已经做了转换，所以用 IShellLink::GetIDList + SHGetPathFromIDList 也是浪费力气。</p><p>最后无奈了，如果发现自己在 WOW64 下运行就直接自己解析快捷方式了……</p><h2 id="参考">参考</h2><ol><li>【已失效】<a href="http://www.vckbase.com/index.php/wv/1132">http://www.vckbase.com/index.php/wv/1132</a></li><li><a href="https://www.codeproject.com/Articles/24001/Workaround-for-IShellLink-GetPath">https://www.codeproject.com/Articles/24001/Workaround-for-IShellLink-GetPath</a></li><li>【已失效】<a href="http://biancheng.dnbcw.info/1000wen/447642.html">http://biancheng.dnbcw.info/1000wen/447642.html</a></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;需求&quot;&gt;需求&lt;/h2&gt;
&lt;p&gt;在 Windows 平台，解析快捷方式（.lnk 文件），获得它指向的目标路径。&lt;/p&gt;
&lt;h2 id=&quot;分析&quot;&gt;分析&lt;/h2&gt;
&lt;p&gt;有以下相关 API 可以使用：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IShellLink 对象&lt;/li&gt;
&lt;</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="windows" scheme="https://blog.umu618.com/tags/windows/"/>
    
    <category term="debug" scheme="https://blog.umu618.com/tags/debug/"/>
    
  </entry>
  
  <entry>
    <title>程序员心法三则</title>
    <link href="https://blog.umu618.com/2013/04/04/umutech-3-laws-for-programmer/"/>
    <id>https://blog.umu618.com/2013/04/04/umutech-3-laws-for-programmer/</id>
    <published>2013-04-03T16:44:11.000Z</published>
    <updated>2023-08-05T13:01:26.888Z</updated>
    
    <content type="html"><![CDATA[<p>本文不是介绍奇技淫巧，甚至本质上并不是技术，而是态度，心法。</p><h2 id="1-抓住问题的本质，在源头解决问题">1.抓住问题的本质，在源头解决问题</h2><p>简单地说，A 有八哥，B 依赖 A，所以导致依赖 B 的 C 出问题，您会通过修改 B 来解决问题吗？正常人都知道要先解决 A 的八哥，蛋似，稍微复杂、含蓄点的问题就有人迷糊了：</p><p>一个浮动小窗体，不希望在任务栏上出现标签。</p><p>UMU 见过有人使用了 ITaskbarList 对象的 DeleteTab 方法来删掉任务栏上的标签，很高端的做法。蛋似，不够本质，我们要的是不让它出现，而不是出现后擦掉……很早以前，explorer.exe 挂掉后，任务栏通知区域的 QQ 图标就消失了，因为当时 QQ 没有处理任务栏重建的通知消息 TaskbarCreated，重新添加图标。前面说的方法，有同样的问题，explorer.exe 重启后，标签又会出现，还要再删除一次。</p><p>正确的主流做法有两个，看情况采用：(1)、WS_EX_TOOLWINDOW；(2)、指定一个隐藏窗体为自己的拥有者。</p><p>另一个脱裤子放屁的例子：获得一个文本文件大小，然后 new 一个够大的 char 数组 p，把内容读到 p 上，最后 ::std::string str = p; delete[] p;，这个见太多次，都懒得喷了。::std::string 有 resize 方法，可以直接分配，不需要 new 一个临时数组，再 delete……</p><p>《<a href="/2012/12/25/umutech-is-xp/">判断系统是不是 XP</a>》，也包含了这一哲学，表面上看有好多函数可以获得系统信息，但要明白他们的本质其实有差别，不是都可以混用。</p><h2 id="2-要有远见，没有？至少不要不见棺材不落泪！">2.要有远见，没有？至少不要不见棺材不落泪！</h2><p>Y2K 已经过去了，但还有一个 Y2K38，又称 Unix Millennium Bug，历史原因 Unix 时间戳是一个 32 位整数，记录从 1970 年 01 月 01 日开始的秒数，它所能保存的最大时间长度大概是 68.1 年，2038 年 1 月 19 日 03:14:07 之后。</p><p>以前硬盘容量小，也不看高清，很多代码都认为文件大小用 32 位表示就够了，结果后来出现很多 ISO、高清电影，都超过 4G……还见过有人采集流量用 32 位整形表示，时间跑久了就溢出了。</p><p>远见未必人人都有，退一步说，UMU 敢保证，有很多人即使知道 32 位不够用，还是继续用着，明知道 IPv6 已经出现了很久，还是各种硬编码，认为 IP 地址一定是 IPv4 的地址。态度问题！</p><h2 id="3-不要姑息养奸">3.不要姑息养奸</h2><p>遇到不合理的情况，UMU 认为应该给力地告诉该知道的人。比如，函数不希望入参是某指，可是调用者偏偏就输入了那个值，怎么办？打印调试信息？不够给力，容易被忽视，应该中断一下，告诉开发者。</p><p>配置文件字段被改错，怎么办？如果这个文件是技术人员维护的，应该抛出异常，死给修改配置文件的人看；如果是一般的最终用户，那应该弹出界面，友好提示哪里、怎么错了。</p><p>早期，很多程序员为了避免头文件被重复包含，就用了以下代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> XXX</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> XXX</span></span><br><span class="line"><span class="comment">// 各种语句</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><p>后来，大家喜欢用 #pragma once，省事，又不容易漏掉最后的 #endif。但是这样做之后会……姑息养奸！除非十分通用的工具类，对严谨的人来说，重复包含是不应该的！所以应该这样：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> XXX</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">error</span> <span class="meta-string">&quot;您不严谨了！&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> XXX</span></span><br><span class="line"><span class="comment">// 各种语句</span></span><br></pre></td></tr></table></figure><p>有重复包含立刻告警，而且都是集中在开头，不存在漏掉 #endif 的问题。</p><p>态度问题！这里只是举几个简单的例子~</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本文不是介绍奇技淫巧，甚至本质上并不是技术，而是态度，心法。&lt;/p&gt;
&lt;h2 id=&quot;1-抓住问题的本质，在源头解决问题&quot;&gt;1.抓住问题的本质，在源头解决问题&lt;/h2&gt;
&lt;p&gt;简单地说，A 有八哥，B 依赖 A，所以导致依赖 B 的 C 出问题，您会通过修改 B 来解决问题</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="optimization" scheme="https://blog.umu618.com/tags/optimization/"/>
    
  </entry>
  
  <entry>
    <title>卸载 LSP 并重启系统依然有服务加载它</title>
    <link href="https://blog.umu618.com/2013/03/26/umutech-service-not-unload-lsp/"/>
    <id>https://blog.umu618.com/2013/03/26/umutech-service-not-unload-lsp/</id>
    <published>2013-03-26T15:24:30.000Z</published>
    <updated>2023-08-05T13:01:26.888Z</updated>
    
    <content type="html"><![CDATA[<h2 id="发现问题，2012-12-11-18-16-00">发现问题，2012-12-11 18:16:00</h2><p>快游（网游加速器）包含一个 LSP，属于加速核心组件，在测试 LSP 期间，发现一个奇怪的现象：反注册它，并 netsh winsock reset 加重启好几次……依然有程序加载它。用 Process Explorer 查看是：IpOverUsbSvc.exe 和 daemonu.exe。把 LSP 的 DLL 文件删掉，再重启，可以消灭这个奇怪的现象。但后来想重现这个怪现象时，却无法重现。</p><h2 id="重现和解决问题，2012-12-25-15-38-00">重现和解决问题，2012-12-25 15:38:00</h2><p>问题自然重现，继续研究。这两个进程对应的服务名是：IpOverUsbSvc 和 nvUpdatusService。手动重启这两个服务后，即不再加载 LSP。推理：这两个服务很可能每次重启机器时都没有正常关闭，系统提供了某种机制让他们在下一次重启后快速恢复了运行现场（保留了有 LSP 注册时的环境）。</p><h2 id="分析问题，2013-03-26-23-24-30">分析问题，2013-03-26 23:24:30</h2><p>时隔三个月，偶然看到介绍&quot;混合式关机&quot;的文章，恍然大悟，原来是这货引发的八哥！</p><blockquote><p>在安装 Win8 后，很多人都体验到了其开关机惊人的速度，尤其是开机速度，相比 Win7 之下，它提升的不止是一点半点。在某些超极本和配备了 SSD 的机器上，其开关机速度可以在数秒以内。例如 Surface Pro，其实测系统引导速度为2秒，从启动到自动登录到开始屏幕只要6秒。</p><p>究竟是什么技术提升了 Win8 的开关机速度呢？如果要用最简单的一句话概括，那应该是&quot;系统会话休眠&quot;，或者更简单的，“混合式关机”。</p><p>在 以往的 Windows OS 中，典型的关机顺序为：</p><ol><li><p>单击&quot;关机&quot;。</p></li><li><p>Windows 广播运行应用程序关机信息，让应用程序可以保存数据和设置。应用程序也可以要求一些额外的时间以结束其当前工作。</p></li><li><p>Windows 为每个登录用户关闭用户会话。</p></li><li><p>Windows 向服务发送关机信息，通知已开始关机，接着关闭服务。如果服务未响应，系统将强制关闭。</p></li><li><p>Windows 向设备广播信息，示意设备进行关闭。</p></li><li><p>Windows 关闭系统会话（也称为&quot;会话 0&quot;）。</p></li><li><p>Windows 刷新系统驱动器待决数据，以确保完全保存。</p></li><li><p>Windows 通过 ACPI 界面向系统发送信号以给计算机断电。</p></li></ol><p>看着以上的典型关机步骤，你是不是也有想到一些步骤对应的屏幕上的 UI 表现呢~</p><p>再来看看 Windows 8 采用的混合式关机主要步骤：</p><ol><li><p>单击&quot;关机&quot;。</p></li><li><p>Windows 广播运行应用程序关机信息，让应用程序可以保存数据和设置。应用程序也可以要求取得一些额外的时间以结束其当前工作。</p></li><li><p>Windows 为每个登录用户关闭用户会话。</p></li><li><p>系统会话休眠，并掉电。</p></li></ol><p>可见，Windows 8 只关闭用户会话而不像以前那样完全关闭计算机。此时， Windows 不再等待并结束系统服务和关闭会话 0，而是让其进入休眠。这种关闭用户会话+休眠系统服务和系统会话的做法，被称为&quot;混合式关机&quot;，也就不难理解了。</p><p>或者说得通俗点，就好比你之前打扫卫生时，需要先组装专业的拖布，组装好了以后，才能开始打扫卫生。而现在，你可以拿起拖布直接开始打扫，因为你上次打扫完之后，并没有将拖布这一工具像以往那样拆卸下来收好。</p><p>开机在结构上是关机的逆过程，所以有了混合式关机，开机自然也就快了。但是，除了 RAID 卡外，一般硬盘的读取速度会比写入速度略快，加上关机的时候，系统会通知并等待应用程序退出，所以从感官上，开机过程会比关机过程显得要快一些。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;发现问题，2012-12-11-18-16-00&quot;&gt;发现问题，2012-12-11 18:16:00&lt;/h2&gt;
&lt;p&gt;快游（网游加速器）包含一个 LSP，属于加速核心组件，在测试 LSP 期间，发现一个奇怪的现象：反注册它，并 netsh winsock rese</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="windows" scheme="https://blog.umu618.com/tags/windows/"/>
    
    <category term="debug" scheme="https://blog.umu618.com/tags/debug/"/>
    
  </entry>
  
  <entry>
    <title>枚举物理网卡</title>
    <link href="https://blog.umu618.com/2013/03/25/umutech-enumerate-physical-network-cards/"/>
    <id>https://blog.umu618.com/2013/03/25/umutech-enumerate-physical-network-cards/</id>
    <published>2013-03-25T07:25:41.000Z</published>
    <updated>2023-08-05T13:01:26.888Z</updated>
    
    <content type="html"><![CDATA[<p>其实目的是获取靠谱的 MAC 地址，但这个任务真蛋疼！不信您看看搜索出来的乐射……</p><p>神马 GetAdaptersInfo、GetIfEntry、GetAdaptersAddresses、NetWkstaTransportEnum，还有读取注册表 <code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\NetworkCards</code>。这些都会枚举到虚拟网卡，给您举个例子“VirtualBox Host-Only Ethernet Adapter”，读取神马 NetCfgInstanceId、MediaSubType，都不靠谱，没有平台移植性！</p><p>用 Setup API 枚举 Interface，匹配 PCI 和 USB 类型是比较靠谱的。</p><p>蛋似，虚拟机的网卡也是虚拟的，为了方便在虚拟机测试，您要注意放开一些特例……很抱歉，领导说代码要保密，自己搜吧，关键字：SetupDiGetDeviceInterfaceDetail、OID_802_3_PERMANENT_ADDRESS。</p><p>给个蛋碎的例子：<code>\\.\pci#ven_10ec&amp;dev_8168&amp;subsys_050e1028&amp;rev_06#4&amp;224db6dd&amp;0&amp;00e5#&#123;ad498944-762f-11d0-8dcb-00c04fc3358c&#125;\&#123;4cc0ea76-88b7-40e1-8b4b-6339f8dd49bf&#125;</code> 可以简称为 <code>\\.\&#123;4cc0ea76-88b7-40e1-8b4b-6339f8dd49bf&#125;</code> 或者 <code>\\.\Global\&#123;4cc0ea76-88b7-40e1-8b4b-6339f8dd49bf&#125;</code>。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;其实目的是获取靠谱的 MAC 地址，但这个任务真蛋疼！不信您看看搜索出来的乐射……&lt;/p&gt;
&lt;p&gt;神马 GetAdaptersInfo、GetIfEntry、GetAdaptersAddresses、NetWkstaTransportEnum，还有读取注册表 &lt;code&gt;H</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="windows" scheme="https://blog.umu618.com/tags/windows/"/>
    
    <category term="调研" scheme="https://blog.umu618.com/tags/%E8%B0%83%E7%A0%94/"/>
    
  </entry>
  
  <entry>
    <title>协议加速的三个时代</title>
    <link href="https://blog.umu618.com/2013/03/16/umutech-three-eras-of-protocol-acceleration/"/>
    <id>https://blog.umu618.com/2013/03/16/umutech-three-eras-of-protocol-acceleration/</id>
    <published>2013-03-16T07:51:08.000Z</published>
    <updated>2023-08-05T13:01:26.888Z</updated>
    
    <content type="html"><![CDATA[<p>这里要说的是基于反向代理＋缓存的加速。位于客户端和服务端之间的加速系统，理解某些协议，并对这些协议进行处理，使客户端不需要做任何改动的前提下，其请求被重定向到更“近”的“代理服务器”上。</p><h2 id="普通时代">普通时代</h2><p>主要处理公开的协议，最明显的例子是 HTTP 下载，加速系统理解 HTTP 协议，当收到 GET 请求时，伪造 302 等跳转回应，使客户端改向加速系统提供的“代理服务器”下载。</p><p>当一个域名只用于 HTTP 服务时，还可以对这个域名做文章……DNS 协议也是公开的。</p><h2 id="文艺时代">文艺时代</h2><p>各种下载器、视频应用开始采用私有协议……所以，逆向就必不可少了，这个时代加速服务提供商必须有一定开发实力，不能再用一些开源代码整合就了事。</p><h2 id="二逼时代">二逼时代</h2><p>某些下载器的公司出于各种原因不希望别人假扮自己的“服务器”，于是做出了艰难的决定，下载协议使用非对称算法加密，这样一来，即使那些逆向高手把整个下载器客户端都逆向了，那也只是做出一个客户端，无法扮演服务端，于是乎……加速服务公司都 2B 了，要私钥吗？分点钱吧！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这里要说的是基于反向代理＋缓存的加速。位于客户端和服务端之间的加速系统，理解某些协议，并对这些协议进行处理，使客户端不需要做任何改动的前提下，其请求被重定向到更“近”的“代理服务器”上。&lt;/p&gt;
&lt;h2 id=&quot;普通时代&quot;&gt;普通时代&lt;/h2&gt;
&lt;p&gt;主要处理公开的协议，最明</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="调研" scheme="https://blog.umu618.com/tags/%E8%B0%83%E7%A0%94/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·逼制主义社会</title>
    <link href="https://blog.umu618.com/2013/03/13/reconstructionism-poet-socialist-society/"/>
    <id>https://blog.umu618.com/2013/03/13/reconstructionism-poet-socialist-society/</id>
    <published>2013-03-13T02:38:14.000Z</published>
    <updated>2023-08-05T13:01:26.888Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·逼制主义社会》：天朝逼制造白痴，临产女警守岗位。大量出血死翘翘，不知改骂该叹息！</p><h2 id="注解">注解</h2><p>评新闻《临产女警坚守岗位 大出血母子双亡》，国人缺乏安全感，无奈也。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·逼制主义社会》：天朝逼制造白痴，临产女警守岗位。大量出血死翘翘，不知改骂该叹息！&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;评新闻《临产女警坚守岗位 大出血母子双亡》，国人缺乏安全感，无奈也。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·天上人间</title>
    <link href="https://blog.umu618.com/2013/03/08/reconstructionism-poet-heaven-on-earth/"/>
    <id>https://blog.umu618.com/2013/03/08/reconstructionism-poet-heaven-on-earth/</id>
    <published>2013-03-08T13:21:46.000Z</published>
    <updated>2023-08-05T13:01:26.888Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·天上人间》：日前淫雨春阑珊，转眼初夏艳阳天。炮友再见遥无期，必须一夜七次欢。</p><h2 id="注解">注解</h2><p>天气变化有感而作，纯属打嘴炮。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·天上人间》：日前淫雨春阑珊，转眼初夏艳阳天。炮友再见遥无期，必须一夜七次欢。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;天气变化有感而作，纯属打嘴炮。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="打嘴炮" scheme="https://blog.umu618.com/tags/%E6%89%93%E5%98%B4%E7%82%AE/"/>
    
  </entry>
  
  <entry>
    <title>吃屎是不可避免的未来~</title>
    <link href="https://blog.umu618.com/2013/03/01/eat-shit/"/>
    <id>https://blog.umu618.com/2013/03/01/eat-shit/</id>
    <published>2013-03-01T03:42:00.000Z</published>
    <updated>2023-08-05T13:01:26.888Z</updated>
    
    <content type="html"><![CDATA[<p>未来，可能是为了节省能源，或者出于“猪”道主义，人类已经不吃禽兽这类比较有情感的动物了，根据泥巴娃所梦，未来的人都是吃虫的。<br>果蝇、蛆等虫，虽然恶心，但是经过加工，确实是很好的蛋白质来源。<br>泥巴娃注意到这个流程：人拉屎，养蝇蛆，产蛋白质，加工成肉，人吃肉，拉屎……<br>这个过程很快，很快，快到来不及反应，就变成了——人吃屎！<br>一个个面目狰狞，手里还捧着一坨屎，要请泥巴娃吃，泥巴娃眼一睁，整个世界清静了~</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;未来，可能是为了节省能源，或者出于“猪”道主义，人类已经不吃禽兽这类比较有情感的动物了，根据泥巴娃所梦，未来的人都是吃虫的。&lt;br&gt;
果蝇、蛆等虫，虽然恶心，但是经过加工，确实是很好的蛋白质来源。&lt;br&gt;
泥巴娃注意到这个流程：人拉屎，养蝇蛆，产蛋白质，加工成肉，人吃肉，拉</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="怪悟" scheme="https://blog.umu618.com/tags/%E6%80%AA%E6%82%9F/"/>
    
    <category term="泥巴娃" scheme="https://blog.umu618.com/tags/%E6%B3%A5%E5%B7%B4%E5%A8%83/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·鲸神链</title>
    <link href="https://blog.umu618.com/2013/02/21/reconstructionism-poet-platonic-love/"/>
    <id>https://blog.umu618.com/2013/02/21/reconstructionism-poet-platonic-love/</id>
    <published>2013-02-21T01:05:11.000Z</published>
    <updated>2023-08-05T13:01:26.888Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·鲸神链》：尘网乱我眼，封七鹰三十年。修心识本性，笑谈鲸神链。</p><h2 id="注解">注解</h2><p>“鲸神链”的由来：大三或者大四时，申请了一个新 QQ，想取个特别的昵称，当时想自己是“技术流”，所以就输入 jsl，结果出来的是“精神恋”，感觉也不错，因为 UMU 觉得爱情的最高境界就是“精神恋”，但直接这么下去肯定很多人喷，所以就用了“鲸神链”。</p><p>尘世太多喧嚣、压抑物欲横飞遮乱了人们的眼睛，让人看不清真相本源。</p><p>哥因此封印了天生敏锐的感情世界，转眼三十年过去了……</p><p>世道修心是体会人间悲苦离合，虽然大家都是杯具，蛋似哥坚持聪明天赋、善良本性。</p><p>笑看当今物欲世界，哥一直认为精神恋才是爱情的最高境界，这在凡人眼里只是笑话，只有哥还在谈情说爱大笑。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·鲸神链》：尘网乱我眼，封七鹰三十年。修心识本性，笑谈鲸神链。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;“鲸神链”的由来：大三或者大四时，申请了一个新 QQ，想取个特别的昵称，当时想自己是“技术流”，所以就输入 jsl，结果出来的是“精神恋”，感觉也</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="鲸神链" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%93%BE/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·古古锅锅给哦哦哦</title>
    <link href="https://blog.umu618.com/2013/02/12/reconstructionism-poet-cock/"/>
    <id>https://blog.umu618.com/2013/02/12/reconstructionism-poet-cock/</id>
    <published>2013-02-12T05:07:09.000Z</published>
    <updated>2023-08-05T13:01:26.888Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·古古锅锅给哦哦哦》：退田盖新房，旧屋种菜偿。家鸡不识哥，十年亦沧桑。</p><h2 id="注解">注解</h2><p>泥巴娃小时候，老家就是典型的农村，很多田野，种各种菜，后来退田盖新房，但是妈妈保留了种菜自己吃的习惯，于是在旧屋的屋顶搞了很多塑料泡沫箱子来种菜，屋内则养鸡鸭。最近去旧屋看了一圈，觉得陌生了许多，才十年而已，却恍如隔世。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·古古锅锅给哦哦哦》：退田盖新房，旧屋种菜偿。家鸡不识哥，十年亦沧桑。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;泥巴娃小时候，老家就是典型的农村，很多田野，种各种菜，后来退田盖新房，但是妈妈保留了种菜自己吃的习惯，于是在旧屋的屋顶搞了很多塑料泡沫箱子</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="鲸神链" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%93%BE/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·圣魔神胎</title>
    <link href="https://blog.umu618.com/2013/02/04/reconstructionism-poet-child-of-saint-and-demon/"/>
    <id>https://blog.umu618.com/2013/02/04/reconstructionism-poet-child-of-saint-and-demon/</id>
    <published>2013-02-04T05:51:00.000Z</published>
    <updated>2023-08-05T13:01:26.888Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·#圣魔神胎#》：西天无神佛，人却有心魔。孤寂虽吾形，修心不堕恶。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·#圣魔神胎#》：西天无神佛，人却有心魔。孤寂虽吾形，修心不堕恶。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="圣小开" scheme="https://blog.umu618.com/tags/%E5%9C%A3%E5%B0%8F%E5%BC%80/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·背运</title>
    <link href="https://blog.umu618.com/2013/02/04/reconstructionism-poet-bad-luck/"/>
    <id>https://blog.umu618.com/2013/02/04/reconstructionism-poet-bad-luck/</id>
    <published>2013-02-04T05:29:43.000Z</published>
    <updated>2023-08-05T13:01:26.888Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·背运》：前半红灯后半行，走完前半后半停。坑爹是时不是路，时不逢机不能生。</p><h2 id="注解">注解</h2><p>中午去吃饭，过马路时很倒霉，两段都是红灯……又听闻某些人备孕很久都没中，有感而作。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·背运》：前半红灯后半行，走完前半后半停。坑爹是时不是路，时不逢机不能生。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;中午去吃饭，过马路时很倒霉，两段都是红灯……又听闻某些人备孕很久都没中，有感而作。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·望海69打炮门</title>
    <link href="https://blog.umu618.com/2013/01/11/reconstructionism-poet-fuck-on-the-roof/"/>
    <id>https://blog.umu618.com/2013/01/11/reconstructionism-poet-fuck-on-the-roof/</id>
    <published>2013-01-11T15:19:11.000Z</published>
    <updated>2023-08-05T13:01:26.888Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·望海69打炮门》：水映明月风云淡，对看佳人花正艳。良辰美景来一炮，六九楼顶两高干。</p><h2 id="注解">注解</h2><p>惊闻望海路 69 号楼顶有人打炮而作。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·望海69打炮门》：水映明月风云淡，对看佳人花正艳。良辰美景来一炮，六九楼顶两高干。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;惊闻望海路 69 号楼顶有人打炮而作。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="打嘴炮" scheme="https://blog.umu618.com/tags/%E6%89%93%E5%98%B4%E7%82%AE/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·重口嫖流瓶</title>
    <link href="https://blog.umu618.com/2013/01/07/reconstructionism-poet-drift-bottle/"/>
    <id>https://blog.umu618.com/2013/01/07/reconstructionism-poet-drift-bottle/</id>
    <published>2013-01-07T03:20:55.000Z</published>
    <updated>2023-08-05T13:01:26.878Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·重口嫖流瓶》：出差到它地，半夜欲MC。嫖流瓶发泄，泄完撸油漆。</p><h2 id="注解">注解</h2><p>微信捡到一个重口嫖流瓶，里面有图有 JB。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·重口嫖流瓶》：出差到它地，半夜欲MC。嫖流瓶发泄，泄完撸油漆。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;微信捡到一个重口嫖流瓶，里面有图有 JB。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>判断系统是不是 XP</title>
    <link href="https://blog.umu618.com/2012/12/25/umutech-is-xp/"/>
    <id>https://blog.umu618.com/2012/12/25/umutech-is-xp/</id>
    <published>2012-12-25T03:16:06.000Z</published>
    <updated>2023-08-05T13:01:26.878Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求">需求</h2><p>实现 Edit 控件文字透明，在 XP 下有 Bug，得做特殊处理，所以要判断当前系统是不是 XP，蛋似，要考虑到“兼容性”：如果系统是 Vista、Win7、8、9、10，则他们都有兼容 XP 的模式，GetVersion/GetVersionEx 都会被欺骗。</p><h2 id="解决">解决</h2><p>这种情况需要的是：VerifyVersionInfo</p><h2 id="参考">参考</h2><p><a href="http://msdn.microsoft.com/en-us/library/ms725492(v=vs.85).aspx">http://msdn.microsoft.com/en-us/library/ms725492(v=vs.85).aspx</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;需求&quot;&gt;需求&lt;/h2&gt;
&lt;p&gt;实现 Edit 控件文字透明，在 XP 下有 Bug，得做特殊处理，所以要判断当前系统是不是 XP，蛋似，要考虑到“兼容性”：如果系统是 Vista、Win7、8、9、10，则他们都有兼容 XP 的模式，GetVersion/GetV</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="windows" scheme="https://blog.umu618.com/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>XP 下 Edit 控件透明字体时的 Bug</title>
    <link href="https://blog.umu618.com/2012/12/25/umutech-buggy-edit-control-under-xp/"/>
    <id>https://blog.umu618.com/2012/12/25/umutech-buggy-edit-control-under-xp/</id>
    <published>2012-12-25T02:06:29.000Z</published>
    <updated>2023-08-05T13:01:26.878Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前提">前提</h2><p>XP 系统，程序使用了 Manifest 指定使用 Microsoft.Windows.Common-Controls<br>现象：Edit 控件处理 WM_CTLCOLOREDIT 改变颜色，问题出在 SetBkMode 设置透明后，控件删除字符时无法立刻刷新，即会残留。</p><h2 id="解決">解決</h2><h3 id="方法-1">方法 1</h3><p>自残，别用 Microsoft.Windows.Common-Controls，删除类似下列的代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">if</span> defined _M_IX86</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">pragma</span> comment(linker, <span class="meta-string">&quot;/manifestdependency:\&quot;type=&#x27;win32&#x27; name=&#x27;Microsoft.Windows.Common-Controls&#x27; version=&#x27;6.0.0.0&#x27; processorArchitecture=&#x27;x86&#x27; publicKeyToken=&#x27;6595b64144ccf1df&#x27; language=&#x27;*&#x27;\&quot;&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">elif</span> defined _M_IA64</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">pragma</span> comment(linker, <span class="meta-string">&quot;/manifestdependency:\&quot;type=&#x27;win32&#x27; name=&#x27;Microsoft.Windows.Common-Controls&#x27; version=&#x27;6.0.0.0&#x27; processorArchitecture=&#x27;ia64&#x27; publicKeyToken=&#x27;6595b64144ccf1df&#x27; language=&#x27;*&#x27;\&quot;&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">elif</span> defined _M_X64</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">pragma</span> comment(linker, <span class="meta-string">&quot;/manifestdependency:\&quot;type=&#x27;win32&#x27; name=&#x27;Microsoft.Windows.Common-Controls&#x27; version=&#x27;6.0.0.0&#x27; processorArchitecture=&#x27;amd64&#x27; publicKeyToken=&#x27;6595b64144ccf1df&#x27; language=&#x27;*&#x27;\&quot;&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">pragma</span> comment(linker, <span class="meta-string">&quot;/manifestdependency:\&quot;type=&#x27;win32&#x27; name=&#x27;Microsoft.Windows.Common-Controls&#x27; version=&#x27;6.0.0.0&#x27; processorArchitecture=&#x27;*&#x27; publicKeyToken=&#x27;6595b64144ccf1df&#x27; language=&#x27;*&#x27;\&quot;&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><h3 id="方法-2">方法 2</h3><p>放弃“透明”，采用“伪透明”——如果您的背景是纯色，用 SetBkColor 就行。</p><h3 id="方法-3（推荐）">方法 3（推荐）</h3><p>检测到 XP 时，WM_CTLCOLOREDIT 返回画刷前，自己用 FillRect/Rectangle 涂一下……或者发一个 WM_ERASEBKGND，当然这个做法的前提是 WM_ERASEBKGND 的处理就是自己涂一下，如果就一句 return TRUE 那是等于啥也没干。</p><h2 id="参考">参考</h2><p>同样悲剧的一个描述：<a href="http://zhidao.baidu.com/question/9749770.html">http://zhidao.baidu.com/question/9749770.html</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前提&quot;&gt;前提&lt;/h2&gt;
&lt;p&gt;XP 系统，程序使用了 Manifest 指定使用 Microsoft.Windows.Common-Controls&lt;br&gt;
现象：Edit 控件处理 WM_CTLCOLOREDIT 改变颜色，问题出在 SetBkMode 设置透明</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="windows" scheme="https://blog.umu618.com/tags/windows/"/>
    
    <category term="cpp" scheme="https://blog.umu618.com/tags/cpp/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·挨踢威</title>
    <link href="https://blog.umu618.com/2012/12/22/reconstructionism-poet-itv/"/>
    <id>https://blog.umu618.com/2012/12/22/reconstructionism-poet-itv/</id>
    <published>2012-12-22T09:32:28.000Z</published>
    <updated>2023-08-05T13:01:26.878Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·挨踢威》：十年河西今河东，弱经烽火死无踪。未来岂是挨踢威？骚年摇头撸爱轰。</p><p>由霹雳角色“南冕.超轶主”的诗号获得灵感而作。</p><blockquote><p>由来泉石潜蛟龙，<br>不经烽火不现踪。<br>风云岂是苍天主？<br>拈作轩冕上九重。</p></blockquote><h2 id="注解">注解</h2><p>挨踢威（iTV）势在必行了，产品可以做好，看好，蛋似利润肯定不如手机平板，出货量也不可能。没有跨时代意义。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·挨踢威》：十年河西今河东，弱经烽火死无踪。未来岂是挨踢威？骚年摇头撸爱轰。&lt;/p&gt;
&lt;p&gt;由霹雳角色“南冕.超轶主”的诗号获得灵感而作。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;由来泉石潜蛟龙，&lt;br&gt;
不经烽火不现踪。&lt;br&gt;
风云岂是苍天主？&lt;br&gt;
拈作轩</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·世界末日</title>
    <link href="https://blog.umu618.com/2012/12/16/reconstructionism-poet-doomsday/"/>
    <id>https://blog.umu618.com/2012/12/16/reconstructionism-poet-doomsday/</id>
    <published>2012-12-16T06:21:00.000Z</published>
    <updated>2023-08-05T13:01:26.878Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·世界末日》：骚年不肯琵碧玺，今日碧非昨日碧。恍若昙花开一瞬，世界末日明日至。劝君须惜骚年碧，劝君莫要再搞基。末日未日快去日，日完记得洗机机。</p><p>改编自唐朝诗人杜秋娘的古诗作品《金缕衣》。</p><blockquote><p>劝君莫惜金缕衣，劝君惜取少年时。<br>花开堪折直须折，莫待无花空折枝。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·世界末日》：骚年不肯琵碧玺，今日碧非昨日碧。恍若昙花开一瞬，世界末日明日至。劝君须惜骚年碧，劝君莫要再搞基。末日未日快去日，日完记得洗机机。&lt;/p&gt;
&lt;p&gt;改编自唐朝诗人杜秋娘的古诗作品《金缕衣》。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;劝君莫惜金缕衣，劝君惜</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="打嘴炮" scheme="https://blog.umu618.com/tags/%E6%89%93%E5%98%B4%E7%82%AE/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·碉堡的机机</title>
    <link href="https://blog.umu618.com/2012/12/15/reconstructionism-poet-awesome-cellphone/"/>
    <id>https://blog.umu618.com/2012/12/15/reconstructionism-poet-awesome-cellphone/</id>
    <published>2012-12-15T07:57:39.000Z</published>
    <updated>2024-04-13T14:38:27.528Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·碉堡的机机》：身长长机机，一机装二逼。云端通讯录，网络三四G。</p><p>改编自霹雳角色“御天荒神六铢衣”出场诗。</p><blockquote><p>身披六铢衣，<br>御宇藏真理。<br>云中封神路，<br>紫薇降天启！</p></blockquote><h2 id="注解">注解</h2><p>身长长机机：身上长着很长的机机。<br>一机装二逼：一个机机就可以装两个逼，不管是装牛逼还是撒逼，简直易如反掌，果然是装逼利器！<br>云端通讯录：现在的智能手机都可以把通讯录备份到云端。<br>网络三四G：支持 3G、4G，各种制式。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·碉堡的机机》：身长长机机，一机装二逼。云端通讯录，网络三四G。&lt;/p&gt;
&lt;p&gt;改编自霹雳角色“御天荒神六铢衣”出场诗。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;身披六铢衣，&lt;br&gt;
御宇藏真理。&lt;br&gt;
云中封神路，&lt;br&gt;
紫薇降天启！&lt;/p&gt;
&lt;/block</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
    <category term="鹏风" scheme="https://blog.umu618.com/tags/%E9%B9%8F%E9%A3%8E/"/>
    
  </entry>
  
  <entry>
    <title>开发 LSP 遇到的蛋疼问题</title>
    <link href="https://blog.umu618.com/2012/12/11/umutech-debug-lsp/"/>
    <id>https://blog.umu618.com/2012/12/11/umutech-debug-lsp/</id>
    <published>2012-12-11T10:16:00.000Z</published>
    <updated>2023-08-05T13:01:26.878Z</updated>
    
    <content type="html"><![CDATA[<p>今天发生一个莫名其妙的问题，导致浪费一个早上的时间排查问题。</p><p>测试 LSP 期间，已经反注册它，netsh winsock reset 加重启好几次……依然有程序加载它，用 Process Explorer 查了一下是：IpOverUsbSvc.exe 和 daemonu.exe，后来把 LSP 文件删掉，再重启，这时候当然无法加载了，可是 UMU 又想重现一下这个莫名其妙的问题，结果一个早上没了，无法重现……</p><p>15:38 2012/12/25 补充</p><p>今天这个现象又出现了。再手动重启这两个服务后，不再加载 LSP 了。它们对应的服务名是：IpOverUsbSvc 和 nvUpdatusService。这说明这两个服务很可能每次重启机器时都没有正常关闭，系统提供了某种机制让他们在下一次重启后快速恢复了运行现场（保留了有 LSP 注册时的环境）。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;今天发生一个莫名其妙的问题，导致浪费一个早上的时间排查问题。&lt;/p&gt;
&lt;p&gt;测试 LSP 期间，已经反注册它，netsh winsock reset 加重启好几次……依然有程序加载它，用 Process Explorer 查了一下是：IpOverUsbSvc.exe 和 d</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="windows" scheme="https://blog.umu618.com/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·白衣沽酒醉花颜</title>
    <link href="https://blog.umu618.com/2012/12/02/reconstructionism-poet-drunken-beauty/"/>
    <id>https://blog.umu618.com/2012/12/02/reconstructionism-poet-drunken-beauty/</id>
    <published>2012-12-02T07:34:08.000Z</published>
    <updated>2023-08-05T13:01:26.878Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·白衣沽酒醉花颜》：百代繁华一朝残，千秋明月吹角寒。风云天骄皆过客，醉卧花丛是悠然。</p><p>改编自霹雳角色“白衣沽酒绮罗生”的诗号。</p><blockquote><p>百代繁华一朝都，谁非过客；<br>千秋明月吹角寒，花是主人。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·白衣沽酒醉花颜》：百代繁华一朝残，千秋明月吹角寒。风云天骄皆过客，醉卧花丛是悠然。&lt;/p&gt;
&lt;p&gt;改编自霹雳角色“白衣沽酒绮罗生”的诗号。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;百代繁华一朝都，谁非过客；&lt;br&gt;
千秋明月吹角寒，花是主人。&lt;/p&gt;
&lt;/blo</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
  </entry>
  
  <entry>
    <title>拯救 TL-WR941N V4.1 路由器</title>
    <link href="https://blog.umu618.com/2012/11/30/umutech-save-brick-tplink-tl-wr941n/"/>
    <id>https://blog.umu618.com/2012/11/30/umutech-save-brick-tplink-tl-wr941n/</id>
    <published>2012-11-30T12:15:30.000Z</published>
    <updated>2023-10-29T12:24:56.937Z</updated>
    
    <content type="html"><![CDATA[<p>死因：在官方 ROM 上 刷不了 Tomato，试着刷了 DD-WRT 后，再刷 Tomato，结果刷完 213 了……</p><p>TTL 线拯救，网络是强大的，关键字：WR941N 短路 C278 电容</p><p>本文只为发几张图，如果有人不幸和 UMU 一样壮烈地撸死了这款路由器，可以参考之。</p><p><img src="/images/2012/20121130-tl-wr941n.jpg" alt="TL-WR941N V4.1"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;死因：在官方 ROM 上 刷不了 Tomato，试着刷了 DD-WRT 后，再刷 Tomato，结果刷完 213 了……&lt;/p&gt;
&lt;p&gt;TTL 线拯救，网络是强大的，关键字：WR941N 短路 C278 电容&lt;/p&gt;
&lt;p&gt;本文只为发几张图，如果有人不幸和 UMU 一样壮烈</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="embedded" scheme="https://blog.umu618.com/tags/embedded/"/>
    
    <category term="router" scheme="https://blog.umu618.com/tags/router/"/>
    
  </entry>
  
  <entry>
    <title>用树莓派 + USB 无线网卡做了一个蛋疼的 AP Client</title>
    <link href="https://blog.umu618.com/2012/11/18/umutech-raspberry-pi-working-as-ap-client/"/>
    <id>https://blog.umu618.com/2012/11/18/umutech-raspberry-pi-working-as-ap-client/</id>
    <published>2012-11-18T15:21:09.000Z</published>
    <updated>2023-08-05T13:01:26.878Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求">需求</h2><p>两个困境：</p><ul><li><p>有个只有 RJ45 接口的旧设备要上网，它的位置离路由器很远，家里的网线不够长……</p></li><li><p>UMU 买了一个支持 AP Client 的无线路由器（TP-Link TL-WR800N）每次把这个 AP Client 断电时，提供网络的主路由器都会被这个 AP Client 搞死掉，原因未知……</p></li></ul><p>还没有树莓派的时候，UMU 用笔记本上的 Windows 的 ICS 功能给它提供网络，当然这方法很不好，于是有了现在的方案。</p><h2 id="解决">解决</h2><p>仔细查看了树莓派支持的 USB WiFi Adapters 列表，挑选了 TP-LINK TL-WN823N（RT8192CU 芯片），这个在 Raspbian 上是 Work out-of-box。Mercury 150Mbps MW150U（Realtek RTL8188CU 芯片）也可以。</p><p>硬件准备好后，第一步，配置 Wifi，连上主路由器，假定，此步将 wlan0 的 IP 配置为 192.168.1.2，<code>/etc/network/interfaces</code> 的内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">auto lo</span><br><span class="line"></span><br><span class="line">iface lo inet loopback</span><br><span class="line">iface eth0 inet static</span><br><span class="line">address 192.168.24.51</span><br><span class="line">netmask 255.255.255.0</span><br><span class="line"></span><br><span class="line">auto wlan0</span><br><span class="line">iface wlan0 inet static</span><br><span class="line">address 192.168.1.2</span><br><span class="line">netmask 255.255.255.0</span><br><span class="line">gateway 192.168.1.1</span><br><span class="line">wpa-conf &#x2F;etc&#x2F;wpa_supplicant&#x2F;wpa_supplicant.conf</span><br><span class="line"></span><br><span class="line">iface default inet dhcp</span><br></pre></td></tr></table></figure><p>192.168.24.51 这个 IP 可以改为别的，UMU 习惯用这个当网关地址。<code>/etc/wpa_supplicant/wpa_supplicant.conf</code> 的内容这里就忽略了，参考 <a href="http://elinux.org/RPi_Peripherals#Wireless:_TP-Link_TL-WN722N_USB_wireless_adapter_.28Debian_6.29">http://elinux.org/RPi_Peripherals#Wireless:_TP-Link_TL-WN722N_USB_wireless_adapter_.28Debian_6.29</a>。设置完，<code>ifdown wlan0</code> 再 <code>ifup wlan0</code>，看看 USB 无线网卡的指示灯应该闪起来了……</p><p>第二步，配置 RJ45 网口的 NAT。首先，修改 <code>/etc/sysctl.conf</code>，增加以下两行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">net.ipv4.ip_forward&#x3D;1</span><br><span class="line">net.ipv4.conf.all.accept_source_route &#x3D; 1</span><br></pre></td></tr></table></figure><p>运行 <code>echo 1 &gt; /proc/sys/net/ipv4/ip_forward</code> 和 <code>iptables -t nat -A POSTROUTING -s 192.168.24.0/24 -o wlan0 -j SNAT --to 192.168.1.2</code>，并将这条命令写到 <code>/etc/rc.local</code> 中的 <code>exit</code> 前。</p><p>最后，<code>reboot</code> 一下试试。可以用网线把 PC 和树莓派连起来，PC 的网卡设为 24 段地址，网关 192.168.24.51，试一下 PC 通过树莓派的网口上网吧！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;需求&quot;&gt;需求&lt;/h2&gt;
&lt;p&gt;两个困境：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;有个只有 RJ45 接口的旧设备要上网，它的位置离路由器很远，家里的网线不够长……&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;UMU 买了一个支持 AP Client 的无线路由器（TP-Lin</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="embedded" scheme="https://blog.umu618.com/tags/embedded/"/>
    
  </entry>
  
  <entry>
    <title>图像格式转换之 Jpeg2Jxr</title>
    <link href="https://blog.umu618.com/2012/11/18/umutech-jpeg2jxr/"/>
    <id>https://blog.umu618.com/2012/11/18/umutech-jpeg2jxr/</id>
    <published>2012-11-18T07:40:25.000Z</published>
    <updated>2023-08-05T13:01:26.878Z</updated>
    
    <content type="html"><![CDATA[<p>为什么转？因为 JXR 格式在同等质量的情况下，存储空间比 JPEG 节约了 45-50%。</p><p>之前在《<a href="/2012/10/13/umutech-mato-orientation-bug/">从 Windows 8 新功能推理某产品的八哥</a>》提到过现在手机上的省流量 App，其原理就是压缩图片，但为了提高效果，这个压缩基本都是有损的，流量减少了，但是图片质量下降了，有的下降可以忍受，有的则令人发指！比如，长微博，文字转图片，这种图片线条分明，相邻像素值对比可能很大（黑白分明），这类图片采用高压缩比的 JPEG 压缩后，图片质量往往很差。</p><p>再举个例子：QR 码图片，您可以做一下试验，为了说明 JPEG 不适合存储线条型图片，哥采用一张蛋疼的 1290*1290 像素的 QR 码图片，保存为 JPEG 大小是 4.76MB，但保存为 PNG 格式时只有 52.4KB，请注意单位，前者是后者大小的将近 100 倍！！</p><p>大家可能比较少关注 WP，也许您没听过 DataSense，简单地说，它就是微软做的节省流量的 App。号称可以节约 45% 的流量，这么大的压缩率，除了优化 HTML 相关的文本之外，对图片的压缩肯定是必须的！推测 DataSense 可能使用了 JPEG XR 格式来转化其他格式的图片。</p><p>JPEG XR 虽然已经成为一种标准，但目前依然只有微软支持，所以，如果您想把这个技术应用到 iOS、Android 的节省流量 App 中，那很抱歉，此路暂时还不通。</p><p>根据实测，IE9@PC、IE10@PC、IE10@WP8 都是支持 JXR 格式的。下面是用 C++/CLI 写的很简单的一个格式转化程序：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> System;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> System::IO;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> System::Windows::Media;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> System::Windows::Media::Imaging;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">ConvertToJxr</span><span class="params">(System::String^ source_name)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//try &#123;</span></span><br><span class="line">        Stream^ stream = gcnew FileStream(source_name, FileMode::Open, FileAccess::Read, FileShare::Read);</span><br><span class="line">        BitmapDecoder^ jpeg_decoder =  BitmapDecoder::Create(stream, BitmapCreateOptions::PreservePixelFormat, BitmapCacheOption::None);</span><br><span class="line">        <span class="comment">//JpegBitmapDecoder^ jpeg_decoder = gcnew JpegBitmapDecoder(gcnew Uri(source_name, UriKind::RelativeOrAbsolute), BitmapCreateOptions::PreservePixelFormat, BitmapCacheOption::None);</span></span><br><span class="line">        <span class="comment">//Console::WriteLine(L&quot;Author: `&#123;0&#125;&#x27;&quot;, jpeg_decoder-&gt;Metadata-&gt;Title);</span></span><br><span class="line">        FileStream^ jxr_file_stream = gcnew FileStream(source_name + <span class="string">L&quot;.jxr&quot;</span>, FileMode::Create);</span><br><span class="line">        WmpBitmapEncoder^ jxr_encoder = gcnew WmpBitmapEncoder;</span><br><span class="line">        <span class="comment">//BitmapMetadata^ metadata = gcnew BitmapMetadata(L&quot;wmphoto&quot;);</span></span><br><span class="line">        </span><br><span class="line">        <span class="function"><span class="keyword">for</span> <span class="title">each</span> <span class="params">(BitmapFrame ^ frame in jpeg_decoder-&gt;Frames)</span> </span>&#123;</span><br><span class="line">            jxr_encoder-&gt;Frames-&gt;Add(BitmapFrame::Create(frame, jpeg_decoder-&gt;Thumbnail, (BitmapMetadata^)frame-&gt;Metadata, jpeg_decoder-&gt;ColorContexts));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//jxr_encoder-&gt;Metadata = metadata;</span></span><br><span class="line">        jxr_encoder-&gt;Save(jxr_file_stream);</span><br><span class="line">    <span class="comment">//&#125; catch (...) &#123;</span></span><br><span class="line">    <span class="comment">//    return false;</span></span><br><span class="line">    <span class="comment">//&#125;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="built_in">array</span>&lt;System::String ^&gt; ^args)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">for</span> <span class="title">each</span> <span class="params">(<span class="keyword">auto</span> arg in args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (File::Exists(arg)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (ConvertToJxr(arg)) &#123;</span><br><span class="line">                Console::WriteLine(<span class="string">L&quot;Converted: `&#123;0&#125;&#x27;&quot;</span>, arg);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            Console::WriteLine(<span class="string">L&quot;NOT Exists: `&#123;0&#125;&#x27;&quot;</span>, arg);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>文末是一些搜索到的关于 JPEG XR 的资料，可供参考：</p><p><a href="http://jpeg.org/newsrel26.html">http://jpeg.org/newsrel26.html</a></p><blockquote><p>JPEG XR (ISO/IEC 29199-2) is now an International Standard and also an ITU-T Recommendation (T.832).</p><p>JPEG XR（旧称 HD Photo 及 Windows Media Photo）是一种连续色调静止图像压缩算法和文件格式，由Microsoft开发，属于Windows Media家族的一部分。它支持有损数据压缩以及无损数据压缩，并且是微软的XPS文档的首选图像格式。<a href="http://xn--5nq34f2p222c6cz5mp05beyag72n.NET">目前支持的软件包括.NET</a> Framework（3.0 or newer），Windows Vista/Windows 7、Internet Explorer 9，Flashplayer 11等。</p><p>JPEG XR（微软HD Photo格式）2009 年，成为 ITU-T 推荐的国际标准（ISO/IEC 29199-2）。JPEG XR 的标准化确保数码相机、打印机、显示器和软件公司能够在开发其新产品的时候兼容互通。其核心技术由微软核心媒体开发团队开发完成，针对当前和将来的数字图像发展需求以提供了许多新的优势和特点。</p><p>在 Vista 操作系统中已经支持了这种新的文件格式，JPEG XR 相比其它技术更有优势，其中包括更好的压缩技术，以一半的文件大小保存与 JPEG 相同质量的图像，或以相同大小的文件保存质量相当于 JPEG 两倍的图像。JPEG 组织还对微软开放与 JPEG XR 相关的专利的决策表示了赞扬，称微软免许可费政策将有助于JPEG推动 JPEG XR 普及，有助于确保它能够被更多的用户所采用。JPEG 组织还鼓励其它公司向微软学习。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;为什么转？因为 JXR 格式在同等质量的情况下，存储空间比 JPEG 节约了 45-50%。&lt;/p&gt;
&lt;p&gt;之前在《&lt;a href=&quot;/2012/10/13/umutech-mato-orientation-bug/&quot;&gt;从 Windows 8 新功能推理某产品的八哥&lt;/a&gt;</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="dotnet" scheme="https://blog.umu618.com/tags/dotnet/"/>
    
    <category term="windows" scheme="https://blog.umu618.com/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·一撸仙</title>
    <link href="https://blog.umu618.com/2012/11/10/reconstructionism-poet-wanking-fairy/"/>
    <id>https://blog.umu618.com/2012/11/10/reconstructionism-poet-wanking-fairy/</id>
    <published>2012-11-10T07:11:26.000Z</published>
    <updated>2024-04-13T14:38:27.528Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·一撸仙》：千里风随肩，足下拖鞋浅。遍看琵碧玺，花月一撸仙。</p><p>改编自霹雳角色“风雪一路禅”诗号。</p><blockquote><p>千古佛随肩，<br>足下是福田，<br>遍看云山月，<br>风雪一路禅。</p></blockquote><h2 id="注解">注解</h2><p>穿着阿迪拖鞋暴走的时候，突然想到一路禅的诗号可以这么改~<br>这首诗综合了诗盗、霹雳、暴走、装逼、打嘴炮几大爱好，果然是集大成者。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·一撸仙》：千里风随肩，足下拖鞋浅。遍看琵碧玺，花月一撸仙。&lt;/p&gt;
&lt;p&gt;改编自霹雳角色“风雪一路禅”诗号。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;千古佛随肩，&lt;br&gt;
足下是福田，&lt;br&gt;
遍看云山月，&lt;br&gt;
风雪一路禅。&lt;/p&gt;
&lt;/blockquote</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="打嘴炮" scheme="https://blog.umu618.com/tags/%E6%89%93%E5%98%B4%E7%82%AE/"/>
    
    <category term="暴走" scheme="https://blog.umu618.com/tags/%E6%9A%B4%E8%B5%B0/"/>
    
    <category term="鹏风" scheme="https://blog.umu618.com/tags/%E9%B9%8F%E9%A3%8E/"/>
    
  </entry>
  
  <entry>
    <title>从 Windows 8 新功能推理马头流量的八哥</title>
    <link href="https://blog.umu618.com/2012/10/13/umutech-mato-orientation-bug/"/>
    <id>https://blog.umu618.com/2012/10/13/umutech-mato-orientation-bug/</id>
    <published>2012-10-12T18:57:04.000Z</published>
    <updated>2023-08-05T13:01:26.878Z</updated>
    
    <content type="html"><![CDATA[<p>Windows 8 确实是个不错的系统，DP、CP、RC、RTM，UMU 一路追过来。</p><p>在开始讲故事之前，要先介绍一下马头流量，<a href="http://www.matocloud.com/" title="马头流量">http://www.matocloud.com/</a>，同类产品：上网快鸟、飞速流量、瓦力流量、彩虹流量……当然，这些都是设设 APN 而已，马头的 Android 版本有更高深的技术。想了解更多，请研究一下 EnoVPN、VPN Service。</p><p>再来是流量压缩原理简介：主要是压缩图片。APN 就是一个 HTTP 代理，只不过这个代理有点不标准，会将原图压缩后交给用户，用户下载的是一张小图，自然就省流量。但这是有副作用的，有的图片必须是有损压缩才会变小，所以必然会降低图片质量。知道这个原理后，可能会有人会纠结了……至于您用不用，就看您在图片质量和流量之间的取舍了。</p><p>故事开始了！UMU 用 HTC Titan 拍过不少图片，当然其中不少是横屏拍的。这个手机有重力感应功能，拍的照片会带 Orientation 信息，这是 Exif 的一个字段，专业知识请另行搜索“Exif Orientation”。简单讲，无论您拍照时手机是横是竖，在手机看时，照片都会自动旋转，使景物是正立的。如果您没注意过，可以先在就做这个实验，把 iPhone 倒立拍照，正立过来看，景也会跟着自动转……</p><p>当 UMU 把图片同步到电脑上时，情况就不同了。Windows 7 自带的画图、图片查看器都不支持对 Orientation 自动校正，IE9、IE10、Chrome 22.0.1229.94 m、<a href="http://Paint.NET">Paint.NET</a> 也都不支持。所以，UMU 经常看到横屏拍的照片，在 Windows 7 上是歪 90 度显示的。</p><p>到 Windows 8 上，自带的画图、图片查看器都支持 Orientation 校正了！有一天，UMU 在看以前拍的图片时，突然发现，所有的图片都正立了……</p><p>蛋似，前面有提到 IE10 是不支持的，所以……UMU 特地上传了一张横拍的图片到腾讯微博上，果然这图就是歪 90 度的，缩略图和原图都是。然后再用 iPhone 看，缩略图是歪 90 度，这说明腾讯微博的缩略图也没考虑 Orientation 信息，点击查看原图，终于正立了，因为 iPhone 基本到处都支持 Orientation 自动旋转校正。</p><p>把这个发现，和马头流量结合起来思考——APN 服务器上的图片压缩程序会不会也没考虑 Orientation 信息？UMU 猜想是很有可能的，腾讯就没考虑到……然后开始测试！用 WiFi 看原图，是正立的，因为 WiFi 下，马头流量不会压缩图片；改用 3G，马头流量开始起作用，再去看原图，发生了两件事，大家应该猜到了——图片质量下降、图片歪了 90 度！八哥！这就是八哥啊！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Windows 8 确实是个不错的系统，DP、CP、RC、RTM，UMU 一路追过来。&lt;/p&gt;
&lt;p&gt;在开始讲故事之前，要先介绍一下马头流量，&lt;a href=&quot;http://www.matocloud.com/&quot; title=&quot;马头流量&quot;&gt;http://www.matocl</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="debug" scheme="https://blog.umu618.com/tags/debug/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·中秋槽</title>
    <link href="https://blog.umu618.com/2012/09/25/reconstructionism-poet-about-the-mid-autumn-day/"/>
    <id>https://blog.umu618.com/2012/09/25/reconstructionism-poet-about-the-mid-autumn-day/</id>
    <published>2012-09-25T14:41:25.000Z</published>
    <updated>2023-08-05T13:01:26.878Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·中秋槽》：今年博饼如去年，又如前年大前年。奖品还是没套套，别人撸锅哥撸个碗。</p><h2 id="注解">注解</h2><p>公司的博饼年年都差不多，没什么改进……奖品都是些用不上的东西，连套套都没有，再加上哥运气不好，别人都能博到锅，哥只能撸个碗（个碗管）。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·中秋槽》：今年博饼如去年，又如前年大前年。奖品还是没套套，别人撸锅哥撸个碗。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;公司的博饼年年都差不多，没什么改进……奖品都是些用不上的东西，连套套都没有，再加上哥运气不好，别人都能博到锅，哥只能撸个碗（个碗管</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·悲剧项目</title>
    <link href="https://blog.umu618.com/2012/09/01/reconstructionism-poet-failed-project/"/>
    <id>https://blog.umu618.com/2012/09/01/reconstructionism-poet-failed-project/</id>
    <published>2012-09-01T08:03:12.000Z</published>
    <updated>2023-08-05T13:01:26.878Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·悲剧项目》：两个黄鹂鸣翠柳，一个项目上西天。眼含泪水兼吐血，门口贴着催款单。</p><p>改编自是唐代诗人杜甫的组诗《绝句》中的第三首《绝句·两个黄鹂鸣翠柳》。</p><blockquote><p>两个黄鹂鸣翠柳，<br>一行白鹭上青天。<br>窗含西岭千秋雪，<br>门泊东吴万里船。</p></blockquote><h2 id="注解">注解</h2><p>一个项目上西天：快游大众版被枪毙，团队被解散。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·悲剧项目》：两个黄鹂鸣翠柳，一个项目上西天。眼含泪水兼吐血，门口贴着催款单。&lt;/p&gt;
&lt;p&gt;改编自是唐代诗人杜甫的组诗《绝句》中的第三首《绝句·两个黄鹂鸣翠柳》。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;两个黄鹂鸣翠柳，&lt;br&gt;
一行白鹭上青天。&lt;br&gt;
窗含西</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·全球架构师峰会</title>
    <link href="https://blog.umu618.com/2012/08/10/reconstructionism-poet-arch-summit/"/>
    <id>https://blog.umu618.com/2012/08/10/reconstructionism-poet-arch-summit/</id>
    <published>2012-08-10T05:22:05.000Z</published>
    <updated>2023-08-05T13:01:26.878Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·#全球架构师峰会#》：全球二字吊又吊，吊丝都来参一脚。饭少队长丢东西，狗血鸟事付一笑。</p><h2 id="注解">注解</h2><p>来深圳参加“全球架构师峰会”，结果发现人真多，而人多的地方必然各种二逼、各种狗血。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·#全球架构师峰会#》：全球二字吊又吊，吊丝都来参一脚。饭少队长丢东西，狗血鸟事付一笑。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;来深圳参加“全球架构师峰会”，结果发现人真多，而人多的地方必然各种二逼、各种狗血。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·厦门焦通</title>
    <link href="https://blog.umu618.com/2012/08/09/reconstructionism-poet-xiamen-traffic/"/>
    <id>https://blog.umu618.com/2012/08/09/reconstructionism-poet-xiamen-traffic/</id>
    <published>2012-08-09T04:06:24.000Z</published>
    <updated>2023-08-05T13:01:26.878Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·厦门焦通》：厦门特区虽显赫，交通烂得逼一个。天上地下不给力，马路两边停满车。</p><h2 id="注解">注解</h2><p>厦门的交通很烂是长久以来有目共睹的，一个小小的火车站，就有好多个站点，外地人刚来简直要被玩死……<br>天上：指 BRT，厦门的 BRT 大多数路段是在高架桥上的。<br>建设规划太过时，停车位太少，特别是软件园这种地方，有车的人特别多，车位基本是按照公交车来设定的，呵……这是上世纪 90 年代的设计了！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·厦门焦通》：厦门特区虽显赫，交通烂得逼一个。天上地下不给力，马路两边停满车。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;厦门的交通很烂是长久以来有目共睹的，一个小小的火车站，就有好多个站点，外地人刚来简直要被玩死……&lt;br&gt;
天上：指 BRT，厦门的</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·最险中国风</title>
    <link href="https://blog.umu618.com/2012/07/09/reconstructionism-poet-the-most-dangerous-chinese-style/"/>
    <id>https://blog.umu618.com/2012/07/09/reconstructionism-poet-the-most-dangerous-chinese-style/</id>
    <published>2012-07-09T01:58:11.000Z</published>
    <updated>2023-08-05T13:01:26.878Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·最险中国风》：屌暴军中神女程，抠腚四兆三天梦。网络安全靠洗脑，浮夸伪造中国风。</p><h2 id="注解">注解</h2><p>李聪娜，解放军美女尖兵：90余昼夜写40万行代码<br>好好一个人，被浮夸外行的媒体给写臭了……实在无语！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·最险中国风》：屌暴军中神女程，抠腚四兆三天梦。网络安全靠洗脑，浮夸伪造中国风。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;李聪娜，解放军美女尖兵：90余昼夜写40万行代码&lt;br&gt;
好好一个人，被浮夸外行的媒体给写臭了……实在无语！&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·最险中国疯</title>
    <link href="https://blog.umu618.com/2012/07/08/reconstructionism-poet-the-most-dangerous-crazy-china/"/>
    <id>https://blog.umu618.com/2012/07/08/reconstructionism-poet-the-most-dangerous-crazy-china/</id>
    <published>2012-07-08T15:40:16.000Z</published>
    <updated>2023-08-05T13:01:26.878Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·最险中国疯》：宣传口号十年坑，砖家年年显神能。最恨官式统计学，道降德衰中国疯。</p><h2 id="注解">注解</h2><p>养老保险的口号几年一换，从养老靠政府到不能靠政府，十分坑爹……<br>这些专家每年都要跳出来讲点脑残言论，傻子都知道这其中是利益导致。<br>一提到人均收入，呵，见证奇迹的时刻来了，财产到底是多集中，一个个屁民都被平均了……<br>对这个神奇的国度，只想说：射精病！得治！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·最险中国疯》：宣传口号十年坑，砖家年年显神能。最恨官式统计学，道降德衰中国疯。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;养老保险的口号几年一换，从养老靠政府到不能靠政府，十分坑爹……&lt;br&gt;
这些专家每年都要跳出来讲点脑残言论，傻子都知道这其中是利</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·挨踢</title>
    <link href="https://blog.umu618.com/2012/06/16/reconstructionism-poet-it/"/>
    <id>https://blog.umu618.com/2012/06/16/reconstructionism-poet-it/</id>
    <published>2012-06-16T15:52:59.000Z</published>
    <updated>2023-08-05T13:01:26.878Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·挨踢》：少年随浪逐名利，老来方知空度日。卧槽心想退休去，可惜尼玛在挨踢。</p><h2 id="注解">注解</h2><p>很多搞挨踢的都觉得自己吃的是青春饭，呵呵~吐吐槽罢了！我们搞的是高科技。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·挨踢》：少年随浪逐名利，老来方知空度日。卧槽心想退休去，可惜尼玛在挨踢。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;很多搞挨踢的都觉得自己吃的是青春饭，呵呵~吐吐槽罢了！我们搞的是高科技。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·鸳鸯溪</title>
    <link href="https://blog.umu618.com/2012/06/03/reconstructionism-poet-yuanyang-river/"/>
    <id>https://blog.umu618.com/2012/06/03/reconstructionism-poet-yuanyang-river/</id>
    <published>2012-06-03T02:06:41.000Z</published>
    <updated>2023-08-05T13:01:26.878Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·鸳鸯溪》：平日今时起，今时日平日。一顿饱餐困，只羡鸳鸯息。</p><h2 id="注解">注解</h2><p>平时起的很晚，今天来鸳鸯溪玩，起得好早，开始玩的时候，平时差不多才起床，真是把平时晚起的优良传统给日了……不幸的是，那天的早餐太好吃，结果吃得太饱，还没玩就困得不行，还不如夫妻双双把家还了，睡大觉。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·鸳鸯溪》：平日今时起，今时日平日。一顿饱餐困，只羡鸳鸯息。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;平时起的很晚，今天来鸳鸯溪玩，起得好早，开始玩的时候，平时差不多才起床，真是把平时晚起的优良传统给日了……不幸的是，那天的早餐太好吃，结果吃得太饱，</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="鲸神链" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%93%BE/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·不二劈</title>
    <link href="https://blog.umu618.com/2012/05/29/reconstructionism-poet-pbc-only-once/"/>
    <id>https://blog.umu618.com/2012/05/29/reconstructionism-poet-pbc-only-once/</id>
    <published>2012-05-29T08:59:00.000Z</published>
    <updated>2023-08-05T13:01:26.878Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·不二劈》：山至绝顶我唯峰，一步苍穹任人狂。平生未弃 P B C，只笑穷 B 不笑娼。</p><h2 id="注解">注解</h2><p>接龙自《霹雳神州II之苍玄泣16》不二做一剑怒劈啸天峰：</p><blockquote><p>山至绝顶我为峰，一步苍穹任人狂。</p></blockquote><p>不代表本人观点。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·不二劈》：山至绝顶我唯峰，一步苍穹任人狂。平生未弃 P B C，只笑穷 B 不笑娼。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;接龙自《霹雳神州II之苍玄泣16》不二做一剑怒劈啸天峰：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;山至绝顶我为峰，一步苍穹</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
    <category term="打嘴炮" scheme="https://blog.umu618.com/tags/%E6%89%93%E5%98%B4%E7%82%AE/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·快撸</title>
    <link href="https://blog.umu618.com/2012/05/24/reconstructionism-poet-masturbate/"/>
    <id>https://blog.umu618.com/2012/05/24/reconstructionism-poet-masturbate/</id>
    <published>2012-05-24T02:08:45.000Z</published>
    <updated>2023-08-05T13:01:26.878Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·快撸》：男女多有误，单身太孤独。搞基搜一基，您还不快撸？</p><h2 id="注解">注解</h2><p>搜一基：so easy<br>快撸：曾经打算把“快游”改名为“快撸”。<br>有感于时下基友当道……</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·快撸》：男女多有误，单身太孤独。搞基搜一基，您还不快撸？&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;搜一基：so easy&lt;br&gt;
快撸：曾经打算把“快游”改名为“快撸”。&lt;br&gt;
有感于时下基友当道……&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
  </entry>
  
  <entry>
    <title>快游简史</title>
    <link href="https://blog.umu618.com/2012/05/20/umutech-a-brief-history-of-kuaiyou/"/>
    <id>https://blog.umu618.com/2012/05/20/umutech-a-brief-history-of-kuaiyou/</id>
    <published>2012-05-19T16:00:00.000Z</published>
    <updated>2023-08-05T13:01:26.878Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0-初尝阶段——技术为导向">0. 初尝阶段——技术为导向</h2><p>为了从技术上超越对手，走自主研发道路，从应用层到驱动层，几乎把 Windows 平台上所有能拦截、过滤网络数据的方案都试过一遍。</p><p>其中主要的技术方案：TDI 驱动、NDIS IMD、LSP（IFS LSP 和 Non-IFS LSP 都有用过）。</p><p>有出产品的一个方案是 NDIS IMD，NT6（Vista+ 系统）上是 NDIS Filter。这个大方向上，又有两个小方案：纯的 NDIS 驱动；接合 LSP 收集游戏 IP 的方案。但是最终因为驱动频繁导致蓝屏，被合作方无情地抛弃……</p><p>不难发现，其实一开始就走错路了，开始产品化的时间是 2008 年，市面上还没多少游戏加速器，最突出的一个就是迅游，他们用的是 VPN+收集路由表的方式，使用的都是现有的成熟技术；而自主研发的驱动要做稳定需要经过很长时间的考验，产品压力下，我们的时间不够……</p><h2 id="1-失败重组阶段——开始以产品为导向">1. 失败重组阶段——开始以产品为导向</h2><p>尝试了 VPN 的路线，想很快做出来，OpenVPN 的积累不足没法很快搞定，系统自带的 PPTP、L2TP 等 VPN，可以很快做出来，但是遇到机房限制，电信的机房不让我们的服务器架设 VPN……最后只能在部分小运营商内使用此方案。</p><p>后来终于重新启用了 LSP 的方案。这个方案原来被弃用原因是一开始使用的是自主研发的代理协议，出了不少问题，并且 LSP 确实也是个很麻烦的东西，安装后容易断网，还会与其它 LSP 冲突……后来代理协议改为公开的 Socks5 协议，服务器端的开发省掉了，全心全力解决 LSP 的问题。总算慢慢看到希望。</p><h2 id="2-缓慢发展阶段——以产品和用户为导向">2. 缓慢发展阶段——以产品和用户为导向</h2><p>由于一直招不到好的开发人员，只能边培养边做事，开发效率不是很高，经常犯错，导致用户投诉。但是整体上一直在收集用户问题，一直在努力解决它们。尤其是核心的 LSP 实现、安装和代理服务程序，参考来了很多同类产品，后来锁定了微软的 Firewall Client for ISA，把  LSP 做成 IFS LSP，使用类似 BSP 的安装方式，这是兼容性最好的方式了。代理服务程序由服务型 COM 对象改为一个普通进程，使用文件映射通信。界面也重新设计，准备推出快游 2012 版。这时候，注册用户是 60 万，在线用户每天平均 1.9 万。</p><h2 id="3-快速死亡阶段——以商业为导向">3. 快速死亡阶段——以商业为导向</h2><p>就在希望满怀，团队兴致最高，暗黑 3 正要引发游戏界又一轮高潮的时候，公司突然不打算做了……目前，为了推广“马头流量”（matocloud），尚能维持运营一段时间。</p><p>快游 2012，又称快游末日版，果然成为末日了！咳咳~一切都是因为钱嘛，可以理解……</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;0-初尝阶段——技术为导向&quot;&gt;0. 初尝阶段——技术为导向&lt;/h2&gt;
&lt;p&gt;为了从技术上超越对手，走自主研发道路，从应用层到驱动层，几乎把 Windows 平台上所有能拦截、过滤网络数据的方案都试过一遍。&lt;/p&gt;
&lt;p&gt;其中主要的技术方案：TDI 驱动、NDIS </summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
    <category term="windows" scheme="https://blog.umu618.com/tags/windows/"/>
    
    <category term="作品" scheme="https://blog.umu618.com/tags/%E4%BD%9C%E5%93%81/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·RTX（日腾讯）</title>
    <link href="https://blog.umu618.com/2012/05/17/reconstructionism-poet-rtx/"/>
    <id>https://blog.umu618.com/2012/05/17/reconstructionism-poet-rtx/</id>
    <published>2012-05-17T02:56:48.000Z</published>
    <updated>2023-08-05T13:01:26.878Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·RTX（日腾讯）》：昨日日腾讯，归来封秋秋。遍地写轮眼，日到几时休？</p><h2 id="注解">注解</h2><p>有一阵子公司出现要禁 QQ，改用 RTX 的趋势，虽然经过分析不太可能，不妨碍有感而作。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·RTX（日腾讯）》：昨日日腾讯，归来封秋秋。遍地写轮眼，日到几时休？&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;有一阵子公司出现要禁 QQ，改用 RTX 的趋势，虽然经过分析不太可能，不妨碍有感而作。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·</title>
    <link href="https://blog.umu618.com/2012/05/11/reconstructionism-poet-scold-loser/"/>
    <id>https://blog.umu618.com/2012/05/11/reconstructionism-poet-scold-loser/</id>
    <published>2012-05-11T14:13:22.000Z</published>
    <updated>2023-08-05T13:01:26.878Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·喷吊丝》：西贝喷子连成气，活活喷死治愈系。五毛三粉互喷粪，其实都在用插屁。</p><h2 id="注解">注解</h2><p>西贝：CnBeta，一个喷子聚集的挨踢资讯网。<br>三粉：果粉（Apple fans）、狗粉（Google fans）、软粉（Microsoft fans）。<br>插屁：XP，微软操作系统。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·喷吊丝》：西贝喷子连成气，活活喷死治愈系。五毛三粉互喷粪，其实都在用插屁。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;西贝：CnBeta，一个喷子聚集的挨踢资讯网。&lt;br&gt;
三粉：果粉（Apple fans）、狗粉（Google fans）、软粉（M</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·遇见</title>
    <link href="https://blog.umu618.com/2012/04/20/reconstructionism-poet-iaround/"/>
    <id>https://blog.umu618.com/2012/04/20/reconstructionism-poet-iaround/</id>
    <published>2012-04-20T14:36:31.000Z</published>
    <updated>2023-08-05T13:01:26.878Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·遇见》：孤人基基数，邀我住天价。牡丹厚帖哦，遇见披鼻吸。</p><p>改编自盛唐诗人孟浩然的《过故人庄》。</p><blockquote><p>故人具鸡黍，邀我至田家。<br>绿树村边合，青山郭外斜。<br>开轩面场圃，把酒话桑麻。<br>待到重阳日，还来就菊花。</p></blockquote><h2 id="注解">注解</h2><p>厚帖哦：Hotel。<br>遇见：一个 App。<br>披鼻吸：PBC（曾经以为大家都是打嘴炮，没想到大家都是真的，只有稣是在装逼）。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·遇见》：孤人基基数，邀我住天价。牡丹厚帖哦，遇见披鼻吸。&lt;/p&gt;
&lt;p&gt;改编自盛唐诗人孟浩然的《过故人庄》。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;故人具鸡黍，邀我至田家。&lt;br&gt;
绿树村边合，青山郭外斜。&lt;br&gt;
开轩面场圃，把酒话桑麻。&lt;br&gt;
待到重阳日</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="打嘴炮" scheme="https://blog.umu618.com/tags/%E6%89%93%E5%98%B4%E7%82%AE/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·天草丧国撸十二</title>
    <link href="https://blog.umu618.com/2012/02/29/reconstructionism-poet-chinese-loser/"/>
    <id>https://blog.umu618.com/2012/02/29/reconstructionism-poet-chinese-loser/</id>
    <published>2012-02-29T13:01:16.000Z</published>
    <updated>2023-08-05T13:01:26.878Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·天草丧国撸十二》：才遭食物毒，又受山寨苦。年年大丰收，天天全家福。</p><h2 id="注解">注解</h2><p>撸十二：loser<br>有感于天草的食品安全问题……以及盗版问题。<br>年年大丰收 vs 大丰收<br>天天全家福 vs 全家福</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·天草丧国撸十二》：才遭食物毒，又受山寨苦。年年大丰收，天天全家福。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;撸十二：loser&lt;br&gt;
有感于天草的食品安全问题……以及盗版问题。&lt;br&gt;
年年大丰收 vs 大丰收&lt;br&gt;
天天全家福 vs 全家福&lt;</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·镇外来客无银呢</title>
    <link href="https://blog.umu618.com/2012/02/29/reconstructionism-poet-foreign-winner/"/>
    <id>https://blog.umu618.com/2012/02/29/reconstructionism-poet-foreign-winner/</id>
    <published>2012-02-29T12:49:28.000Z</published>
    <updated>2023-08-05T13:01:26.878Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·镇外来客无银呢》：佰翔自助餐，一餐一百三。老外无银呢，十分钟撸完！</p><h2 id="注解">注解</h2><p>在佰翔酒店吃自助餐时，看到一位老外，神速地吃完走人……</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·镇外来客无银呢》：佰翔自助餐，一餐一百三。老外无银呢，十分钟撸完！&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;在佰翔酒店吃自助餐时，看到一位老外，神速地吃完走人……&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="泥巴娃" scheme="https://blog.umu618.com/tags/%E6%B3%A5%E5%B7%B4%E5%A8%83/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·微信</title>
    <link href="https://blog.umu618.com/2012/02/21/reconstructionism-poet-wechat/"/>
    <id>https://blog.umu618.com/2012/02/21/reconstructionism-poet-wechat/</id>
    <published>2012-02-21T14:19:44.000Z</published>
    <updated>2023-08-05T13:01:26.878Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·微信》：爱疯塞利器，疑是披逼兮。举头吃鲍鱼，低头撸手机。</p><h2 id="注解">注解</h2><p>举头：哪个头？<br>低头：还是那个头。<br>哥用的是 WP 手机，HTC 末渣特。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·微信》：爱疯塞利器，疑是披逼兮。举头吃鲍鱼，低头撸手机。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;举头：哪个头？&lt;br&gt;
低头：还是那个头。&lt;br&gt;
哥用的是 WP 手机，HTC 末渣特。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="打嘴炮" scheme="https://blog.umu618.com/tags/%E6%89%93%E5%98%B4%E7%82%AE/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·青家菜</title>
    <link href="https://blog.umu618.com/2012/02/04/reconstructionism-poet-good-food/"/>
    <id>https://blog.umu618.com/2012/02/04/reconstructionism-poet-good-food/</id>
    <published>2012-02-04T12:23:29.000Z</published>
    <updated>2023-08-05T13:01:26.878Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·青家菜》：自钓闽江鲈，农家茶籽油。食之有绝味，何须请大厨？</p><h2 id="注解">注解</h2><p>天然食材简单煮酒很好吃。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·青家菜》：自钓闽江鲈，农家茶籽油。食之有绝味，何须请大厨？&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;天然食材简单煮酒很好吃。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="鲸神链" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%93%BE/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·世人都有 Bing</title>
    <link href="https://blog.umu618.com/2012/01/31/reconstructionism-poet-bing/"/>
    <id>https://blog.umu618.com/2012/01/31/reconstructionism-poet-bing/</id>
    <published>2012-01-31T09:47:00.000Z</published>
    <updated>2023-08-05T13:01:26.878Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·世人都有 Bing》：砖家脑子都有 Bing，人民情绪不稳定。可笑天朝虚法制，不杀昌星杀吴英。</p><h2 id="注解">注解</h2><p>搜索引擎一直用 Bing，自从它出来后。<br>评新闻《女富豪吴英集资诈骗案》。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·世人都有 Bing》：砖家脑子都有 Bing，人民情绪不稳定。可笑天朝虚法制，不杀昌星杀吴英。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;搜索引擎一直用 Bing，自从它出来后。&lt;br&gt;
评新闻《女富豪吴英集资诈骗案》。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·墨客</title>
    <link href="https://blog.umu618.com/2012/01/27/reconstructionism-poet-scholars/"/>
    <id>https://blog.umu618.com/2012/01/27/reconstructionism-poet-scholars/</id>
    <published>2012-01-26T18:56:00.000Z</published>
    <updated>2023-08-05T13:01:26.878Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·墨客》：诗盗闲来自娱乐，随兴有感盗诗歌。从来不是风骚客，做客只做土黑客。</p><h2 id="注解">注解</h2><p>今日凌晨梦见自己作的诗，三点多醒来记住了，神奇啊！<br>墨客：土黑客</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·墨客》：诗盗闲来自娱乐，随兴有感盗诗歌。从来不是风骚客，做客只做土黑客。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;今日凌晨梦见自己作的诗，三点多醒来记住了，神奇啊！&lt;br&gt;
墨客：土黑客&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="泥巴娃" scheme="https://blog.umu618.com/tags/%E6%B3%A5%E5%B7%B4%E5%A8%83/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·五寸</title>
    <link href="https://blog.umu618.com/2012/01/26/reconstructionism-poet-5-inches/"/>
    <id>https://blog.umu618.com/2012/01/26/reconstructionism-poet-5-inches/</id>
    <published>2012-01-26T01:26:32.000Z</published>
    <updated>2023-08-05T13:01:26.878Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·五寸》：三寸不觉小，处处逼装吊。五寸大抠呆，二逼有多少？</p><p>改编自唐代诗人孟浩然的《春晓》。</p><blockquote><p>春眠不觉晓，<br>处处闻啼鸟。<br>夜来风雨声，<br>花落知多少。</p></blockquote><h2 id="注解">注解</h2><p>五寸：闽南语中“愚蠢”的发音。<br>大抠呆：闽南语，大傻瓜。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·五寸》：三寸不觉小，处处逼装吊。五寸大抠呆，二逼有多少？&lt;/p&gt;
&lt;p&gt;改编自唐代诗人孟浩然的《春晓》。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;春眠不觉晓，&lt;br&gt;
处处闻啼鸟。&lt;br&gt;
夜来风雨声，&lt;br&gt;
花落知多少。&lt;/p&gt;
&lt;/blockquote&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="闽南语" scheme="https://blog.umu618.com/tags/%E9%97%BD%E5%8D%97%E8%AF%AD/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·穷十三</title>
    <link href="https://blog.umu618.com/2011/12/21/reconstructionism-poet-poor/"/>
    <id>https://blog.umu618.com/2011/12/21/reconstructionism-poet-poor/</id>
    <published>2011-12-21T01:55:00.000Z</published>
    <updated>2023-08-05T13:01:26.878Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·穷十三》：少年贫如洗，小米配大米。不知猪肉味，只有自家鸡。何以下饭，唯有咸蛋。</p><h2 id="注解">注解</h2><p>小时候穷得响叮当的，买不起肉，都吃一些五谷杂粮，很久才能吃上自己养的鸡鸭，平时都是肉酱配饭，咸蛋配粥……<br>最后一句改编自“何以解忧，唯有杜康。”</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·穷十三》：少年贫如洗，小米配大米。不知猪肉味，只有自家鸡。何以下饭，唯有咸蛋。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;小时候穷得响叮当的，买不起肉，都吃一些五谷杂粮，很久才能吃上自己养的鸡鸭，平时都是肉酱配饭，咸蛋配粥……&lt;br&gt;
最后一句改编自</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="鲸神链" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%93%BE/"/>
    
  </entry>
  
  <entry>
    <title>天翼宽带智能提速</title>
    <link href="https://blog.umu618.com/2011/12/13/umutech-tianyi-speed/"/>
    <id>https://blog.umu618.com/2011/12/13/umutech-tianyi-speed/</id>
    <published>2011-12-13T09:03:00.000Z</published>
    <updated>2023-08-05T13:01:26.878Z</updated>
    
    <content type="html"><![CDATA[<p>2011-12-13 17:03 发布于百度空间，最近百度删除了 UMU 高中时代珍贵的记录，所以 UMU 正在去百度化。</p><h2 id="功能介绍">功能介绍</h2><p>福建省的中国电信天翼宽带（家庭 ADSL 网络）用户每月可免费使用 5 小时智能提速，这是一个很给力的东西，一般 ADSL 下行速率是 4Mbps，最高可以提到 20Mbps，看高清电影、下载各种小电影毫无鸭梨。详见：<a href="http://ts.oooxm.com/">http://ts.oooxm.com/</a></p><p>蛋似！作为一名穷人，怎么合理地利用这 5 小时免费提速时间，成为一个有点鸭梨的问题。UMU 的这个小工具就是为了解决这个问题而“蛋生”。</p><p>简单地说就是程序帮您监控网络使用情况，流量跑高就提速，流量低下来就自动停止提速。另外，官方的提速方式是通过网页的形式，UMU 的程序可以在程序界面上直接提速和停止提速。</p><h2 id="下载">下载</h2><p>v1.1</p><p><a href="http://pan.baidu.com/share/link?shareid=90607&amp;uk=3607387813/">http://pan.baidu.com/share/link?shareid=90607&amp;uk=3607387813/</a></p><h2 id="技术原理">技术原理</h2><ol><li><p>流量，API：GetIfEntry、GetIfEntry2</p></li><li><p>SOAP 协议，UMU 用的是 ATL SOAP @ ATL Server，您也可以试试更大型的 gSOAP。</p></li><li><p>原理就是把本来就有的带宽还给我们，原来的 4M 其实是故意限制的……提速的手段除了电信官方分方法之外，还有 OpenWRT 上的“多拨”方案，同时拨号N次，可能拨通，一个4M，如果拨上15个就有60M了……</p></li></ol><hr><p>2013-05-09，这个软件已经有 ARM 版本，详见：《<a href="/2013/05/09/umutech-windows-rt-develop/">开发 Windows RT 桌面应用（来自 Surface RT）</a>》</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;2011-12-13 17:03 发布于百度空间，最近百度删除了 UMU 高中时代珍贵的记录，所以 UMU 正在去百度化。&lt;/p&gt;
&lt;h2 id=&quot;功能介绍&quot;&gt;功能介绍&lt;/h2&gt;
&lt;p&gt;福建省的中国电信天翼宽带（家庭 ADSL 网络）用户每月可免费使用 5 小时智能提速，这</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="windows" scheme="https://blog.umu618.com/tags/windows/"/>
    
    <category term="作品" scheme="https://blog.umu618.com/tags/%E4%BD%9C%E5%93%81/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·午餐</title>
    <link href="https://blog.umu618.com/2011/12/07/reconstructionism-poet-lunch/"/>
    <id>https://blog.umu618.com/2011/12/07/reconstructionism-poet-lunch/</id>
    <published>2011-12-07T04:35:18.000Z</published>
    <updated>2023-08-05T13:01:26.878Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·午餐》：老猫劲哥两个逼，澳普多里肯德基。二逼青年二十八，普通青年二十一。</p><h2 id="注解">注解</h2><p>老猫劲哥：两名同事。<br>2011-12-07 午餐时，他们两位在 KFC 买了东西拿到澳普多和我们一起吃，结果算了一下，他们两个都吃了 28 块，我们才吃了 21 块。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·午餐》：老猫劲哥两个逼，澳普多里肯德基。二逼青年二十八，普通青年二十一。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;老猫劲哥：两名同事。&lt;br&gt;
2011-12-07 午餐时，他们两位在 KFC 买了东西拿到澳普多和我们一起吃，结果算了一下，他们两个</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="鲸神链" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%93%BE/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·Wi-Fi 杀精</title>
    <link href="https://blog.umu618.com/2011/12/06/reconstructionism-poet-wifi-damages-sperm/"/>
    <id>https://blog.umu618.com/2011/12/06/reconstructionism-poet-wifi-damages-sperm/</id>
    <published>2011-12-06T02:24:50.000Z</published>
    <updated>2023-08-05T13:01:26.878Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·Wi-Fi 杀精》：周围 Wi-Fi 垒成堆，还有一个是热推。ＷＳ男生很蛋疼，ＫＪ女生不吃亏。</p><h2 id="注解">注解</h2><p>WS：网宿<br>KJ：科技</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·Wi-Fi 杀精》：周围 Wi-Fi 垒成堆，还有一个是热推。ＷＳ男生很蛋疼，ＫＪ女生不吃亏。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;WS：网宿&lt;br&gt;
KJ：科技&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>mif2png（QQGame 专用 mif 格式转 png 格式）</title>
    <link href="https://blog.umu618.com/2011/11/26/umutech-mif2png/"/>
    <id>https://blog.umu618.com/2011/11/26/umutech-mif2png/</id>
    <published>2011-11-25T16:27:00.000Z</published>
    <updated>2023-08-05T13:01:26.878Z</updated>
    
    <content type="html"><![CDATA[<p>2011-11-26 00:27 发布于百度空间，由于百度空间停运，搬到此处。</p><p>大学时代的作品《UMU 游戏之争上游》的副产品，mif2bmp 改进版，用 GdiPlus 来产生 png 格式图片。</p><p>mif2png.exe 下载：<a href="http://download.csdn.net/detail/umu/3843545">http://download.csdn.net/detail/umu/3843545</a></p><p>以前 UMU 有写过文章分析 mif 格式，不过很早了，懒得找，直接上代码吧，先看头部结构体：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> pack(1)</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">MifHeader</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    DWORD version;</span><br><span class="line">    DWORD width;</span><br><span class="line">    DWORD height;</span><br><span class="line">    DWORD type;</span><br><span class="line">    DWORD frame_count;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> pack()</span></span><br></pre></td></tr></table></figure><p>以下代码是 C# 写的 <a href="http://Paint.NET">Paint.NET</a> 文件类型插件 MifFileType.cs</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> PaintDotNet;</span><br><span class="line"><span class="keyword">using</span> PaintDotNet.Data;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"><span class="keyword">using</span> System.Drawing.Imaging;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MifFileType</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MifFileType</span> : <span class="title">FileType</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">MifFileType</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">: <span class="title">base</span>(<span class="params"><span class="string">&quot;MIF Files&quot;</span>, FileTypeFlags.SupportsLoading | FileTypeFlags.SupportsLayers, <span class="keyword">new</span> String[] &#123; <span class="string">&quot;.mif&quot;</span> &#125;</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> Document <span class="title">OnLoad</span>(<span class="params">Stream input</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (input.Length &lt; <span class="number">20</span>)</span><br><span class="line">&#123;</span><br><span class="line">MessageBox.Show(<span class="string">&quot;Invalid MIF File&quot;</span>, <span class="string">&quot;UMU Corporation - MifFileTypePlugIn&quot;</span>, MessageBoxButtons.OK, MessageBoxIcon.Error);</span><br><span class="line"></span><br><span class="line">Bitmap b = <span class="keyword">new</span> Bitmap(<span class="number">800</span>, <span class="number">600</span>);</span><br><span class="line"><span class="keyword">return</span> Document.FromImage(b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line">BinaryReader br = <span class="keyword">new</span> BinaryReader(input);</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> MifVersion = br.ReadInt32();</span><br><span class="line"><span class="built_in">int</span> FrameWidth = br.ReadInt32();</span><br><span class="line"><span class="built_in">int</span> FrameHeight = br.ReadInt32();</span><br><span class="line"><span class="built_in">int</span> MifType = br.ReadInt32();</span><br><span class="line"><span class="built_in">int</span> FrameCount = br.ReadInt32();</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> ImageWidth = FrameWidth;</span><br><span class="line"><span class="built_in">int</span> ImageHeight = FrameHeight * FrameCount;</span><br><span class="line"></span><br><span class="line"><span class="built_in">bool</span> Valid = <span class="literal">true</span>;</span><br><span class="line"><span class="built_in">long</span> Prefix;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (MifType == <span class="number">3</span>)</span><br><span class="line">&#123;</span><br><span class="line">Prefix = <span class="number">20</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (MifType == <span class="number">7</span>)</span><br><span class="line">&#123;</span><br><span class="line">Prefix = <span class="number">20</span> + <span class="number">4</span> * FrameCount;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">MessageBox.Show(<span class="string">&quot;Invalid MIF File&quot;</span>, <span class="string">&quot;UMU Corporation - MifFileTypePlugIn&quot;</span>, MessageBoxButtons.OK, MessageBoxIcon.Error);</span><br><span class="line"></span><br><span class="line">Bitmap b = <span class="keyword">new</span> Bitmap(<span class="number">800</span>, <span class="number">600</span>);</span><br><span class="line"><span class="keyword">return</span> Document.FromImage(b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (MifVersion == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (Prefix + ImageWidth * ImageHeight * <span class="number">3</span> != input.Length)</span><br><span class="line">&#123;</span><br><span class="line">Valid = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (MifVersion == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (Prefix + ImageWidth * ImageHeight * <span class="number">3</span> &gt; input.Length)</span><br><span class="line">&#123;</span><br><span class="line">Valid = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!Valid)</span><br><span class="line">&#123;</span><br><span class="line">MessageBox.Show(<span class="string">&quot;Invalid MIF File&quot;</span>, <span class="string">&quot;UMU Corporation - MifFileTypePlugIn&quot;</span>, MessageBoxButtons.OK, MessageBoxIcon.Error);</span><br><span class="line"></span><br><span class="line">Bitmap b = <span class="keyword">new</span> Bitmap(<span class="number">800</span>, <span class="number">600</span>);</span><br><span class="line"><span class="keyword">return</span> Document.FromImage(b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Bitmap bmp = <span class="keyword">new</span> Bitmap(ImageWidth, ImageHeight);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> CurrentFrame = <span class="number">0</span>; CurrentFrame &lt; FrameCount; ++CurrentFrame)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (MifType == <span class="number">7</span>)</span><br><span class="line">&#123;</span><br><span class="line">input.Seek(<span class="number">4</span>, SeekOrigin.Current);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">UInt16[] rgb16 = <span class="keyword">new</span> UInt16[FrameWidth * FrameHeight];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; FrameHeight * FrameWidth; ++i)</span><br><span class="line">&#123;</span><br><span class="line">rgb16[i] = br.ReadUInt16();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Byte[] a8 = <span class="keyword">new</span> Byte[FrameWidth * FrameHeight];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; FrameHeight * FrameWidth; ++i)</span><br><span class="line">&#123;</span><br><span class="line">a8[i] = br.ReadByte();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> y = <span class="number">0</span>; y &lt; FrameHeight; ++y)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> x = <span class="number">0</span>; x &lt; FrameWidth; ++x)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">int</span> a = a8[x + y * FrameWidth];</span><br><span class="line"><span class="built_in">int</span> r = (rgb16[x + y * FrameWidth] &amp; <span class="number">0xF800</span>) &gt;&gt; <span class="number">8</span>;</span><br><span class="line"><span class="built_in">int</span> g = (rgb16[x + y * FrameWidth] &amp; <span class="number">0x07E0</span>) &gt;&gt; <span class="number">3</span>;</span><br><span class="line"><span class="built_in">int</span> b = (rgb16[x + y * FrameWidth] &amp; <span class="number">0x001F</span>) &lt;&lt; <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (a == <span class="number">32</span>)</span><br><span class="line">&#123;</span><br><span class="line">a = <span class="number">255</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (a &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">a &lt;&lt;= <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">bmp.SetPixel(x, FrameHeight * CurrentFrame + y, Color.FromArgb(a, r, g, b));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">br.Close();</span><br><span class="line"><span class="keyword">return</span> Document.FromImage(bmp);</span><br><span class="line">&#125;</span><br><span class="line">catch (Exception ex)</span><br><span class="line">&#123;</span><br><span class="line">MessageBox.Show(ex.Message, <span class="string">&quot;UMU Corporation - MifFileTypePlugIn&quot;</span>, MessageBoxButtons.OK, MessageBoxIcon.Warning);</span><br><span class="line"></span><br><span class="line">Bitmap bmp = <span class="keyword">new</span> Bitmap(<span class="number">800</span>, <span class="number">600</span>);</span><br><span class="line"><span class="comment">//Document doc = Document.FromImage(bmp);</span></span><br><span class="line"><span class="comment">//doc.Tag = &quot;UMU Corporation - MifFileTypePlugIn&quot;;</span></span><br><span class="line"><span class="comment">//return doc;</span></span><br><span class="line"><span class="keyword">return</span> Document.FromImage(bmp);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MifFileTypeFactory</span> : <span class="title">IFileTypeFactory</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> FileType[] <span class="title">GetFileTypeInstances</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> FileType[] &#123; <span class="keyword">new</span> MifFileType() &#125;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;2011-11-26 00:27 发布于百度空间，由于百度空间停运，搬到此处。&lt;/p&gt;
&lt;p&gt;大学时代的作品《UMU 游戏之争上游》的副产品，mif2bmp 改进版，用 GdiPlus 来产生 png 格式图片。&lt;/p&gt;
&lt;p&gt;mif2png.exe 下载：&lt;a href=</summary>
      
    
    
    
    <category term="UMUTech" scheme="https://blog.umu618.com/categories/UMUTech/"/>
    
    
    <category term="dev" scheme="https://blog.umu618.com/tags/dev/"/>
    
    <category term="dotnet" scheme="https://blog.umu618.com/tags/dotnet/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·法克墙</title>
    <link href="https://blog.umu618.com/2011/11/19/reconstructionism-poet-fuck-wall/"/>
    <id>https://blog.umu618.com/2011/11/19/reconstructionism-poet-fuck-wall/</id>
    <published>2011-11-19T04:44:02.000Z</published>
    <updated>2023-08-05T13:01:26.871Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·法克墙》：河蟹横行功夫网，天朝网民皆骂娘。逼出牛人#有木有#，撸来神器法克墙。</p><h2 id="注解">注解</h2><p>功夫网：GongFuWang<br>有木有：UMU<br>法克墙：UMU 专用翻墙软件。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·法克墙》：河蟹横行功夫网，天朝网民皆骂娘。逼出牛人#有木有#，撸来神器法克墙。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;功夫网：GongFuWang&lt;br&gt;
有木有：UMU&lt;br&gt;
法克墙：UMU 专用翻墙软件。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·欲界</title>
    <link href="https://blog.umu618.com/2011/09/28/reconstructionism-poet-khamadhatu/"/>
    <id>https://blog.umu618.com/2011/09/28/reconstructionism-poet-khamadhatu/</id>
    <published>2011-09-28T02:05:49.000Z</published>
    <updated>2023-08-05T13:01:26.871Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·欲界》：天地不仁，万物孕生，人间有情，罪恶横行。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·欲界》：天地不仁，万物孕生，人间有情，罪恶横行。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="七鹰圣" scheme="https://blog.umu618.com/tags/%E4%B8%83%E9%B9%B0%E5%9C%A3/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·ZZB</title>
    <link href="https://blog.umu618.com/2011/09/04/reconstructionism-poet-zzb/"/>
    <id>https://blog.umu618.com/2011/09/04/reconstructionism-poet-zzb/</id>
    <published>2011-09-04T08:48:26.000Z</published>
    <updated>2023-08-05T13:01:26.871Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·ZZB》：牛 X 轰轰 ZZB，鼓浪屿上搞搞鸡。路边撒尿四五次，麦当劳里肯德基。</p><h2 id="注解">注解</h2><p>ZZB：一名前同事，好朋友。<br>我们到鼓浪屿玩，他一路奔放，还把外带的 KFC 拿到 MC 去吃了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·ZZB》：牛 X 轰轰 ZZB，鼓浪屿上搞搞鸡。路边撒尿四五次，麦当劳里肯德基。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;ZZB：一名前同事，好朋友。&lt;br&gt;
我们到鼓浪屿玩，他一路奔放，还把外带的 KFC 拿到 MC 去吃了。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="鲸神链" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%93%BE/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·甘草林木</title>
    <link href="https://blog.umu618.com/2011/07/14/reconstructionism-what-the-fuck/"/>
    <id>https://blog.umu618.com/2011/07/14/reconstructionism-what-the-fuck/</id>
    <published>2011-07-14T06:04:43.000Z</published>
    <updated>2023-08-05T13:01:26.871Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·甘草林木》：红歌唱到吐，人死也可复。掌扇官脑残，剑挡坨状物。</p><h2 id="注解">注解</h2><p>甘草林木：这是闽南语。<br>这阵子流行唱红歌，都能把死人唱活……<br>见过大爷手淫……</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·甘草林木》：红歌唱到吐，人死也可复。掌扇官脑残，剑挡坨状物。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;甘草林木：这是闽南语。&lt;br&gt;
这阵子流行唱红歌，都能把死人唱活……&lt;br&gt;
见过大爷手淫……&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="闽南语" scheme="https://blog.umu618.com/tags/%E9%97%BD%E5%8D%97%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·不给力啊拖鞋</title>
    <link href="https://blog.umu618.com/2011/04/24/reconstructionism-poet-slippers/"/>
    <id>https://blog.umu618.com/2011/04/24/reconstructionism-poet-slippers/</id>
    <published>2011-04-24T14:02:16.000Z</published>
    <updated>2023-08-05T13:01:26.871Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·不给力啊拖鞋》：阿迪拖鞋坑泥巴，暴走几次竟要挂。若知太贵被妈骂，当初一定不买它。</p><h2 id="注解">注解</h2><p>穿拖鞋的暴走族真不容易啊，买个好走耐用的拖鞋都比较贵，被妈妈造价格是 198 元会被骂屎！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·不给力啊拖鞋》：阿迪拖鞋坑泥巴，暴走几次竟要挂。若知太贵被妈骂，当初一定不买它。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;穿拖鞋的暴走族真不容易啊，买个好走耐用的拖鞋都比较贵，被妈妈造价格是 198 元会被骂屎！&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="暴走" scheme="https://blog.umu618.com/tags/%E6%9A%B4%E8%B5%B0/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·无语</title>
    <link href="https://blog.umu618.com/2011/04/19/reconstructionism-poet-speechless/"/>
    <id>https://blog.umu618.com/2011/04/19/reconstructionism-poet-speechless/</id>
    <published>2011-04-19T13:31:33.000Z</published>
    <updated>2023-08-05T13:01:26.871Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·无语》：W S 科技挺赚钱，市场份额五分三。公司确实轰牛13，但与员工不相干。</p><h2 id="注解">注解</h2><p>听不少同事抱怨工资太低而作，此等情绪不值得提倡，喷完好好上班。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·无语》：W S 科技挺赚钱，市场份额五分三。公司确实轰牛13，但与员工不相干。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;听不少同事抱怨工资太低而作，此等情绪不值得提倡，喷完好好上班。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·科技见闻</title>
    <link href="https://blog.umu618.com/2011/03/12/reconstructionism-poet-about-kj/"/>
    <id>https://blog.umu618.com/2011/03/12/reconstructionism-poet-about-kj/</id>
    <published>2011-03-12T05:27:00.000Z</published>
    <updated>2023-08-05T13:01:26.871Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·科技见闻》：三年人流多离别，激励制度太坑爹。昨天走了一个总，再将容儿换瑛姐。</p><p>最后一句由霹雳角色“任剑谁”的诗号得到灵感，结果写出前面三句。</p><blockquote><p>一生一败一声痴，<br>封剑石中再不问！<br>百年难磨今朝恨，<br>再将虎魄换剑魂！</p></blockquote><h2 id="注解">注解</h2><p>又名《挨踢见闻》。<br>在 KJ 呆了多年，看到不少人来来往往，可能是激励制度不够到位。<br>昨天杨总离职，成本中心的部门经理也换人了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·科技见闻》：三年人流多离别，激励制度太坑爹。昨天走了一个总，再将容儿换瑛姐。&lt;/p&gt;
&lt;p&gt;最后一句由霹雳角色“任剑谁”的诗号得到灵感，结果写出前面三句。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一生一败一声痴，&lt;br&gt;
封剑石中再不问！&lt;br&gt;
百年难磨今朝恨</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>如何翻墙？</title>
    <link href="https://blog.umu618.com/2011/02/25/how-to-climb-over-the-wall/"/>
    <id>https://blog.umu618.com/2011/02/25/how-to-climb-over-the-wall/</id>
    <published>2011-02-25T14:45:45.000Z</published>
    <updated>2023-08-05T13:01:26.871Z</updated>
    
    <content type="html"><![CDATA[<p>——如何翻墙？<br>——双手暗暗运气。一撑，两腿同时用力登踏，右脚先上，左脚再上。搞定，拍手。哥小学时常常翻，从未被老师抓过。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;——如何翻墙？&lt;br&gt;
——双手暗暗运气。一撑，两腿同时用力登踏，右脚先上，左脚再上。搞定，拍手。哥小学时常常翻，从未被老师抓过。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="U墨" scheme="https://blog.umu618.com/categories/U%E5%A2%A8/"/>
    
    
    <category term="泥巴娃" scheme="https://blog.umu618.com/tags/%E6%B3%A5%E5%B7%B4%E5%A8%83/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·命运</title>
    <link href="https://blog.umu618.com/2011/02/25/reconstructionism-poet-fate/"/>
    <id>https://blog.umu618.com/2011/02/25/reconstructionism-poet-fate/</id>
    <published>2011-02-25T04:36:27.000Z</published>
    <updated>2023-08-05T13:01:26.871Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·命运》：生离数十万千，死别未知何年。少时不懂珍惜，转眼青灰如烟。人世瞬息万变，命缘终归由天。</p><h2 id="注解">注解</h2><p>纪念一名英年早逝的好友——陈震邦。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·命运》：生离数十万千，死别未知何年。少时不懂珍惜，转眼青灰如烟。人世瞬息万变，命缘终归由天。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;纪念一名英年早逝的好友——陈震邦。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·慢泥</title>
    <link href="https://blog.umu618.com/2011/02/22/reconstructionism-poet-money/"/>
    <id>https://blog.umu618.com/2011/02/22/reconstructionism-poet-money/</id>
    <published>2011-02-22T13:18:16.000Z</published>
    <updated>2023-08-05T13:01:26.871Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·慢泥》：朋友在放高丽袋，苹果产品四五台。豪华跑车不是盖，每天都能包恩奶。去年买房今年卖，数百万元进口袋。再看哥们贫二代，敲敲键盘可怜殆。</p><h2 id="注解">注解</h2><p>慢泥：money<br>高丽菜/袋：高利（方河蟹）贷。<br>可怜殆：闽南语，表示很可怜。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·慢泥》：朋友在放高丽袋，苹果产品四五台。豪华跑车不是盖，每天都能包恩奶。去年买房今年卖，数百万元进口袋。再看哥们贫二代，敲敲键盘可怜殆。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;慢泥：money&lt;br&gt;
高丽菜/袋：高利（方河蟹）贷。&lt;br&gt;
可怜</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="闽南语" scheme="https://blog.umu618.com/tags/%E9%97%BD%E5%8D%97%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·泥巴仙</title>
    <link href="https://blog.umu618.com/2011/02/18/reconstructionism-poet-mud-fairy/"/>
    <id>https://blog.umu618.com/2011/02/18/reconstructionism-poet-mud-fairy/</id>
    <published>2011-02-18T14:35:10.000Z</published>
    <updated>2023-08-05T13:01:26.871Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·泥巴仙》：别人笑我太疯癫，我笑他人太爱钱。不见功成万骨枯，自由自在苦作甜。</p><p>改编自明朝唐寅的《桃花庵歌》。</p><blockquote><p>桃花坞里桃花庵，桃花庵下桃花仙。<br>桃花仙人种桃树，又摘桃花换酒钱。<br>酒醒只在花前坐，酒醉还来花下眠。<br>半醉半醒日复日，花落花开年复年。<br>但愿老死花酒间，不愿鞠躬车马前。<br>车尘马足显者事，酒盏花枝隐士缘。<br>若将显者比隐士，一在平地一在天。<br>若将花酒比车马，彼何碌碌我何闲。<br>别人笑我太疯癫，我笑他人看不穿。<br>不见五陵豪杰墓，无花无酒锄作田。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·泥巴仙》：别人笑我太疯癫，我笑他人太爱钱。不见功成万骨枯，自由自在苦作甜。&lt;/p&gt;
&lt;p&gt;改编自明朝唐寅的《桃花庵歌》。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;桃花坞里桃花庵，桃花庵下桃花仙。&lt;br&gt;
桃花仙人种桃树，又摘桃花换酒钱。&lt;br&gt;
酒醒只在花前坐，</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="泥巴娃" scheme="https://blog.umu618.com/tags/%E6%B3%A5%E5%B7%B4%E5%A8%83/"/>
    
  </entry>
  
  <entry>
    <title>死</title>
    <link href="https://blog.umu618.com/2011/01/24/die/"/>
    <id>https://blog.umu618.com/2011/01/24/die/</id>
    <published>2011-01-24T13:28:00.000Z</published>
    <updated>2023-08-05T13:01:26.871Z</updated>
    
    <content type="html"><![CDATA[<p>今天早上醒来就发生了一系列怪异的事情，去买早点没遇到半个人，当然整个的人也没有，到了早餐店才发现没开门。我想：算了，公司还有点东西可以撑一下肚子。</p><p>来到公司才发现更怪异的事，人倒是有，但都是骷髅。真佩服自己当时的淡定，居然没有大呼小叫神马的！不过当时马上想到世界末日，于是看看手机，时间是 2011 年，还早呢。好奇地打电话给家里，他们都表示世界没有抛出任何异常。然后又想：惨了，不会是只有软件园发生灾难吧！我弟弟也在软件园，我马上打电话给他，他说公司送他们项目组的几个去北京玩了，不知道软件园发生了神马！</p><p>接着，发现脑子里还有一个人，就硬着头皮，往那处走过去，人不在位置，不过那屋子里的其他位置一样坐着几个骷髅，心想好像我在意的人都没事，真是不幸中的万幸。</p><p>为了确保万无一失，我给她打电话，没人接，不过不接不一定就是挂了，但是我不放心，到车库去看了一下，熟悉的车牌号，跑过去，震惊了……车里一个骷髅……车门打不开……过了一会儿，我马上就冷静了，发现那个骷髅比她大了好几个尺寸，sigh~应该不是！</p><p>最后有人叫我，一转身，我被咬死了，跟大家一样……真无语啊，主角都挂了！！！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;今天早上醒来就发生了一系列怪异的事情，去买早点没遇到半个人，当然整个的人也没有，到了早餐店才发现没开门。我想：算了，公司还有点东西可以撑一下肚子。&lt;/p&gt;
&lt;p&gt;来到公司才发现更怪异的事，人倒是有，但都是骷髅。真佩服自己当时的淡定，居然没有大呼小叫神马的！不过当时马上想到世</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="死神" scheme="https://blog.umu618.com/tags/%E6%AD%BB%E7%A5%9E/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·梦</title>
    <link href="https://blog.umu618.com/2010/11/27/reconstructionism-poet-dream/"/>
    <id>https://blog.umu618.com/2010/11/27/reconstructionism-poet-dream/</id>
    <published>2010-11-26T16:34:00.000Z</published>
    <updated>2023-08-05T13:01:26.871Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·梦》：世事浮如云，人生一场醉。睡时小梦中，醒时大梦里。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·梦》：世事浮如云，人生一场醉。睡时小梦中，醒时大梦里。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="泥巴娃" scheme="https://blog.umu618.com/tags/%E6%B3%A5%E5%B7%B4%E5%A8%83/"/>
    
  </entry>
  
  <entry>
    <title>诗盗与音盗</title>
    <link href="https://blog.umu618.com/2010/11/09/music-thief/"/>
    <id>https://blog.umu618.com/2010/11/09/music-thief/</id>
    <published>2010-11-09T05:16:17.000Z</published>
    <updated>2023-08-05T13:01:26.871Z</updated>
    
    <content type="html"><![CDATA[<p>泥巴娃改写古诗，创作出自己的诗集，故得“诗盗”的称号；您错听音乐，创作出自己的曲子，故得“音盗”的称号。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;泥巴娃改写古诗，创作出自己的诗集，故得“诗盗”的称号；您错听音乐，创作出自己的曲子，故得“音盗”的称号。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="U墨" scheme="https://blog.umu618.com/categories/U%E5%A2%A8/"/>
    
    
    <category term="怪悟" scheme="https://blog.umu618.com/tags/%E6%80%AA%E6%82%9F/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·山坡羊·网络杯矮2</title>
    <link href="https://blog.umu618.com/2010/11/03/reconstructionism-poet-internet-fraud-2/"/>
    <id>https://blog.umu618.com/2010/11/03/reconstructionism-poet-internet-fraud-2/</id>
    <published>2010-11-03T14:19:15.000Z</published>
    <updated>2023-08-05T13:01:26.871Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·山坡羊·网络杯矮2》：战争既开，河蟹安在？流氓几时相交代。肆敛财，道德败，东家装屄西家赖，闹剧有如云变改。装，也是哀；卸，也是哀。</p><h2 id="注解">注解</h2><p>写于互联网著名的 3Q 大战之际。</p><blockquote><p>2009-11-05 08:54:05<br>《#诗盗#·山坡羊·网络杯矮》</p><p>后门既开，隐私安在？<br>流氓几时相交代。<br>肆敛财，道德败，<br>本尊盗号马夹卖，<br>骗术有如云变改。<br>纵，也是哀；<br>墙，也是哀。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·山坡羊·网络杯矮2》：战争既开，河蟹安在？流氓几时相交代。肆敛财，道德败，东家装屄西家赖，闹剧有如云变改。装，也是哀；卸，也是哀。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;写于互联网著名的 3Q 大战之际。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·燬仙</title>
    <link href="https://blog.umu618.com/2010/07/20/reconstructionism-poet-the-god-of-fire/"/>
    <id>https://blog.umu618.com/2010/07/20/reconstructionism-poet-the-god-of-fire/</id>
    <published>2010-07-20T14:04:42.000Z</published>
    <updated>2023-08-05T13:01:26.871Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·燬仙》：成败不足论，是非亦如烟。逍遥忘尘人，身寄水云间。</p><h2 id="注解">注解</h2><p>《七鹰圣传奇》中燬仙宗传人燧熼惊鸿的出场诗。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·燬仙》：成败不足论，是非亦如烟。逍遥忘尘人，身寄水云间。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;《七鹰圣传奇》中燬仙宗传人燧熼惊鸿的出场诗。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七鹰圣" scheme="https://blog.umu618.com/tags/%E4%B8%83%E9%B9%B0%E5%9C%A3/"/>
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·夏季恨虫叫</title>
    <link href="https://blog.umu618.com/2010/07/09/reconstructionism-poet-hate-humming-insects/"/>
    <id>https://blog.umu618.com/2010/07/09/reconstructionism-poet-hate-humming-insects/</id>
    <published>2010-07-09T06:35:09.000Z</published>
    <updated>2023-08-05T13:01:26.871Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·夏季恨虫叫》：夏夜蚊子嗡嗡叫，树头知了吱吱吵。害虫不知哥已恼，统统拍死静悄悄。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·夏季恨虫叫》：夏夜蚊子嗡嗡叫，树头知了吱吱吵。害虫不知哥已恼，统统拍死静悄悄。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·挨踢诗人泥巴娃</title>
    <link href="https://blog.umu618.com/2010/07/07/reconstructionism-poet-it-poet/"/>
    <id>https://blog.umu618.com/2010/07/07/reconstructionism-poet-it-poet/</id>
    <published>2010-07-06T22:39:21.000Z</published>
    <updated>2023-08-05T13:01:26.871Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·挨踢诗人泥巴娃》 ：挨踢留诗忘岁月，独少知音恨天涯。浮生若梦醉不醒，一睡千秋卧泥巴。</p><p>前两行改编自霹雳角色“黑羽恨长风”的诗号。</p><blockquote><p>山关留痕忘岁月，独少一剑恨天涯。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·挨踢诗人泥巴娃》 ：挨踢留诗忘岁月，独少知音恨天涯。浮生若梦醉不醒，一睡千秋卧泥巴。&lt;/p&gt;
&lt;p&gt;前两行改编自霹雳角色“黑羽恨长风”的诗号。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;山关留痕忘岁月，独少一剑恨天涯。&lt;/p&gt;
&lt;/blockquote&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="泥巴娃" scheme="https://blog.umu618.com/tags/%E6%B3%A5%E5%B7%B4%E5%A8%83/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·快游</title>
    <link href="https://blog.umu618.com/2010/06/21/reconstructionism-poet-kuaiyou/"/>
    <id>https://blog.umu618.com/2010/06/21/reconstructionism-poet-kuaiyou/</id>
    <published>2010-06-21T08:41:16.000Z</published>
    <updated>2023-08-05T13:01:26.868Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·淹死快游》：网络割据草塔马，跨网连接效果差。快游技术强如牛，坐看迅游加速啦。</p><h2 id="注解">注解</h2><p>淹死快游：淹死的都是会游泳的……游得快也死得快！<br>迅游：目前还是游戏加速客户端的老大。<br>加速啦：好像已经挂掉了。<br>本诗写于快游项目遇到瓶颈的时期，由于客户端产品与公司企业基因不符，导致多次团队变动重组，最后流产……技术强不代表能做好产品，做出产品没有相应的推广和运营，也不能赚到钱。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·淹死快游》：网络割据草塔马，跨网连接效果差。快游技术强如牛，坐看迅游加速啦。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;淹死快游：淹死的都是会游泳的……游得快也死得快！&lt;br&gt;
迅游：目前还是游戏加速客户端的老大。&lt;br&gt;
加速啦：好像已经挂掉了。&lt;</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·春江花月夜</title>
    <link href="https://blog.umu618.com/2010/03/15/reconstructionism-poet-a-night-of-flowers-and-moonlight-by-the-spring-river/"/>
    <id>https://blog.umu618.com/2010/03/15/reconstructionism-poet-a-night-of-flowers-and-moonlight-by-the-spring-river/</id>
    <published>2010-03-15T03:05:00.000Z</published>
    <updated>2023-08-05T13:01:26.868Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·春江花月夜》：冷月孤轮碧寒威，青空流霜鸿雁飞。昨夜台风梦落花，春雨摇情满江媚。</p><p>《#诗盗#·春江花月夜》：冷月孤轮碧寒威，青空流霜鸿雁飞。昨夜台风摧杨花，春雨摇情满江媚。</p><p>改编自霹雳角色“九江春”的诗号。</p><blockquote><p>轻絮流光孤月轮，<br>鸿燕长飞声不顿；<br>昨夜闲潭梦落花，<br>流水摇情满江春。</p></blockquote><h2 id="注解">注解</h2><p>2008 年写的，具体时间搞不清楚了，应该是在某次台风来临时。<br>写这首诗有三个因素：霹雳、台风、杨媚花。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·春江花月夜》：冷月孤轮碧寒威，青空流霜鸿雁飞。昨夜台风梦落花，春雨摇情满江媚。&lt;/p&gt;
&lt;p&gt;《#诗盗#·春江花月夜》：冷月孤轮碧寒威，青空流霜鸿雁飞。昨夜台风摧杨花，春雨摇情满江媚。&lt;/p&gt;
&lt;p&gt;改编自霹雳角色“九江春”的诗号。&lt;/p&gt;
&lt;blockquot</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
    <category term="打嘴炮" scheme="https://blog.umu618.com/tags/%E6%89%93%E5%98%B4%E7%82%AE/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·灷邪天灾</title>
    <link href="https://blog.umu618.com/2010/03/11/reconstructionism-poet-peerless-genius/"/>
    <id>https://blog.umu618.com/2010/03/11/reconstructionism-poet-peerless-genius/</id>
    <published>2010-03-11T03:28:32.000Z</published>
    <updated>2023-08-05T13:01:26.868Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·灷邪天灾》：看似轻狂少年时，天资深沉不见底。邪颜冷笑逍遥来，何人命丧鸠咒里。</p><h2 id="注解">注解</h2><p>灷邪天灾：荼藜七子老大</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·灷邪天灾》：看似轻狂少年时，天资深沉不见底。邪颜冷笑逍遥来，何人命丧鸠咒里。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;灷邪天灾：荼藜七子老大&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="七鹰圣" scheme="https://blog.umu618.com/tags/%E4%B8%83%E9%B9%B0%E5%9C%A3/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·诗链</title>
    <link href="https://blog.umu618.com/2010/02/24/reconstructionism-poet-lovelorn/"/>
    <id>https://blog.umu618.com/2010/02/24/reconstructionism-poet-lovelorn/</id>
    <published>2010-02-24T07:18:21.000Z</published>
    <updated>2023-08-05T13:01:26.868Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·诗链》：燕鸿过后鹰归去，芳华红颜几多时。细算黄梁千百梦，散似浮云无处觅。</p><p>改编自宋代词人晏殊的《木兰花·燕鸿过后莺归去》。</p><blockquote><p>燕鸿过后莺归去，细算浮生千万绪。<br>长于春梦几多时？散似秋云无觅处。<br>闻琴解佩神仙侣，挽断罗衣留不住。<br>劝君莫作独醒人，烂醉花间应有数。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·诗链》：燕鸿过后鹰归去，芳华红颜几多时。细算黄梁千百梦，散似浮云无处觅。&lt;/p&gt;
&lt;p&gt;改编自宋代词人晏殊的《木兰花·燕鸿过后莺归去》。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;燕鸿过后莺归去，细算浮生千万绪。&lt;br&gt;
长于春梦几多时？散似秋云无觅处。&lt;br&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·对联·挨踢生活有感</title>
    <link href="https://blog.umu618.com/2010/01/29/reconstructionism-poet-couplets-it-life/"/>
    <id>https://blog.umu618.com/2010/01/29/reconstructionism-poet-couplets-it-life/</id>
    <published>2010-01-29T05:44:55.000Z</published>
    <updated>2023-08-05T13:01:26.868Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·对联·挨踢生活有感》：上联：晚上不睡，白天崩溃；下联：白天挣钱，晚上失眠。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·对联·挨踢生活有感》：上联：晚上不睡，白天崩溃；下联：白天挣钱，晚上失眠。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
    <category term="对联" scheme="https://blog.umu618.com/tags/%E5%AF%B9%E8%81%94/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·梦子·天屎曰</title>
    <link href="https://blog.umu618.com/2009/12/23/reconstructionism-poet-ban/"/>
    <id>https://blog.umu618.com/2009/12/23/reconstructionism-poet-ban/</id>
    <published>2009-12-23T06:05:26.000Z</published>
    <updated>2023-08-05T13:01:26.858Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·梦子·天屎曰》：天将降大便于斯人也，必先封其ID，断其网络，行河蟹其博客，逼其动口骂娘，曾益其所罪证。</p><p>改编自《孟子·告子下》 。</p><blockquote><p>故天将降大任于斯人也，必先苦其心志，劳其筋骨，饿其体肤，空伐其身，行弗乱其所为，所以动心忍性，曾益其所不能。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·梦子·天屎曰》：天将降大便于斯人也，必先封其ID，断其网络，行河蟹其博客，逼其动口骂娘，曾益其所罪证。&lt;/p&gt;
&lt;p&gt;改编自《孟子·告子下》 。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;故天将降大任于斯人也，必先苦其心志，劳其筋骨，饿其体肤，空伐其身，行弗乱其所</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·墙</title>
    <link href="https://blog.umu618.com/2009/12/23/reconstructionism-poet-the-great-wall/"/>
    <id>https://blog.umu618.com/2009/12/23/reconstructionism-poet-the-great-wall/</id>
    <published>2009-12-23T05:54:54.000Z</published>
    <updated>2023-08-05T13:01:26.868Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·墙》：财纳网，封天下！米劈恩，翻下社。</p><p>改编自《三字经》。</p><blockquote><p>夏传子（禹传启），家天下，四百载，迁夏社。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·墙》：财纳网，封天下！米劈恩，翻下社。&lt;/p&gt;
&lt;p&gt;改编自《三字经》。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;夏传子（禹传启），家天下，四百载，迁夏社。&lt;/p&gt;
&lt;/blockquote&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·夜宿山寺</title>
    <link href="https://blog.umu618.com/2009/12/23/reconstructionism-poet-staying-overnight-in-a-mountain-temple/"/>
    <id>https://blog.umu618.com/2009/12/23/reconstructionism-poet-staying-overnight-in-a-mountain-temple/</id>
    <published>2009-12-23T03:17:35.000Z</published>
    <updated>2023-08-05T13:01:26.868Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·夜宿山寺》：圣女年三十，没有恋爱史。不敢高声语，恐怕她嫁你。</p><p>改编自唐代李白的《夜宿山寺》。</p><blockquote><p>危楼高百尺，<br>手可摘星辰。<br>不敢高声语，<br>恐惊天上人。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·夜宿山寺》：圣女年三十，没有恋爱史。不敢高声语，恐怕她嫁你。&lt;/p&gt;
&lt;p&gt;改编自唐代李白的《夜宿山寺》。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;危楼高百尺，&lt;br&gt;
手可摘星辰。&lt;br&gt;
不敢高声语，&lt;br&gt;
恐惊天上人。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·挨踢杯具</title>
    <link href="https://blog.umu618.com/2009/12/23/reconstructionism-poet-it-tragedy/"/>
    <id>https://blog.umu618.com/2009/12/23/reconstructionism-poet-it-tragedy/</id>
    <published>2009-12-23T01:40:37.000Z</published>
    <updated>2023-08-05T13:01:26.868Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·挨踢杯具》：干挨踢，造杯具，人独影，夜孤瞑。敲键盘，写乱码，长叹加班一狂人。</p><p>改编自霹雳角色“问剑孤鸣”的诗号。</p><blockquote><p>入江湖、走红尘，<br>人独影、剑孤鸣，<br>行千里、笑雄心，<br>长叹问剑一狂人！</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·挨踢杯具》：干挨踢，造杯具，人独影，夜孤瞑。敲键盘，写乱码，长叹加班一狂人。&lt;/p&gt;
&lt;p&gt;改编自霹雳角色“问剑孤鸣”的诗号。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;入江湖、走红尘，&lt;br&gt;
人独影、剑孤鸣，&lt;br&gt;
行千里、笑雄心，&lt;br&gt;
长叹问剑一狂人！</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·山坡羊·网络杯矮</title>
    <link href="https://blog.umu618.com/2009/11/05/reconstructionism-poet-shanpoyang-internet-fraud/"/>
    <id>https://blog.umu618.com/2009/11/05/reconstructionism-poet-shanpoyang-internet-fraud/</id>
    <published>2009-11-05T00:54:05.000Z</published>
    <updated>2023-08-05T13:01:26.858Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·山坡羊·网络杯矮》：后门既开，隐私安在？流氓几时相交代。肆敛财，道德败，本尊盗号马夹卖，骗术有如云变改。纵，也是哀；墙，也是哀。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·山坡羊·网络杯矮》：后门既开，隐私安在？流氓几时相交代。肆敛财，道德败，本尊盗号马夹卖，骗术有如云变改。纵，也是哀；墙，也是哀。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·山坡羊·没钱</title>
    <link href="https://blog.umu618.com/2009/11/02/reconstructionism-poet-shanpoyang-poor/"/>
    <id>https://blog.umu618.com/2009/11/02/reconstructionism-poet-shanpoyang-poor/</id>
    <published>2009-11-02T06:21:13.000Z</published>
    <updated>2023-08-05T13:01:26.858Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·山坡羊·没钱》：借钱一万，身无分文，洋酒驴背气来灌。世间观，披烂衫，金银不服流浪汉。一片闲情天地间。白，也是眼。青，也是眼。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·山坡羊·没钱》：借钱一万，身无分文，洋酒驴背气来灌。世间观，披烂衫，金银不服流浪汉。一片闲情天地间。白，也是眼。青，也是眼。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="泥巴娃" scheme="https://blog.umu618.com/tags/%E6%B3%A5%E5%B7%B4%E5%A8%83/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·网络记黑</title>
    <link href="https://blog.umu618.com/2009/10/10/reconstructionism-poet-cyber-crime/"/>
    <id>https://blog.umu618.com/2009/10/10/reconstructionism-poet-cyber-crime/</id>
    <published>2009-10-10T05:42:16.000Z</published>
    <updated>2023-08-05T13:01:26.858Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·网络记黑》：笑看牛屄盗软件，美女装屌搞诈骗。不以红黑论黑客，黄金不富鹰熊汉。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·网络记黑》：笑看牛屄盗软件，美女装屌搞诈骗。不以红黑论黑客，黄金不富鹰熊汉。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·蛋定</title>
    <link href="https://blog.umu618.com/2009/09/21/reconstructionism-poet-chillax/"/>
    <id>https://blog.umu618.com/2009/09/21/reconstructionism-poet-chillax/</id>
    <published>2009-09-21T06:32:54.000Z</published>
    <updated>2023-08-05T13:01:26.858Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·蛋定》：天涯悟岁月，歧路游风尘。百年浑似醉，是非一片烎。</p><p>改编自霹雳角色“北窗伏龙曲怀觞”的诗号。</p><blockquote><p>天涯无岁月，<br>歧路有风尘。<br>百年浑似醉，<br>是非一片云。</p></blockquote><p>出自元朝张可久的《金字经·乐闲》。</p><blockquote><p>百年浑似醉，满怀都是春。<br>高卧东山一片云。<br>嗔，是非拂面尘。<br>消磨尽，古今无限人。</p></blockquote><h2 id="注解">注解</h2><p>烎：此诗中通“淫”，其它地方啥意思忘记了，请自查字典。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·蛋定》：天涯悟岁月，歧路游风尘。百年浑似醉，是非一片烎。&lt;/p&gt;
&lt;p&gt;改编自霹雳角色“北窗伏龙曲怀觞”的诗号。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;天涯无岁月，&lt;br&gt;
歧路有风尘。&lt;br&gt;
百年浑似醉，&lt;br&gt;
是非一片云。&lt;/p&gt;
&lt;/blockquo</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·圣小开</title>
    <link href="https://blog.umu618.com/2009/09/12/reconstructionism-poet-sing-sio-hkai/"/>
    <id>https://blog.umu618.com/2009/09/12/reconstructionism-poet-sing-sio-hkai/</id>
    <published>2009-09-12T01:03:39.000Z</published>
    <updated>2023-08-05T13:01:26.858Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·圣小开》：圣心即为怪，吾心悟天灾。古今谁悟道，唯吾圣小开。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·圣小开》：圣心即为怪，吾心悟天灾。古今谁悟道，唯吾圣小开。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="圣小开" scheme="https://blog.umu618.com/tags/%E5%9C%A3%E5%B0%8F%E5%BC%80/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·对联·挨踢民工</title>
    <link href="https://blog.umu618.com/2009/08/04/reconstructionism-poet-couples-iter/"/>
    <id>https://blog.umu618.com/2009/08/04/reconstructionism-poet-couples-iter/</id>
    <published>2009-08-04T04:18:00.000Z</published>
    <updated>2023-08-05T13:01:26.858Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·对联·挨踢民工》：上联：破落，破落，破落个烂命；下联：八哥，八哥，第八个八哥；横批：挨踢民工。</p><h2 id="注解">注解</h2><p>破落：Pro<br>破落个烂命：Programming<br>八哥：Bug<br>第八个：Debug</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·对联·挨踢民工》：上联：破落，破落，破落个烂命；下联：八哥，八哥，第八个八哥；横批：挨踢民工。&lt;/p&gt;
&lt;h2 id=&quot;注解&quot;&gt;注解&lt;/h2&gt;
&lt;p&gt;破落：Pro&lt;br&gt;
破落个烂命：Programming&lt;br&gt;
八哥：Bug&lt;br&gt;
第八个：Debug&lt;/p</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
    <category term="对联" scheme="https://blog.umu618.com/tags/%E5%AF%B9%E8%81%94/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·贱男春 &amp; 僵男春</title>
    <link href="https://blog.umu618.com/2009/08/04/reconstructionism-poet-virgin/"/>
    <id>https://blog.umu618.com/2009/08/04/reconstructionism-poet-virgin/</id>
    <published>2009-08-04T04:15:00.000Z</published>
    <updated>2023-08-05T13:01:26.858Z</updated>
    
    <content type="html"><![CDATA[<p>《诗盗·贱男春》：花天酒地绿映红，醉生梦死直抽风。美女四百八十个，多少处男单身中。<br>《诗盗·僵男春》：喧哗都市绿映红，瞎操瞎忙累抽风。美女四百八十个，多少处男单身中。</p><p>改编自唐代诗人杜牧的《江南春》。</p><blockquote><p>千里莺啼绿映红，<br>水村山郭酒旗风。<br>南朝四百八十寺，<br>多少楼台烟雨中。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《诗盗·贱男春》：花天酒地绿映红，醉生梦死直抽风。美女四百八十个，多少处男单身中。&lt;br&gt;
《诗盗·僵男春》：喧哗都市绿映红，瞎操瞎忙累抽风。美女四百八十个，多少处男单身中。&lt;/p&gt;
&lt;p&gt;改编自唐代诗人杜牧的《江南春》。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;千里莺啼绿</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="打嘴炮" scheme="https://blog.umu618.com/tags/%E6%89%93%E5%98%B4%E7%82%AE/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·论毒</title>
    <link href="https://blog.umu618.com/2009/06/05/reconstructionism-poet-on-virus/"/>
    <id>https://blog.umu618.com/2009/06/05/reconstructionism-poet-on-virus/</id>
    <published>2009-06-05T05:47:27.000Z</published>
    <updated>2023-08-05T13:01:26.858Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·论毒》：蠕虫病毒天天见，今日已觉不新鲜。网络代有木马出，占领肉鸡一大片。</p><p>改编自清朝诗人赵翼的《论诗》。</p><blockquote><p>李杜诗篇万古传，<br>至今已觉不新鲜。<br>江山代有才人出，<br>各领风骚数百年。</p></blockquote><h2 id="注解">注解</h2><p>蠕虫病毒我是天天见，天天杀，<br>事到如今再去干掉（日）它们，我已经觉得没什么成就感了，<br>放眼网络，不时流出一只只木马，<br>占领大片肉鸡，（它们才是我的目标）。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·论毒》：蠕虫病毒天天见，今日已觉不新鲜。网络代有木马出，占领肉鸡一大片。&lt;/p&gt;
&lt;p&gt;改编自清朝诗人赵翼的《论诗》。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;李杜诗篇万古传，&lt;br&gt;
至今已觉不新鲜。&lt;br&gt;
江山代有才人出，&lt;br&gt;
各领风骚数百年。&lt;/p&gt;</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·惨付2</title>
    <link href="https://blog.umu618.com/2009/05/14/reconstructionism-poet-pay-a-painful-price-2/"/>
    <id>https://blog.umu618.com/2009/05/14/reconstructionism-poet-pay-a-painful-price-2/</id>
    <published>2009-05-14T00:58:14.000Z</published>
    <updated>2023-08-05T13:01:26.858Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·惨付》：昨日苦加班，归来黑眼圈。满眼红丝者，皆是编程员。<br>《#诗盗#·惨付2》：昨夜狂加班，归来熊猫眼。双目红丝者，皆是程序员。</p><p>改编自宋代张俞的《蚕妇》。</p><blockquote><p>昨日入城市，<br>归来泪满巾。<br>遍身罗绮者，<br>不是养蚕人。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·惨付》：昨日苦加班，归来黑眼圈。满眼红丝者，皆是编程员。&lt;br&gt;
《#诗盗#·惨付2》：昨夜狂加班，归来熊猫眼。双目红丝者，皆是程序员。&lt;/p&gt;
&lt;p&gt;改编自宋代张俞的《蚕妇》。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;昨日入城市，&lt;br&gt;
归来泪满巾。&lt;br&gt;</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·风鹏</title>
    <link href="https://blog.umu618.com/2009/05/12/reconstructionism-poet-roc/"/>
    <id>https://blog.umu618.com/2009/05/12/reconstructionism-poet-roc/</id>
    <published>2009-05-12T04:08:21.000Z</published>
    <updated>2023-08-05T13:01:26.868Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·风鹏》：少独知音缺，返归七鹰绝。天亦笑鹰狂，鹏风振五岳。</p><p>改编自霹雳角色“极道先生尚风悦”的诗号。</p><blockquote><p>少独知音绝，<br>返归尚白雪。<br>人皆笑风狂，<br>谁奏神人悦。</p></blockquote><h2 id="注解">注解</h2><p>风鹏：荼藜七子老二·天哈慕香的化身</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·风鹏》：少独知音缺，返归七鹰绝。天亦笑鹰狂，鹏风振五岳。&lt;/p&gt;
&lt;p&gt;改编自霹雳角色“极道先生尚风悦”的诗号。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;少独知音绝，&lt;br&gt;
返归尚白雪。&lt;br&gt;
人皆笑风狂，&lt;br&gt;
谁奏神人悦。&lt;/p&gt;
&lt;/blockquo</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
    <category term="七鹰圣" scheme="https://blog.umu618.com/tags/%E4%B8%83%E9%B9%B0%E5%9C%A3/"/>
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·惨付</title>
    <link href="https://blog.umu618.com/2009/05/12/reconstructionism-poet-pay-a-painful-price/"/>
    <id>https://blog.umu618.com/2009/05/12/reconstructionism-poet-pay-a-painful-price/</id>
    <published>2009-05-12T04:08:21.000Z</published>
    <updated>2023-08-05T13:01:26.858Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·惨付》：昨日苦加班，归来黑眼圈。满眼红丝者，皆是编程员。</p><p>改编自宋代张俞的《蚕妇》。</p><blockquote><p>昨日入城市，<br>归来泪满巾。<br>遍身罗绮者，<br>不是养蚕人。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·惨付》：昨日苦加班，归来黑眼圈。满眼红丝者，皆是编程员。&lt;/p&gt;
&lt;p&gt;改编自宋代张俞的《蚕妇》。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;昨日入城市，&lt;br&gt;
归来泪满巾。&lt;br&gt;
遍身罗绮者，&lt;br&gt;
不是养蚕人。&lt;/p&gt;
&lt;/blockquote&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·抒心事</title>
    <link href="https://blog.umu618.com/2009/04/27/reconstructionism-poet-expressing-feelings/"/>
    <id>https://blog.umu618.com/2009/04/27/reconstructionism-poet-expressing-feelings/</id>
    <published>2009-04-27T12:37:00.000Z</published>
    <updated>2023-08-05T13:01:26.858Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·抒心事》 ：里牛克斯意境深，视窗话漏未成因。光驱急转追黄碟，切入全屏无处寻。</p><p>改编自宋朝杨万里的《宿新市徐公店》。</p><blockquote><p>篱落疏疏一径深，<br>树头花落未成阴。<br>儿童急走追黄蝶，<br>飞入菜花无处寻。</p></blockquote><h2 id="注解">注解</h2><p>Linux 很高深，都说视窗漏洞多，不安全，但这并未成为人民群众不用它的理由。人民群众用电脑只是看看黄碟，只要光驱转起来，不管它是什么系统，切换到全屏就看不出什么系统了，没区别。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·抒心事》 ：里牛克斯意境深，视窗话漏未成因。光驱急转追黄碟，切入全屏无处寻。&lt;/p&gt;
&lt;p&gt;改编自宋朝杨万里的《宿新市徐公店》。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;篱落疏疏一径深，&lt;br&gt;
树头花落未成阴。&lt;br&gt;
儿童急走追黄蝶，&lt;br&gt;
飞入菜花无处寻</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·望艳门山</title>
    <link href="https://blog.umu618.com/2009/04/27/reconstructionism-poet-watch-erotic-picture-scandal/"/>
    <id>https://blog.umu618.com/2009/04/27/reconstructionism-poet-watch-erotic-picture-scandal/</id>
    <published>2009-04-27T12:05:45.000Z</published>
    <updated>2023-08-05T13:01:26.858Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·望艳门山》：系统中毒后门开，隐私外流至此坏。阴暗情侣成堆出，艳照一片日便来。</p><p>改编自唐代伟大诗人李白的《望天门山》。</p><blockquote><p>天门中断楚江开，<br>碧水东流至此回。<br>两岸青山相对出，<br>孤帆一片日边来。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·望艳门山》：系统中毒后门开，隐私外流至此坏。阴暗情侣成堆出，艳照一片日便来。&lt;/p&gt;
&lt;p&gt;改编自唐代伟大诗人李白的《望天门山》。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;天门中断楚江开，&lt;br&gt;
碧水东流至此回。&lt;br&gt;
两岸青山相对出，&lt;br&gt;
孤帆一片日边</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·咏瘤</title>
    <link href="https://blog.umu618.com/2009/04/19/reconstructionism-poet-chant-the-praises-of-malware/"/>
    <id>https://blog.umu618.com/2009/04/19/reconstructionism-poet-chant-the-praises-of-malware/</id>
    <published>2009-04-19T13:46:38.000Z</published>
    <updated>2023-08-05T13:01:26.858Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·咏瘤》：屄已装成艺术高，万条广告下圈套。不知流氓谁养出，恶意软件似强盗。</p><p>改编自唐代贺知章的《咏柳》。</p><blockquote><p>碧玉妆成一树高，<br>万条垂下绿丝绦。<br>不知细叶谁裁出，<br>二月春风似剪刀。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·咏瘤》：屄已装成艺术高，万条广告下圈套。不知流氓谁养出，恶意软件似强盗。&lt;/p&gt;
&lt;p&gt;改编自唐代贺知章的《咏柳》。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;碧玉妆成一树高，&lt;br&gt;
万条垂下绿丝绦。&lt;br&gt;
不知细叶谁裁出，&lt;br&gt;
二月春风似剪刀。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·马</title>
    <link href="https://blog.umu618.com/2009/04/16/reconstructionism-poet-trojans/"/>
    <id>https://blog.umu618.com/2009/04/16/reconstructionism-poet-trojans/</id>
    <published>2009-04-16T05:30:05.000Z</published>
    <updated>2023-08-05T13:01:26.858Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·马》：马，马，马，吐血向天骂。白痴吐口水，红客挖青蛙。</p><p>改编自初唐四杰之一的骆宾王的《咏鹅》。</p><blockquote><p>鹅，鹅，鹅，<br>曲项向天歌。<br>白毛浮绿水，<br>红掌拨清波。</p></blockquote><h2 id="注解">注解</h2><p>为什么是“挖青蛙”？这个问题……诗盗本人也不知道，只是顺口，哈！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·马》：马，马，马，吐血向天骂。白痴吐口水，红客挖青蛙。&lt;/p&gt;
&lt;p&gt;改编自初唐四杰之一的骆宾王的《咏鹅》。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;鹅，鹅，鹅，&lt;br&gt;
曲项向天歌。&lt;br&gt;
白毛浮绿水，&lt;br&gt;
红掌拨清波。&lt;/p&gt;
&lt;/blockquote</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>编程员的生活</title>
    <link href="https://blog.umu618.com/2009/04/16/programmers-life/"/>
    <id>https://blog.umu618.com/2009/04/16/programmers-life/</id>
    <published>2009-04-16T05:21:00.000Z</published>
    <updated>2023-08-05T13:01:26.858Z</updated>
    
    <content type="html"><![CDATA[<p>《编程员的生活》<br>女：在加吗？<br>男：在。<br>女：回来做做吧。<br>男：嗯，马上回去。</p><p>《编程员的生活》<br>女：在加吗？<br>男：嗯。<br>女：回来做做吧。<br>男：嗯。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《编程员的生活》&lt;br&gt;
女：在加吗？&lt;br&gt;
男：在。&lt;br&gt;
女：回来做做吧。&lt;br&gt;
男：嗯，马上回去。&lt;/p&gt;
&lt;p&gt;《编程员的生活》&lt;br&gt;
女：在加吗？&lt;br&gt;
男：嗯。&lt;br&gt;
女：回来做做吧。&lt;br&gt;
男：嗯。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="U墨" scheme="https://blog.umu618.com/categories/U%E5%A2%A8/"/>
    
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·霹雳计算机·死机传说</title>
    <link href="https://blog.umu618.com/2009/04/16/reconstructionism-poet-thunderbolt-computer-legend-of-crash/"/>
    <id>https://blog.umu618.com/2009/04/16/reconstructionism-poet-thunderbolt-computer-legend-of-crash/</id>
    <published>2009-04-16T05:16:00.000Z</published>
    <updated>2023-08-05T13:01:26.858Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·霹雳计算机·死机传说》<br>传说在屏幕旁边，<br>机箱之中，<br>有五大支持整个系统的硬件。<br>硬件好，系统牛；<br>硬件坏，系统挂。<br>那一天到来时，<br>称之为——死机！</p><p>改编自霹雳神州II之苍玄泣开场白。</p><blockquote><p>传说在大地之下，<br>异界之中，<br>有四支支撑整个神州的支柱。<br>支柱存，神州安；<br>支柱毁，神州灭。<br>那一天到来时，<br>称之为——末日！</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·霹雳计算机·死机传说》&lt;br&gt;
传说在屏幕旁边，&lt;br&gt;
机箱之中，&lt;br&gt;
有五大支持整个系统的硬件。&lt;br&gt;
硬件好，系统牛；&lt;br&gt;
硬件坏，系统挂。&lt;br&gt;
那一天到来时，&lt;br&gt;
称之为——死机！&lt;/p&gt;
&lt;p&gt;改编自霹雳神州II之苍玄泣开场白。&lt;/p</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·盗版鹰熊</title>
    <link href="https://blog.umu618.com/2009/04/16/reconstructionism-poet-piracy-hero/"/>
    <id>https://blog.umu618.com/2009/04/16/reconstructionism-poet-piracy-hero/</id>
    <published>2009-04-16T05:14:00.000Z</published>
    <updated>2023-08-05T13:01:26.858Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·盗版鹰熊》： 是鹰是熊是鹰熊，非牛非狼非牛狼。手上戴着三个表，垄断盗版半市场。</p><p>改编自霹雳角色“清香白莲素还真”的诗号。</p><blockquote><p>半神半圣亦半仙，<br>全儒全道是全贤；<br>脑中真书藏万卷，<br>掌握文武半边天。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·盗版鹰熊》： 是鹰是熊是鹰熊，非牛非狼非牛狼。手上戴着三个表，垄断盗版半市场。&lt;/p&gt;
&lt;p&gt;改编自霹雳角色“清香白莲素还真”的诗号。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;半神半圣亦半仙，&lt;br&gt;
全儒全道是全贤；&lt;br&gt;
脑中真书藏万卷，&lt;br&gt;
掌握文武</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·挨踢殇</title>
    <link href="https://blog.umu618.com/2009/04/16/reconstructionism-poet-it-lag/"/>
    <id>https://blog.umu618.com/2009/04/16/reconstructionism-poet-it-lag/</id>
    <published>2009-04-16T05:13:00.000Z</published>
    <updated>2023-08-05T13:01:26.858Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·挨踢殇》<br>IT 腾飞的进程，<br>葬送了多少软件，<br>数不尽的代码从此变成乱码，<br>殇鹰。</p><p>杀毒软件腾飞的进程，<br>葬送了多少病毒木马，<br>数不尽的数码艺术从此变成一坨坨的屎，<br>靠鹰。</p><h2 id="注解">注解</h2><p>改编自霹雳台词，原文记不清了……</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·挨踢殇》&lt;br&gt;
IT 腾飞的进程，&lt;br&gt;
葬送了多少软件，&lt;br&gt;
数不尽的代码从此变成乱码，&lt;br&gt;
殇鹰。&lt;/p&gt;
&lt;p&gt;杀毒软件腾飞的进程，&lt;br&gt;
葬送了多少病毒木马，&lt;br&gt;
数不尽的数码艺术从此变成一坨坨的屎，&lt;br&gt;
靠鹰。&lt;/p&gt;
&lt;h2 i</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·杀毒</title>
    <link href="https://blog.umu618.com/2009/04/16/reconstructionism-poet-kill-virus/"/>
    <id>https://blog.umu618.com/2009/04/16/reconstructionism-poet-kill-virus/</id>
    <published>2009-04-16T05:11:00.000Z</published>
    <updated>2023-08-05T13:01:26.858Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·杀毒》：吐血日当午，汗滴掌中鼠。谁知系统盘，个个皆是毒。</p><blockquote><p>锄禾日当午，<br>汗滴禾下土。<br>谁知盘中餐，（谁念盘中餐）<br>粒粒皆辛苦。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·杀毒》：吐血日当午，汗滴掌中鼠。谁知系统盘，个个皆是毒。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;锄禾日当午，&lt;br&gt;
汗滴禾下土。&lt;br&gt;
谁知盘中餐，（谁念盘中餐）&lt;br&gt;
粒粒皆辛苦。&lt;/p&gt;
&lt;/blockquote&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·网络争锋</title>
    <link href="https://blog.umu618.com/2009/04/16/reconstructionism-poet-web-browser-warfare/"/>
    <id>https://blog.umu618.com/2009/04/16/reconstructionism-poet-web-browser-warfare/</id>
    <published>2009-04-16T05:06:00.000Z</published>
    <updated>2023-08-05T13:01:26.858Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·网络争锋》<br>IE，功能强大，<br>Windows，桌面无敌。<br>FireFox 欺骗 SB，<br>水战百帖，遍地骂声，<br>千万人的议论，<br>成就、荣耀，<br>往往只归于微软，<br>是 IT 行业的不公，<br>或是弱肉强食的残忍？<br>一处商机，一场生死。</p><h2 id="注解">注解</h2><p>改编自霹雳台词，原文记不清了……</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·网络争锋》&lt;br&gt;
IE，功能强大，&lt;br&gt;
Windows，桌面无敌。&lt;br&gt;
FireFox 欺骗 SB，&lt;br&gt;
水战百帖，遍地骂声，&lt;br&gt;
千万人的议论，&lt;br&gt;
成就、荣耀，&lt;br&gt;
往往只归于微软，&lt;br&gt;
是 IT 行业的不公，&lt;br&gt;
或是弱肉</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·入魔的觉悟</title>
    <link href="https://blog.umu618.com/2009/04/16/reconstructionism-poet-obsessive-awareness/"/>
    <id>https://blog.umu618.com/2009/04/16/reconstructionism-poet-obsessive-awareness/</id>
    <published>2009-04-16T05:02:00.000Z</published>
    <updated>2023-08-05T13:01:26.858Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·入魔的觉悟》<br>UMU 认为：<br>编写效率与运行效率，<br>矛盾难以调和。<br>编程员盼望的继承、复用，<br>不过配合人的懒惰心理，<br>由人类自我安慰，<br>化为高级的假象，<br>面向对象就是一坨屎的垃圾。<br>C，才能赐予透彻的觉悟。</p><p>UMU 认为：<br>轻松付出与高薪，<br>矛盾难以调和。<br>上班族盼望的铁饭碗装软饭，<br>不过配合人的懒性，<br>由人类贪痴地幻想，<br>化为极乐天堂的假象，<br>国企就是让人才变成庸才的加工厂。<br>离开，才能赐予透彻的觉悟。</p><h2 id="注解">注解</h2><p>改编自霹雳角色“伏婴师”的台词……<br>最终提前离开夏新，没有要裁员费，大约 3 万软妹币。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·入魔的觉悟》&lt;br&gt;
UMU 认为：&lt;br&gt;
编写效率与运行效率，&lt;br&gt;
矛盾难以调和。&lt;br&gt;
编程员盼望的继承、复用，&lt;br&gt;
不过配合人的懒惰心理，&lt;br&gt;
由人类自我安慰，&lt;br&gt;
化为高级的假象，&lt;br&gt;
面向对象就是一坨屎的垃圾。&lt;br&gt;
C，才能</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·屎神</title>
    <link href="https://blog.umu618.com/2009/04/16/reconstructionism-poet-shit/"/>
    <id>https://blog.umu618.com/2009/04/16/reconstructionism-poet-shit/</id>
    <published>2009-04-16T04:59:00.000Z</published>
    <updated>2023-08-05T13:01:26.858Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·屎神》<br>C语言没学好，所以代码里面全是语法错误。<br>数据结构也没有认真上，但是你为了掩饰，特别抄来了一堆算法，想把它写得好看点。<br>但这么做太天真了，因为你理解别人的代码的时间不够，那些著名的算法只是放着好看，完全没有调用到，运行起来根本是浪费内存。<br>好好的一个程序，让你做得是既不像伪代码又没法编译，失败！<br>代码写好没检查，BUG太多，失败！<br>没优化，垃圾太多，失败！<br>整个流程又乱七八糟的，一看就累，失败中的失败！<br>最惨的就是作者的英语水平了，根本不懂英文，还偏要用英文，你有没有搞错？<br>哎，一坨屎哎，哎，一坨屎你看到了这些垃圾英文了没有？哎，一坨屎！</p><p>没实行代码规范，所以工程里面有很多不同风格的乱码。<br>注释也没认真写，一下子是中文，一下子是英文。于是有人为了掩饰干脆不写注释，还节省时间。但这样做太无知了，这样的代码自己明天可能就看不懂了，何况是别人，交流起来简直是废话连篇不达其意！<br>买了第三方代码，却没买相应的文档！失败！<br>关键部分只有库文件和声明，失败！<br>员工电脑太垃圾，完整编译一次要20分钟，失败！<br>没根据员工现有技能水平合理分配岗位，浪费人才，失败中的失败！<br>最惨的就是工厂和开发地点放在一起，我们又不是工人，竟然要住在这么偏僻的地方，工作室不独立，容易互相影响，靠，你有没有搞错？哎，一坨屎哎，哎，一坨屎你看到我旁边的打印机了没有？哎，整天歪歪，就像一坨苍蝇！嗡……对不起，不是一坨，是一堆苍蝇围着你，嗡…嗡…嗡…嗡…飞到你的耳朵里面，救命啊！</p><h2 id="注解">注解</h2><p>改编自周星驰台词……</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·屎神》&lt;br&gt;
C语言没学好，所以代码里面全是语法错误。&lt;br&gt;
数据结构也没有认真上，但是你为了掩饰，特别抄来了一堆算法，想把它写得好看点。&lt;br&gt;
但这么做太天真了，因为你理解别人的代码的时间不够，那些著名的算法只是放着好看，完全没有调用到，运行起来根本是浪</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="挨踢" scheme="https://blog.umu618.com/tags/%E6%8C%A8%E8%B8%A2/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·嘿嗑公鸡</title>
    <link href="https://blog.umu618.com/2009/04/16/reconstructionism-poet-hackers-attacking/"/>
    <id>https://blog.umu618.com/2009/04/16/reconstructionism-poet-hackers-attacking/</id>
    <published>2009-04-16T04:53:00.000Z</published>
    <updated>2023-08-05T13:01:26.858Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·嘿嗑公鸡》：木马伏潜，病毒满天。黑客攻击，网络掉线。</p><p>改编自霹雳角色“练峨眉”的诗号：</p><blockquote><p>云霞争变，风雨横天，绝逸清坐，一榻沧然。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·嘿嗑公鸡》：木马伏潜，病毒满天。黑客攻击，网络掉线。&lt;/p&gt;
&lt;p&gt;改编自霹雳角色“练峨眉”的诗号：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;云霞争变，风雨横天，绝逸清坐，一榻沧然。&lt;/p&gt;
&lt;/blockquote&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·黑客笑</title>
    <link href="https://blog.umu618.com/2009/04/16/reconstructionism-poet-hackers-laughed/"/>
    <id>https://blog.umu618.com/2009/04/16/reconstructionism-poet-hackers-laughed/</id>
    <published>2009-04-16T04:51:00.000Z</published>
    <updated>2023-08-05T13:01:26.858Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·黑客笑》：小人叫，黑客笑，网络无道，靠靠靠。</p><p>改编自霹雳角色“恨刀英雄”的诗号：</p><blockquote><p>世情矫，英雄笑，莫问为何。救世之道，刀、刀、刀！</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·黑客笑》：小人叫，黑客笑，网络无道，靠靠靠。&lt;/p&gt;
&lt;p&gt;改编自霹雳角色“恨刀英雄”的诗号：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;世情矫，英雄笑，莫问为何。救世之道，刀、刀、刀！&lt;/p&gt;
&lt;/blockquote&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·山坡羊·黑客代表</title>
    <link href="https://blog.umu618.com/2009/04/16/reconstructionism-poet-shanpoyang-hacker/"/>
    <id>https://blog.umu618.com/2009/04/16/reconstructionism-poet-shanpoyang-hacker/</id>
    <published>2009-04-16T04:50:00.000Z</published>
    <updated>2023-08-05T13:01:26.858Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·山坡羊·黑客代表》：系统俱坏，资料安在，卧底几时相交代，想不开，是小白，黑客方起红客败，网络有如云变改，黑，也是我最帅，红，也是我最帅。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·山坡羊·黑客代表》：系统俱坏，资料安在，卧底几时相交代，想不开，是小白，黑客方起红客败，网络有如云变改，黑，也是我最帅，红，也是我最帅。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·手贱</title>
    <link href="https://blog.umu618.com/2009/04/15/reconstructionism-poet-fingers-itch/"/>
    <id>https://blog.umu618.com/2009/04/15/reconstructionism-poet-fingers-itch/</id>
    <published>2009-04-15T12:39:37.000Z</published>
    <updated>2023-08-05T13:01:26.858Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·手贱》：系统骑木马，鸽声振网页。意欲捕黑客，忽然毒发死。</p><p>改编自清代诗人袁枚的《所见》。</p><blockquote><p>牧童骑黄牛，<br>歌声振林樾。<br>意欲捕鸣蝉，<br>忽然闭口立。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·手贱》：系统骑木马，鸽声振网页。意欲捕黑客，忽然毒发死。&lt;/p&gt;
&lt;p&gt;改编自清代诗人袁枚的《所见》。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;牧童骑黄牛，&lt;br&gt;
歌声振林樾。&lt;br&gt;
意欲捕鸣蝉，&lt;br&gt;
忽然闭口立。&lt;/p&gt;
&lt;/blockquote&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·乞丐衣</title>
    <link href="https://blog.umu618.com/2009/04/13/reconstructionism-poet-rag/"/>
    <id>https://blog.umu618.com/2009/04/13/reconstructionism-poet-rag/</id>
    <published>2009-04-13T03:35:58.000Z</published>
    <updated>2023-08-05T13:01:26.858Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·乞丐衣》：身披乞丐衣，藏世御真理。云巅通神路，紫微降天旨。</p><p>改编自霹雳角色“御天荒神六铢衣”出场诗。</p><blockquote><p>身披六铢衣，<br>御宇藏真理。<br>云中封神路，<br>紫薇降天启！</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·乞丐衣》：身披乞丐衣，藏世御真理。云巅通神路，紫微降天旨。&lt;/p&gt;
&lt;p&gt;改编自霹雳角色“御天荒神六铢衣”出场诗。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;身披六铢衣，&lt;br&gt;
御宇藏真理。&lt;br&gt;
云中封神路，&lt;br&gt;
紫薇降天启！&lt;/p&gt;
&lt;/blockqu</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·毒</title>
    <link href="https://blog.umu618.com/2009/04/07/reconstructionism-poet-virus/"/>
    <id>https://blog.umu618.com/2009/04/07/reconstructionism-poet-virus/</id>
    <published>2009-04-07T08:08:49.000Z</published>
    <updated>2023-08-05T13:01:26.858Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·毒》：密密盘中毒，一日一蓝屏。杀软删不尽，菜鸟用又生。</p><p>改编自唐代白居易的《赋得古原草送别》。</p><blockquote><p>离离原上草，一岁一枯荣。<br>野火烧不尽，春风吹又生。<br>远芳侵古道，晴翠接荒城。<br>又送王孙去，萋萋满别情。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·毒》：密密盘中毒，一日一蓝屏。杀软删不尽，菜鸟用又生。&lt;/p&gt;
&lt;p&gt;改编自唐代白居易的《赋得古原草送别》。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;离离原上草，一岁一枯荣。&lt;br&gt;
野火烧不尽，春风吹又生。&lt;br&gt;
远芳侵古道，晴翠接荒城。&lt;br&gt;
又送王孙去</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·霹雳网络·神盗惨声3</title>
    <link href="https://blog.umu618.com/2009/03/26/reconstructionism-poet-thunderbolt-network-awful-sound-of-stealing-god-3/"/>
    <id>https://blog.umu618.com/2009/03/26/reconstructionism-poet-thunderbolt-network-awful-sound-of-stealing-god-3/</id>
    <published>2009-03-26T01:00:19.000Z</published>
    <updated>2023-08-05T13:01:26.858Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·霹雳网络·神盗惨声3》：网络深深牛Ｂ多，被黑犹知技术弱。吾恨补丁无绝期，叹留漏洞终是祸。</p><p>改编自霹雳角色“幽溟”化身“无绝期”手持“天雷杵”背着“神觉残生”时的出场诗。</p><blockquote><p>霓裳飘渺众神渡，<br>觉来犹知梦成空。<br>吾恨天穹无绝期，<br>叹留人间一残生。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·霹雳网络·神盗惨声3》：网络深深牛Ｂ多，被黑犹知技术弱。吾恨补丁无绝期，叹留漏洞终是祸。&lt;/p&gt;
&lt;p&gt;改编自霹雳角色“幽溟”化身“无绝期”手持“天雷杵”背着“神觉残生”时的出场诗。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;霓裳飘渺众神渡，&lt;br&gt;
觉来犹知梦成</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·霹雳网络·病毒传说</title>
    <link href="https://blog.umu618.com/2009/03/24/reconstructionism-poet-thunderbolt-network-legend-of-virus/"/>
    <id>https://blog.umu618.com/2009/03/24/reconstructionism-poet-thunderbolt-network-legend-of-virus/</id>
    <published>2009-03-24T02:17:39.000Z</published>
    <updated>2023-08-05T13:01:26.858Z</updated>
    
    <content type="html"><![CDATA[<p>飘渺的网络，传出无数故事：<br>有一个人，放飞三百鸽子，只为一只鸡；【注：肉鸡】<br>有一个人，拐卖三千熊猫，只为一根香；<br>而追寻豪华的人，他有一个i，一个苹果；<br>找寻钞票的人，他有一扇窗，一个市场；<br>只求自由的人，他有一只鹅，一个内核。</p><p>腾飞的时代，造就挨踢三角之争，<br>自由的网络，成就真假黑客之乱。</p><p>在黑客的故事之中，还有一个传说：<br>来自火星的人，带来一套病毒，带来网络木马，<br>出身地球的人，耗尽一身脑力，写下杀毒软件。<br>病毒杀软的对立，冥冥注定的宿敌，<br>维护正义的人，连在网络，只有一个共同的目标（——升级！）</p><p>公孙无毒：我又忆起杀毒的感觉了！</p><p>毒邪：我不想杀毒！</p><p>蝴蝶毒君：这个系统天天都在杀毒！</p><p>人毒：杀毒伴防毒，扫过不留马。</p><p>东方毒立：网无二毒，唯吾毒照，你，又算什么！</p><p>原来你我早已感染病毒。</p><p>而传说，是真，是假？</p><p>马九五：网上总有愚人，相信改装后的木马。</p><p>黄网挂马，谁生谁死，<br>流氓钓鱼，谁更邪恶，<br>网银安全，谁强谁弱，<br>杀软争锋，谁领风光。</p><p>中毒之深，杀之不尽，<br>头脑之晕，烦人噪音。<br>无机之人，清净悠哉，<br>百毒之身，千毒难分，<br>杀毒之途，朝九晚五，<br>重装之路，悔不当初，<br>启动之途，空无一物，<br>恢复之路，哀唱悲歌。</p><p>网络苍苍毒之囧，<br>资料纷纷死无踪。<br>杀软病毒一条心，<br>驱动木马爱相逢。</p><p>——霹雳病毒</p><p>改编自霹雳剑宗开场白。</p><blockquote><p>遥远的北隅，传出无数故事：<br>有一个人，火烧三百剑客，只为一剑招；<br>有一个人，杀尽三千王酋，只为一口气；<br>而追寻未来的人，他有一口剑，一个仇人；<br>找寻过去的人，他有一口剑，一个恩人；<br>只求现在的人，他有一口刀，一个情人。</p><p>深刻的意念，造就刀剑三角之争；<br>自尊的价值，成就邪心王者之乱。</p><p>在北方的故事之中，还有一个传说：<br>来自无间的人，带来一口魔剑，带来杀戮兵祸<br>出身苦境的人，耗尽一身功力，铸下一口圣剑<br>圣魔之剑的对立，混沌之初的宿敌，<br>接下遗愿的人，身在江湖，只有一个共同的目标</p><p>公孙月：我又忆起杀人的感觉了<br>剑邪：我不想杀生<br>蝴蝶君：这个江湖天天都在杀人<br>人邪：杀戒半斜影，剑风不留人<br>东方鼎立：天无二日，为吾旷照，你，又算虾米<br>原来你我早已身在无间</p><p>而传说，是真，是假</p><p>邓王爷：世上总有愚人，相信美化后的谎言</p><p>黄泉之都，谁生谁死<br>圣邪初会，谁立高峰<br>王者狂者，谁强谁弱<br>剑踪刀锋，谁领风光</p><p>魔海之深 如来誓尽<br>兰若之韵 莲华圣音<br>无欲之人 脱俗还真<br>百年之身 千年红尘<br>恒河之途 晨钟暮鼓<br>彼岸之路 悔不当初<br>恒河之途 行单影孤<br>彼岸之路 婆娑悲歌</p><p>云海苍苍天之穹，<br>蝶影纷纷火寻踪。<br>杀诫朱厌莲佛心，<br>封禅剑雪恨相逢。</p><p>霹雳剑踪～</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;飘渺的网络，传出无数故事：&lt;br&gt;
有一个人，放飞三百鸽子，只为一只鸡；【注：肉鸡】&lt;br&gt;
有一个人，拐卖三千熊猫，只为一根香；&lt;br&gt;
而追寻豪华的人，他有一个i，一个苹果；&lt;br&gt;
找寻钞票的人，他有一扇窗，一个市场；&lt;br&gt;
只求自由的人，他有一只鹅，一个内核。&lt;/</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·霹雳网络·神盗惨声</title>
    <link href="https://blog.umu618.com/2009/03/24/reconstructionism-poet-thunderbolt-network-awful-sound-of-stealing-god/"/>
    <id>https://blog.umu618.com/2009/03/24/reconstructionism-poet-thunderbolt-network-awful-sound-of-stealing-god/</id>
    <published>2009-03-24T02:14:55.000Z</published>
    <updated>2023-08-05T13:01:26.858Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·霹雳网络·神盗惨声》：网络飘渺鸟人多，掉线犹知又被黑。吾恨升级无绝期，叹留盗版一声累。</p><p>《#诗盗#·霹雳网络·神盗惨声2》：网络飘渺鸟人多，中毒犹知杀软弱。吾恨升级无绝期，叹留木马两三坨。</p><p>改编自霹雳角色“幽溟”化身“无绝期”手持“天雷杵”背着“神觉残生”时的出场诗。</p><blockquote><p>霓裳飘渺众神渡，<br>觉来犹知梦成空。<br>吾恨天穹无绝期，<br>叹留人间一残生。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·霹雳网络·神盗惨声》：网络飘渺鸟人多，掉线犹知又被黑。吾恨升级无绝期，叹留盗版一声累。&lt;/p&gt;
&lt;p&gt;《#诗盗#·霹雳网络·神盗惨声2》：网络飘渺鸟人多，中毒犹知杀软弱。吾恨升级无绝期，叹留木马两三坨。&lt;/p&gt;
&lt;p&gt;改编自霹雳角色“幽溟”化身“无绝期”手持“天</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
  </entry>
  
  <entry>
    <title>久恋神经 —— 别以为您帅就可以××</title>
    <link href="https://blog.umu618.com/2009/02/12/do-not-throw-your-wallet/"/>
    <id>https://blog.umu618.com/2009/02/12/do-not-throw-your-wallet/</id>
    <published>2009-02-12T01:58:00.000Z</published>
    <updated>2023-08-05T13:01:26.848Z</updated>
    
    <content type="html"><![CDATA[<p>情人节那晚，【鲸神链】约了【美女】到【寨子山】的后山，结果遇到七个【土匪】劫色。</p><p>【鲸神链】信誓旦旦地和她说跳下山寨吧，武侠小说里都这样，下去绝对不死，还会有好事发生。【美女】很害怕，不情愿，于是【鲸神链】一脚把【美女】踢下去。</p><p>【土匪】愣了，没色劫了，无语地打量着【鲸神链】。</p><p>【鲸神链】看出他们想改劫财，于是把钱包掏出来……沉甸甸的一个哦……咳咳，穷人，里面都是硬币，也扔下山寨！</p><p>【土匪】二愣了，没财劫了，继续地盯着【鲸神链】：“我COW，大哥，你太绝了吧，看来只能留下你的一条小命了”。</p><p>【鲸神链】：“哈哈，您们太天真了，我可是主角，主角跳山寨死亡率从来都是零，何况下面有个【美女】做垫！”说完就跳下去了。</p><p>【土匪】三愣了，七个失声痛哭，第一次打劫就遇到这么牛的人……还是改邪归正吧。</p><p>【鲸神链】到了山寨谷底，醒过来已经是第二天，突然冒出个【金刚】，从兜里掏出一本书，说：“你恋，恋完了无敌于天下！”</p><p>【鲸神链】一看，是本《久恋神经》，果然天下无敌，但是——【美女】呢？</p><p>【金刚】比来比去表演了昨晚的那幕，毕竟是大猩猩，只会说那一句人话。</p><p>原来，【美女】被踢下来后也没死，但后来有人扔下一个东西，把【美女】给活活砸死了……</p><p>这个故事告诉我们一个道理：不要以为您有钱就可以乱扔钱包。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;情人节那晚，【鲸神链】约了【美女】到【寨子山】的后山，结果遇到七个【土匪】劫色。&lt;/p&gt;
&lt;p&gt;【鲸神链】信誓旦旦地和她说跳下山寨吧，武侠小说里都这样，下去绝对不死，还会有好事发生。【美女】很害怕，不情愿，于是【鲸神链】一脚把【美女】踢下去。&lt;/p&gt;
&lt;p&gt;【土匪】愣了，没</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="怪悟" scheme="https://blog.umu618.com/tags/%E6%80%AA%E6%82%9F/"/>
    
    <category term="鲸神链" scheme="https://blog.umu618.com/tags/%E9%B2%B8%E7%A5%9E%E9%93%BE/"/>
    
  </entry>
  
  <entry>
    <title>怪悟 vs 怪物 —— 我是天使还是恶魔</title>
    <link href="https://blog.umu618.com/2009/02/12/funny-satori-vs-monster/"/>
    <id>https://blog.umu618.com/2009/02/12/funny-satori-vs-monster/</id>
    <published>2009-02-12T01:56:00.000Z</published>
    <updated>2023-08-05T13:01:26.848Z</updated>
    
    <content type="html"><![CDATA[<p>我来到我们家的古宅，走进了一个很老旧房间，掉进了时空隧洞，来到一个未知的地方。</p><p>他们都说英语。晚上街上没人。据说是因为这里有怪兽出没，已经杀死镇上很多人。</p><p>那天傍晚，太阳已下，天边一片深红。那条街，很像厦门中山路步行街，但更宽，两边的楼更高，整条街也是深红色调，那是被怪兽杀死的人的血氧化过的颜色。</p><p>人们已经忍无可忍，几位大胡子的彪悍大叔商量着要去杀怪兽，以绝后患。他们都是高大威武，身强力壮的，拿砍刀、斧头、大枪当武器。</p><p>我是例外，我什么都没拿，纯粹是看热闹。</p><p>在街上，我看到远方的黑影在街道尽头的楼房上挑来挑去，慢慢接近我们。</p><p>枪声响起。但是怪兽的速度太快了。第一个人死了，我很清楚地看到是被咬断脖子，鲜血喷洒满地，然后头被扭断，拿走挂在高处。</p><p>接着另一个又死了，是被怪兽用巨臂把头从身体上拔了出来，还连带了几节脊柱，我又把每个细节看得清清楚楚。但是奇怪的是，我竟然一点都不害怕。</p><p>其他人看不到这个残忍的过程，只看到悲惨的结果，也看不到怪兽的行踪，所以有人动摇了。</p><p>有人惊慌中乱开枪，竟然无意中打中怪兽的头，可惜那怪兽的头太硬了，只是流点血而已。然后那个人又被怪兽撕碎了身体，他的头被怪兽吃了。</p><p>有人说那个怪兽只吃头。</p><p>人越来越少了，包括我只剩四个。我开始意识到怪兽盯上我了。</p><p>它大概也发现了，它每次杀人都被我冷眼观察到整个过程，所以它觉得我是必杀的对象。</p><p>它依然是用其它人看不清楚的速度移动，唆的一声就跑到我身后。然后停了，它可能想看清楚我，与此同时大家看清楚了它的位置，向我大呼快跑……但是太迟了，怪兽很快就伸手过来抓我。</p><p>一瞬间，剧情发生了逆转。</p><p>我转身，迅速抓住怪兽的脖子，用它拔掉别人头颅的方式，把它的头给拔掉了。</p><p>原来我刚才看得那么仔细的时候已经学会了……</p><p>在场的人很惊讶，后来的人也觉得不可思议。</p><p>我无语，我也不明白为什么。</p><p>可是慢慢地人群中有人把枪对准了我。</p><p>依然是深红的天幕，出现了一道极光。我抬头，我清楚，他们看不见，而我分不清。</p><p>我是天使，还是恶魔。</p><p>所有人，包括我，都迷惑了，就在这个时候，众人皆醉我独醒的“天下无敌泥巴娃”出现了，指着倒下的怪兽，很牛B地说：“对不起，我是中国人！哇哒啊～～～～～～～Chinese kungfu！”</p><p>我哈哈大笑，众人便把我当作鹰熊欢呼。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;我来到我们家的古宅，走进了一个很老旧房间，掉进了时空隧洞，来到一个未知的地方。&lt;/p&gt;
&lt;p&gt;他们都说英语。晚上街上没人。据说是因为这里有怪兽出没，已经杀死镇上很多人。&lt;/p&gt;
&lt;p&gt;那天傍晚，太阳已下，天边一片深红。那条街，很像厦门中山路步行街，但更宽，两边的楼更高，整条</summary>
      
    
    
    
    <category term="吓醒" scheme="https://blog.umu618.com/categories/%E5%90%93%E9%86%92/"/>
    
    
    <category term="怪悟" scheme="https://blog.umu618.com/tags/%E6%80%AA%E6%82%9F/"/>
    
    <category term="泥巴娃" scheme="https://blog.umu618.com/tags/%E6%B3%A5%E5%B7%B4%E5%A8%83/"/>
    
    <category term="圣小开" scheme="https://blog.umu618.com/tags/%E5%9C%A3%E5%B0%8F%E5%BC%80/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·对联·散打孕淫殇</title>
    <link href="https://blog.umu618.com/2009/01/13/reconstructionism-poet-couplets-3-operators/"/>
    <id>https://blog.umu618.com/2009/01/13/reconstructionism-poet-couplets-3-operators/</id>
    <published>2009-01-13T04:44:48.000Z</published>
    <updated>2023-08-05T13:01:26.848Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·对联·散打孕淫殇》：上联：移动联不通；下联：联通移不动；横批：电信无路用。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·对联·散打孕淫殇》：上联：移动联不通；下联：联通移不动；横批：电信无路用。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
    <category term="对联" scheme="https://blog.umu618.com/tags/%E5%AF%B9%E8%81%94/"/>
    
  </entry>
  
  <entry>
    <title>梅兰娇</title>
    <link href="https://blog.umu618.com/2008/12/11/no-jb/"/>
    <id>https://blog.umu618.com/2008/12/11/no-jb/</id>
    <published>2008-12-11T13:11:15.000Z</published>
    <updated>2023-08-05T13:01:26.848Z</updated>
    
    <content type="html"><![CDATA[<p>泥巴娃觉得“梅兰娇”这个名字很有个性！<br>据说“梅兰娇”为了消灾避难，天天拜“无难佛”。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;泥巴娃觉得“梅兰娇”这个名字很有个性！&lt;br&gt;
据说“梅兰娇”为了消灾避难，天天拜“无难佛”。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="U墨" scheme="https://blog.umu618.com/categories/U%E5%A2%A8/"/>
    
    
    <category term="泥巴娃" scheme="https://blog.umu618.com/tags/%E6%B3%A5%E5%B7%B4%E5%A8%83/"/>
    
    <category term="闽南语" scheme="https://blog.umu618.com/tags/%E9%97%BD%E5%8D%97%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·霹雳病毒</title>
    <link href="https://blog.umu618.com/2008/12/10/reconstructionism-poet-thunderbolt-virus/"/>
    <id>https://blog.umu618.com/2008/12/10/reconstructionism-poet-thunderbolt-virus/</id>
    <published>2008-12-10T09:40:14.000Z</published>
    <updated>2023-08-05T13:01:26.848Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·霹雳病毒》：网络苍苍毒之囧，资料纷纷死无踪。杀软病毒一条心，驱动木马爱相逢。</p><p>改编自霹雳剑宗主题诗。</p><blockquote><p>云海苍苍天之穹，<br>蝶影纷纷火寻踪。<br>杀诫朱厌莲佛心，<br>封禅剑雪恨相逢。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·霹雳病毒》：网络苍苍毒之囧，资料纷纷死无踪。杀软病毒一条心，驱动木马爱相逢。&lt;/p&gt;
&lt;p&gt;改编自霹雳剑宗主题诗。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;云海苍苍天之穹，&lt;br&gt;
蝶影纷纷火寻踪。&lt;br&gt;
杀诫朱厌莲佛心，&lt;br&gt;
封禅剑雪恨相逢。&lt;/p&gt;
&lt;</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·霹雳量子</title>
    <link href="https://blog.umu618.com/2008/12/08/reconstructionism-poet-thunderbolt-quantum/"/>
    <id>https://blog.umu618.com/2008/12/08/reconstructionism-poet-thunderbolt-quantum/</id>
    <published>2008-12-08T05:22:39.000Z</published>
    <updated>2023-08-05T13:01:26.848Z</updated>
    
    <content type="html"><![CDATA[<p>游遍虚无时空，<br>开创宇宙洪荒的意识，<br>自奇点无中生有，<br>在爆炸中造化万物。<br>无与有带来零壹，<br>也带来计算机，<br>来自阴阳两极，<br>无穷尽的正负电荷，<br>交错永无休止的量子运动。<br>当自旋改变，<br>测中微子质量，<br>打破微观界限，<br>永生不灭的能量，<br>将坏人间规律，<br>吞噬一切文明！</p><p>改编自霹雳角色“曼无歆”的台词：</p><blockquote><p>幽厉五神带来光明，<br>也带来黑暗。<br>来自阴阳两界无穷尽的人世之间，<br>交错永无止休的黑白漩涡。<br>当五灵汇聚，<br>掌五幽厉之心，<br>打破现实界限，<br>永不餍足的玄貘，<br>将侵蚀人界梦魂，<br>吞噬一切思想！</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;游遍虚无时空，&lt;br&gt;
开创宇宙洪荒的意识，&lt;br&gt;
自奇点无中生有，&lt;br&gt;
在爆炸中造化万物。&lt;br&gt;
无与有带来零壹，&lt;br&gt;
也带来计算机，&lt;br&gt;
来自阴阳两极，&lt;br&gt;
无穷尽的正负电荷，&lt;br&gt;
交错永无休止的量子运动。&lt;br&gt;
当自旋改变，&lt;br&gt;
测中微子</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·网络风云</title>
    <link href="https://blog.umu618.com/2008/09/28/reconstructionism-poet-networking-arena/"/>
    <id>https://blog.umu618.com/2008/09/28/reconstructionism-poet-networking-arena/</id>
    <published>2008-09-28T06:29:45.000Z</published>
    <updated>2023-08-05T13:01:26.848Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·网络风云》：心存一面明镜，胸怀三个带婊，倦看网络风云，回首不鸟菜鸟。</p><p>改编自霹雳角色“道隐·凤凰鸣”诗号。</p><blockquote><p>心怀一襟朗月，<br>剑藏七尺乾坤，<br>惯看满城烟雨，<br>回首不入烽云。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·网络风云》：心存一面明镜，胸怀三个带婊，倦看网络风云，回首不鸟菜鸟。&lt;/p&gt;
&lt;p&gt;改编自霹雳角色“道隐·凤凰鸣”诗号。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;心怀一襟朗月，&lt;br&gt;
剑藏七尺乾坤，&lt;br&gt;
惯看满城烟雨，&lt;br&gt;
回首不入烽云。&lt;/p&gt;
&lt;/</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·七鹰圣传奇·云山仙影</title>
    <link href="https://blog.umu618.com/2008/09/18/reconstructionism-poet-hill-fairy/"/>
    <id>https://blog.umu618.com/2008/09/18/reconstructionism-poet-hill-fairy/</id>
    <published>2008-09-18T04:13:22.000Z</published>
    <updated>2023-08-05T13:01:26.848Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·七鹰圣传奇·云山仙影》：青山千坡崎，丽水九波池。仙影卷云霞，英华神难测。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·七鹰圣传奇·云山仙影》：青山千坡崎，丽水九波池。仙影卷云霞，英华神难测。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七鹰圣" scheme="https://blog.umu618.com/tags/%E4%B8%83%E9%B9%B0%E5%9C%A3/"/>
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>关于“先有鸡，还是先有蛋”的哲学研究</title>
    <link href="https://blog.umu618.com/2008/09/10/chick-or-egg/"/>
    <id>https://blog.umu618.com/2008/09/10/chick-or-egg/</id>
    <published>2008-09-10T12:44:00.000Z</published>
    <updated>2023-08-05T13:01:26.848Z</updated>
    
    <content type="html"><![CDATA[<pre><code>Which comes first, the chicken or the egg?</code></pre><p>老听一些无赖和智障拿这么简单的问题考人，或者应该说是忽悠人，人民群众很生气，所以泥巴娃给大家来个标准答案！</p><p>先有蛋！</p><p>谁都知道是因为蛋急了，有这方面的需求，才有人去做，咳咳，鸡的……以后别再问这么脑残的问题了！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;pre&gt;&lt;code&gt;Which comes first, the chicken or the egg?
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;老听一些无赖和智障拿这么简单的问题考人，或者应该说是忽悠人，人民群众很生气，所以泥巴娃给大家来个标准答案！&lt;/p&gt;
&lt;p&gt;先有蛋！&lt;/p&gt;</summary>
      
    
    
    
    <category term="U墨" scheme="https://blog.umu618.com/categories/U%E5%A2%A8/"/>
    
    
    <category term="怪悟" scheme="https://blog.umu618.com/tags/%E6%80%AA%E6%82%9F/"/>
    
    <category term="泥巴娃" scheme="https://blog.umu618.com/tags/%E6%B3%A5%E5%B7%B4%E5%A8%83/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·迎接新生</title>
    <link href="https://blog.umu618.com/2008/09/02/reconstructionism-poet-welcome-new-students/"/>
    <id>https://blog.umu618.com/2008/09/02/reconstructionism-poet-welcome-new-students/</id>
    <published>2008-09-02T15:01:20.000Z</published>
    <updated>2023-08-05T13:01:26.848Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·迎接新生》：新生妹妹有芳华，二九妙龄皆嫩芽。学长却嫌姿色晚，故摆风度来采花。</p><p>改编自唐朝诗人韩愈的《春雪》。</p><blockquote><p>新年都未有芳华，<br>二月初惊见草芽。<br>白雪却嫌春色晚，<br>故穿庭树作飞花。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·迎接新生》：新生妹妹有芳华，二九妙龄皆嫩芽。学长却嫌姿色晚，故摆风度来采花。&lt;/p&gt;
&lt;p&gt;改编自唐朝诗人韩愈的《春雪》。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;新年都未有芳华，&lt;br&gt;
二月初惊见草芽。&lt;br&gt;
白雪却嫌春色晚，&lt;br&gt;
故穿庭树作飞花。&lt;/</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
  </entry>
  
  <entry>
    <title>人妖</title>
    <link href="https://blog.umu618.com/2008/09/01/freak/"/>
    <id>https://blog.umu618.com/2008/09/01/freak/</id>
    <published>2008-09-01T09:31:03.000Z</published>
    <updated>2023-08-05T13:01:26.848Z</updated>
    
    <content type="html"><![CDATA[<p>物反常即为妖，人反常即为人妖。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;物反常即为妖，人反常即为人妖。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="U墨" scheme="https://blog.umu618.com/categories/U%E5%A2%A8/"/>
    
    
    <category term="怪悟" scheme="https://blog.umu618.com/tags/%E6%80%AA%E6%82%9F/"/>
    
    <category term="喷" scheme="https://blog.umu618.com/tags/%E5%96%B7/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·卧底先生初醒眼</title>
    <link href="https://blog.umu618.com/2008/08/21/reconstructionism-poet-undercover/"/>
    <id>https://blog.umu618.com/2008/08/21/reconstructionism-poet-undercover/</id>
    <published>2008-08-21T05:35:39.000Z</published>
    <updated>2023-08-05T13:01:26.848Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·卧底先生初醒眼》：新装系统开后门，江湖黑客来光临。夷笑网站挂木马，杀毒软件中毒深。</p><p>改编自霹雳角色“卧云先生初行雁”的出场诗。</p><blockquote><p>身藏风云心无尘，<br>古今圣贤谁为邻。<br>一笑横江挂书剑，<br>九重天外卧龙深。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·卧底先生初醒眼》：新装系统开后门，江湖黑客来光临。夷笑网站挂木马，杀毒软件中毒深。&lt;/p&gt;
&lt;p&gt;改编自霹雳角色“卧云先生初行雁”的出场诗。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;身藏风云心无尘，&lt;br&gt;
古今圣贤谁为邻。&lt;br&gt;
一笑横江挂书剑，&lt;br&gt;
九</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·庄十三入赘记</title>
    <link href="https://blog.umu618.com/2008/07/10/reconstructionism-poet-zhuang13/"/>
    <id>https://blog.umu618.com/2008/07/10/reconstructionism-poet-zhuang13/</id>
    <published>2008-07-10T04:42:58.000Z</published>
    <updated>2023-08-05T13:01:26.848Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·庄十三入赘记》：慈眉笑对千夫侃，俯首甘为牛十三。送入洞房成一家，管他冷眼与白眼。</p><p>改编自鲁迅的《自嘲》。</p><blockquote><p>运交华盖欲何求，未敢翻身已碰头。<br>破帽遮颜过闹市，漏船载酒泛中流。<br>横眉冷对千夫指，俯首甘为孺子牛。<br>躲进小楼成一统，管他冬夏与春秋。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·庄十三入赘记》：慈眉笑对千夫侃，俯首甘为牛十三。送入洞房成一家，管他冷眼与白眼。&lt;/p&gt;
&lt;p&gt;改编自鲁迅的《自嘲》。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;运交华盖欲何求，未敢翻身已碰头。&lt;br&gt;
破帽遮颜过闹市，漏船载酒泛中流。&lt;br&gt;
横眉冷对千夫指，俯</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·送春词</title>
    <link href="https://blog.umu618.com/2008/07/08/reconstructionism-poet-lust/"/>
    <id>https://blog.umu618.com/2008/07/08/reconstructionism-poet-lust/</id>
    <published>2008-07-08T01:24:31.000Z</published>
    <updated>2023-08-05T13:01:26.848Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·送春词》：日日人空老，月月春唤归。相欢在玉床，不用惜花飞。</p><p>改编自唐代王涯的《送春词》，就小改。</p><blockquote><p>日日人空老，<br>年年春更归。<br>相欢在尊酒，<br>不用惜花飞。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·送春词》：日日人空老，月月春唤归。相欢在玉床，不用惜花飞。&lt;/p&gt;
&lt;p&gt;改编自唐代王涯的《送春词》，就小改。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;日日人空老，&lt;br&gt;
年年春更归。&lt;br&gt;
相欢在尊酒，&lt;br&gt;
不用惜花飞。&lt;/p&gt;
&lt;/blockquot</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="五言" scheme="https://blog.umu618.com/tags/%E4%BA%94%E8%A8%80/"/>
    
    <category term="打嘴炮" scheme="https://blog.umu618.com/tags/%E6%89%93%E5%98%B4%E7%82%AE/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·鹰</title>
    <link href="https://blog.umu618.com/2008/06/24/reconstructionism-poet-eagle/"/>
    <id>https://blog.umu618.com/2008/06/24/reconstructionism-poet-eagle/</id>
    <published>2008-06-24T01:30:25.000Z</published>
    <updated>2023-08-05T13:01:26.848Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·鹰》：鹰呼万里风，风助群鹰击，击浪竞风流，流芳百世鹰～</p><p>最后那个鹰是音译，ing 的意思。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·鹰》：鹰呼万里风，风助群鹰击，击浪竞风流，流芳百世鹰～&lt;/p&gt;
&lt;p&gt;最后那个鹰是音译，ing 的意思。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="七鹰圣" scheme="https://blog.umu618.com/tags/%E4%B8%83%E9%B9%B0%E5%9C%A3/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·怪悟</title>
    <link href="https://blog.umu618.com/2008/05/26/reconstructionism-poet-funny-satori/"/>
    <id>https://blog.umu618.com/2008/05/26/reconstructionism-poet-funny-satori/</id>
    <published>2008-05-26T04:58:58.000Z</published>
    <updated>2023-08-05T13:01:26.848Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·怪悟》：怪者，圣之心；悟者，吾之心。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·怪悟》：怪者，圣之心；悟者，吾之心。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="词" scheme="https://blog.umu618.com/tags/%E8%AF%8D/"/>
    
    <category term="怪悟" scheme="https://blog.umu618.com/tags/%E6%80%AA%E6%82%9F/"/>
    
  </entry>
  
  <entry>
    <title>诗盗·炎刀</title>
    <link href="https://blog.umu618.com/2008/04/07/reconstructionism-poet-handsome/"/>
    <id>https://blog.umu618.com/2008/04/07/reconstructionism-poet-handsome/</id>
    <published>2008-04-07T13:43:55.000Z</published>
    <updated>2023-08-05T13:01:26.848Z</updated>
    
    <content type="html"><![CDATA[<p>《#诗盗#·炎刀》：身悬炎刀逐流燬，七世鹰鸣击天寰。襟袖清风尘露沾，天涯孤笑一身闲。</p><p>改编自霹雳角色“皇甫定涛”出场诗。</p><blockquote><p>腰悬长剑逐流火，<br>醉向遥弓击天寰。<br>襟袖清风夜露沾，<br>天涯歌啸一身还。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《#诗盗#·炎刀》：身悬炎刀逐流燬，七世鹰鸣击天寰。襟袖清风尘露沾，天涯孤笑一身闲。&lt;/p&gt;
&lt;p&gt;改编自霹雳角色“皇甫定涛”出场诗。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;腰悬长剑逐流火，&lt;br&gt;
醉向遥弓击天寰。&lt;br&gt;
襟袖清风夜露沾，&lt;br&gt;
天涯歌啸一身还。&lt;/</summary>
      
    
    
    
    <category term="诗盗" scheme="https://blog.umu618.com/categories/%E8%AF%97%E7%9B%97/"/>
    
    
    <category term="七律" scheme="https://blog.umu618.com/tags/%E4%B8%83%E5%BE%8B/"/>
    
    <category term="霹雳" scheme="https://blog.umu618.com/tags/%E9%9C%B9%E9%9B%B3/"/>
    
  </entry>
  
</feed>
